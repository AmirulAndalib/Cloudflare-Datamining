{
	analytics: {
		title: "Calls Analytics",
		gb: "GB",
		ingressEgressChartTitle: "SFU Application Ingress & Egress",
		filters: {
			appId: "App ID",
			sessionId: "Session ID",
			trackId: "Track ID",
			trackType: "Track Type"
		}
	},
	analyticsComingSoon: "Analytics coming soon",
	appId: "App ID",
	turnSecretId: "Turn Token ID",
	applicationName: "Application Name",
	apiKey: "API Key",
	apiKeySecret: "API Token",
	turnSecretKey: "API Token",
	bandwidth: "Bandwidth",
	beta_label: "Beta",
	calloutTimeouts: "**Note:** You do not need to remove a session, after 30 seconds of inactivity, a session is automatically garbage collected.",
	calloutMid: "**Note:** In the API, `mid` refers to https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/mid, which is a way to reference media tracks in the Web Platform. It is a user-agent defined integer, in the form of a string. (This inconsistency between string vs integer comes from https://www.rfc-editor.org/rfc/rfc5888#section-4, where it's a integer, but in the Web Platform defined as a DOMString https://w3c.github.io/webrtc-pc/#dom-rtptransceiver-mid)",
	callsApiDocs: "Calls API Docs",
	callsApiDocsCardDetail: (0, t.d)`Harness the power of our API with comprehensive documentation and code examples`,
	callsApplicationName: "Calls Application Name",
	callsApplicationNameDescription: "Choose a name for your application to generate a unique application ID and access the Calls API",
	callsApplicationNamePlaceholder: "my-calls-application",
	callsDocumentation: "Calls documentation",
	communityForum: "Community forum",
	continueToDashboard: "Continue to Dashboard",
	copySecretNowWarning: "Make sure to copy your API Token now. You won\u2019t be able to see it again.",
	createApplication: "Create application",
	createAnApplication: "Create an application",
	createFirstApplication: "Create your first application",
	createApplicationDescription: "Choose a name for your application to generate a API token that can be used to access the <0>Calls API</0>.",
	createATurnSecret: "Create a TURN service token",
	createATurnSecretDescription: "Choose a name for your TURN service token that can be used to create credentials for connecting to the TURN service",
	deleteApplicationModalTitle: "Delete application?",
	deleteApplicationModalDescription: (0, t.d)`Deleting **${"name"}** is permanent and cannot be undone. You will no longer be able to access the API using this application and any projects using this application will be affected.`,
	deleteTurnServiceTokenModalTitle: "Delete TURN service token?",
	deleteTurnServiceTokenModalDescription: (0, t.d)`Deleting **${"name"}** is permanent and cannot be undone. You will no longer be able to access the API using this token and any projects using this token will be affected.`,
	developerDocs: "Developer docs",
	discordServer: "Discord server",
	downloadDemo: "Download index.html",
	emptyStateMessage: "Get started with by creating your first Calls application",
	failedToCreateApplication: "Failed to create Application. Try again later.",
	gettingStartedWithCalls: "Getting started with Calls",
	gettingStartedWithCallsDetail: `Calls does not ship as a client-side SDK, but rather as a fully customizable [HTTPS API](${i.N.devDocs}) for simple RPC commands and server events. This enables you to choose how each client action (i.e. joining or leaving a room) maps to an API call.`,
	gettingStartedWithCallsCardDetail: (0, t.d)`Begin your journey by building your first Calls application, complete with a demo and live code`,
	gettingStartedWithCallsExampleEcho: "Build a Web Echo Demo",
	gettingStartedWithCallsExampleEchoDetail: "Copy and paste the code snippet below into an html file to create your first calls web-app. In this example, you will see two local tracks (audio and video) being pushed to Cloudflare Calls, and then pulled back for playback.",
	productTitle: "Calls",
	productTitleWelcome: "Welcome to Calls",
	playDemo: "Play Demo",
	playDemoPermissions: "You will be prompted for camera and mic access",
	stopDemo: "Stop Demo",
	secretDemoWarning: "When deploying to production, your API token should be kept server-side.",
	noApplicationsCreated: "No SFU Applications created",
	serverlessSfuApplication: "Serverless SFU Application",
	serverlessSfuApplications: "Serverless SFU Applications",
	serverlessSfuApplicationDescription: "Receive multiple media or datachannels from clients and forward to other clients to scale WebRTC apps",
	turnServiceKey: "TURN service token",
	turnServiceKeys: "TURN service tokens",
	noTurnServiceTokensCreated: "No TURN service tokens created",
	turnServiceKeyDescription: "Use Cloudflare as a relay point for traffic between WebRTC clients when communication is obstructed by NATs or firewalls",
	turnServiceKeyGettingStartedExampleTitle: "How to create credentials",
	turnServiceKeyGettingStartedExampleDescription: "You need to generate short-lived credentials for each TURN user. In order to create credentials, you should have a back-end service that uses your TURN Token ID and API token to generate credentials. It will need to make an API call like this:",
	turnServiceKeyGettingStartedResponseDescription: "The JSON response below can then be passed on to your front-end application to be used when creating the RTCPeerConnection:",
	showDemoDetail: "You will be prompted for camera and mic access",
	quickLinks: "Quick Links",
	requestBetaAccess: "Request beta access",
	tagline: "Build real-time WebRTC apps using the Cloudflare Network. Never worry about scaling or regions again.",
	taglineWelcome: 'Think of Calls as a "Switchboard" or a selective forwarding unit (SFU) you can program. An SFU is a system that connects users with each other in real-time apps by intelligently managing and routing video, audio and data between the participants. Each Calls application is a separate environment, and users can only communicate with other users in the same application.',
	viewUsage: "View usage"
}