{
	"ApplicationID": "int; ID of the application the domain belongs to (for example, 1, 2). Set to 0 when no ApplicationID is matched.",
	"ColoCode": "string; The name of the colo that received the DNS query (for example, 'SJC', 'MIA', 'IAD').",
	"ColoID": "int; The ID of the colo that received the DNS query (for example, 46, 72, 397).",
	"CustomResolveDurationMs": "int; The time it took for the custom resolver to respond.",
	"CustomResolverAddress": "string; IP and port combo used to resolve the custom dns resolver query, if any.",
	"CustomResolverPolicyID": "string; Custom resolver policy UUID, if matched.",
	"CustomResolverPolicyName": "string; Custom resolver policy name, if matched.",
	"CustomResolverResponse": "string; Status of the custom resolver response.",
	"Datetime": "int or string; The date and time the corresponding DNS request was made (for example, '2021-07-27T00:01:07Z').",
	"DeviceID": "string; UUID of the device where the HTTP request originated from (for example, 'dad71818-0429-11ec-a0dc-000000000000').",
	"DeviceName": "string; The name of the device where the HTTP request originated from (for example, 'Laptop MB810').",
	"DstIP": "string; The destination IP address the DNS query was made to (for example, '104.16.132.2290').",
	"DstPort": "int; The destination port used at the edge. The port changes based on the protocol used by the DNS query (for example, 0).",
	"Email": "string; Email used to authenticate the client (for example, 'user@test.com').",
	"IsResponseCached": "bool; Response comes from cache or not.",
	"Location": "string; Name of the location the DNS request is coming from. Location is created by the customer (for example, 'Office NYC').",
	"LocationID": "string; UUID of the location the DNS request is coming from. Location is created by the customer (for example, '7bdc7a9c-81d3-4816-8e56-000000000000').",
	"MatchedCategoryIDs": "array[int]; ID or IDs of category that the domain was matched with the policy (for example, [7,12,28,122,129,163]).",
	"MatchedCategoryNames": "array[string]; Name or names of category that the domain was matched with the policy (for example, ['Photography', 'Weather']).",
	"MatchedIndicatorFeedIDs": "array[int]; ID or IDs of indicator feed(s) that the domain was matched with the policy (for example, [7,12]).",
	"MatchedIndicatorFeedNames": "array[string]; Name or names of indicator feed(s) that the domain was matched with the policy (for example, ['Vendor Malware Feed', 'Vendor CoC Feed']).",
	"Policy": "string; Name of the policy that was applied (if any) (for example, '7bdc7a9c-81d3-4816-8e56-de1acad3dec5').",
	"PolicyID": "string; ID of the policy/rule that was applied (if any).",
	"Protocol": "string; The protocol used for the DNS query by the client (for example, 'udp').",
	"QueryCategoryIDs": "array[int]; ID or IDs of category that the domain belongs to (for example, [7,12,28,122,129,163]).",
	"QueryCategoryNames": "array[string]; Name or names of category that the domain belongs to (for example, ['Photography', 'Weather']).",
	"QueryIndicatorFeedIDs": "array[int]; ID or IDs of indicator feed(s) that the domain belongs to (for example, [7,12,28]).",
	"QueryIndicatorFeedNames": "array[string]; Name or names of indicator feed(s) that the domain belongs to (for example, ['Vendor Malware Feed', 'Vendor CoC Feed', 'Vendor Phishing Feed']).",
	"QueryName": "string; The query name (for example, 'example.com').",
	"QueryNameReversed": "string; Query name in reverse (for example, 'com.example').",
	"QuerySize": "int; The size of the DNS request in bytes (for example, 151).",
	"QueryType": "string; The type of DNS query (for example, '1', '28', '15', or '16').",
	"QueryTypeName": "string; The type of DNS query (for example, 'A', 'AAAA', 'MX', or 'TXT').",
	"RCode": "int; The return code sent back by the DNS resolver.",
	"RData": "array[object]; The rdata objects (for example, {\"type\":\"5\",\"data\":\"dns-packet-placeholder...\"}).",
	"ResolvedIPs": "array[string]; The resolved IPs in the response, if any (for example ['203.0.113.1', '203.0.113.2']).",
	"ResolverDecision": "string; Result of the DNS query (for example, 'overrideForSafeSearch').",
	"SrcIP": "string; The source IP address making the DNS query (for example, '104.16.132.229').",
	"SrcPort": "int; The port used by the client when they sent the DNS request (for example, 0).",
	"TimeZone": "string; Time zone used to calculate the current time, if a matched rule was scheduled with it.",
	"TimeZoneInferredMethod": "string; Method used to pick the time zone for the schedule (from rule/ from user ip/ from local time).",
	"UserID": "string; User identity where the HTTP request originated from (for example, '00000000-0000-0000-0000-000000000000')."
}
