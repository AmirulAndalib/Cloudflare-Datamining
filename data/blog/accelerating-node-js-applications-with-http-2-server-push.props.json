{
	"locale": "en-us",
	"post": {
		"id": "5d16453b41acde0011a955b7",
		"uuid": "fc80bfcd-1875-403b-bed2-dba505bef4a4",
		"title": "Accelerating Node.js applications with HTTP/2 Server Push",
		"slug": "accelerating-node-js-applications-with-http-2-server-push",
		"html": "<!--kg-card-begin: markdown--><p>In April, we announced support for <a href=\"https://www.cloudflare.com/http2/server-push/\">HTTP/2 Server Push</a> via the HTTP <code>Link</code> header. My coworker John has demonstrated how easy it is to <a href=\"http://blog.cloudflare.com/using-http-2-server-push-with-php/\">add Server Push to an example PHP</a> application.</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2016/08/489477622_594bf9e3d9_z.jpg\" alt=\"\" loading=\"lazy\"><br>\n<small><a href=\"https://creativecommons.org/licenses/by/2.0/\">CC BY 2.0</a> <a href=\"https://www.flickr.com/photos/nickyfern/489477622/in/photolist-KfGDm-4WuA7B-4WySRS-a8ijnt-4WuByk-4WuB9M-bE3e6V-665C6K-eeQRx1-b97viM-qzYJ8z-9n2aTS-8EsaQK-aqxV42-jWDkD2-jKyWKv-jzs7yy-9TKcYn-4iAQTa-ECjYJ-96MvXy-bP43v2-rEmKWR-5p3k5r-pVZhDo-os1Njy-5CEEnU-8RhgUX-7JV4jr-9bC7me-sSKqA-72Mppz-maZfyL-6KfUge-dDvw4S-ngyFgY-aPxqsP-7b24QV-5opdXV-sEA7Xj-mZohS-8GFkMr-twfh93-7ZXqtJ-dvRbXj-a8mRiU-4NCzeD-qFXKpj-4n7K7j-34D66Q\">image</a> by <a href=\"https://www.flickr.com/photos/nickyfern/\">Nicky Fernandes</a></small></p>\n<p>We wanted to make it easy to improve the performance of contemporary websites built with <a href=\"https://nodejs.org/\">Node.js</a>. we developed the <a href=\"https://github.com/cloudflare/netjet\">netjet</a> middleware to parse the generated HTML and automatically add the <code>Link</code> headers. When used with an example Express application you can see the headers being added:</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2016/08/2016-08-11_13-32-45.png\" alt=\"\" loading=\"lazy\"></p>\n<p>We use <a href=\"https://ghost.org/\">Ghost</a> to power this blog, so if your browser supports HTTP/2 you have already benefited from Server Push without realizing it! More on that below.</p>\n<p>In netjet, we use the <a href=\"https://github.com/posthtml/posthtml\">PostHTML</a> project to parse the HTML with a custom plugin. Right now it is looking for images, scripts and external stylesheets. You can implement this same technique in other environments too.</p>\n<p>Putting an HTML parser in the response stack has a downside: it will increase the page load latency (or &quot;time to first byte&quot;). In most cases, the added latency will be overshadowed by other parts of your application, such as database access. However, netjet includes an adjustable LRU cache keyed by <code>ETag</code> headers, allowing netjet to insert <code>Link</code> headers quickly on pages already parsed.</p>\n<p>If you are designing a brand new application, however, you should consider storing metadata on embedded resources alongside your content, eliminating the HTML parse, and possible latency increase, entirely.</p>\n<p>Netjet is compatible with any Node.js HTML framework that supports Express-like middleware. Getting started is as simple as adding netjet to the beginning of your middleware chain.</p>\n<pre><code class=\"language-javascript\">var express = require('express');\nvar netjet = require('netjet');\nvar root = '/path/to/static/folder';\n\nexpress()\n  .use(netjet({\n    cache: {\n      max: 100\n    }\n  }))\n  .use(express.static(root))\n  .listen(1337);\n</code></pre>\n<p>With a little more work, you can even use netjet without frameworks.</p>\n<pre><code class=\"language-javascript\">var http = require('http');\nvar netjet = require('netjet');\n\nvar port = 1337;\nvar hostname = 'localhost';\nvar preload = netjet({\n  cache: {\n    max: 100\n  }\n});\n\nvar server = http.createServer(function (req, res) {\n  preload(req, res, function () {\n      res.statusCode = 200;\n      res.setHeader('Content-Type', 'text/html');\n      res.end('&lt;!doctype html&gt;&lt;h1&gt;Hello World&lt;/h1&gt;');\n  });\n});\n\nserver.listen(port, hostname, function () {\n  console.log('Server running at http://' + hostname + ':' + port+ '/');\n});\n</code></pre>\n<p>See the <a href=\"https://www.npmjs.com/package/netjet\">netjet documentation</a> for more information on the supported options.</p>\n<h2 id=\"seeingwhatspushed\">Seeing whatâ€™s pushed</h2>\n<p><img src=\"http://blog.cloudflare.com/content/images/2016/08/2016-08-02_10-49-33.png\" alt=\"\" loading=\"lazy\"></p>\n<p>Chrome's Developer Tools makes it easy to verify that your site is using Server Push. The Network tab shows pushed assets with &quot;Push&quot; included as part of the initiator.</p>\n<p>Unfortunately, Firefox's Developers Tools don't yet directly expose if the resource pushed. You can, however, check for the <code>cf-h2-pushed</code> header in the page's response headers, which contains a list of resources that CloudFlare offered browsers over Server Push.</p>\n<p>Contributions to improve netjet or the documentation are greatly appreciated. I'm excited to hear where people are using netjet.</p>\n<h2 id=\"ghostandserverpush\">Ghost and Server Push</h2>\n<p>Ghost is one such exciting integration. With the aid of the Ghost team, I've integrated netjet, and it has been available as an opt-in beta since version 0.8.0.</p>\n<p>If you are running a Ghost instance, you can enable Server Push by modifying the server's <code>config.js</code> file and add the <code>preloadHeaders</code> option to the <code>production</code> configuration block.</p>\n<pre><code class=\"language-javascript\">production: { \n  url: 'https://my-ghost-blog.com', \n  preloadHeaders: 100, \n  // ... \n}\n</code></pre>\n<p>Ghost has put together <a href=\"http://support.ghost.org/preload-headers/\">a support article</a> for Ghost(Pro) customers.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>With netjet, your Node.js applications can start to use browser preloading and, when used with CloudFlare, HTTP/2 Server Push today.</p>\n<p>At CloudFlare, we're excited to make tools to help increase the performance of websites. If you find this interesting, we are <a href=\"https://www.cloudflare.com/join-our-team/\">hiring</a> in Austin, Texas; Champaign, Illinois; London; San Francisco; and Singapore.</p>\n<!--kg-card-end: markdown-->",
		"comment_id": "4833",
		"feature_image": "http://blog.cloudflare.com/content/images/2018/08/489477622_594bf9e3d9_z.jpg",
		"featured": false,
		"visibility": "public",
		"created_at": "2016-08-15T19:16:12.000+01:00",
		"updated_at": "2020-08-14T10:43:40.000+01:00",
		"published_at": "2016-08-16T13:17:19.000+01:00",
		"custom_excerpt": "In April, we announced support for HTTP/2 Server Push via the HTTP Link header. My coworker John has demonstrated how easy it is to add Server Push to an example PHP application.  We wanted to make it easy to improve the performance of contemporary websites built with Node.js. ",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f67",
				"name": "Terin Stock",
				"slug": "terin-stock",
				"profile_image": "http://blog.cloudflare.com/content/images/2022/08/terin-stock.png",
				"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-141.png",
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@terinjokes",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/terin-stock/"
			}
		],
		"tags": [
			{
				"id": "5d16450341acde0011a951c5",
				"name": "HTTP2",
				"slug": "http2",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/http2/"
			},
			{
				"id": "5d16450341acde0011a95197",
				"name": "php",
				"slug": "php",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/php/"
			},
			{
				"id": "5d16450341acde0011a95267",
				"name": "Server Push",
				"slug": "server-push",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/server-push/"
			},
			{
				"id": "5d16450341acde0011a95160",
				"name": "Speed & Reliability",
				"slug": "speed-and-reliability",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Speed---Reliability-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Speed & Reliability",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Speed & Reliability'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/speed-and-reliability/"
			},
			{
				"id": "5d16450341acde0011a95165",
				"name": "JavaScript",
				"slug": "javascript",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/javascript/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f67",
			"name": "Terin Stock",
			"slug": "terin-stock",
			"profile_image": "http://blog.cloudflare.com/content/images/2022/08/terin-stock.png",
			"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-141.png",
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@terinjokes",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/terin-stock/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a951c5",
			"name": "HTTP2",
			"slug": "http2",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/http2/"
		},
		"url": "http://blog.cloudflare.com/accelerating-node-js-applications-with-http-2-server-push/",
		"excerpt": "In April, we announced support for HTTP/2 Server Push via the HTTP Link header. My coworker John has demonstrated how easy it is to add Server Push to an example PHP application.  We wanted to make it easy to improve the performance of contemporary websites built with Node.js. ",
		"reading_time": 3,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	}
}