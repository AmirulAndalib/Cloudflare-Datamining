{
	"locale": "en-us",
	"post": {
		"id": "61e02558815caf000a982ed4",
		"uuid": "a19026d6-3b9a-4187-9386-70bf7fd26fd3",
		"title": "A Workers optimization\nthat reduces your bill",
		"slug": "workers-optimization-reduces-your-bill",
		"html": "<figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/01/image2-20.png\" class=\"kg-image\" alt=\"A Workers optimization that reduces your bill\" loading=\"lazy\"></figure><p>Recently, we made an optimization to the Cloudflare Workers runtime which reduces the amount of time Workers need to spend in memory. We're passing the savings on to you for all your Unbound Workers.</p><h3 id=\"background\">Background</h3><p>Workers are often used to implement HTTP proxies, where JavaScript is used to rewrite an HTTP request before sending it on to an origin server, and then to rewrite the response before sending it back to the client. You can implement any kind of rewrite in a Worker, including both rewriting headers and bodies.</p><p>Many Workers, though, do not actually modify the response body, but instead simply allow the bytes to pass through from the origin to the client. In this case, the Worker's application code has finished executing as soon as the response headers are sent, before the body bytes have passed through. Historically, the Worker was nevertheless considered to be \"in use\" until the response body had fully finished streaming.</p><p>For billing purposes, under the Workers Unbound pricing model, we charge duration-memory (gigabyte-seconds) for the time in which the Worker is in use.</p><h3 id=\"the-change\">The change</h3><p>On December 15-16, we made a change to the way we handle requests that are streaming through the response without modifying the content. This change means that we can mark application code as “idle” as soon as the response headers are returned.</p><p>Since no further application code will execute on behalf of the request, the system does not need to keep the request state in memory – it only needs to track the low-level native sockets and pump the bytes through. So now, during this time, the Worker will be considered idle, and could even be evicted before the stream completes (though this would be unlikely unless the stream lasts for a very long time).</p><p>Visualized it looks something like this:</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2022/01/DES-4045-Diagram.png\" class=\"kg-image\" alt=\"A sequence diagram with before and after that shows that after the change, Workers are considered “idle” as soon as the response headers have been forwarded from the origin to the client.\" loading=\"lazy\"></figure><p>As a result of this change, we've seen that the time a Worker is considered \"in use\" by any particular request has dropped by an average of 70%. Of course, this number varies a lot depending on the details of each Worker. Some may see no benefit, others may see an even larger benefit.</p><p>This change is totally invisible to the application. To any external observer, everything behaves as it did before. But, since the system now considers a Worker to be idle during response streaming, the response streaming time will no longer be billed. So, if you saw a drop in your bill, this is why!</p><h3 id=\"but-it-doesn-t-stop-there-\">But it doesn’t stop there!</h3><p>The change also applies to a few other frequently used scenarios, namely Websocket proxying, reading from the cache and streaming from KV.</p><p><strong>WebSockets</strong>: once a Worker has arranged to proxy through a WebSocket, as long as it isn't handling individual messages in your Worker code, the Worker does not remain in use during the proxying. The change applies to regular stateless Workers, but not to Durable Objects, which are not usually used for proxying.</p><!--kg-card-begin: markdown--><pre><code class=\"language-typescript\">export default {\n  async fetch(request: Request) {\n    //Do anything before\n    const upgradeHeader = request.headers.get('Upgrade')\n    if (upgradeHeader || upgradeHeader === 'websocket') {\n      return await fetch(request)\n    }\n    //Or with other requests\n  }\n}\n</code></pre>\n<!--kg-card-end: markdown--><p><strong>Reading from Cache</strong>: If you return the response from a <code>cache.match</code> call, the Worker is considered idle as soon as the response headers are returned.</p><!--kg-card-begin: markdown--><pre><code class=\"language-typescript\">export default {\n  async fetch(request: Request) {\n    let response = await caches.default.match('https://example.com')\n    if (response) {\n      return response\n    }\n    // get/create response and put into cache\n  }\n}\n</code></pre>\n<!--kg-card-end: markdown--><p><strong>Streaming from KV</strong>: And lastly, when you stream from KV. This one is a bit trickier to get right, because often people retrieve the value from KV as a string, or JSON object and then create a response with that value. But if you fetch the value as a stream, as done in the example below, you can create a Response with the ReadableStream.</p><!--kg-card-begin: markdown--><pre><code class=\"language-typescript\">interface Env {\n  MY_KV_NAME: KVNamespace\n}\n\nexport default {\n  async fetch(request: Request, env: Env) {\n    const readableStream = await env.MY_KV_NAME.get('hello_world.pdf', { type: 'stream' })\n    if (readableStream) {\n      return new Response(readableStream, { headers: { 'content-type': 'application/pdf' } })\n    }\n  },\n}\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"interested-in-workers-unbound\">Interested in Workers Unbound?</h3><p>If you are already using Unbound, your bill will have automatically dropped already.</p><p>Now is a great time to check out Unbound if you haven’t already, especially since recently, we’ve also <a href=\"http://blog.cloudflare.com/workers-now-even-more-unbound/\">removed the egress fees</a>. Unbound allows you to build more complex workloads on our platform and only pay for what you use.</p><p>We are always looking for opportunities to make Workers better. Often that improvement takes the form of powerful new features such as the soon-to-be released <a href=\"http://blog.cloudflare.com/introducing-worker-services/\">Service Bindings</a> and, of course, <a href=\"http://blog.cloudflare.com/cloudflare-workers-the-fast-serverless-platform/\">performance enhancements</a>. This time, we are delighted to make Cloudflare Workers even cheaper than they already were.</p>",
		"comment_id": "61e02558815caf000a982ed4",
		"feature_image": "http://blog.cloudflare.com/content/images/2022/01/image2-19.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2022-01-13T13:12:56.000+00:00",
		"updated_at": "2024-02-15T23:52:54.000+00:00",
		"published_at": "2022-01-14T13:58:51.000+00:00",
		"custom_excerpt": "Recently, we made an optimization to the Cloudflare Workers runtime which reduces the amount of time Workers need to spend in memory. We're passing the savings on to you for all your Unbound Workers",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f9f",
				"name": "Kenton Varda",
				"slug": "kenton-varda",
				"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2020/08/avatar-github.jpg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@kentonvarda",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/kenton-varda/"
			},
			{
				"id": "6074c68ed70b2301ba26c444",
				"name": "Erwin van der Koogh",
				"slug": "erwin",
				"profile_image": "http://blog.cloudflare.com/content/images/2021/04/twitter-profile-photo.jpeg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": "Melbourne",
				"facebook": null,
				"twitter": "@evanderkoogh",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/erwin/"
			}
		],
		"tags": [
			{
				"id": "61e0256c815caf000a982ed8",
				"name": "#BLOG-917",
				"slug": "hash-blog-917",
				"description": null,
				"feature_image": null,
				"visibility": "internal",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/404/"
			},
			{
				"id": "5d16450341acde0011a95253",
				"name": "Cloudflare Workers",
				"slug": "workers",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/workers/"
			},
			{
				"id": "6076d1f0d70b2301ba26c4db",
				"name": "Workers Unbound",
				"slug": "workers-unbound",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/workers-unbound/"
			},
			{
				"id": "5d16450341acde0011a95204",
				"name": "Developers",
				"slug": "developers",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Developers-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Developers",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Developers'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developers/"
			},
			{
				"id": "64a3e2b834124c000b00b717",
				"name": "Developer Platform",
				"slug": "developer-platform",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developer-platform/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f9f",
			"name": "Kenton Varda",
			"slug": "kenton-varda",
			"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2020/08/avatar-github.jpg",
			"cover_image": null,
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@kentonvarda",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/kenton-varda/"
		},
		"primary_tag": null,
		"url": "http://blog.cloudflare.com/workers-optimization-reduces-your-bill/",
		"excerpt": "Recently, we made an optimization to the Cloudflare Workers runtime which reduces the amount of time Workers need to spend in memory. We're passing the savings on to you for all your Unbound Workers",
		"reading_time": 3,
		"access": true,
		"comments": false,
		"og_image": "http://blog.cloudflare.com/content/images/2022/01/workers-optimization-reduces-your-bill-OG-1.png",
		"og_title": null,
		"og_description": null,
		"twitter_image": "http://blog.cloudflare.com/content/images/2022/01/workers-optimization-reduces-your-bill-OG.png",
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": "Recently, we made an optimization to the Cloudflare Workers runtime which reduces the amount of time Workers need to spend in memory. We're passing the savings on to you for all your Unbound Workers",
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	}
}