{
	"locale": "en-us",
	"post": {
		"id": "648c534d3bb168000add4602",
		"uuid": "2a170fee-bdab-4c45-97fe-bf33908532b5",
		"title": "How Orpheus automatically routes around bad Internet weather",
		"slug": "orpheus-saves-internet-requests-while-maintaining-speed",
		"html": "<figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2023/06/image2-6.png\" class=\"kg-image\" alt=\"How Orpheus automatically routes around bad Internet weather\" loading=\"lazy\" width=\"1200\" height=\"675\"></figure><p>Cloudflare’s mission is to help build a better Internet for everyone, and <a href=\"http://blog.cloudflare.com/orpheus/\">Orpheus</a> plays an important role in realizing this mission. Orpheus identifies Internet connectivity outages beyond Cloudflare’s network in real time then leverages the scale and speed of Cloudflare’s network to find alternative paths around those outages. This ensures that everyone can reach a Cloudflare customer’s <a href=\"https://www.cloudflare.com/learning/cdn/glossary/origin-server/\">origin server</a> no matter what is happening on the Internet. The end result is powerful: Cloudflare  protects customers from Internet incidents outside our network while maintaining the average latency and speed of our customer’s traffic.</p><p>A little less than two years ago, Cloudflare made <a href=\"http://blog.cloudflare.com/orpheus/\">Orpheus automatically available to all customers for free</a>. Since then, Orpheus has saved 132 billion Internet requests from failing by intelligently routing them around connectivity outages, prevented 50+ Internet incidents from impacting our customers, and made our customer’s origins more reachable to everyone on the Internet. Let’s dive into how Orpheus accomplished these feats over the last year.</p><h3 id=\"increasing-origin-reachability\">Increasing origin reachability</h3><p>One service that Cloudflare offers is a <a href=\"https://www.cloudflare.com/learning/cdn/glossary/reverse-proxy/\">reverse proxy</a> that receives Internet requests from end users then applies any number of services like <a href=\"https://www.cloudflare.com/learning/ddos/what-is-a-ddos-attack/\">DDoS protection</a>, <a href=\"https://www.cloudflare.com/learning/cdn/what-is-caching/\">caching</a>, <a href=\"https://www.cloudflare.com/learning/performance/what-is-load-balancing/\">load balancing</a>, and / or <a href=\"https://www.cloudflare.com/learning/ssl/what-is-encryption/\">encryption</a>. If the response to an end user’s request isn’t cached, Cloudflare routes the request to our customer’s origin servers. To be successful, end users need to be able to connect to Cloudflare, and Cloudflare needs to connect to our customer’s origin servers. With end users and customer origins around the world, and ~20% of websites using our network, this task is a tall order!</p><p>Orpheus provides origin reachability benefits to everyone using Cloudflare by identifying invalid paths on the Internet in real time, then routing traffic via alternative paths that are working as expected. This ensures Cloudflare can reach an origin no matter what problems are happening on the Internet on any given day.</p><h3 id=\"reducing-522-errors\">Reducing 522 errors</h3><p>At some point while browsing the Internet, you may have run into this <a href=\"https://support.cloudflare.com/hc/en-us/articles/115003011431-Troubleshooting-Cloudflare-5XX-errors#522error\">522 error</a>.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2023/06/image3-4.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"919\" height=\"452\"></figure><p>This error indicates that you, the end user, was unable to access content on a Cloudflare customer’s origin server because Cloudflare couldn’t connect to the origin. Sometimes, this error occurs because the origin is offline for everyone, and ultimately the origin owner needs to fix the problem. Other times, this error can occur even when the origin server is up and able to receive traffic. In this case, some people can reach content on the origin server, but other people using a different Internet routing path cannot because of connectivity issues across the Internet.</p><p>Some days, a specific network may have excellent connectivity, while other days that network may be congested or have paths that are impassable altogether. The Internet is a massive and unpredictable <a href=\"https://www.cloudflare.com/learning/network-layer/how-does-the-internet-work/\">network of networks</a>, and the “weather” of the Internet changes every day.</p><p>When you see this error, Cloudflare attempted to connect to an origin on behalf of the end user, but did not receive a response back from the origin. Either the connection request never reached the origin, or the origin’s reply was dropped on the way back to Cloudflare. In the case of 522 errors, Cloudflare and the origin server could both be working as expected, but packets are dropped on the network path between them.</p><p>These 522 errors can cause a lot of frustration, and Orpheus was built to reduce them. The goal of Orpheus is to ensure that if at least one Cloudflare data center can connect to an origin, then anyone using Cloudflare’s network can also reach that origin, even if there are Internet connectivity problems happening outside of Cloudflare’s network.</p><h3 id=\"improving-origin-reachability-for-an-example-customer-using-cloudflare\">Improving origin reachability for an example customer using Cloudflare</h3><p>Let’s look at a concrete example of how Orpheus makes the Internet better for everyone by saving an origin request that would have otherwise failed. Imagine that you’re running an <a href=\"https://www.cloudflare.com/ecommerce/\">e-commerce website</a> that sells dog toys online, and your store is hosted by an origin server in Chicago.<br><br>Imagine there are two different customers visiting your website at the same time: the first customer lives in Seattle, and the second customer lives in Tampa. The customer in Seattle reaches your origin just fine, but the customer in Tampa tries to connect to your origin and experiences a problem. It turns out that a construction crew accidentally damaged an Internet fiber line in Tampa, and Tampa is having connectivity issues with Chicago. As a result, any customer in Tampa receives a 522 error when they try to buy your dog toys online.</p><p>This is where Orpheus comes in to save the day. Orpheus detects that users in Tampa are receiving 522 errors when connecting to Chicago. Its database shows there is another route from Tampa through Boston and then to Chicago that is valid. As a result, Orpheus saves the end user’s request by rerouting it through Boston and taking an alternative path. Now, everyone in Tampa can still buy dog toys from your website hosted in Chicago, even though a fiber line was damaged unexpectedly.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2023/06/image1-7.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"1200\" height=\"765\"></figure><h3 id=\"how-does-orpheus-save-requests-that-would-otherwise-fail-via-only-bgp\">How does Orpheus save requests that would otherwise fail via only BGP?</h3><p><a href=\"https://www.cloudflare.com/learning/security/glossary/what-is-bgp/\">BGP (Border Gateway Protocol)</a> is like the postal service of the Internet. It’s the protocol that makes the Internet work by enabling data routing. When someone requests data over the Internet, BGP is responsible for looking at all the available paths a request could take, then selecting a route.</p><p>BGP is designed to route around network failures by finding alternative paths to the destination IP address after the preferred path goes down. Sometimes, BGP does not route around a network failure at all. In this case, Cloudflare still receives BGP advertisements that an origin network is reachable via a particular <a href=\"https://www.cloudflare.com/learning/network-layer/what-is-an-autonomous-system/\">autonomous system (AS)</a>, when actually packets sent through that AS will be dropped. In contrast, Orpheus will test alternate paths via synthetic probes and with real time traffic to ensure it is always using valid routes. Even when working as designed, BGP takes time to converge after a network disruption; Orpheus can react faster, find alternative paths to the origin that route around temporary or persistent errors, and ultimately save more Internet requests.</p><p>Additionally, BGP routes can be vulnerable to <a href=\"https://www.cloudflare.com/learning/security/glossary/bgp-hijacking/\">hijacking</a>. If a BGP route is hijacked, Orpheus can prevent Internet requests from being dropped by invalid BGP routes by frequently testing all routes and examining the results to ensure they’re working as expected. In any of these cases, Orpheus routes around these BGP issues by taking advantage of the scale of Cloudflare’s global network which directly connects to <a href=\"http://blog.cloudflare.com/cloudflare-connected-in-over-300-cities/\">12,000 networks, features data centers across 300 cities, and has 197 Tbps of network capacity</a></p><p>Let’s give an example of how Orpheus can save requests that would otherwise fail if only using BGP. Imagine an end user in Mumbai sends a request to a Cloudflare customer with an origin server in New York. For any request that misses <a href=\"https://www.cloudflare.com/learning/cdn/what-is-caching/\">Cloudflare’s cache</a>, Cloudflare forwards the request from Mumbai to the website’s origin server in New York. Now imagine something happens, and the origin is no longer reachable from India: maybe <a href=\"http://blog.cloudflare.com/aae-1-smw5-cable-cuts/\">a fiber optic cable was cut in Egypt</a>, <a href=\"http://blog.cloudflare.com/how-verizon-and-a-bgp-optimizer-knocked-large-parts-of-the-internet-offline-today/\">a different network advertised a BGP route it shouldn’t have</a>, or an intermediary AS between Cloudflare and the origin was misconfigured that day.</p><p>In any of these scenarios, Orpheus can leverage the scale of Cloudflare’s global network to reach the origin in New York via an alternate path. While the direct path from Mumbai to New York may be unreachable, an alternate path from Mumbai, through London, then to New York may be available. This alternate path is valid because it uses different physical Internet connections that are unaffected by the issues with directly connecting from Mumbai to New York. In this case, Orpheus selects the alternate route through London and saves a request that would otherwise fail via the direct connection.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2023/06/image4-5.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"1157\" height=\"769\"></figure><h3 id=\"how-orpheus-was-built-by-reusing-components-of-argo-smart-routing\">How Orpheus was built by reusing components of Argo Smart Routing</h3><p>Back in 2017, Cloudflare released <a href=\"http://blog.cloudflare.com/argo/\">Argo Smart Routing</a> which decreases latency by an average of 30%, improves security, and increases reliability. To help Cloudflare achieve its goal of helping build a better Internet for everyone, we decided to take the features that offered “increased reliability” in Argo Smart Routing and make them available to every Cloudflare user for free with <a href=\"http://blog.cloudflare.com/orpheus/\">Orpheus</a>.</p><p>Argo Smart Routing’s architecture has two primary components: <a href=\"https://www.cloudflare.com/learning/network-layer/what-is-the-control-plane/\">the data plane and the control plane</a>. The control plane is responsible for computing the fastest routes between two locations and identifying potential failover paths in case the fastest route is down. The data plane is responsible for sending requests via the routes defined by the control plane, or detecting in real-time when a route is down and sending a request via a failover path as needed.</p><p>Orpheus was born with a simple technical idea: Cloudflare could deploy an alternate version of Argo’s control plane where the routing table only includes failover paths. Today, this alternate control plane makes up the core of Orpheus. If a request that travels through Cloudflare’s network is unable to connect to the origin via a preferred path, then Orpheus’s data plane selects a failover path from the routing table in its control plane. Orpheus prioritizes using failover paths that are more reliable to increase the likelihood a request uses the failover route and is successful.</p><p>Orpeus also takes advantage of a complex Internet monitoring system that we had already built for Argo Smart Routing. This system is constantly testing the health of many internet routing paths between different Cloudflare data centers and a customer’s origin by periodically opening then closing a TCP connection. This is called a synthetic probe, and the results are used for Argo Smart Routing, Orpheus, and even in other Cloudflare products. Cloudflare directly connects to <a href=\"https://www.cloudflare.com/network/\">11,000 networks</a>, and typically there are many different Internet routing paths that reach the same origin. Argo and Orpheus maintain a database of the results of all TCP connections that opened successfully or failed with their corresponding routing paths.</p><h3 id=\"scaling-the-orpheus-data-plane-to-save-requests-for-everyone\">Scaling the Orpheus data plane to save requests for everyone</h3><p>Cloudflare proxies millions of requests to customers' origins every second, and we had to make some improvements to Orpheus before it was ready to save users’ requests at scale. In particular, Cloudflare designed Orpheus to only process and reroute requests that would otherwise fail. In order to identify these requests, we added an error cache to <a href=\"https://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/\">Cloudflare’s layer 7 HTTP</a> stack.</p><p>When you send an Internet request (TCP SYN) through Cloudflare to our customer’s origin, and Cloudflare doesn’t receive a response (TCP SYN/ACK), the end user receives a 522 error (<a href=\"https://en.wikipedia.org/wiki/Transmission_Control_Protocol#TCP_segment_structure\">learn more about TCP flags</a>). Orpheus creates an entry in the error cache for each unique combination of a 522 error, origin address, and a specific route to that origin. The next time a request is sent to the same origin address via the same route, Orpheus will check the error cache for relevant entries. If there is a hit in the error cache, then Orpheus’s data plane will select an alternative route to prevent subsequent requests from failing.</p><p>To keep entries in the error cache updated, Orpheus will use live traffic to retry routes that previously failed to check their status. Routes in the error cache are periodically retried with a bounded <a href=\"https://en.wikipedia.org/wiki/Exponential_backoff\">exponential backoff</a>. Unavailable routes are tested every 5th, 25th, 125th, 625th, and 3,125th request (the maximum bound). If the test request that’s sent down the original path fails, Orpheus saves the test request, sends it via the established alternate path, and updates the backoff counter. If a test request is successful, then the failed route is removed from the error cache, and normal routing operations are restored. Additionally, the error cache has an expiry period of 10 minutes. This prevents the cache from storing entries on failed routes that rarely receive additional requests.<br><br>The error cache has notable a trade-off; one direct-to-origin request must fail before Orpheus engages and saves subsequent requests. Clearly this isn’t ideal, and the Argo / Orpheus engineering team is hard at work improving Orpheus so it can prevent any request from failing.</p><h3 id=\"making-orpheus-faster-and-more-responsive\">Making Orpheus faster and more responsive</h3><p>Orpheus does a great job of identifying congested or unreachable paths on the Internet, and re-routing requests that would have otherwise failed. However, there is always room for improvement, and Cloudflare has been hard at work to make Orpheus even better.</p><p>Since its release, Orpheus was built to select failover paths with the highest predicted reliability when it saves a request to an origin. This was an excellent first step, but sometimes a request that was re-routed by Orpheus would take an inefficient path that had better origin reachability but also increased latency. With recent improvements, the Orpheus routing algorithm balances both latency and origin reachability when selecting a new route for a request. If an end user makes a request to an origin, and that request is re-routed by Orpheus, it’s nearly as fast as any other request on Cloudflare’s network.</p><p>In addition to decreasing the latency of Orpheus requests, we’re working to make Orpheus more responsive to connectivity changes across the Internet. Today, Orpheus leverages synthetic probes to test whether Internet routes are reachable or unreachable. In the near future, Orpheus will also leverage real-time traffic data to more quickly identify Internet routes that are unreachable and reachable. This will enable Orpheus to re-route traffic around connectivity problems on the Internet within minutes rather than hours.</p><h3 id=\"expanding-orpheus-to-save-websockets-requests\">Expanding Orpheus to save WebSockets requests</h3><p>Previously, Orpheus focused on saving HTTP and TCP Internet requests. Cloudflare has seen amazing benefits to origin reliability and Internet stability for these types of requests, and we’ve been hard at work to expand Orpheus to also save WebSocket requests from failing.</p><p>WebSockets is a common Internet protocol that prioritizes sending real time data between a client and server by maintaining an open connection between that client and server. Imagine that you (the client) have sent a request to see a website’s home page (which is generated by the server). When using HTTP, the connection between the client and server is established by the client, and the connection is closed once the request is completed. That means that if you send three requests to a website, three different connections are opened and closed for each request. <br><br>In contrast, when using the WebSockets protocol, one connection is established between the client and server. All requests moving in between the client and server are sent through this connection until the connection is terminated. In this case, you could send 10 requests to a website, and all of those requests would travel over the same connection. Due to these differences in protocol, Cloudflare had to adjust to Orpheus to make it capable of also saving WebSockets requests. Now all Cloudflare customers that use WebSockets in their Internet applications can expect the same level of stability and resiliency across their HTTP, TCP, and WebSockets traffic.</p><p>P.S. If you’re interested in working on Orpheus, <a href=\"https://www.cloudflare.com/careers/\">drop us a line</a>!</p><h3 id=\"orpheus-and-argo-smart-routing\">Orpheus and Argo Smart Routing</h3><p>Orpheus runs on the same technology that powers Cloudflare’s <a href=\"https://www.cloudflare.com/products/argo-smart-routing/\">Argo Smart Routing</a> product. While Orpheus is designed to maximize origin reachability, Argo Smart Routing leverages network latency data to accelerate traffic on Cloudflare’s network and find the fastest route between an end user and a customer’s origin. On average, customers using Argo Smart Routing see that their <a href=\"https://www.cloudflare.com/pg-lp/argo-smart-routing/\">web assets perform 30% faster</a>. Together, Orpheus and Argo Smart Routing work to improve the end user experience for websites and contribute to Cloudflare’s goal of helping build a better Internet.</p><p>If you’re a Cloudflare customer, you are automatically using Orpheus behind the scenes and improving your website’s availability. If you want to make the web faster for your users, you can log in to the Cloudflare dashboard and add Argo Smart Routing to your contract or plan today.</p>",
		"comment_id": "648c534d3bb168000add4602",
		"feature_image": "http://blog.cloudflare.com/content/images/2023/06/image2-5.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2023-06-16T13:19:25.000+01:00",
		"updated_at": "2023-08-25T17:31:02.000+01:00",
		"published_at": "2023-06-19T14:00:49.000+01:00",
		"custom_excerpt": "Cloudflare’s mission is to help build a better Internet for everyone, and Orpheus plays an important role in realizing this mission everyday.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"tags": [
			{
				"id": "648efb413bb168000add4795",
				"name": "#BLOG-1515",
				"slug": "hash-blog-1515",
				"description": null,
				"feature_image": null,
				"visibility": "internal",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/404/"
			},
			{
				"id": "5d16450341acde0011a952fa",
				"name": "Speed Week",
				"slug": "speed-week",
				"description": "Blog posts and announcements celebrating Speed Week at Cloudflare.",
				"feature_image": "http://blog.cloudflare.com/content/images/2023/06/Speed-Week-2023---Dark.png",
				"visibility": "public",
				"meta_title": null,
				"meta_description": "Blog posts and announcements celebrating Speed Week at Cloudflare.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/speed-week/"
			},
			{
				"id": "5d16450341acde0011a9514f",
				"name": "Network",
				"slug": "network",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/network/"
			}
		],
		"authors": [
			{
				"id": "62b08d7c3cc2c5000b0df922",
				"name": "Chris Draper",
				"slug": "chris-draper",
				"profile_image": "http://blog.cloudflare.com/content/images/2022/06/blog_headshot.jpg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/chris-draper/"
			},
			{
				"id": "64901d243bb168000add4897",
				"name": "Braden Ehrat",
				"slug": "braden",
				"profile_image": "http://blog.cloudflare.com/content/images/2023/06/2019-Profile-Pic-2.jpeg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": "Champaign, IL, USA",
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/braden/"
			}
		],
		"primary_author": {
			"id": "62b08d7c3cc2c5000b0df922",
			"name": "Chris Draper",
			"slug": "chris-draper",
			"profile_image": "http://blog.cloudflare.com/content/images/2022/06/blog_headshot.jpg",
			"cover_image": null,
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": null,
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/chris-draper/"
		},
		"primary_tag": null,
		"url": "http://blog.cloudflare.com/orpheus-saves-internet-requests-while-maintaining-speed/",
		"excerpt": "Cloudflare’s mission is to help build a better Internet for everyone, and Orpheus plays an important role in realizing this mission everyday.",
		"reading_time": 11,
		"access": true,
		"comments": false,
		"og_image": "http://blog.cloudflare.com/content/images/2023/06/How-Orpheus-automatically-routes-around-bad-Internet-weather-OG-1.png",
		"og_title": null,
		"og_description": null,
		"twitter_image": "http://blog.cloudflare.com/content/images/2023/06/How-Orpheus-automatically-routes-around-bad-Internet-weather-OG.png",
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": "Cloudflare’s mission is to help build a better Internet for everyone, and Orpheus plays an important role in realizing this mission everyday. A little over one year ago, Cloudflare made Orpheus available to all customers for free. Since then, Orpheus has saved Internet requests that would have otherwise failed and made our customer’s origins more reachable to everyone on the Internet.",
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": "How Orpheus automatically routes around bad Internet weather.",
		"feature_image_caption": null
	}
}