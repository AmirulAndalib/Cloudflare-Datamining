{
	"locale": "en-us",
	"post": {
		"id": "5d16453b41acde0011a95572",
		"uuid": "8ee674f8-09a4-44f8-b12d-65c3ac075850",
		"title": "Go coverage with external tests",
		"slug": "go-coverage-with-external-tests",
		"html": "<!--kg-card-begin: markdown--><p>The Go test coverage implementation is <a href=\"https://blog.golang.org/cover\">quite ingenious</a>: when asked to, the Go compiler will preprocess the source so that when each code portion is executed a bit is set in a coverage bitmap. This is integrated in the <code>go test</code> tool: <code>go test -cover</code> enables it and <code>-coverprofile=</code> allows you to write a profile to then inspect with <code>go tool cover</code>.</p>\n<p>This makes it very easy to get unit test coverage, but <strong>there's no simple way to get coverage data for tests that you run against the main version of your program, like end-to-end tests</strong>.</p>\n<p>The proper fix would involve adding <code>-cover</code> preprocessing support to <code>go build</code>, and exposing the coverage profile maybe as a <code>runtime/pprof.Profile</code>, but as of Go 1.6 thereâ€™s no such support. Here instead is a hack we've been using for a while in the test suite of <a href=\"http://blog.cloudflare.com/tag/rrdns/\">RRDNS</a>, our custom Go DNS server.</p>\n<p>We create a <strong>dummy test</strong> that executes <code>main()</code>, we put it behind a build tag, compile a binary with <code>go test -c -cover</code> and then run only that test instead of running the regular binary.</p>\n<p>Here's what the <code>rrdns_test.go</code> file looks like:</p>\n<pre><code class=\"language-go\">// +build testrunmain\n\npackage main\n\nimport &quot;testing&quot;\n\nfunc TestRunMain(t *testing.T) {\n\tmain()\n}\n</code></pre>\n<p>We compile the binary like this</p>\n<pre><code class=\"language-no-highlight\">$ go test -coverpkg=&quot;rrdns/...&quot; -c -tags testrunmain rrdns\n</code></pre>\n<p>And then when we want to collect coverage information, we execute this instead of <code>./rrdns</code> (and run our test battery as usual):</p>\n<pre><code class=\"language-no-highlight\">$ ./rrdns.test -test.run &quot;^TestRunMain$&quot; -test.coverprofile=system.out\n</code></pre>\n<p>You must return from <code>main()</code> cleanly for the profile to be written to disk; in RRDNS we do that by catching SIGINT. You can still use command line arguments and standard input normally, just note that you will get two lines of extra output from the test framework.</p>\n<p>Finally, since you probably also run unit tests, you might want to merge the coverage profiles with <a href=\"https://github.com/wadey/gocovmerge\">gocovmerge</a> (from <a href=\"https://github.com/golang/go/issues/6909#issuecomment-124185553\">issue #6909</a>):</p>\n<pre><code class=\"language-no-highlight\">$ go get github.com/wadey/gocovmerge\n$ gocovmerge unit.out system.out &gt; all.out\n$ go tool cover -html all.out\n</code></pre>\n<p>If finding creative ways to test big-scale network services sounds fun, know that <a href=\"https://www.cloudflare.com/join-our-team/\">we are hiring in London, San Francisco and Singapore</a>.</p>\n<!--kg-card-end: markdown-->",
		"comment_id": "4755",
		"feature_image": null,
		"featured": false,
		"visibility": "public",
		"created_at": "2016-01-18T02:20:00.000+00:00",
		"updated_at": "2024-02-20T17:23:08.000+00:00",
		"published_at": "2016-01-19T18:19:59.000+00:00",
		"custom_excerpt": "The Go test coverage implementation is quite ingenious: when asked to, the Go compiler will preprocess the source so that when each code portion is executed a bit is set in a coverage bitmap.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f51",
				"name": "Filippo Valsorda",
				"slug": "filippo",
				"profile_image": "http://blog.cloudflare.com/content/images/2018/02/K6rX3ZSn_400x400.jpg",
				"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-26.png",
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@filosottile",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/filippo/"
			}
		],
		"tags": [
			{
				"id": "5d16450341acde0011a95161",
				"name": "RRDNS",
				"slug": "rrdns",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/rrdns/"
			},
			{
				"id": "5d16450341acde0011a951d6",
				"name": "DNS",
				"slug": "dns",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/dns/"
			},
			{
				"id": "5d16450341acde0011a951ce",
				"name": "Reliability",
				"slug": "reliability",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/reliability/"
			},
			{
				"id": "5d16450341acde0011a95214",
				"name": "Programming",
				"slug": "programming",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/programming/"
			},
			{
				"id": "5d16450341acde0011a95215",
				"name": "Go",
				"slug": "go",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/go/"
			},
			{
				"id": "5d16450341acde0011a95221",
				"name": "Best Practices",
				"slug": "best-practices",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/best-practices/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f51",
			"name": "Filippo Valsorda",
			"slug": "filippo",
			"profile_image": "http://blog.cloudflare.com/content/images/2018/02/K6rX3ZSn_400x400.jpg",
			"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-26.png",
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@filosottile",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/filippo/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a95161",
			"name": "RRDNS",
			"slug": "rrdns",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/rrdns/"
		},
		"url": "http://blog.cloudflare.com/go-coverage-with-external-tests/",
		"excerpt": "The Go test coverage implementation is quite ingenious: when asked to, the Go compiler will preprocess the source so that when each code portion is executed a bit is set in a coverage bitmap.",
		"reading_time": 1,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	}
}