{
	"post": {
		"id": "5d16453b41acde0011a95559",
		"uuid": "6618be48-852e-491a-ab16-880a217c282e",
		"title": "Creative foot-shooting with Go RWMutex",
		"slug": "creative-foot-shooting-with-go-rwmutex",
		"html": "<!--kg-card-begin: markdown--><p>Hi, I'm Filippo and today I managed to surprise myself! (And not in a good way.)</p>\n<p>I'm developing a new module (&quot;filter&quot; as we call them) for <a href=\"http://blog.cloudflare.com/tag/rrdns/\">RRDNS</a>, CloudFlare's Go DNS server. It's a rewrite of the authoritative module, the one that adds the IP addresses to DNS answers.</p>\n<p>It has a table of CloudFlare IPs that looks like this:</p>\n<pre><code class=\"language-go\">type IPMap struct {\n\tsync.RWMutex\n\tM map[string][]net.IP\n}\n</code></pre>\n<p>It's a global filter attribute:</p>\n<pre><code class=\"language-go\">type V2Filter struct {\n\tname       string\n\tIPTable    *IPMap\n\t// [...]\n}\n</code></pre>\n<p><img src=\"http://blog.cloudflare.com/content/images/2015/10/1280px-Mexican_Standoff.jpg\" alt=\"Mexican Standoff\" loading=\"lazy\"><small><a href=\"https://www.flickr.com/photos/28293006@N05/8144747570\">CC-BY-NC-ND image by Martin SoulStealer</a></small></p>\n<p>The table changes often, so a background goroutine periodically reloads it from our distributed key-value store, acquires the lock (<code>f.IPTable.Lock()</code>), updates it and releases the lock (<code>f.IPTable.Unlock()</code>). This happens every 5 minutes.</p>\n<p>Everything worked in tests, including multiple and concurrent requests.</p>\n<p>Today we deployed to an off-production test machine and everything worked. For a few minutes. Then RRDNS stopped answering queries for the beta domains served by the new code.</p>\n<p>What. <em>That worked on my laptop</em>â„¢.</p>\n<p>Here's the IPTable consumer function. You can probably spot the bug.</p>\n<pre><code class=\"language-go\">func (f *V2Filter) getCFAddr(...) (result []dns.RR) {\n\tf.IPTable.RLock()\n\t// [... append IPs from f.IPTable.M to result ...]\n\treturn\n}\n</code></pre>\n<p><code>f.IPTable.RUnlock()</code> is never called. Whoops. But it's an RLock, so multiple <code>getCFAddr</code> calls should work, and only table reloading should break, no? Instead <code>getCFAddr</code> started blocking after a few minutes. To the docs!</p>\n<p><em>To ensure that the lock eventually becomes available, a blocked Lock call excludes new readers from acquiring the lock.</em> <a href=\"https://golang.org/pkg/sync/#RWMutex.Lock\">https://golang.org/pkg/sync/#RWMutex.Lock</a></p>\n<p>So everything worked and RLocks piled up until the table reload function ran, then the pending Lock call caused all following RLock calls to block, breaking RRDNS answer generation.</p>\n<p>In tests the table reload function never ran while answering queries, so <code>getCFAddr</code> kept piling up RLock calls but never blocked.</p>\n<p>No customers were affected because A) the release was still being tested on off-production machines and B) no real customers run on the new code yet. Anyway it was a interesting way to cause a deferred deadlock.</p>\n<p>In closing, there's probably space for a better tooling here. A static analysis tool might output a listing of all Lock/Unlock calls, and a dynamic analysis tool might report still [r]locked Mutex at the end of tests. (Or maybe these tools already exist, in which case let me know!)</p>\n<p><em>Do you want to help (introduce <code>:)</code> and) fix bugs in the DNS server answering more than 50 billion queries every day? <a href=\"https://www.cloudflare.com/join-our-team\">We are hiring in London, San Francisco and Singapore!</a></em></p>\n<!--kg-card-end: markdown-->",
		"comment_id": "4729",
		"feature_image": "http://blog.cloudflare.com/content/images/2017/10/1280px-Mexican_Standoff.jpg",
		"featured": false,
		"visibility": "public",
		"created_at": "2015-10-29T21:16:23.000+00:00",
		"updated_at": "2018-08-24T22:31:20.000+01:00",
		"published_at": "2015-10-29T21:26:36.000+00:00",
		"custom_excerpt": "Hi, I'm Filippo and today I managed to surprise myself! (And not in a good way.)\n\nI'm developing a new module (\"filter\" as we call them) for RRDNS, CloudFlare's Go DNS server. ",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"tags": [
			{
				"id": "5d16450341acde0011a95161",
				"name": "RRDNS",
				"slug": "rrdns",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/rrdns/"
			},
			{
				"id": "5d16450341acde0011a95190",
				"name": "Bugs",
				"slug": "bugs",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/bugs/"
			},
			{
				"id": "5d16450341acde0011a951d6",
				"name": "DNS",
				"slug": "dns",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/dns/"
			},
			{
				"id": "5d16450341acde0011a951ce",
				"name": "Reliability",
				"slug": "reliability",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/reliability/"
			},
			{
				"id": "5d16450341acde0011a95214",
				"name": "Programming",
				"slug": "programming",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/programming/"
			},
			{
				"id": "5d16450341acde0011a95215",
				"name": "Go",
				"slug": "go",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/go/"
			}
		],
		"authors": [
			{
				"id": "5d1644b141acde0011a94f51",
				"name": "Filippo Valsorda",
				"slug": "filippo",
				"profile_image": "http://blog.cloudflare.com/content/images/2018/02/K6rX3ZSn_400x400.jpg",
				"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-26.png",
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@filosottile",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/filippo/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f51",
			"name": "Filippo Valsorda",
			"slug": "filippo",
			"profile_image": "http://blog.cloudflare.com/content/images/2018/02/K6rX3ZSn_400x400.jpg",
			"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-26.png",
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@filosottile",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/filippo/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a95161",
			"name": "RRDNS",
			"slug": "rrdns",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/rrdns/"
		},
		"url": "http://blog.cloudflare.com/creative-foot-shooting-with-go-rwmutex/",
		"excerpt": "Hi, I'm Filippo and today I managed to surprise myself! (And not in a good way.)\n\nI'm developing a new module (\"filter\" as we call them) for RRDNS, CloudFlare's Go DNS server. ",
		"reading_time": 2,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	},
	"locale": "en-us"
}