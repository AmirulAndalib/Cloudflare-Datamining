{
	"post": {
		"id": "5f47dc3fc221eb01ba62587c",
		"uuid": "b4041bf9-b8cb-46d5-a018-1353e16f6ef2",
		"title": "Asynchronous HTMLRewriter for Cloudflare Workers",
		"slug": "asynchronous-htmlrewriter-for-cloudflare-workers",
		"html": "<figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2020/08/image3-10.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>Last year, we launched <a href=\"http://blog.cloudflare.com/introducing-htmlrewriter/\">HTMLRewriter</a> for Cloudflare Workers, which enables developers to make streaming changes to HTML on the edge. Unlike a traditional DOM parser that loads the entire HTML document into memory, we developed a <a href=\"https://github.com/cloudflare/lol-html\">streaming parser</a> written in Rust. Today, we’re announcing support for asynchronous handlers in HTMLRewriter. Now you can perform asynchronous tasks based on the content of the HTML document: from prefetching fonts and image assets to fetching user-specific content from a CMS.</p><h3 id=\"how-can-i-use-htmlrewriter\">How can I use HTMLRewriter?</h3><p>We designed HTMLRewriter to have a jQuery-like experience. First, you define a handler, then you assign it to a CSS selector; Workers does the rest for you. You can look at our new and improved <a href=\"https://developers.cloudflare.com/workers/runtime-apis/html-rewriter#selectors\">documentation</a> to see our supported list of selectors, which now include <code>nth-child</code> selectors. The example below changes the alternative text for every second image in a document.</p><!--kg-card-begin: markdown--><pre><code class=\"language-javascript\">async function editHtml(request) {\n  return new HTMLRewriter()\n     .on(&quot;img:nth-child(2)&quot;, new ElementHandler())\n     .transform(await fetch(request))\n}\n\nclass ElementHandler {\n   element(e) {\n      e.setAttribute(&quot;alt&quot;, &quot;A very interesting image&quot;)\n   }\n}\n</code></pre>\n<!--kg-card-end: markdown--><p>Since these changes are applied using streams, we maintain a low TTFB (time to first byte) and users never know the HTML was transformed. If you’re interested in how we’re able to accomplish this technically, you can read our blog post about <a href=\"http://blog.cloudflare.com/html-parsing-2/\">HTML parsing.</a></p><h3 id=\"what-s-new-with-htmlrewriter\">What’s new with HTMLRewriter?</h3><p>Now you can define an <code>async</code> handler which allows any code that uses <code>await</code>. This means you can make dynamic HTML injection, based on the contents of the document, without having prior knowledge of what it contains. This allows you to customize HTML based on a particular user, feature flag, or even an integration with a CMS.</p><!--kg-card-begin: markdown--><pre><code class=\"language-javascript\">class UserCustomizer {\n   // Remember to add the `async` keyword to the handler method\n   async element(e) {\n      const user = await fetch(`https://my.api.com/user/${e.getAttribute(&quot;user-id&quot;)}/online`)\n      if (user.ok) {\n         // Add the user’s name to the element\n         e.setAttribute(&quot;user-name&quot;, await user.text())\n      } else {\n         // Remove the element, since this user not online\n         e.remove()\n      }\n   }\n}\n\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"what-can-i-build-with-htmlrewriter\">What can I build with HTMLRewriter?</h3><p>To illustrate the flexibility of HTMLRewriter, I wrote an example that you can deploy on your own website. If you manage a website, you know that old links and images can expire with time. Here’s an excerpt from a years’ old post I wrote on the Cloudflare Blog:</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2020/08/image1-18.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>As you might see, that missing image is not the prettiest sight. However, we can easily fix this using async handlers in HTMLRewriter. Using a service like the <a href=\"https://archive.org/help/wayback_api.php\">Internet Archive</a> API, we can check if an image no longer exists and rewrite the URL to use the latest archive. That means users don’t see an ugly placeholder and won’t even know the image was replaced.</p><!--kg-card-begin: markdown--><pre><code class=\"language-javascript\">async function fetchAndFixImages(request) {\n   return new HTMLRewriter()\n      .on(&quot;img&quot;, new ImageFixer())\n      .transform(await fetch(request))\n}\n\nclass ImageFixer {\n   async element(e) {\n    var url = e.getAttribute(&quot;src&quot;)\n    var response = await fetch(url)\n    if (!response.ok) {\n       var archive = await fetch(`https://archive.org/wayback/available?url=${url}`)\n       if (archive.ok) {\n          var snapshot = await archive.json()\n          e.setAttribute(&quot;src&quot;, snapshot.archived_snapshots.closest.url)\n       } else {\n          e.remove()\n       }\n    }\n  }\n}\n</code></pre>\n<!--kg-card-end: markdown--><p>Using the Workers Playground, you can view a <a href=\"https://cloudflareworkers.com/#42b5ec636af37ae988c3041e61da1870:https://blog.cloudflare.com/minecraft-api-with-workers-coffeescript/\">working sample</a> of the above code. A more complex example could even alert a service like Sentry when a missing image is detected. Using the previous missing image, now you can see the image is restored and users are none of the wiser.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2020/08/image2-9.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>If you’re interested in deploying this to your own website, click on the button below:</p><!--kg-card-begin: markdown--><p><a href=\"https://deploy.workers.cloudflare.com/?url=https://github.com/Electroid/wayback-worker\"><img src=\"https://deploy.workers.cloudflare.com/button\" alt=\"Deploy to Cloudflare Workers\" loading=\"lazy\"></a></p>\n<!--kg-card-end: markdown--><h3 id=\"what-else-can-i-build-with-htmlrewriter\">What else can I build with HTMLRewriter?</h3><p>We’ve been blown away by developer projects using HTMLRewriter. Here are a few projects that caught our eye and are great examples of the power of Cloudflare Workers and HTMLRewriter:</p><ul><li><a href=\"https://web.scraper.workers.dev/\">An elegant web scraper</a></li><li><a href=\"https://stanislas.blog/2020/05/native-image-lazy-loading-ghost-cloudflare-worker/\">Optimizing images with lazy loading</a></li><li><a href=\"https://dev.to/cloudflareworkers/localizing-applications-with-cloudflare-worker-s-new-streaming-html-rewriter-1k41\">Localizing a website</a></li><li><a href=\"https://jross.me/using-cloudflare-workers-htmlrewriter-to-extend-ghost-pro/\">Extending a Ghost blog</a></li><li><a href=\"https://community.cloudflare.com/t/2020-6-18-workers-runtime-release-notes/183460/2\">Prefetching and embedding Google fonts</a></li></ul><p>If you’re interested in using HTMLRewriter, check out our <a href=\"https://developers.cloudflare.com/workers/runtime-apis/html-rewriter\">documentation</a>. Also be sure to share any creations you’ve made with <a href=\"https://twitter.com/CloudflareDev\">@CloudflareDev</a>, we love looking at the awesome projects you build.</p>",
		"comment_id": "5f47dc3fc221eb01ba62587c",
		"feature_image": "http://blog.cloudflare.com/content/images/2020/08/image3-9.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2020-08-27T17:15:59.000+01:00",
		"updated_at": "2020-08-28T17:58:59.000+01:00",
		"published_at": "2020-08-28T12:00:00.000+01:00",
		"custom_excerpt": "HTMLRewriter for Cloudflare Workers now supports asynchronous handlers, allowing developers to prefetch assets or user-specific content from a remote service.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"tags": [
			{
				"id": "5d16450341acde0011a95253",
				"name": "Cloudflare Workers",
				"slug": "workers",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/workers/"
			},
			{
				"id": "5d16450341acde0011a95252",
				"name": "Serverless",
				"slug": "serverless",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Serverless.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Serverless",
				"meta_description": "Cloudflare blog posts tagged 'serverless'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/serverless/"
			},
			{
				"id": "5d16450341acde0011a95204",
				"name": "Developers",
				"slug": "developers",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Developers-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Developers",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Developers'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developers/"
			},
			{
				"id": "5d16450341acde0011a951ee",
				"name": "Product News",
				"slug": "product-news",
				"description": "Product News (EN)",
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Product-News-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Product News",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Product News'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/product-news/"
			}
		],
		"authors": [
			{
				"id": "5d1644b141acde0011a95022",
				"name": "Ashcon Partovi",
				"slug": "ashcon",
				"profile_image": "http://blog.cloudflare.com/content/images/2021/04/117158947_4858836477475662_2532132460047140852_o.jpeg",
				"cover_image": "http://blog.cloudflare.com/content/images/2019/05/general@2x-23.png",
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@ashconpartovi",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/ashcon/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a95022",
			"name": "Ashcon Partovi",
			"slug": "ashcon",
			"profile_image": "http://blog.cloudflare.com/content/images/2021/04/117158947_4858836477475662_2532132460047140852_o.jpeg",
			"cover_image": "http://blog.cloudflare.com/content/images/2019/05/general@2x-23.png",
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@ashconpartovi",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/ashcon/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a95253",
			"name": "Cloudflare Workers",
			"slug": "workers",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/workers/"
		},
		"url": "http://blog.cloudflare.com/asynchronous-htmlrewriter-for-cloudflare-workers/",
		"excerpt": "HTMLRewriter for Cloudflare Workers now supports asynchronous handlers, allowing developers to prefetch assets or user-specific content from a remote service.",
		"reading_time": 3,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": "HTMLRewriter for Cloudflare Workers now supports asynchronous handlers, allowing developers to prefetch assets or user-specific content from a remote service.",
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	},
	"locale": "en-us"
}