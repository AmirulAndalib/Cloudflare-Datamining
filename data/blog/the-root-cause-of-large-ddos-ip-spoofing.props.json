{
	"browserLocale": "en-us",
	"locale": "en-us",
	"post": {
		"access": true,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f30",
				"name": "Marek Majkowski",
				"slug": "marek-majkowski",
				"profile_image": "http://blog.cloudflare.com/content/images/2017/03/b5967d6c687939594adb6992723d0529.jpeg",
				"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-101.png",
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@majek04",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/marek-majkowski/"
			}
		],
		"canonical_url": null,
		"codeinjection_foot": null,
		"codeinjection_head": null,
		"comment_id": "5a9d4799e6533d0022a54c50",
		"comments": false,
		"created_at": "2018-03-05T13:35:21.000+00:00",
		"custom_excerpt": "A week ago we published a story about new amplification attacks using memcached protocol on UDP port 11211. A few things happened since then: Github announced it was a target of 1.3Tbps memcached attack.\nOVH and Arbor reported similar large attacks with the peak reported at 1.7Tbps.\n\n",
		"custom_template": null,
		"email_subject": null,
		"excerpt": "A week ago we published a story about new amplification attacks using memcached protocol on UDP port 11211. A few things happened since then: Github announced it was a target of 1.3Tbps memcached attack.\nOVH and Arbor reported similar large attacks with the peak reported at 1.7Tbps.\n\n",
		"feature_image": "http://blog.cloudflare.com/content/images/2018/03/8426525097_cf3ed2db55_z-1.jpg",
		"feature_image_alt": null,
		"feature_image_caption": null,
		"featured": false,
		"frontmatter": null,
		"html": "<!--kg-card-begin: markdown--><p>A week ago we published a story about new amplification attacks using <a href=\"http://blog.cloudflare.com/memcrashed-major-amplification-attacks-from-port-11211/\">memcached protocol on UDP port 11211</a>. A few things happened since then:</p>\n<ul>\n<li><a href=\"https://githubengineering.com/ddos-incident-report/\">Github announced it was a target of 1.3Tbps memcached attack</a>.</li>\n<li><a href=\"https://twitter.com/olesovhcom/status/969328679410110466\">OVH</a> and <a href=\"https://www.arbornetworks.com/blog/asert/netscout-arbor-confirms-1-7-tbps-ddos-attack-terabit-attack-era-upon-us/\">Arbor</a> reported similar large attacks with the peak reported at 1.7Tbps.</li>\n</ul>\n<p>Let's take a deep breath and discuss why such large DDoS attacks are even possible on the modern internet.</p>\n<h3 id=\"largeattacksuseipspoofing\">Large attacks use IP spoofing</h3>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/03/8426525097_cf3ed2db55_z.jpg\" alt=\"8426525097_cf3ed2db55_z\" loading=\"lazy\"><br>\n<small><a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC BY-SA 2.0</a> <a href=\"https://www.flickr.com/photos/dapuglet/8426525097\">image</a> by <a href=\"https://www.flickr.com/photos/dapuglet\">DaPuglet</a></small></p>\n<p>All the gigantic headline-grabbing attacks are what we call &quot;L3&quot; (Layer 3 OSI<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>). This kind of attack has a common trait - the malicious software sends as many <em>packets</em> as possible onto the network. For greater speed these packets are hand crafted by attackers - they are not generated using high-level, well-behaved libraries. Packets are mashed together as a series of bytes and fired onto the network to inflict the greatest damage.</p>\n<p>L3 attacks can be divided into two categories, depending on where the attacker directs their traffic:</p>\n<ul>\n<li>\n<p><strong>Direct</strong>: where the traffic is sent directly against a victim IP. A SYN flood is a common attack of this type.</p>\n</li>\n<li>\n<p><strong>Amplification</strong>: the traffic is sent to vulnerable UDP servers. They in turn reflect and amplify it by sending large responses to the unbeknown victim.</p>\n</li>\n</ul>\n<p>Both of these types of attack require the attacker to do IP spoofing<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>.</p>\n<p><br><img alt=\"all\" src=\"http://blog.cloudflare.com/content/images/2018/03/sp-spoofing.png\" style=\"height:200px\"></p>\n<p>IP Spoofing happens when the attacker sends IP packets with a fake source IP address. It's like forging a return address on a letter and pretending to be someone else.</p>\n<p><br><img alt=\"all\" src=\"http://blog.cloudflare.com/content/images/2018/03/sp-impersonation.png\" style=\"height:200px\"></p>\n<p>Spoofing source IP addresses is not technically challenging. Every machine connected to the internet can transmit any bytes of their choosing - including setting arbitrary values in the source IP address field. It's just that such packets can do a great deal of damage when they are permitted onto the wide internet.</p>\n<h3 id=\"directattacks\">Direct attacks</h3>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/03/sp-direct2.png\" alt=\"sp-direct2\" loading=\"lazy\"></p>\n<p>In direct attacks the traffic is sent directly towards the victim. There is a bright side of this - the target can investigate the source IPs! Since Cloudflare is often a target of such attacks, occasionally we look at the data and have some fun.</p>\n<p>To visualize the source IPs of the attacks, it's best to use <a href=\"https://en.wikipedia.org/wiki/Hilbert_curve\">Hilbert Curves</a>. Randall Munroe popularized this technique <a href=\"https://www.xkcd.com/195/\">in this famous XKCD</a>. The general idea is great - draw all 2**32 IPs on a two dimensional map by employing fancy math.</p>\n<p><br><a href=\"https://www.xkcd.com/195/\"><img src=\"https://imgs.xkcd.com/comics/map_of_the_internet.jpg\" style=\"height:500px\"></a><br>\n<small><a href=\"https://creativecommons.org/licenses/by-nc/2.5/\">CC BY-NC 2.5</a> <a href=\"https://www.xkcd.com/195/\">image</a> by Randall Munroe</small></p>\n<p>Here are a couple of direct attacks doing IP spoofing that we saw in past.</p>\n<p><br><a href=\"http://blog.cloudflare.com/content/images/2018/03/sp-all.png\"><img alt=\"all\" src=\"http://blog.cloudflare.com/content/images/2018/03/sp-all.png\" style=\"width:250px; height:250px\"></a></p>\n<p>In the first one, the attacker was spoofing indiscriminately all over the IP space, including multicast IP ranges, reserved blocks, and military prefixes.</p>\n<p>What's even more funny, the attacker even spoofed the 127.0.0.0/8 range. Indeed, we can confirm the dreadful source of attacks - 127.0.0.1 - hits on regular basis.</p>\n<p><br><a href=\"https://www.xkcd.com/742/\"><img src=\"https://imgs.xkcd.com/comics/campfire.png\" style=\"height:500px\"></a><br>\n<small><a href=\"https://creativecommons.org/licenses/by-nc/2.5/\">CC BY-NC 2.5</a> <a href=\"https://www.xkcd.com/742/\">image</a> by Randall Munroe</small></p>\n<p>Here is another example. During this one some IP ranges - reserved multicast and 127.0.0.0/8 - were not used:</p>\n<p><br><a href=\"http://blog.cloudflare.com/content/images/2018/03/sp-almost-all.png\"><img alt=\"Almost all\" src=\"http://blog.cloudflare.com/content/images/2018/03/sp-almost-all.png\" style=\"width:250px; height:250px\"></a></p>\n<p>Were attackers smart enough to skip the reserved source IPs? Unlikely. A plausible interpretation is that the traffic flows through a router that filters these obviously wrong sources.</p>\n<p>We've also seen attackers that prefer left:</p>\n<p><br><a href=\"http://blog.cloudflare.com/content/images/2018/03/sp-left.png\"><img alt=\"Left\" src=\"http://blog.cloudflare.com/content/images/2018/03/sp-left.png\" style=\"width:250px; height:250px\"></a></p>\n<p>Or right side of the internet:</p>\n<p><br><a href=\"http://blog.cloudflare.com/content/images/2018/03/sp-right.png\"><img alt=\"Right\" src=\"http://blog.cloudflare.com/content/images/2018/03/sp-right.png\" style=\"width:250px; height:250px\"></a></p>\n<p>We've seen many more exciting spoofed IP source patterns. The take away is: during direct attacks, you can't trust the source IPs! Attackers can set them to values of their choosing. Using source IPs in mitigations might not work, drawing them on geographical map makes no sense.</p>\n<h3 id=\"amplificationattacks\">Amplification attacks</h3>\n<p><br><img alt=\"all\" src=\"http://blog.cloudflare.com/content/images/2018/03/sp-amplification.png\" style=\"height:300px\"></p>\n<p>In amplification attacks the traffic sent by the attacker has different characteristics .</p>\n<ul>\n<li>The source IP is spoofed and set to the <strong>victim's IP address</strong>.</li>\n<li>Traffic is sent vulnerable amplification servers.</li>\n</ul>\n<p>The victim can only see the IPs of the vulnerable servers. Most common visualizations show them on a globe somehow. For example in the recent memcached-based attacks here is the map of abused servers:</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/03/sp-ips-per-pop.png\" alt=\"sp-ips-per-pop\" loading=\"lazy\"></p>\n<h3 id=\"whyisipspoofingathing\">Why is IP Spoofing a thing?</h3>\n<p>The attacks discussed so far rely on IP spoofing. But why is IP spoofing even possible?</p>\n<p>It's a side effect of the design of the internet.</p>\n<p>There are three properties of the internet that make it impossible to verify if the packet is legitimate on the receiving side.</p>\n<ul>\n<li>\n<p>First there's <a href=\"https://en.wikipedia.org/wiki/Multihoming\">&quot;multihoming&quot;</a> - a feature allowing the internet to be inter-connected. With multihoming networks can have more than a single internet provider. On the receiving side we don't know how many providers the sender has, and there is no way to ensure that a specific path is legitimate.</p>\n</li>\n<li>\n<p>Next, there's the internet's dynamic nature. The paths can change over time, which makes it fragile to deploy static filtering rules. Even if we knew that certain IP ranges can reach us only from one path, that can change over time.</p>\n</li>\n<li>\n<p>Then there's the routing asymmetry. The naive rule &quot;a best path from me to you must be the same as from you to me&quot; breaks at Tier 2 and Tier 1 layers. In the real world, the path in either direction differs, so we can't use best paths as hints for filtering rules.</p>\n</li>\n</ul>\n<p>Effective filtering preventing IP spoofing can only be done on the edge of the network - at the last-mile ISPs. Even doing this is hard. If I haven't convinced you yet, here's a more concrete example illustrating the problem.</p>\n<h3 id=\"foocorpexample\">FooCorp example</h3>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/03/sp-foocorp-a.png\" alt=\"sp-foocorp-a\" loading=\"lazy\"></p>\n<p>Let me introduce an example company, FooCorp which owns the IP ranges: 192.0.2.0/24 and 2001:db8::/48.</p>\n<p>This company resides in a shiny office building in Snowville, Utah, and is connected to the internet by a single cable, operated by a carrier named UtahCom.</p>\n<p>Say we, at Cloudflare, are very worried about these specific IP ranges, and want to ensure that nobody other than FooCorp can ever spoof them. And suppose we are also directly connected to the UtahCom carrier.</p>\n<p>It's all nice and pretty! By looking at the picture we can know that all the traffic with source IPs in 192.0.2.0/24 and 2001:db8::/48 must surely be delivered <em>via</em> UtahCom. Fighting IP spoofing is trivial! We can easily block source IPss 192.0.2.0/24 and 2001:db8::/48 coming from any other provider, right?</p>\n<p>Unfortunately, this is not how the internet works.</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/03/sp-foocorp-b-1.png\" alt=\"sp-foocorp-b-1\" loading=\"lazy\"></p>\n<p>One day FooCorp decided to get a second internet connection, from say IdahoCom. Cloudflare is also connected to IdahoCom and...</p>\n<p>... at this moment all our IP spoofing assumptions break. Traffic sourced from 192.0.2.0/24, 2001:db8::/48 can now be sent EITHER via UtahCom OR IdahoCom! From Cloudflare - the receiver - point of view, we pretty much can't do any source IP filtering now!</p>\n<p>Moreover, even if we saw packets from FooCorp IPs, sent from, say IndonesiaCom, we still can't really filter them. It is very possible that FooCorp just got yet more internet connectivity ... with a satelite connection I guess ... from Indonesia. Unlikely as it sounds, this is totally plasuible.</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/03/sp-foocorp-c.png\" alt=\"sp-foocorp-c\" loading=\"lazy\"></p>\n<p>To add insult to injury, UtahCom's IP filtering logic is also not banal. While it definitely should not allow FooCorp to send traffic from arbitary source IPs, it can't really filter the packets from IPs 192.0.2.0/24, 2001:db8::/48 coming from other providers. For example, what if UtahCom and IdahoCom are interconnected, they could totally exchange 192.0.2.0/24, 2001:db8::/48 traffic between themselves!</p>\n<h3 id=\"solvingtheproblem\">Solving the problem</h3>\n<p>Solving IP spoofing is hard and must be done in the last mile (as close to the source of the traffic as possible). The internet community understood that years ago and wrote down the famous BCP38:</p>\n<ul>\n<li><a href=\"https://tools.ietf.org/html/bcp38\">https://tools.ietf.org/html/bcp38</a></li>\n</ul>\n<p>It digs deeper into what I explained above. Only the last mile ISPs can perform the source IP filtering and prevent IP spoofing. The internet carriers can't really do much about it.</p>\n<p>Or can they?</p>\n<h4 id=\"internetcarriers\">Internet Carriers</h4>\n<p>It turns out internet carriers can help. There are two things they can do.</p>\n<p>First, they can clean up their networks, and set their filtering right. While it's impossible to ensure that nobody else spoofed FooCorp's 192.0.2.0/24, 2001:db8::/48 ranges, it is totally possible to make sure that FooCorp can't spoof others!</p>\n<p>It's not trivial though. In principle, the IP ranges of FooCorp can change over time, but such events should require informing carriers, presenting <a href=\"http://www.ksfiber.net/wp-content/uploads/Sample-BGP-LetterOfAgency.pdf\">Letter of Authorization</a> and validating <a href=\"https://www.apnic.net/manage-ip/apnic-services/routing-registry/\">IRR databases</a> (see also <a href=\"http://www.radb.net/features/\">RADb</a>).</p>\n<p>Next, while large Tier 1 and Tier 2 providers can't do source IP filtering, they can help with investigations. Remember - during large amplification attacks, the attacker spoofs <em>the victim</em> IP ranges. During attacks large carriers should help with debugging and be able to identify which of their paying customers pretended to be the victim!</p>\n<p>To be able to do this some carriers maintain internal netflow/IPFIX infrastructure. The community should start asking the carriers tough questions - do you have visibility into who spoofed traffic? Do you do netflow internally and can you effectively use it?</p>\n<p>I'm sure Github would like to know who faked their source IPs in order to generate 1.3Tbps amplification.</p>\n<h4 id=\"internetexchanges\">Internet Exchanges</h4>\n<p>Internet exchanges face the same attribution issue. When spoofing happens, it's often impossible to figure out which participant originated it. Internet exchanges should put together tools allowing participants to trace who originated the spoofed traffic.</p>\n<p>Some internet exchanges do this already, but most don't.</p>\n<h4 id=\"hardwarevendors\">Hardware vendors</h4>\n<p>A common technique to prohibit IP spoofing is called <a href=\"https://en.wikipedia.org/wiki/Reverse_path_forwarding#Unicast_RPF_confusion\">Strict uRPF</a>. While it can't be used on the Tier 1 layer, since it assumes internet routing symmetry, uRPF definitely is useful in last-mile deployments.</p>\n<p>Vendors should ship their hardware with secure defaults. Things like &quot;DHCP Snooping&quot; and &quot;IP Source Verify&quot; should be enabled by default on switches, and &quot;Strict uRPF&quot; on routers. Read more in this <a href=\"https://www.internetsociety.org/wp-content/uploads/2017/08/ISOC-AntiSpoofing-20150909-en-2.pdf\">paper by Internet Society</a>.</p>\n<p>On the same note, if you are using Linux for routing you can turn on strict uRPF with sysctl:</p>\n<pre><code>for fname in /proc/sys/net/ipv4/conf/*/rp_filter; do\\\n    echo 1 | sudo tee $fname; \\\ndone\n</code></pre>\n<h4 id=\"you\">You</h4>\n<p>Finally, everyone else can help the <a href=\"https://www.caida.org/projects/spoofer/\">&quot;Spoofer&quot; project</a> run by <a href=\"http://www.caida.org/home/\">caida.org</a>. &quot;Spoofer&quot; assesses networks by running an agent on your laptop, periodically probing the network.</p>\n<p>Users, especially heavy travelers, might consider installing the agent software to help Caida to get greater coverage of end-user ISPs.</p>\n<h3 id=\"finalthoughts\">Final thoughts</h3>\n<p>In the past, the industry has struggled with DNS and NTP protocols being vulnerable to amplification attacks. These days we are fighting SSDP, CLDAP and Memcached amplifications. I'm certain in future there will be many more broken UDP protocols that could be used for amplification.</p>\n<p>The lasting solution to the problem is to focus on fighting IP spoofing itself. Without IP spoofing, the internet would be a much calmer place.</p>\n<p>As for now, attackers doing IP spoofing are invincible. Normal internet participants have no tools to track them. Without attribution it's hard to respond to malicious activity, for example with legal measures. The war is very much asymmetric in favor of the spoofers. To change that we must start actively fighting the spoofing problem.</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>I'm going to claim that all the large attacks require IP spoofing. A notable exception are the large <a href=\"https://krebsonsecurity.com/2016/09/krebsonsecurity-hit-with-record-ddos/\">GRE Mirai attacks</a> that didn't employ spoofing of any kind. <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>This is a simplification. Direct attacks don't strictly require IP spoofing, but very much benefit from it. Without IP spoofing the mitigation would be rather straightforward - just block the abusive source IPs. To avoid this and cover their tracks, the attackers usually do employ IP spoofing though. <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n<!--kg-card-end: markdown-->",
		"id": "5d16453b41acde0011a956c2",
		"meta_description": null,
		"meta_title": null,
		"og_description": null,
		"og_image": null,
		"og_title": null,
		"primary_author": {
			"id": "5d1644b141acde0011a94f30",
			"name": "Marek Majkowski",
			"slug": "marek-majkowski",
			"profile_image": "http://blog.cloudflare.com/content/images/2017/03/b5967d6c687939594adb6992723d0529.jpeg",
			"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-101.png",
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@majek04",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/marek-majkowski/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a95169",
			"name": "Attacks",
			"slug": "attacks",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/attacks/"
		},
		"published_at": "2018-03-06T15:46:02.000+00:00",
		"reading_time": 9,
		"slug": "the-root-cause-of-large-ddos-ip-spoofing",
		"tags": [
			{
				"id": "5d16450341acde0011a95169",
				"name": "Attacks",
				"slug": "attacks",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/attacks/"
			},
			{
				"id": "5d16450341acde0011a951e3",
				"name": "DDoS",
				"slug": "ddos",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/ddos/"
			},
			{
				"id": "5d16450341acde0011a951ce",
				"name": "Reliability",
				"slug": "reliability",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/reliability/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			}
		],
		"title": "The real cause of large DDoS - IP Spoofing",
		"twitter_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"updated_at": "2018-08-29T08:15:27.000+01:00",
		"url": "http://blog.cloudflare.com/the-root-cause-of-large-ddos-ip-spoofing/",
		"uuid": "3fea48e4-f3c4-44d8-adcb-c72efa030e90",
		"visibility": "public"
	}
}