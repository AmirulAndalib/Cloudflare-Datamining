{
	"post": {
		"id": "5d16453b41acde0011a9575b",
		"uuid": "7eb14432-f095-4751-b5d9-37ed564276de",
		"title": "WebAssembly on Cloudflare Workers",
		"slug": "webassembly-on-cloudflare-workers",
		"html": "<!--kg-card-begin: markdown--><p><img src=\"http://blog.cloudflare.com/content/images/2018/09/cloudflare-workers-webassembly.png\" alt=\"\" loading=\"lazy\"></p>\n<p>We just announced ten major new products and initiatives over <a href=\"http://blog.cloudflare.com/crypto-week-2018/\">Crypto Week</a> and <a href=\"http://blog.cloudflare.com/birthday-week-2018-wrap-up/\">Birthday Week</a>, but our work is never finished. We're continuously upgrading our existing products with new functionality.</p>\n<p>Today, we're extending Cloudflare Workers with support for WebAssembly. All Workers customers can now augment their applications with WASM at no additional cost.</p>\n<h3 id=\"whatiswebassembly\">What is WebAssembly?</h3>\n<p>WebAssembly -- often abbreviated as &quot;WASM&quot; -- is a technology that extends the web platform to support compiled languages like C, C++, Rust, Go, and <a href=\"https://github.com/appcypher/awesome-wasm-langs\">more</a>. These languages can be compiled to a special WASM binary format and then loaded in a browser.</p>\n<p>WASM code is securely sandboxed, just like JavaScript. But, because it is based on compiled lower-level languages, it can be much faster for certain kinds of resource-intensive tasks where JavaScript is not a good fit. In addition to performance benefits, WASM allows you to reuse existing code written in languages other than JavaScript.</p>\n<h3 id=\"whatareworkers\">What are Workers?</h3>\n<p><img src=\"https://www.cloudflare.com/img/products/cloudflare-workers/workers-illustration.png\" alt=\"\" loading=\"lazy\"></p>\n<p>For those that don't know: Cloudflare Workers lets you deploy &quot;serverless&quot; JavaScript code directly to our 153-and-growing datacenters. Your Worker handles your site's HTTP traffic directly at the location closest to your end user, allowing you to achieve lower latency and reduce serving costs. <a href=\"http://blog.cloudflare.com/building-with-workers-kv/\">Last week we added storage to Workers</a>, making it possible to build applications that run entirely on Cloudflare.</p>\n<p>Until now, Workers has only supported JavaScript. With the addition of WebAssembly, you can now use a wide range of languages and do more, faster. As always, when you deploy code on Cloudflare, it is distributed to every one of our locations world-wide in under 30 seconds.</p>\n<h3 id=\"whentousewebassembly\">When to use WebAssembly</h3>\n<p>It's important to note that WASM is not always the right tool for the job. For lightweight tasks like redirecting a request to a different URL or checking an authorization token, sticking to pure JavaScript is probably both faster and easier than WASM. WASM programs operate in their own separate memory space, which means that it's necessary to copy data in and out of that space in order to operate on it. Code that mostly interacts with external objects without doing any serious &quot;number crunching&quot; likely does not benefit from WASM.</p>\n<p>On the other hand, WASM really shines when you need to perform a resource-hungry, self-contained operation, like resizing an image, or processing an audio stream. These operations require lots of math and careful memory management. While it's possible to perform such tasks in pure JavaScript — and engines like V8 have gone to impressive lengths to optimize such code — in the end nothing beats a compiled language with static types and explicit allocation.</p>\n<p>As an example, the image below is resized dynamically by a Cloudflare Worker using a WebAssembly module to decode and resize the image. Only the original image is cached — the resize happens on-the-fly at our edge when you move the slider. <a href=\"https://github.com/cloudflare/cloudflare-workers-wasm-demo\">Find the code here.</a></p>\n<iframe src=\"https://cloudflareworkers.com/wasm-demo/index.html\" style=\"width: 420px; height: 330px\"></iframe>\n<h3 id=\"howtousewebassemblywithcloudflareworkers\">How to use WebAssembly with Cloudflare Workers</h3>\n<p>WASM used in a Worker must be deployed together with the Worker. When editing a script in the online Workers editor, click on the &quot;Resources&quot; tab. Here, you can add a WebAssembly module.</p>\n<p style=\"text-align: center\"><img src=\"http://blog.cloudflare.com/content/images/2018/09/resources-tab.png\" style=\"width: 498px; max-width: 100%\"></p>\n<p>You will be prompted to upload your WASM module file and assign it a global variable name. Once uploaded, your module will appear as a global variable of type <code>WebAssembly.Module</code> in your worker script. You can then instantiate it like this:</p>\n<pre><code class=\"language-javascript\">// Define imported functions that your WASM can call.\nconst imports = { exampleImport(a, b) { return a + b; } }\n\n// Instantiate the module.\nconst instance = new WebAssembly.Instance(MY_WASM_MODULE, imports)\n\n// Now you can call the functions that your WASM exports.\ninstance.exports.exampleExport(123);\n</code></pre>\n<p>Check out the <a href=\"https://developer.mozilla.org/en-US/docs/WebAssembly/Using_the_JavaScript_API\">MDN WebAssembly API documentation</a> for more details on instantiating WebAssembly modules.</p>\n<p>You can also, of course, upload WebAssembly modules via our API instead of the online editor.</p>\n<p><a href=\"https://developers.cloudflare.com/workers/api/resource-bindings/webassembly-modules/\">Check out the documentation for details »</a></p>\n<h3 id=\"buildingwasmmodules\">Building WASM modules</h3>\n<p>Today, building a WebAssembly module for Cloudflare is a somewhat manual process involving low-level tools. <a href=\"https://github.com/cloudflare/cloudflare-workers-wasm-demo\">Check out our demo repository for details.</a></p>\n<p>Now that the basic support is in place, we plan to work with <a href=\"http://emscripten.org\">Emscripten</a> and the rest of the WASM community to make sure building WASM for Cloudflare Workers is as seamless as building for a web browser. Stay tuned for further developments.</p>\n<h3 id=\"thefuture\">The Future</h3>\n<p>We're excited by the possibilities that WebAssembly opens up. Perhaps, by integrating with <a href=\"https://www.cloudflare.com/products/cloudflare-spectrum/\">Cloudflare Spectrum</a>, we could allow existing C/C++ server code to handle arbitrary TCP and UDP protocols on the edge, like a sort of massively-distributed <code>inetd</code>. Perhaps game servers could reduce latency by running on Cloudflare, as close to the player as possible. Maybe, with the help of some GPUs and OpenGL bindings, you could do 3D rendering and real-time streaming directly from the edge. <a href=\"https://community.cloudflare.com/c/developers/workers\">Let us know what you'd like to see »</a></p>\n<p>Want to help us build it? <a href=\"https://www.cloudflare.com/careers/\">We're hiring!</a></p>\n<!--kg-card-end: markdown-->",
		"comment_id": "5baea85ce0fe6b00bf66b382",
		"feature_image": "http://blog.cloudflare.com/content/images/2018/09/cloudflare-workers-webassembly-share.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2018-09-28T23:17:00.000+01:00",
		"updated_at": "2024-02-12T20:43:28.000+00:00",
		"published_at": "2018-10-01T16:00:00.000+01:00",
		"custom_excerpt": "Today, we're extending Cloudflare Workers with support for WebAssembly. All Workers customers can now augment their applications with WASM at no additional cost.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f9f",
				"name": "Kenton Varda",
				"slug": "kenton-varda",
				"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2020/08/avatar-github.jpg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@kentonvarda",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/kenton-varda/"
			}
		],
		"tags": [
			{
				"id": "5d16450341acde0011a95253",
				"name": "Cloudflare Workers",
				"slug": "workers",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/workers/"
			},
			{
				"id": "5d16450341acde0011a95252",
				"name": "Serverless",
				"slug": "serverless",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Serverless.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Serverless",
				"meta_description": "Cloudflare blog posts tagged 'serverless'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/serverless/"
			},
			{
				"id": "5d16450341acde0011a95204",
				"name": "Developers",
				"slug": "developers",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Developers-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Developers",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Developers'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developers/"
			},
			{
				"id": "64a3e2b834124c000b00b717",
				"name": "Developer Platform",
				"slug": "developer-platform",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developer-platform/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f9f",
			"name": "Kenton Varda",
			"slug": "kenton-varda",
			"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2020/08/avatar-github.jpg",
			"cover_image": null,
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@kentonvarda",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/kenton-varda/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a95253",
			"name": "Cloudflare Workers",
			"slug": "workers",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/workers/"
		},
		"url": "http://blog.cloudflare.com/webassembly-on-cloudflare-workers/",
		"excerpt": "Today, we're extending Cloudflare Workers with support for WebAssembly. All Workers customers can now augment their applications with WASM at no additional cost.",
		"reading_time": 4,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	},
	"locale": "en-us"
}