{
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Tom Brightbill",
				"slug": "tom-brightbill",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/F3B1bXIjKGQPd9IwQWtDg/d368b8bf3b5816b2bdba7e61377be74d/tom-brightbill.jpg",
				"location": null,
				"website": null,
				"twitter": null,
				"facebook": null
			}
		],
		"excerpt": "In today’s post we’re going to talk about building a CI/CD pipeline for Cloudflare Worker’s using Travis CI. If you aren’t yet aware, Cloudflare Workers allow you to run Javascript in all 165 of our data centers, and they deploy globally in about 30 seconds. Learn more here. ",
		"feature_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/4MTrFqjQMbfyOQ9o0m9BIu/0e1e0fe095cf4a347b1e1794ac8f86e7/a-ci.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/3y6n4AKvsaJaYys4qO1Vdp/48b8c7f69be31b3f4fa3f1cef13b155a/Workers-Illustration--WiP-as-of-2.21.18--copy_2x-1.png\" alt=\"\" class=\"kg-image\" width=\"935\" height=\"654\" loading=\"lazy\"/>\n            \n            </figure><p>In today’s post we’re going to talk about building a CI/CD pipeline for Cloudflare Worker’s using Travis CI. If you aren’t yet aware, Cloudflare Workers allow you to run Javascript in all 165 of our data centers, and they deploy globally in about 30 seconds. Learn more <a href=\"https://developers.cloudflare.com/workers/about/\">here</a>.</p><p>There are a few steps before we get started. We need to have a Worker script we want to deploy, some optional unit tests for the script, a <code>serverless.yml</code>  file to deploy via the Serverless Framework, a <code>.gitignore</code> file to ignore the <code>node_modules</code> folder, and finally, a <code>.travis.yml</code> configuration file. All of these files will live in the same GitHub repository, which should have a final layout like:</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">----- worker.js\n----- serverless.yml\n----- test\n      . worker-test.js\n----- node_modules\n----- package.json\n----- package-lock.json\n----- .travis.yml\n----- .gitignore</pre></code>\n            <h3>The Worker Script</h3><p><a href=\"/unit-testing-worker-functions/\">In a recent post</a> we discussed a method for testing Workers. We’ll reuse this method here to test a really simple Worker script below which simply returns <code>Hello World!</code> in the body of the response. We will name our Worker <code>worker.js</code>.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">addEventListener('fetch', event => {\n  event.respondWith(handleRequest(event.request))\n})\nasync function handleRequest(request) {\n  return new Response('Hello World!')\n}</pre></code>\n            <h3>The Test</h3><p>We will create a single test case following the method discussed <a href=\"/unit-testing-worker-functions/\">unit testing blog</a> post.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">before(async function () {\n   Object.assign(global, new (require('@dollarshaveclub/cloudworker'))(require('fs').readFileSync('worker.js', ‘utf8’)).context)\n})\n// replace worker.js here with the name of your worker file\nconst assert = require('assert')\n\ndescribe('Worker Test', function() {\n    it('Response with a body that says hello', async function () {\n    var url = new URL('https://travis.example.com')\n    var req = new Request(url)\n    var res = await handleRequest(req)\n    var body = await res.text()\n    assert.equal(body, 'Hello World!')\n    })\n})</pre></code>\n            <p>Then we’ll update our <code>package.json</code> file to include:</p>\n            <pre class=\"language-js\"><code class=\"language-js\">\"scripts\": {\n  \"test\": \"mocha\"\n}</pre></code>\n            <p>And install <code>mocha</code> with <code>npm install mocha --save-dev</code> and <code>cloudworker</code> with <code>npm install @dollarshaveclub/cloudworker --save-dev</code>.</p><h3>serverless.yml</h3><p>Next, we’ll need a <code>serverless.yml</code> file to deploy the worker. This is a config file which is used by the <a href=\"https://serverless.com/framework/docs/providers/cloudflare/\">Serverless Framework</a> to deploy serverless apps to supported providers. We became a provider some <a href=\"/serverless-cloudflare-workers/\">time ago</a>, and we will use the framework to deploy our Workers in this example.</p><p>We will run the <code>sls deploy</code> command in our Travis config and it will pick up our <code>serverless.yml</code> to deploy the Worker for us. <code>serverless.yml</code> will reference <code>ENV</code> variables which we will pass to Travis in the final section of the post.</p><p><b>NOTE</b>: You can deploy with any arbitrary script. We’re using the Serverless Framework in this example because we already <a href=\"https://developers.cloudflare.com/workers/deploying-workers/serverless/\">integrate</a> with them and getting started is straightforward.</p><p>Our <code>serverless.yml</code> will look like:</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">service:\n  name: travis-example\n  \nprovider:\n  name: cloudflare\n  \nconfig:\n  accountId: ${env:CLOUDFLARE_ACCOUNT_ID}\n  zoneId: ${env:CLOUDFLARE_ZONE_ID}\n  \nplugins:\n  - serverless-cloudflare-workers\n  \nfunctions:\n  deploy-from-travis:\n    name: travis-deployed-worker\n    script: worker</pre></code>\n            <p>Make sure to install both the Serverless Framework, and the Cloudflare Workers plugin with <code>npm install --save serverless</code> and <code>npm install --save serverless-cloudflare-workers</code>.</p><h3>travis.yml</h3><p>Below you’ll see the final <code>.travis.yml</code> and we’ll walk through each piece of it.</p>\n            <pre class=\"language-javascript\"><code class=\"language-javascript\">language: node_js\nnode_js:\n  - \"node\"\n  \ndeploy:\n  - provider: script\n  script: sls deploy\n  skip_cleanup: true\n  on:\n    branch: main</pre></code>\n            <p>Before diving in, Travis has some great resources on deploying <code>node.js</code> projects <a href=\"https://docs.travis-ci.com/user/languages/javascript-with-nodejs/\">here</a>. While this isn’t strictly what we’re doing, it’s a great jumping off point.</p><p>So what does this <code>.travis.yml</code> mean? First, we’re telling Travis CI to use the most recent <code>node.js</code> image (you have the option to specify). Then we specify the command to run to actually do the deployment, <code>sls deploy</code>, but only when the main branch is involved in the build. Travis will run <code>npm test</code> for us as it’s default for any <code>node.js</code> project, which will execute our unit tests.</p><p>The <code>skip_cleanup: true</code> prevents any conflicts with <code>git</code> during the test and deploy process.</p><h3>Configuring Travis</h3><p>Finally! We’re almost there. Setting up Travis CI is really simple. Once you’ve got your account created, make sure your authorize Travis to access the repo which contains the worker, your tests, <code>.travis.yml</code>, and your <code>.serverless.yml</code>.</p><p>Next up is adding environmental variables to the build. In this case it’s going to be our <code>CLOUDFLARE_AUTH_EMAIL</code> and <code>CLOUDFLARE_AUTH_KEY</code> values which Serverless picks up to auth API requests.</p><p>I also add <code>CLOUDFLARE_ACCOUNT_ID</code> and <code>CLOUDFLARE_ZONE_ID</code> as we referenced them in <code>serverless.yml</code>. Finally I set <code>SLS_DEBUG=*</code>, just to catch any issues from Serverless.</p><p>You can add these <code>ENV</code> variables in a variety of ways outlined <a href=\"https://docs.travis-ci.com/user/environment-variables\">here</a>. In this example we’re going to add them directly in the Travis UI so they don’t show up anywhere in the repo (as some of them are sensitive).</p><p>Navigate to the repo in the Travis UI, and hit the ‘more options’ dropdown to add ENV variables.</p><h3>Complete!</h3><p>Now PRs will trigger a test build, and a merge to main a test build and a deployment! Go ahead and test it out.</p><p>And that’s it! Did you find this useful? Please let us know if we can make this tutorial better. Thanks.</p>",
		"id": "7wL7aKM3sN6eZgmRqemTk6",
		"localeList": {
			"name": "A Full CI/CD Pipeline for Workers with Travis CI Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": null,
		"metadata": {
			"imgPreview": ""
		},
		"primary_author": {},
		"published_at": "2019-03-22T17:10:37.000+00:00",
		"reading_time": 3,
		"slug": "a-ci",
		"tags": [
			{
				"id": "6hbkItfupogJP3aRDAq6v8",
				"name": "Cloudflare Workers",
				"slug": "workers"
			},
			{
				"id": "5cye1Bh5KxFh3pKSnX8Dsy",
				"name": "Serverless",
				"slug": "serverless"
			},
			{
				"id": "78aSAeMjGNmCuetQ7B4OgU",
				"name": "JavaScript",
				"slug": "javascript"
			},
			{
				"id": "4HIPcb68qM0e26fIxyfzwQ",
				"name": "Developers",
				"slug": "developers"
			},
			{
				"id": "3JAY3z7p7An94s6ScuSQPf",
				"name": "Developer Platform",
				"slug": "developer-platform"
			}
		],
		"title": "A Full CI/CD Pipeline for Workers with Travis CI",
		"updated_at": "2024-08-27T02:13:31.583Z",
		"url": "https://blog.cloudflare.com/a-ci"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.blurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}