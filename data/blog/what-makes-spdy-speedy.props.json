{
	"locale": "en-us",
	"post": {
		"id": "5d16453b41acde0011a95407",
		"uuid": "26f4f15f-ef49-47bd-80be-8c3ecf6830b5",
		"title": "What makes SPDY speedy?",
		"slug": "what-makes-spdy-speedy",
		"html": "<!--kg-card-begin: markdown--><p><img alt=\"What makes SPDY\nspeedy?\" src=\"http://blog.cloudflare.com/content/images/6188310189_a4059f9e2c.jpeg.scaled500.jpg\" title=\"What makes SPDY speedy?\"><noscript><img alt=\"What makes SPDY\nspeedy?\" src=\"http://blog.cloudflare.com/content/images/6188310189_a4059f9e2c.jpeg.scaled500.jpg\" title=\"What makes SPDY speedy?\"></noscript><br>\n<small>Image credit: <a href=\"http://www.flickr.com/photos/loco_2/\">Loco_2</a></small></p>\n<p>Google has proposed a new protocol for downloading web pages called <a href=\"http://en.wikipedia.org/wiki/SPDY\">SPDY</a> and CloudFlare will shortly be <a href=\"http://blog.cloudflare.com/introducing-spdy\">making it available</a> in beta form. SPDY is designed to make web browsing faster without replacing HTTP. This blog post explains how it works and why it helps.</p>\n<p>Current web browsing makes use of the HTTP protocol running over TCP.<br>\nThe TCP protocol underlies many other uses of the Internet (such as<br>\nsending and receiving email) because it provides reliable delivery of<br>\ndata. HTTP is independent of TCP and provides a mechanism for a web<br>\nbrowser to ask for pages, graphics and other files needed to display a<br>\nweb page.</p>\n<p>SPDY sits between HTTP and TCP to speed up the HTTP protocol by changing how it interacts with TCP. First, let's look at getting a web page with HTTP over TCP without SPDY and then see how that changes with SPDY.</p>\n<p>A typical web browsing session goes something like this: you type cloudflare.com into your browser and it sends an HTTP request over TCP to the cloudflare.com server asking for the the HTML of the page. The page is delivered and the browser sets about parsing the page to determine what else it needs to download (e.g. the style sheets and images that make up the page).</p>\n<p>Here's a screen shot from Firebug running in Mozilla Firefox. You can see the page being downloaded at the top and then the parts of the page (such as JavaScript, CSS and images) being downloaded in parallel.</p>\n<p><img alt=\"What makes SPDY speedy?\" src=\"http://blog.cloudflare.com/content/images/Screen_Shot_2012-06-22_at_2.40.16_PM.png.scaled500.png\" title=\"What makes SPDY speedy?\"><noscript><img alt=\"What makes SPDY speedy?\" src=\"http://blog.cloudflare.com/content/images/Screen_Shot_2012-06-22_at_2.40.16_PM.png.scaled500.png\" title=\"What makes SPDY speedy?\"></noscript></p>\n<p>But what's not clear from that view is how Firefox is actually connecting to the web server and retrieving the parts of the page. For that it's necessary to dig a little deeper. Using a combination of Wireshark and a custom program written in Processing here's a view of the TCP connections and downloading of each part of the CloudFlare home page.</p>\n<p><img alt=\"What makes SPDY speedy?\" src=\"http://blog.cloudflare.com/content/images/Screen_Shot_2012-06-22_at_7.06.42_PM.png.scaled500.png\" title=\"What makes SPDY speedy?\"><noscript><img alt=\"What makes SPDY speedy?\" src=\"http://blog.cloudflare.com/content/images/Screen_Shot_2012-06-22_at_7.06.42_PM.png.scaled500.png\" title=\"What makes SPDY speedy?\"></noscript></p>\n<p>The scale at the top shows elapsed time in seconds. Down the left hand side is the identifier of each TCP connection; each row in the diagram is a single TCP connection. On the right hand side is a number indicating how many separate parts of the page (images, CSS, JavaScript) were downloaded by the connection on that row.</p>\n<p>The colors just indicate different parts of the page being downloaded. The size of the bars equates to the total time to get that part of the page.</p>\n<p>The first connection begins by downloading the HTML of the page and then straight after that Firefox reuses the connection and opens another 6 connections to retrieve parts of the page. By opening multiple connections Firefox gets to download in parallel, by reusing a connection Firefox saves time starting a connection.</p>\n<p>After the first set of connections there are another set used to download parts of the page. Some of these connections are reused multiple times.</p>\n<p>It's likely pretty obvious why Firefox uses multiple simultaneous connections (because downloading can happen in parallel), but its reuse of connections is a little less obvious. Connections are reused because of two costs: connection set up time and TCP slow start.</p>\n<p>First, it takes time to set up a TCP connection. The browser connects to the server and goes through a handshake to establish the connection. In the example above each connection was taking roughly 50ms to establish. If you did that for all 36 items being downloaded it would add up to 1.8s (longer than the entire download took). So, clearly reusing a connection helps.</p>\n<p><img alt=\"What makes SPDY speedy?\" src=\"http://blog.cloudflare.com/content/images/145450640_c337f29735.jpeg.scaled500.jpg\" title=\"What makes SPDY speedy?\"><noscript><img alt=\"What makes SPDY speedy?\" src=\"http://blog.cloudflare.com/content/images/145450640_c337f29735.jpeg.scaled500.jpg\" title=\"What makes SPDY speedy?\"></noscript><br>\n<small>Image credit: <a href=\"http://www.flickr.com/photos/dad_and_clint/\">Charles &amp; Clint</a></small></p>\n<p>But TCP slow start also matters. In a previous post I looked at the effect of <a href=\"http://blog.cloudflare.com/the-bandwidth-of-a-boeing-747-and-its-impact\">bandwidth and latency</a> on downloading. What that post didn't mention is that the theoretical download speed is only reached after a period of slowness at the beginning of a TCP connection.</p>\n<p>To avoid causing congestion on the Internet, every TCP connection starts slowly and works up to the maximum speed available. This is called <a href=\"http://en.wikipedia.org/wiki/Slow-start\">TCP Slow Start</a>. So, each time a new TCP connection is established there's a double penalty: connection set up time and slow start. TCP slow start is also problematic on high latency links because detecting the maximum speed available on the connection requires back-and-forth packet exchanges.</p>\n<p>Thus, to make efficient use of TCP the ideal browser would open a small number of connections and reuse them. That way the connection cost would be low, TCP slow start would be minimized and download speed would be maximized.</p>\n<p>So, why did Firefox open 20 separate connections and only reuse them for a small number of requests each? Take a look at the line corresponding to connection 47108 in the diagram. Notice how a small download (in blue) had to wait behind a large download (in red).</p>\n<p>Since the web browser can't predict how large or small the response to each request will be it is not able to order requests for efficient delivery. So, there's a balancing act to find the right number of connections to minimize page load time as bandwidth, latency, connection time and slow start have to be taken into account.</p>\n<p>Using a small number of connections would result in blocking (a long slow download of say a large image could block a small quicker download because there's no 'overtaking' in HTTP); a large number of  connections would avoid blocking and pay the price of connection set up and slow start.</p>\n<p>Also, opening a large number of connections would place a load on the web server as each connection takes up resources on the server itself.</p>\n<p>These problems come about in part because HTTP is synchronous: a request is made for part of a page and the connection it was made on needs to wait for the response. A better protocol would allow multiple requests to be sent and the responses returned in the order they are available. Line 47108 would look very different in that case: all three requests could be sent and the small one would be returned first even though it was the second request.</p>\n<p><img alt=\"What makes SPDY speedy?\" src=\"http://blog.cloudflare.com/content/images/4367848988_4e60dbe99a.jpeg.scaled500.jpg\" title=\"What makes SPDY speedy?\"><noscript><img alt=\"What makes SPDY speedy?\" src=\"http://blog.cloudflare.com/content/images/4367848988_4e60dbe99a.jpeg.scaled500.jpg\" title=\"What makes SPDY speedy?\"></noscript><br>\n<small>Image credit: <a href=\"http://www.flickr.com/photos/ben_salter/\">Capt' Gorgeous</a></small></p>\n<p>SPDY fixes all these problems in one go.</p>\n<p>SPDY allows a single connection to be used for multiple requests. The requests can be sent in any order and responses come back in the order that they are available. Since a single connection is used the connection set up cost and slow start are minimized. Since requests can be answered in any order there's no blocking.</p>\n<p>Of course, SPDY also does other things (such as compression of previously uncompressed parts of HTTP), but its core benefit is that it decouples HTTP from TCP and in doing so allows asynchronous, overlapping HTTP requests on a single connection. All without changing HTTP at all.</p>\n<p>And shortly CloudFlare will be rolling out SPDY to our customers. Information about the beta is <a href=\"http://blog.cloudflare.com/introducing-spdy\">here</a>.</p>\n<!--kg-card-end: markdown-->",
		"comment_id": "4369",
		"feature_image": "http://blog.cloudflare.com/content/images/2018/02/6188310189_a4059f9e2c.jpeg.scaled500.jpg",
		"featured": false,
		"visibility": "public",
		"created_at": "2014-08-20T11:03:46.000+01:00",
		"updated_at": "2018-02-20T20:36:59.000+00:00",
		"published_at": "2012-06-25T08:14:00.000+01:00",
		"custom_excerpt": "Google has proposed a new protocol for downloading web pages called SPDY and CloudFlare will shortly be making it available in beta form. SPDY is designed to make web browsing faster without replacing HTTP. ",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"tags": [
			{
				"id": "5d16450341acde0011a9517c",
				"name": "spdy",
				"slug": "spdy",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/spdy/"
			},
			{
				"id": "5d16450341acde0011a9516c",
				"name": "Google",
				"slug": "google",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/google/"
			},
			{
				"id": "5d16450341acde0011a95163",
				"name": "TCP",
				"slug": "tcp",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/tcp/"
			}
		],
		"authors": [
			{
				"id": "5d1644b141acde0011a94f2c",
				"name": "John Graham-Cumming",
				"slug": "john-graham-cumming",
				"profile_image": "http://blog.cloudflare.com/content/images/2017/03/url-2.jpg",
				"cover_image": "http://blog.cloudflare.com/content/images/2023/05/Twitter-Header-@cloudflare-US.png",
				"bio": null,
				"website": null,
				"location": "Lisbon, Portugal",
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/john-graham-cumming/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f2c",
			"name": "John Graham-Cumming",
			"slug": "john-graham-cumming",
			"profile_image": "http://blog.cloudflare.com/content/images/2017/03/url-2.jpg",
			"cover_image": "http://blog.cloudflare.com/content/images/2023/05/Twitter-Header-@cloudflare-US.png",
			"bio": null,
			"website": null,
			"location": "Lisbon, Portugal",
			"facebook": null,
			"twitter": null,
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/john-graham-cumming/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a9517c",
			"name": "spdy",
			"slug": "spdy",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/spdy/"
		},
		"url": "http://blog.cloudflare.com/what-makes-spdy-speedy/",
		"excerpt": "Google has proposed a new protocol for downloading web pages called SPDY and CloudFlare will shortly be making it available in beta form. SPDY is designed to make web browsing faster without replacing HTTP. ",
		"reading_time": 6,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	}
}