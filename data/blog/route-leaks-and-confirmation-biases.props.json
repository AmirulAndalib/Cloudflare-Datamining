{
	"post": {
		"id": "6214fa8a1b8fa8000b5ddbaf",
		"uuid": "cb63facd-6bf4-40ce-9ba4-3a24052690f5",
		"title": "BGP security and confirmation biases",
		"slug": "route-leaks-and-confirmation-biases",
		"html": "<figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/02/Route-Leaks-and-Confirmation-Biases.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>This is not what I imagined my first blog article would look like, but here we go.</p><p>On February 1, 2022, a configuration error on one of our routers caused a route leak of up to 2,000 Internet prefixes to one of our Internet transit providers. This leak lasted for 32 seconds and at a later time 7 seconds. We did not see any traffic spikes or drops in our network and did not see any customer impact because of this error, but this may have caused an impact to external parties, and we are sorry for the mistake.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/02/image1.jpg\" class=\"kg-image\" alt loading=\"lazy\"></figure><h3 id=\"timeline\">Timeline</h3><p>All timestamps are UTC.</p><p>As part of our efforts to build the best network, we regularly update our Internet transit and peering links throughout our network. On February 1, 2022, we had a “hot-cut” scheduled with one of our Internet transit providers to simultaneously update router configurations on Cloudflare and ISP routers to migrate one of our existing Internet transit links in Newark to a link with more capacity. Doing a “hot-cut” means that both parties will change cabling and configuration at the same time, usually while being on a conference call, to reduce downtime and impact on the network. The migration started off-peak at 10:45 (05:45 local time) with our network engineer entering the bridge call with our data center engineers and remote hands on site as well as operators from the ISP.</p><p>At 11:17, we connected the new fiber link and established the BGP sessions to the ISP successfully. We had BGP filters in place on our end to not accept and send any prefixes, so we could evaluate the connection and settings without any impact on our network and services.</p><p>As the connection between our router and the ISP — like most Internet connections — was realized over a fiber link, the first item to check are the “light levels” of that link. This shows the strength of the optical signal received by our router from the ISP router and can indicate a bad connection when it’s too low. Low light levels are likely caused by unclean fiber ends or not fully seated connectors, but may also indicate a defective optical transceiver which connects the fiber link to the router - all of which can degrade service quality.</p><p>The next item on the checklist is interface errors, which will occur when a network device receives incorrect or malformed network packets, which would also indicate a bad connection and would likely lead to a degradation in service quality, too.</p><p>As light levels were good, and we observed no errors on the link, we deemed it ready for production and removed the BGP reject filters at 11:22.</p><p>This immediately triggered the maximum prefix-limit protection the ISP had configured on the BGP session and shut down the session, preventing further impact. The maximum prefix-limit is a safeguard in BGP to prevent the spread of route leaks and to protect the Internet. The limit is usually set just a little higher than the expected number of Internet prefixes from a peer to leave some headroom for growth but also catch configuration errors fast. The configured value was just 40 prefixes short of the number of prefixes we were advertising at that site, so this was considered the reason for the session to be shut down. After checking back internally, we asked the ISP to raise the prefix-limit, which they did.</p><p>The BGP session was reestablished at 12:08 and immediately shut down again. The problem was identified and fixed at 12:14.</p><p>10:45: Start of scheduled maintenance</p><p>11:17: New link was connected and BGP sessions went up (filters still in place)</p><p>11:22: Link was deemed ready for production and filters removed</p><p>11:23: BGP sessions were torn down by ISP router due to configured prefix-limit</p><p>12:08: ISP configures higher prefix-limits, BGP sessions briefly come up again and are shut down</p><p>12:14: Issue identified and configuration updated</p><h3 id=\"what-happened-and-what-we-re-doing-about-it\">What happened and what we’re doing about it</h3><p>The outage occurred while migrating one of our Internet transits to a link with more capacity. Once the new link and a <a href=\"https://www.cloudflare.com/learning/security/glossary/what-is-bgp/\">BGP session</a> had been established, and the link deemed error-free, our network engineering team followed the peer-reviewed deployment plan. The team removed the filters from the BGP sessions, which had been preventing the Cloudflare router from accepting and sending prefixes via BGP.</p><p>Due to an oversight in the deployment plan, which had been peer-reviewed before without noticing this issue, no BGP filters to only export prefixes of Cloudflare and our customers were added. A peer review on the internal chat did not notice this either, so the network engineer performing this change went ahead.</p><!--kg-card-begin: markdown--><pre><code>ewr02# show |compare                                     \n[edit protocols bgp group 4-ORANGE-TRANSIT]\n-  import REJECT-ALL;\n-  export REJECT-ALL;\n[edit protocols bgp group 6-ORANGE-TRANSIT]\n-  import REJECT-ALL;\n-  export REJECT-ALL;\n</code></pre>\n<!--kg-card-end: markdown--><p>The change resulted in our router sending all known prefixes to the ISP router, which shut down the session as the number of prefixes received exceeded the maximum prefix-limit configured.</p><p>As the configured values for the maximum prefix-limits turned out to be rather low for the number of prefixes on our network, this didn’t come as a surprise to our network engineering team and no investigation into why the BGP session went down was started. The prefix-limit being too low seemed to be a perfectly valid reason.</p><p>We asked the ISP to increase the prefix-limit, which they did after they received approval on their side. Once the prefix-limit had been increased and the previously shutdown BGP sessions reset, the sessions were reestablished but were shut down immediately as the maximum prefix-limit was triggered again. This is when our network engineer started questioning whether there was another issue at fault and found and corrected the configuration error previously overlooked.</p><p>We made the following change in response to this event: we introduced an implicit reject policy for BGP sessions which will take effect if no import/export policy is configured for a specific BGP neighbor or neighbor group. This change has been deployed.</p><h3 id=\"bgp-security-preventing-route-leaks-what-s-in-the-cards\">BGP security &amp; preventing route-leaks — what’s in the cards?</h3><p>Route leaks aren’t new, and they keep happening. The industry has come up with many approaches to limit the impact or even prevent route-leaks. Policies and filters are used to control which prefixes should be exported to or imported from a given peer. RPKI can help to make sure only allowed prefixes are accepted from a peer and a maximum prefix-limit can act as a last line of defense when everything else fails.</p><p>BGP policies and filters are commonly used to ensure only explicitly allowed prefixes are sent out to BGP peers, usually only allowing prefixes owned by the entity operating the network and its customers. They can also be used to tweak some knobs (BGP local-pref, MED, AS path prepend, etc.) to influence routing decisions and balance traffic across links. This is what the policies we have in place for our peers and transits do. As explained above, the maximum prefix-limit is intended to tear down BGP sessions if more prefixes are being sent or received than to be expected. We have talked about RPKI before, it’s <a href=\"http://blog.cloudflare.com/rpki/\">the required cryptographic upgrade to BGP routing</a>, and we still are on <a href=\"http://blog.cloudflare.com/rpki-details/\">our path to securing Internet Routing</a>.</p><p>To improve the overall stability of the Internet even more, in 2017, a new Internet standard was proposed, which adds another layer of protection into the mix: <a href=\"https://datatracker.ietf.org/doc/html/rfc8212\">RFC8212</a> defines <code>Default External BGP (EBGP) Route Propagation Behavior without Policies</code> which pretty much tackles the exact issues we were facing.</p><p>This RFC updates the BGP-4 standard (<a href=\"https://datatracker.ietf.org/doc/html/rfc4271\">RFC4271</a>) which defines how BGP works and what vendors are expected to implement. On the Juniper operating system, JunOS, this can be activated by setting <code>defaults ebgp no-policy reject-always</code> on the <code>protocols bgp</code> hierarchy level starting with Junos OS Release 20.3R1. The <a href=\"https://github.com/bgp/RFC8212\">RFC8212 repository on GitHub</a> provides a good overview on the current implementation status of RFC8212 in common network vendor OSes and routing daemons.</p><p>If you are running an older version of JunOS, a similar effect can be achieved by defining a REJECT-ALL policy and setting this as import/export policy on the <code>protocols bgp</code> hierarchy level. Note that this will also affect iBGP sessions, which the solution above will have no impact on.</p><!--kg-card-begin: markdown--><pre><code>policy-statement REJECT-ALL {\n  then reject;\n}\n\nprotocol bgp {\n  import REJECT-ALL;\n  export REJECT-ALL;\n}\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"conclusion\">Conclusion</h3><p>We are sorry for leaking routes of prefixes which did not belong to Cloudflare or our customers and to network engineers who got paged as a result of this.</p><p>We have processes in place to make sure that changes to our infrastructure are reviewed before being executed, so potential issues can be spotted before they reach production. In this case, the review process failed to catch this configuration error. In response, we will increase our efforts to further our network automation, to fully derive the device configuration from an intended state.</p><p>While this configuration error was caused by human error, it could have been detected and mitigated significantly faster if the confirmation bias did not kick in, making the operator think the observed behavior was to be expected. This error underlines the importance of our existing efforts on training our people to be aware of biases we have in our life. This also serves as a great example on how confirmation bias can influence and impact our work and that we should question our conclusions (early).</p><p>It also shows how important protocols like RPKI are. Route leaks are something even experienced network operators can cause accidentally, and technical solutions are needed to reduce the impact of leaks whether they are intentional or the result of an error.</p>",
		"comment_id": "6214fa8a1b8fa8000b5ddbaf",
		"feature_image": "http://blog.cloudflare.com/content/images/2022/02/Route-Leaks-and-Confirmation-Biases-1.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2022-02-22T15:00:26.000+00:00",
		"updated_at": "2022-02-25T16:15:05.000+00:00",
		"published_at": "2022-02-23T13:59:26.000+00:00",
		"custom_excerpt": "On February 1, 2022, a configuration error on one of our routers caused a route leak of up to 2,000 Internet prefixes to one of our Internet transit providers. This leak lasted for 32 seconds and at a later time 7 seconds",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "6214fdab1b8fa8000b5ddbb7",
				"name": "Maximilian Wilhelm",
				"slug": "max",
				"profile_image": "http://blog.cloudflare.com/content/images/2022/02/max-inog-c.jpeg",
				"cover_image": null,
				"bio": "Linux Networking, Automation & IPv6 Evangelist",
				"website": "https://blog.sdn.clinic",
				"location": "Germany",
				"facebook": null,
				"twitter": "@BarbarossaTM",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/max/"
			}
		],
		"tags": [
			{
				"id": "62153ff71b8fa8000b5ddbc6",
				"name": "#BLOG-981",
				"slug": "hash-blog-981",
				"description": null,
				"feature_image": null,
				"visibility": "internal",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/404/"
			},
			{
				"id": "5d16450341acde0011a95151",
				"name": "BGP",
				"slug": "bgp",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/bgp/"
			},
			{
				"id": "5d16450341acde0011a95274",
				"name": "RPKI",
				"slug": "rpki",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/rpki/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			},
			{
				"id": "61614a31966cdd02a833bb28",
				"name": "Internet Traffic",
				"slug": "internet-traffic",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/internet-traffic/"
			},
			{
				"id": "5d16450341acde0011a9527b",
				"name": "Better Internet",
				"slug": "better-internet",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/better-internet/"
			}
		],
		"primary_author": {
			"id": "6214fdab1b8fa8000b5ddbb7",
			"name": "Maximilian Wilhelm",
			"slug": "max",
			"profile_image": "http://blog.cloudflare.com/content/images/2022/02/max-inog-c.jpeg",
			"cover_image": null,
			"bio": "Linux Networking, Automation & IPv6 Evangelist",
			"website": "https://blog.sdn.clinic",
			"location": "Germany",
			"facebook": null,
			"twitter": "@BarbarossaTM",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/max/"
		},
		"primary_tag": null,
		"url": "http://blog.cloudflare.com/route-leaks-and-confirmation-biases/",
		"excerpt": "On February 1, 2022, a configuration error on one of our routers caused a route leak of up to 2,000 Internet prefixes to one of our Internet transit providers. This leak lasted for 32 seconds and at a later time 7 seconds",
		"reading_time": 7,
		"access": true,
		"comments": false,
		"og_image": "http://blog.cloudflare.com/content/images/2022/02/Copy-of-Open-Graph-Images-Template--1200x627----Q42020-1.png",
		"og_title": null,
		"og_description": null,
		"twitter_image": "http://blog.cloudflare.com/content/images/2022/02/Copy-of-Open-Graph-Images-Template--1200x627----Q42020.png",
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": "On February 1, 2022, a configuration error on one of our routers caused a route leak of up to 2,000 Internet prefixes to one of our Internet transit providers. This leak lasted for 32 seconds and at a later time 7 seconds. ",
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	},
	"locale": "en-us"
}