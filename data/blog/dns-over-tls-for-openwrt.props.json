{
	"post": {
		"id": "5d16453b41acde0011a956e4",
		"uuid": "2bc35988-6637-44c9-a90e-06295ed16ea2",
		"title": "Privacy-Protecting Portable Router: Adding DNS-Over-TLS support to OpenWRT (LEDE) with Unbound",
		"slug": "dns-over-tls-for-openwrt",
		"html": "<!--kg-card-begin: markdown--><p><em>If you want to skip ahead to instructions, <a href=\"#settingupdnsovertls\">scroll to the next section</a>. But I, like a TLS handshake, am very verbose so please enjoy this opener.</em></p>\n<p>Imagine this scenario - I'm at a restaurant and need to have a private phone conversation but unfortunately my phone's battery is drained. To get around this problem, I borrow my friend's phone and dial the number - to protect my privacy I walk outside. When I'm done with the call, I come back inside and return the phone.</p>\n<p>Whilst the phone itself doesn't store the conversation I've had, it does have a log of the recently dialed number, if the friend from whom I borrowed the phone wanted to, they could easily see who I actually called - even if they don't specifically know the topic of conversation.</p>\n<p>Sometimes, the data about who you've spoken to can tell an aweful lot about the conversation - if someone was to call an emotional support hotline or a debt collector, you could probably infer a lot about the conversation from the caller ID.</p>\n<p>When we browse the internet, we use encryption to try and protect the conversations we have. When you connect to a website over HTTPS, a green padlock lights up on your browser and let's you know that your conversation is encrypted such that it is computationally difficult for an adversary sitting between you and the website's server to see what you're talking about.</p>\n<p>I've previously blogged about how, under certain circumstances, it is possible to <a href=\"http://blog.cloudflare.com/performing-preventing-ssl-stripping-a-plain-english-primer/\">strip away this this encryption</a> and the mitigations that websites can use to prevent this. Unfortunately, there is a far more fundamental problem to privacy online.</p>\n<p>As is common IT knowledge, before your browser makes a HTTP connection to a website (say, cloudflare.com), your client needs to make a DNS query to work out the IP Address where the HTTP connection should be made. The same is true for any other application layer protocol, when you connect using a hostname instead of an IP Address. For a primer on DNS, we have an article on <a href=\"https://www.cloudflare.com/learning/dns/what-is-dns/\">the basics of DNS</a> on our Learning Centre.</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/04/dns-lookup-diagram.png\" alt=\"dns-lookup-diagram\" loading=\"lazy\"></p>\n<p>Whilst encryption technologies have been fairly long-standing for HTTP itself, only recently have such encryption techniques been standardised for DNS. Chances are, if you don't know if your DNS traffic is encrypted - it isn't.</p>\n<p>In practice this means that when you connect to a website that uses HTTPS, even though your conversation is encrypted - someone able to intercept your connection is able to see what website you're looking for and (depending on how the site is secured) even manipulate the response to get you to communicate with a different server.</p>\n<p>This is particularly useful for evesdroppers; be they the network that's running the free Wi-Fi hotspot looking to sell your data to targetted advertisers or the hacker sipping on a latte whilst intercepting your network traffic (ironically dressed in a black hoodie and a balaclava).</p>\n<p>By switching your DNS resolver to use <a href=\"https://1.1.1.1/\">Cloudflare's DNS Resolver</a>, you get a faster browsing experience whilst ensuring that the people who run your DNS resolver aren't selling off that data to target you with ads. However, whilst Cloudflare Resolver supports both DNS-over-HTTPS and DNS-over-TLS, to make sure the connection between Cloudflare Resolver and you is encrypted, you may need to follow some additional configuration steps like enabling a <a href=\"https://developers.cloudflare.com/1.1.1.1/dns-over-https/cloudflared-proxy/\">DNS over HTTPS client</a>.</p>\n<p>This blog post explains how you can configure an OpenWRT router to encrypt outbound traffic to Cloudflare Resolver. This is particularly useful when you want to protect the traffic for the devices in house which may not support encrypted DNS protocols; such as your TV or <a href=\"http://blog.cloudflare.com/iot-security-anti-patterns/\">IoT enabled toaster</a>. Whilst local clients may still explicitly override your local DNS resolver on your router, many will default to using it.</p>\n<h3 id=\"openwrtlede\">OpenWRT (LEDE)</h3>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/04/IMG-3335-1.JPG\" alt=\"Router\" loading=\"lazy\"></p>\n<p>Over the weekend, prior to writing this post, I ordered a new wireless router, the GL.iNet GL-AR750. This router has a very small form-factor and is marketed as a &quot;Travel Router&quot; and can act as a Wi-Fi repeater as well as a traditional Wi-Fi Router. At it's longest edge, the router itself is around the length of my index finger:</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/04/IMG-3360.JPG\" alt=\"Router photo\" loading=\"lazy\"></p>\n<p>I didn't just order this specific router because of it's form-factor, it also comes pre-installed with OpenWRT - an embedded Linux-based operating system that's well suited for routers. In May 2016, OpenWRT was forked as LEDE (the Linux Embedded Development Environment) and was re-merged with the OpenWRT project in January 2018.</p>\n<p>For those of you without a router with LEDE pre-installed, you can follow along with this blog post on any other router that supports being flashed with the OpenWRT firmware; more information can be found on the <a href=\"https://openwrt.org/supported_devices\">OpenWRT Support Devices</a> page. Though, please be aware that, depending on your device, this may carry some risk.</p>\n<h3 id=\"supportfordnsovertlsorthelackof\">Support for DNS-over-TLS (or, the lack of)</h3>\n<p>The router I'm playing with has a configuration option to configure upstream DNS Resolver that it will use when a query isn't cached in it's own internal resolver. This local resolver is then suggested to clients that connect to the router.</p>\n<p>For the sake of experimentation - through the web UI, I am able to configure this router to use <code>1.1.1.1</code>, <code>1.0.0.1</code>, <code>2606:4700:4700::1111</code> and<br>\n<code>2606:4700:4700::1001</code> as the upsteam DNS servers (with the IPv6 addresses updated if the network doesn't support them):</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/04/Screen-Shot-2018-04-09-at-13.15.07.png\" alt=\"DNS Resolver configuration\" loading=\"lazy\"></p>\n<p>By connecting the router's <a href=\"https://www.cloudflare.com/learning/network-layer/what-is-a-wan/\">WAN</a> port to my computer, I am able to sniff traffic as it leaves the router by using Wireshark before it goes out to the actual WAN. When a DNS query isn't in my routers cache it is forwarded to <code>1.1.1.1</code>. As my router is sending these queries unecrypted instead of using DNS-over-TLS, I am able to see these DNS queries being sent around the internet in unencrypted form:</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/04/dns_unencrypted.png\" alt=\"dns_unencrypted\" loading=\"lazy\"></p>\n<p>Although Cloudflare Resolver supports DNS-over-TLS, unfortuantely my router doesn't and will simply send all queries unencrypted.</p>\n<h3 id=\"settingupdnsovertls\">Setting Up DNS-Over-TLS</h3>\n<p>By default, LEDE comes pre-installed using Dnsmasq as an internal resolver and therefore doesn't support DNS-over-TLS. So that we can get our requests encrypted, we're going to replace Dnsmasq with Unbound and odhcpd. I've based the steps I'm following from the very useful <a href=\"https://github.com/openwrt/packages/tree/master/net/unbound/files#unbound-and-odhcpd\">OpenWRT Unbound package documentation</a>.</p>\n<p>Before we can get started, we need to <a href=\"https://www.cloudflare.com/learning/access-management/what-is-ssh/\">SSH</a> into our router, if you're prompted for a password, this will likely be identical to the one you set up for the web portal:</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/04/Screen-Shot-2018-04-09-at-13.06.26.png\" alt=\"SSH to Router\" loading=\"lazy\"></p>\n<p>LEDE uses <code>opkg</code> as it's package manager of choice. Firstly, let's update the package list, then we install Unbound with Unbound-Control and the full version of odhcpd:</p>\n<pre><code>opkg update\nopkg install unbound odhcpd unbound-control\nopkg remove dnsmasq\n</code></pre>\n<p>Note that you can additionally install the Luci app for Unbound should you wish to control it with the standard user interface.</p>\n<pre><code>opkg install luci-app-unbound\n</code></pre>\n<p>As my router isn't currently running vanilla LEDE, it's user interface won't be altered if I was to install this and I haven't tested this module myself.</p>\n<p>With Unbound in place, we can add some configuration to ensure Unbound uses <code>1.1.1.1</code>, <code>1.0.0.1</code>, <code>2606:4700:4700::1111</code> and<br>\n<code>2606:4700:4700::1001</code> as the DNS resolvers with TLS encryption. I've done this by appending some configuration to <code>/etc/unbound/unbound_ext.conf</code> using Vim:</p>\n<pre><code>forward-zone:\n  name: &quot;.&quot;\n  forward-addr: 1.1.1.1@853                   \n  forward-addr: 1.0.0.1@853                             \n  forward-addr: 2606:4700:4700::1111@853\n  forward-addr: 2606:4700:4700::1001@853\n  forward-ssl-upstream: yes   \n</code></pre>\n<p>In the Unbound configuration file at <code>/etc/config/unbound</code>, I've added some required configuration parameters as outlined in the package documentation. In my case, I backed up the configuration file and simply used the following:</p>\n<pre><code>config unbound\n  option add_local_fqdn '1'\n  option add_wan_fqdn '1'\n  option dhcp_link 'odhcpd'\n  option dhcp4_slaac6 '1'\n  option domain 'lan'\n  option domain_type 'static'\n  option listen_port '53'\n  option rebind_protection '1'\n  option unbound_control '1'\n</code></pre>\n<p>If you do have additional parameters in the file, ensure that nothing overrides the parameters set - being especially cautious about the <code>unbound_control</code> parameter.</p>\n<p>I've also merged the following configuration with <code>/etc/config/dhcp</code> (leaving some existing entries alone):</p>\n<pre><code>config dhcp 'lan'\n        option dhcpv4 'server'\n        option dhcpv6 'server'\n        option interface 'lan'\n        option leasetime '12h'\n        option ra 'server'\n        option ra_management '1'\n\nconfig odhcpd 'odhcpd'\n        option maindhcp '1'\n        option leasefile '/var/lib/odhcpd/dhcp.leases'\n        option leasetrigger '/usr/lib/unbound/odhcpd.sh'\n...\n</code></pre>\n<p>Finally, we can enable autostart on Unbound and start it:</p>\n<pre><code>service unbound enable\nservice unbound start\n</code></pre>\n<p>Here's the proof of the pudding; when we intercept DNS queries between our router and the wider internet, we'll notice they are encrypted with TLS v1.2:</p>\n<p><img src=\"http://blog.cloudflare.com/content/images/2018/04/dns_encrypted.png\" alt=\"DNS Encrypted\" loading=\"lazy\"></p>\n<h4 id=\"conclusion\">Conclusion</h4>\n<p>In this blog post, we've discussed how encrypting your DNS traffic can help privacy protect your internet browsing. By replacing Dnsmasq with Unbound, we are able to allow OpenWRT to take advantage of DNS-over-TLS to help encrypt our web traffic.</p>\n<!--kg-card-end: markdown-->",
		"comment_id": "5acb5bf19435090022522597",
		"feature_image": "http://blog.cloudflare.com/content/images/2018/04/IMG-3335.JPG",
		"featured": false,
		"visibility": "public",
		"created_at": "2018-04-09T13:26:25.000+01:00",
		"updated_at": "2023-08-24T20:45:37.000+01:00",
		"published_at": "2018-04-09T20:20:32.000+01:00",
		"custom_excerpt": "This blog post explains how you can configure an OpenWRT router to encrypt DNS traffic to Cloudflare Resolver using DNS-over-TLS.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f6e",
				"name": "Junade Ali",
				"slug": "junade-ali",
				"profile_image": "http://blog.cloudflare.com/content/images/2017/03/G1VwuaxB.jpg",
				"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-8.png",
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@IcyApril",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/junade-ali/"
			}
		],
		"tags": [
			{
				"id": "5d16450341acde0011a9524b",
				"name": "1.1.1.1",
				"slug": "1-1-1-1",
				"description": "1.1.1.1 DNS Resolver (EN)",
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/1-1-1-1/"
			},
			{
				"id": "5d16450341acde0011a951e7",
				"name": "Privacy",
				"slug": "privacy",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/privacy/"
			},
			{
				"id": "5d16450341acde0011a951af",
				"name": "Encryption",
				"slug": "encryption",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/encryption/"
			},
			{
				"id": "5d16450341acde0011a95147",
				"name": "TLS",
				"slug": "tls",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/tls/"
			},
			{
				"id": "5d16450341acde0011a951d6",
				"name": "DNS",
				"slug": "dns",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/dns/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f6e",
			"name": "Junade Ali",
			"slug": "junade-ali",
			"profile_image": "http://blog.cloudflare.com/content/images/2017/03/G1VwuaxB.jpg",
			"cover_image": "http://blog.cloudflare.com/content/images/2018/08/general@2x-8.png",
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@IcyApril",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/junade-ali/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a9524b",
			"name": "1.1.1.1",
			"slug": "1-1-1-1",
			"description": "1.1.1.1 DNS Resolver (EN)",
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/1-1-1-1/"
		},
		"url": "http://blog.cloudflare.com/dns-over-tls-for-openwrt/",
		"excerpt": "This blog post explains how you can configure an OpenWRT router to encrypt DNS traffic to Cloudflare Resolver using DNS-over-TLS.",
		"reading_time": 7,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	},
	"locale": "en-us"
}