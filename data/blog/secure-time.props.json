{
	"locale": "en-us",
	"post": {
		"access": true,
		"authors": [
			{
				"id": "5d5ae4e1143b21050502082b",
				"name": "Aanchal Malhotra",
				"slug": "aanchal",
				"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2019/08/0-1.jpeg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/aanchal/"
			}
		],
		"canonical_url": null,
		"codeinjection_foot": null,
		"codeinjection_head": null,
		"comment_id": "5d0bcdb544e1b900384a1aee",
		"comments": false,
		"created_at": "2019-06-20T19:17:25.000+01:00",
		"custom_excerpt": "Cloudflare has always been a leader in deploying secure versions of insecure Internet protocols and making them available for free for anyone to use. In 2014, we launched one of the world’s first free, secure HTTPS service (Universal SSL) to go along with our existing free HTTP plan. ",
		"custom_template": null,
		"email_subject": null,
		"excerpt": "Cloudflare has always been a leader in deploying secure versions of insecure Internet protocols and making them available for free for anyone to use. In 2014, we launched one of the world’s first free, secure HTTPS service (Universal SSL) to go along with our existing free HTTP plan. ",
		"feature_image": "http://blog.cloudflare.com/content/images/2019/06/time-service@3x.png",
		"feature_image_alt": null,
		"feature_image_caption": null,
		"featured": false,
		"frontmatter": null,
		"html": "<figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2019/06/time-service@3x-1.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>Cloudflare has always been a leader in deploying secure versions of insecure Internet protocols and making them available for free for anyone to use. In 2014, we launched one of the world’s first free, secure HTTPS service (<a href=\"http://blog.cloudflare.com/introducing-universal-ssl/\">Universal SSL</a>) to go along with our existing free HTTP plan. When we launched the <a href=\"http://blog.cloudflare.com/announcing-1111/\">1.1.1.1 DNS resolver</a>, we also supported the new secure versions of DNS (<a href=\"https://developers.cloudflare.com/1.1.1.1/dns-over-https/\">DNS over HTTPS</a> and <a href=\"https://developers.cloudflare.com/1.1.1.1/dns-over-tls/\">DNS over TLS</a>). Today, as part of <a href=\"http://blog.cloudflare.com/welcome-to-crypto-week-2019/\">Crypto Week 2019</a>, we are doing the same thing for the Network Time Protocol (NTP), the dominant protocol for obtaining time over the Internet.</p><p>This announcement is personal for me. I've spent the last four years identifying and fixing vulnerabilities in time protocols. Today I’m proud to help introduce a service that would have made my life from 2015 through 2019 a whole lot harder: <a href=\"https://cloudflare.com/time\">time.cloudflare.com</a>, a free time service that supports both NTP and the emerging Network Time Security (NTS) protocol for securing NTP. Now, anyone can get time securely from all our datacenters in 180 cities around the world.</p><p>You can use time.cloudflare.com as the source of time for all your devices today with <a href=\"https://cloudflare.com/time\">NTP</a>, while NTS clients are still under development. <a href=\"https://blog.ntpsec.org/2019/01/02/starting-nts.html\">NTPsec</a> includes experimental support for NTS. If you’d like to get updates about NTS client development, email us asking to join at <a href=\"mailto:time-services@cloudflare.com\">time-services@cloudflare.com</a>. To use NTS to secure time synchronization, reach out to your vendors and inquire about NTS support.</p><h3 id=\"a-small-tale-of-time-first\">A small tale of “time” first</h3><p>Back in 2015, as a fresh graduate student interested in Internet security, I came across this mostly esoteric Internet protocol called the<a href=\"https://tools.ietf.org/html/rfc5905\"> Network Time Protocol</a> (NTP). NTP was designed to synchronize time between computer systems communicating over unreliable and variable-latency network paths. I was actually studying Internet routing security, in particular attacks against the Resource Public Key Infrastructure (<a href=\"http://blog.cloudflare.com/rpki/\">RPKI</a>), and kept hitting a dead end because of a cache-flushing issue. As a last-ditch effort I decided to roll back the time on my computer manually, and the attack worked.</p><p>I had discovered the importance of time to computer security. Most cryptography uses timestamps to limit certificate and signature validity periods. When connecting to a website, knowledge of the correct time ensures that the certificate you see is current and is not compromised by an attacker. When looking at logs, time synchronization makes sure that events on different machines can be correlated accurately. Certificates and logging infrastructure can break with minutes, hours or months of time difference. Other applications like caching and Bitcoin are sensitive to even very small differences in time on the order of seconds.</p><p>Two factor authentication using rolling numbers also rely on accurate clocks. This then creates the need for computer clocks to have access to reasonably accurate time that is securely delivered. NTP is the most commonly used protocol for time synchronization on the Internet. If an attacker can leverage vulnerabilities in NTP to manipulate time on computer clocks, they can undermine the security guarantees provided by these systems.</p><p>Motivated by the severity of the issue, I decided to look deeper into NTP and its security. Since the need for synchronizing time across networks was visible early on, NTP is a very old protocol. The first standardized version of NTP dates back to 1985, while the latest NTP version 4 was completed in 2010 (see <a href=\"https://tools.ietf.org/html/rfc5905\">RFC5905</a>). </p><p>In its most common mode, NTP works by having a client send a query packet out to an NTP server that then responds with its clock time. The client then computes an estimate of the difference between its clock and the remote clock and attempts to compensate for network delay in this. NTP client queries multiple servers and implements algorithms to select the best estimate, and rejects clearly wrong answers.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2019/06/VGltZSBoYW5kc2hha2UgLnBuZw--.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>Surprisingly enough, research on NTP and its security was not very active at the time. Before this, in late 2013 and early 2014, high-profile Distributed Denial of Service (DDoS) attacks were carried out by amplifying traffic from NTP servers; attackers able to spoof a victim’s IP address were able to funnel copious amounts of traffic overwhelming the targeted domains. This caught the attention of some researchers. However, these attacks did not exploit flaws in the fundamental protocol design. The attackers simply used NTP as a boring bandwidth multiplier. Cloudflare wrote extensively about these attacks and you can read about it <a href=\"http://blog.cloudflare.com/understanding-and-mitigating-ntp-based-ddos-attacks/\">here</a>, <a href=\"http://blog.cloudflare.com/technical-details-behind-a-400gbps-ntp-amplification-ddos-attack/\">here</a>, and <a href=\"http://blog.cloudflare.com/good-news-vulnerable-ntp-servers-closing-down/\">here</a>.</p><p>I found several flaws in the core NTP protocol design and its implementation that can be exploited by network attackers to launch much more devastating attacks by shifting time or denying service to NTP clients. What is even more concerning was that these attackers <em>do not need to be a Monster-In-The-Middle (MITM),</em> where an attacker can modify traffic between the client and the server, to mount these attacks. A set of recent <a href=\"http://www.cs.bu.edu/~goldbe/papers/NTPattack.pdf\">papers</a> authored by one of us showed that an off-path attacker present anywhere on the network can shift time or deny service to NTP clients. One of the ways this is done is by abusing IP fragmentation. </p><p>Fragmentation is a feature of the IP layer where a large packet is chopped into several smaller fragments so that they can pass through the networks that do not support large packets. Basically, any random network element on the path between the client and the server can send a special “<a href=\"https://en.wikipedia.org/wiki/Path_MTU_Discovery\">ICMP fragmentation needed</a>” packet to the server telling them to fragment the packet to say X bytes. Since the server is not expected to know the IP addresses of all the network elements on its path, this packet can be sent from any source IP. </p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"http://blog.cloudflare.com/content/images/2019/06/time-fragmentation-attack-@2x.png\" class=\"kg-image\" alt loading=\"lazy\"><figcaption>Fragmentation attack against NTP</figcaption></figure><p>In our attack, the attacker exploits this feature to make the NTP server fragment its NTP response packet for the victim NTP client. The attacker then spoofs carefully crafted overlapping response fragments from off-path that contain the attacker’s timestamp values. By further exploiting the reassembly policies for overlapping fragments the attacker fools the client into assembling a packet with legitimate fragments and the attacker’s insertions. This evades the authenticity checks that rely on values in the original parts of the packet.</p><h3 id=\"ntp-s-past-and-future\">NTP’s past and future</h3><p>At the time of NTP’s creation back in 1985, there were two main design goals for the service provided by NTP. First, they wanted it to be robust enough to handle networking errors and equipment failures. So it was designed as a service where client can gather timing samples from multiple peers over multiple communication paths and then average them to get more accurate measurement.</p><p>The second goal was load distribution. While every client would like to talk to time servers which are directly attached to high precision time-keeping devices like atomic clocks, GPS, etc, and thus have more accurate time, the capacity of those devices is only so much. So, to reduce protocol load on the network, the service was designed in a hierarchical manner. At the top of the hierarchy are servers connected to non-NTP time sources, that distribute time to other servers, that further distribute time to even more servers. Most computers connect to either these second or third level servers.</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"http://blog.cloudflare.com/content/images/2019/06/time-stratum-@2x.png\" class=\"kg-image\" alt loading=\"lazy\"><figcaption>The stratum hierarchy of NTP</figcaption></figure><p>The original specification (<a href=\"https://tools.ietf.org/html/rfc958\">RFC 958</a>) also states the \"non-goals\" of the protocol, namely peer authentication and data integrity. Security wasn’t considered critical in the relatively small and trusting early Internet, and the protocols and applications that rely on time for security didn’t exist then. Securing NTP came second to improving the protocol and implementation.</p><p>As the Internet has grown, more and more core Internet protocols have been secured through cryptography to protect against abuse: TLS, DNSSEC, RPKI are all steps toward ensuring the security of all communications on the Internet. These protocols use “time” to provide security guarantees. Since security of Internet hinges on the security of NTP, it becomes even more important to secure NTP.</p><p>This research perspicuously showed the need for securing NTP. As a result, there was more work in the standards body for Internet Protocols, the Internet Engineering Task Force (IETF) towards cryptographically authenticating NTP. At the time, even though NTPv4 supported both symmetric and asymmetric cryptographic authentication, it was rarely used in practice due to limitations of both approaches.</p><p>NTPv4’s symmetric approach to securing synchronization doesn’t scale as the symmetric key must be pre-shared and configured manually: imagine if every client on earth needed a special secret key with the servers they wanted to get time from, the organizations that run those servers would have to do a great deal of work managing keys. This makes this solution quite cumbersome for public servers that must accept queries from arbitrary clients. For context, NIST operates important public time servers and distributes symmetric keys only to users that register, once per year, via US mail or facsimile; the US Naval Office does something similar.</p><p>The first attempt to solve the problem of key distribution was the Autokey protocol, described in<a href=\"https://tools.ietf.org/html/rfc5906\"> RFC 5906</a>. Many public NTP servers do not support Autokey (e.g., the NIST and USNO time servers, and many servers in pool.ntp.org). The protocol is badly <a href=\"https://www.semanticscholar.org/paper/Analysis-of-the-NTP-Autokey-Procedures-R%C3%B6ttger/a1781712cec129d5c7311a915e4d0076117ee33f\">broken</a> as any network attacker can trivially retrieve the secret key shared between the client and server. The authentication mechanisms are non-standard and quite idiosyncratic. </p><p>The future of the Internet is a secure Internet, which means an authenticated and encrypted Internet. But until now NTP remains mostly insecure, despite continuing protocol development. In the meantime more and more services depended on it.<br></p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"http://blog.cloudflare.com/content/images/2019/06/timeline-@2x.png\" class=\"kg-image\" alt loading=\"lazy\"><figcaption>Timeline of NTP development</figcaption></figure><h3 id=\"fixing-the-problem\">Fixing the problem</h3><p>Following the release of our paper, there was a lot more enthusiasm in the NTP community at standards body for Internet Protocols, the Internet Engineering Task Force (IETF) and outside for improving the state of NTP security. As a short-term fix, the ntpd reference implementation software was patched for several vulnerabilities that we found. And for a long-term solution, the community realized the dire need for a secure, authenticated time synchronization protocol based on public-key cryptography, which enables encryption and authentication without requiring the sharing of key material beforehand. Today we have a <a href=\"https://tools.ietf.org/html/draft-ietf-ntp-using-nts-for-ntp-19\">Network Time Security </a>(NTS) draft at the IETF, thanks to the work of dozens of dedicated individuals at the NTP working group.</p><p>In a nutshell, the NTS protocol is divided into two-phases. The first phase is the NTS key exchange that establishes the necessary key material between the NTP client and the server. This phase uses the Transport Layer Security (TLS) handshake and relies on the same public key infrastructure as the web. Once the keys are exchanged, the TLS channel is closed and the protocol enters the second phase. In this phase the results of that TLS handshake are used to authenticate NTP time synchronization packets via extension fields. The interested reader can find more information in the Internet<a href=\"https://datatracker.ietf.org/doc/draft-ietf-ntp-using-nts-for-ntp/\"> draft</a>.</p><h3 id=\"cloudflare-s-new-service\">Cloudflare’s new service</h3><p>Today, Cloudflare announces its free time service to anyone on the Internet. We intend to solve the limitations with the existing public time services, in particular by increasing availability, robustness and security.</p><p>We use our global network to provide an advantage in latency and accuracy. Our 180 locations around the world all use anycast to automatically route your packets to our closest server. All of our servers are synchronized with stratum 1 time service providers, and then offer NTP to the general public, similar to how other public NTP providers function. The biggest source of inaccuracy for time synchronization protocols is the network asymmetry, leading to a difference in travel times between the client and server and back from the server to the client. However, our servers’ proximity to users means there will be less jitter — a measurement of variance in latency on the network — and possible asymmetry in packet paths. We also hope that in regions with a dearth of NTP servers our service significantly improves the capacity and quality of the NTP ecosystem.</p><p>Cloudflare servers obtain authenticated time by using a shared symmetric key with our stratum 1 upstream servers. These upstream servers are geographically spread and ensure that our servers have accurate time in our datacenters. But this approach to securing time doesn’t scale. We had to exchange emails individually with the organizations that run stratum 1 servers, as well as negotiate permission to use them. While this is a solution for us, it isn’t a solution for everyone on the Internet.</p><p>As a secure time service provider Cloudflare is proud to announce that we are among the first to offer a free and secure public time service based on Network Time Security. We have implemented the latest<a href=\"https://datatracker.ietf.org/doc/draft-ietf-ntp-using-nts-for-ntp/\"> NTS IETF draft</a>. As this draft progresses through the Internet standards process we are committed to keeping our service current.</p><p>Most NTP implementations are currently working on NTS support, and we expect that the next few months will see broader introduction as well as advancement of the current draft protocol to an RFC. Currently we have interoperability with NTPsec who have implemented <a href=\"https://tools.ietf.org/html/draft-ietf-ntp-using-nts-for-ntp-18\">draft 18</a> of NTS. We hope that our service will spur faster adoption of this important improvement to Internet security. Because this is a new service with no backwards compatibility requirements, we are requiring the use of TLS v1.3 with it to promote adoption of the most secure version of TLS.</p><h3 id=\"use-it\">Use it</h3><p>If you have an NTS client, point it at time.cloudflare.com:1234. Otherwise point your NTP client at time.cloudflare.com. More details on configuration are available in the <a href=\"https://developers.cloudflare.com/time-services/\">developer docs</a>.</p><h3 id=\"conclusion\">Conclusion</h3><p>From our<a href=\"https://developers.cloudflare.com/roughtime/docs/\"> Roughtime</a> service to<a href=\"http://blog.cloudflare.com/introducing-universal-ssl/\"> Universal SSL</a> Cloudflare has played a role in expanding the availability and use of secure protocols. Now with our free public time service we provide a trustworthy, widely available alternative to another insecure legacy protocol. It’s all a part of our mission to help make a faster, reliable, and more secure Internet for everyone.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2019/06/crypto-week-2019-header-circle@2x-3.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p><em><em>Thanks to the many other engineers who worked on this project, including <a href=\"https://github.com/wbl/\">Watson Ladd</a>, <a href=\"http://blog.cloudflare.com/author/gabbi/\">Gabbi Fisher</a>, and <a href=\"http://blog.cloudflare.com/author/dina/\">Dina Kozlov</a></em></em></p><hr><p><em>This post is by <a href=\"https://scholar.google.com/citations?user=WVff3wsAAAAJ\">Aanchal Malhotra</a>, a Graduate Research Assistant at Boston University and former Cloudflare intern on the Cryptography team.</em></p>",
		"id": "5d16453b41acde0011a9586f",
		"meta_description": null,
		"meta_title": null,
		"og_description": null,
		"og_image": null,
		"og_title": null,
		"primary_author": {
			"id": "5d5ae4e1143b21050502082b",
			"name": "Aanchal Malhotra",
			"slug": "aanchal",
			"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2019/08/0-1.jpeg",
			"cover_image": null,
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": null,
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/aanchal/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a95275",
			"name": "Crypto Week",
			"slug": "crypto-week",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/crypto-week/"
		},
		"published_at": "2019-06-21T14:00:00.000+01:00",
		"reading_time": 10,
		"slug": "secure-time",
		"tags": [
			{
				"id": "5d16450341acde0011a95275",
				"name": "Crypto Week",
				"slug": "crypto-week",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/crypto-week/"
			},
			{
				"id": "5d16450341acde0011a95277",
				"name": "Cryptography",
				"slug": "cryptography",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/cryptography/"
			},
			{
				"id": "5d16450341acde0011a951ee",
				"name": "Product News",
				"slug": "product-news",
				"description": "Product News (EN)",
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Product-News-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Product News",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Product News'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/product-news/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			},
			{
				"id": "5fce48a395ca4301baec175e",
				"name": "Research",
				"slug": "research",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/research/"
			}
		],
		"title": "Introducing time.cloudflare.com",
		"twitter_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"updated_at": "2023-10-24T21:00:48.000+01:00",
		"url": "http://blog.cloudflare.com/secure-time/",
		"uuid": "f6558b14-3f32-4755-bf38-887aed5b211f",
		"visibility": "public"
	}
}