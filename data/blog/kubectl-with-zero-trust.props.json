{
	"locale": "en-us",
	"localesAvailable": [
		"zh-cn",
		"ja-jp",
		"ko-kr",
		"es-es"
	],
	"post": {
		"authors": [
			{
				"name": "Terin Stock",
				"slug": "terin-stock",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/32boe5rGxrPP5kgQgNIN0K/15cbaa98dea11dc328cbea2d39139402/terin-stock.png",
				"location": null,
				"website": null,
				"twitter": "@terinjokes",
				"facebook": null
			}
		],
		"excerpt": "Using Cloudflare Zero Trust with Kubernetes to enable kubectl without SOCKS proxies",
		"feature_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/1VyG2SIjHb0EIwsuW3RIm9/795cafb15f2ef54d7882bdadb2d5c85e/kubectl-with-zero-trust.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/6qFUylvIuAuqfStdkrEDvb/72ca8fdba1a1a1d5069cf3d7f4a5d368/Proxyless-KubeCTL-Support.png\" alt=\"Kubectl with Cloudflare Zero Trust\" class=\"kg-image\" width=\"1600\" height=\"900\" loading=\"lazy\"/>\n            \n            </figure><p>Cloudflare is a heavy user of Kubernetes for engineering workloads: it&#39;s used to power the backend of our APIs, to handle batch-processing such as analytics aggregation and bot detection, and engineering tools such as our CI/CD pipelines. But between load balancers, API servers, etcd, ingresses, and pods, the surface area exposed by Kubernetes can be rather large.</p><p>In this post, we share a little bit about how our engineering team dogfoods Cloudflare Zero Trust to secure Kubernetes â€” and enables kubectl without proxies.</p><h2>Our General Approach to Kubernetes Security</h2><p>As part of our security measures, we heavily limit what can access our clusters over the network. Where a network service is exposed, we add additional protections, such as requiring Cloudflare Access authentication or Mutual TLS (or both) to access ingress resources.</p><p>These network restrictions include access to the cluster&#39;s API server. Without access to this, engineers at Cloudflare would not be able to use tools like kubectl to introspect their team&#39;s resources. While we believe Continuous Deployments and GitOps are best practices, allowing developers to use the Kubernetes API aids in troubleshooting and increasing developer velocity. Not having access would have been a deal breaker.</p><p>To satisfy our security requirements, we&#39;re using Cloudflare Zero Trust, and we wanted to share how we&#39;re using it, and the process that brought us here.</p><h3>Before Zero Trust</h3><p>In the world before <a href=\"https://www.cloudflare.com/learning/security/glossary/what-is-zero-trust/\">Zero Trust</a>, engineers could access the Kubernetes API by connecting to a VPN appliance. While this is common across the industry, and it does allow access to the API, it also dropped engineers as clients into the internal network: they had much more network access than necessary.</p><p>We weren&#39;t happy with this situation, but it was the status quo for several years. At the beginning of 2020, we retired our VPN and thus the Kubernetes team needed to find another solution.</p><h3>Kubernetes with Cloudflare Tunnels</h3><p>At the time we worked closely with the team developing Cloudflare Tunnels to add support for handling <a href=\"/releasing-kubectl-support-in-access/\">kubectl connections using Access</a> and cloudflared tunnels.</p><p>While this worked for our engineering users, it was a significant hurdle to on-boarding new employees. Each Kubernetes cluster required its own tunnel connection from the engineer&#39;s device, which made shuffling between clusters annoying. While kubectl supported connecting through SOCKS proxies, this support was not universal to all tools in the Kubernetes ecosystem.</p><p>We continued using this solution internally while we worked towards a better solution.</p><h2>Kubernetes with Zero Trust</h2><p>Since the launch of Cloudflare One, we&#39;ve been dogfooding the Zero Trust agent in various configurations. At first we&#39;d been using it to implement secure <a href=\"https://www.cloudflare.com/learning/dns/what-is-dns/\">DNS</a> with 1.1.1.1. As time went on, we began to use it to dogfood additional Zero Trust features.</p><p>We&#39;re now leveraging the private network routing in Cloudflare Zero Trust to allow engineers to access the Kubernetes APIs without needing to setup cloudflared tunnels or configure kubectl and other Kubernetes ecosystem tools to use tunnels. This isn&#39;t something specific to Cloudflare, you can do this for your team today!</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/3BYeJk98ZxUpcycaPOjfOi/23316dd89e322e0150c42af2ef0bbe94/Kubectl-WIth-Warp-Diagram--2-.png\" alt=\"\" class=\"kg-image\" width=\"1069\" height=\"610\" loading=\"lazy\"/>\n            \n            </figure><h3>Configuring Zero Trust</h3><p>We use a <a href=\"https://github.com/cloudflare/terraform-provider-cloudflare\">configuration management tool</a> for our Zero Trust configuration to enable infrastructure-as-code, which we&#39;ve adapted below. However, the same configuration can be achieved using the Cloudflare Zero Trust dashboard.</p><p>The first thing we need to do is create a new tunnel. This tunnel will be used to connect the Cloudflare edge network to the Kubernetes API. We run the tunnel endpoints within Kubernetes, using configuration shown later in this post.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">resource \"cloudflare_argo_tunnel\" \"k8s_zero_trust_tunnel\" {\n  account_id = var.account_id\n  name       = \"k8s_zero_trust_tunnel\"\n  secret     = var.tunnel_secret\n}</pre></code>\n            <p>The &quot;tunnel_secret&quot; secret should be a 32-byte random number, which you should temporarily save as we&#39;ll reuse it later for the Kubernetes setup later.</p><p>After we&#39;ve created the tunnel, we need to create the routes so the Cloudflare network knows what traffic to send through the tunnel.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">resource \"cloudflare_tunnel_route\" \"k8s_zero_trust_tunnel_ipv4\" {\n  account_id = var.account_id\n  tunnel_id  = cloudflare_argo_tunnel.k8s_zero_trust_tunnel.id\n  network    = \"198.51.100.101/32\"\n  comment    = \"Kubernetes API Server (IPv4)\"\n}\n \nresource \"cloudflare_tunnel_route\" \"k8s_zero_trust_tunnel_ipv6\" {\n  account_id = var.account_id\n  tunnel_id  = cloudflare_argo_tunnel.k8s_zero_trust_tunnel.id\n  network    = \"2001:DB8::101/128\"\n  comment    = \"Kubernetes API Server (IPv6)\"\n}</pre></code>\n            <p>We support accessing the Kubernetes API via both IPv4 and IPv6 addresses, so we configure routes for both. If you&#39;re connecting to your API server via a hostname, these IP addresses should match what is returned via a DNS lookup.</p><p>Next we&#39;ll configure settings for Cloudflare Gateway so that it&#39;s compatible with the API servers and clients.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">resource \"cloudflare_teams_list\" \"k8s_apiserver_ips\" {\n  account_id = var.account_id\n  name       = \"Kubernetes API IPs\"\n  type       = \"IP\"\n  items      = [\"198.51.100.101/32\", \"2001:DB8::101/128\"]\n}\n \nresource \"cloudflare_teams_rule\" \"k8s_apiserver_zero_trust_http\" {\n  account_id  = var.account_id\n  name        = \"Don't inspect Kubernetes API\"\n  description = \"Allow connections from kubectl to API\"\n  precedence  = 10000\n  action      = \"off\"\n  enabled     = true\n  filters     = [\"http\"]\n  traffic     = format(\"any(http.conn.dst_ip[*] in $%s)\", replace(cloudflare_teams_list.k8s_apiserver_ips.id, \"-\", \"\"))\n}</pre></code>\n            <p>As we use mutual TLS between clients and the API server, and not all the traffic between kubectl and the API servers are HTTP, we&#39;ve disabled HTTP inspection for these connections.</p><p>You can pair these rules with additional Zero Trust rules, such as <a href=\"https://developers.cloudflare.com/cloudflare-one/identity/devices/\">device attestation</a>, <a href=\"https://developers.cloudflare.com/cloudflare-one/policies/filtering/enforce-sessions/\">session lifetimes</a>, and <a href=\"https://developers.cloudflare.com/cloudflare-one/policies/filtering/identity-selectors/\">user and group</a> access policies to further customize your security.</p><h3>Deploying Tunnels</h3><p>Once you have your tunnels created and configured, you can deploy their endpoints into your network. We&#39;ve chosen to deploy the tunnels as pods, as this allows us to use Kubernetes&#39;s deployment strategies for rolling out upgrades and handling node failures.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: tunnel-zt\n  namespace: example\n  labels:\n    tunnel: api-zt\ndata:\n  config.yaml: |\n    tunnel: 8e343b13-a087-48ea-825f-9783931ff2a5\n    credentials-file: /opt/zt/creds/creds.json\n    metrics: 0.0.0.0:8081\n    warp-routing:\n        enabled: true</pre></code>\n            <p>This creates a Kubernetes ConfigMap with a basic configuration that enables WARP routing for the tunnel ID specified. You can get this tunnel ID from your configuration management system, the Cloudflare Zero Trust dashboard, or by running the following command from another device logged into the same account.</p><p><code>cloudflared tunnel list</code></p><p>Next, we&#39;ll need to create a secret for our tunnel credentials. While you should use a secret management system, for simplicity we&#39;ll create one directly here.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">jq -cn --arg accountTag $CF_ACCOUNT_TAG \\\n       --arg tunnelID $CF_TUNNEL_ID \\\n       --arg tunnelName $CF_TUNNEL_NAME \\\n       --arg tunnelSecret $CF_TUNNEL_SECRET \\\n   '{AccountTag: $accountTag, TunnelID: $tunnelID, TunnelName: $tunnelName, TunnelSecret: $tunnelSecret}' | \\\nkubectl create secret generic -n example tunnel-creds --from-file=creds.json=/dev/stdin</pre></code>\n            <p>This creates a new secret &quot;tunnel-creds&quot; in the &quot;example&quot; namespace with the credentials file the tunnel expects.</p><p>Now we can deploy the tunnels themselves. We deploy multiple replicas to ensure some are always available, even while nodes are being drained.</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    tunnel: api-zt\n  name: tunnel-api-zt\n  namespace: example\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      tunnel: api-zt\n  strategy:\n    rollingUpdate:\n      maxSurge: 0\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        tunnel: api-zt\n    spec:\n      containers:\n        - args:\n            - tunnel\n            - --config\n            - /opt/zt/config/config.yaml\n            - run\n          env:\n            - name: GOMAXPROCS\n              value: \"2\"\n            - name: TZ\n              value: UTC\n          image: cloudflare/cloudflared:2022.5.3\n          livenessProbe:\n            failureThreshold: 1\n            httpGet:\n              path: /ready\n              port: 8081\n            initialDelaySeconds: 10\n            periodSeconds: 10\n          name: tunnel\n          ports:\n            - containerPort: 8081\n              name: http-metrics\n          resources:\n            limits:\n              cpu: \"1\"\n              memory: 100Mi\n          volumeMounts:\n            - mountPath: /opt/zt/config\n              name: config\n              readOnly: true\n            - mountPath: /opt/zt/creds\n              name: creds\n              readOnly: true\n      volumes:\n        - secret:\n            name: tunnel-creds\n          name: creds\n        - configMap:\n            name: tunnel-api-zt\n          name: config</pre></code>\n            <h2>Using Kubectl with Cloudflare Zero Trust</h2>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/2BGV6YJLH0Hnt1vh19F2lC/5db12e057736897dcc66bd3639a10e10/Screen-Shot-2022-06-23-at-3.43.37-PM.png\" alt=\"Screenshot of the Cloudflare WARP app showing it connected to Teams\" class=\"kg-image\" width=\"2000\" height=\"1340\" loading=\"lazy\"/>\n            \n            </figure><p>After deploying the Cloudflare Zero Trust agent, members of your team can now access the Kubernetes API without needing to set up any special SOCKS tunnels!</p>\n            <pre class=\"language-bash\"><code class=\"language-bash\">kubectl version --short\nClient Version: v1.24.1\nServer Version: v1.24.1</pre></code>\n            <h2>What&#39;s next?</h2><p>If you try this out, send us your feedback! We&#39;re continuing to improve Zero Trust for non-HTTP workflows.</p>",
		"id": "4VWDm5LM1jLa6cjopWrCRu",
		"localeList": {
			"name": "Kubectl with Cloudflare Zero Trust Config",
			"enUS": "English for Locale",
			"zhCN": "Translated for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "Translated for Locale",
			"koKR": "Translated for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "Translated for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "Using Cloudflare Zero Trust with Kubernetes to enable kubectl without SOCKS proxies",
		"metadata": {
			"title": "Kubectl with Cloudflare Zero Trust",
			"description": "Using Cloudflare Zero Trust with Kubernetes to enable kubectl without SOCKS proxies",
			"imgPreview": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/6Rul71o5iZXWdnrEb3zlWd/217f3c3e6e0ef753b8df968633191cd0/kubectl-with-zero-trust-PTRhRl.png"
		},
		"primary_author": {},
		"published_at": "2022-06-24T15:08:51.000+01:00",
		"reading_time": 5,
		"slug": "kubectl-with-zero-trust",
		"tags": [
			{
				"id": "6bljxh2niQ2pK6vN9pv8JH",
				"name": "Cloudflare One Week",
				"slug": "cloudflare-one-week"
			},
			{
				"id": "6Mp7ouACN2rT3YjL1xaXJx",
				"name": "Security",
				"slug": "security"
			},
			{
				"id": "J61Eszqn98amrYHq4IhTx",
				"name": "Zero Trust",
				"slug": "zero-trust"
			},
			{
				"id": "3Qpksw30KF5bmGKLdvbsm1",
				"name": "Kubernetes",
				"slug": "kubernetes"
			}
		],
		"title": "Kubectl with Cloudflare Zero Trust",
		"updated_at": "2024-08-27T01:51:37.755Z",
		"url": "https://blog.cloudflare.com/kubectl-with-zero-trust"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.blurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}