{
	"initialReadingTime": "7",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "Talha Paracha",
				"slug": "talha",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/6NFYvpB2PxARyxbZJKdJd8/4c9975f6343a9730710a7928a4958e74/talha.jpeg",
				"location": null,
				"website": "https://talhaparacha.com/",
				"twitter": "@paraacha",
				"facebook": null
			},
			{
				"name": "Suleman Ahmad",
				"slug": "suleman",
				"bio": null,
				"profile_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/1WnbvI0pMk4oVLXHdvpIqH/a4c2ea010af4e690203f996a1d876a0b/suleman.png",
				"location": "Austin, TX",
				"website": null,
				"twitter": "@sulemanahmadd",
				"facebook": null
			}
		],
		"excerpt": "Real world experiments for evaluating connection coalescing effects.",
		"feature_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/7DzcgyofntOSaQQlIqBYyq/04117008a319b05a645384894df6def3/connection-coalescing-experiments.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/3ZsTPnkr2T9etYYX57AwcJ/0455f2e0152bc420e29615d6faff15aa/image4-20.png\" alt=\"Coalescing Connections to Improve Network Privacy and Performance\" class=\"kg-image\" width=\"750\" height=\"326\" loading=\"lazy\"/>\n            \n            </figure><p>Web pages typically have <a href=\"https://discuss.httparchive.org/t/whats-the-distribution-of-requests-per-page/21/10?u=patmeenan\">a large number</a> of embedded subresources (e.g., JavaScript, CSS, image files, ads, beacons) that are fetched by a browser on page loads. Requests for these subresources can prompt browsers to perform further DNS lookups, TCP connections, and TLS handshakes, which can have a significant impact on how long it takes for the user to see the content and interact with the page. Further, each additional request exposes metadata (such as plaintext DNS queries, or unencrypted SNI in TLS handshake) which can have potential privacy implications for the user. With these factors in mind, we carried out a measurement study to understand how we can leverage <a href=\"https://daniel.haxx.se/blog/2016/08/18/http2-connection-coalescing/\">Connection Coalescing</a> (aka <a href=\"https://datatracker.ietf.org/doc/html/rfc7540#section-9.1.1\">Connection Reuse</a>) to address such concerns, and study its feasibility.</p><h3>Background</h3><p>The <a href=\"/http-3-from-root-to-tip/\">web has come a long way</a> and initially consisted of very simple protocols. One of them was HTTP/1.0, which required browsers to make a separate connection for every subresource on the page. This design was quickly recognized as having significant performance bottlenecks and was extended with HTTP pipelining and persistent connections in <a href=\"https://datatracker.ietf.org/doc/html/rfc2616\">HTTP/1.1 revision</a>, which allowed HTTP requests to reuse the same TCP connection. But, yet again, this was no silver bullet: while multiple requests could share the same connection, they still had to be serialized one after the other, so a client and server could only execute a single request/response exchange at any given time for each connection. As time passed, websites became more complex in structure and dynamic in nature, and HTTP/1.1 was identified as a major bottleneck. The only way to gain concurrency at the network layer was to use multiple TCP connections to the same origin in parallel, but this meant losing most benefits of persistent connections and ended up overloading the origin servers which were unable to meet the concurrency demand.</p><p>To address these performance limitations, the SPDY protocol was introduced over a decade later. SPDY supported stream multiplexing, where requests to and responses from the server used a single interleaved TCP connection, and allowed browsers to prioritize requests for critical subresources first — that were blocking page rendering. A modified variant of SPDY was standardized by the IETF as HTTP/2 in 2012 and published as <a href=\"https://datatracker.ietf.org/doc/html/rfc7540\">RFC 7540</a> in 2015.</p><p>HTTP/2 and onwards retained this new standard for connection reuse. More specifically, all subresources on the same domain were able to reuse the same TCP/TLS (or UDP/QUIC) connection without any <a href=\"https://en.wikipedia.org/wiki/Head-of-line_blocking\">head-of-line blocking</a> (at least on the application layer). This resulted in a single connection for all the subresources — reducing extraneous requests on page loads — potentially speeding up some websites and applications.</p><p>Interestingly, the protocol has a lesser-known feature to also enable subresources at <b><i>different</i></b><i> </i><b><i>hostnames</i></b> to be fetched over the <b><i>same</i></b> <b><i>connection</i></b>. We studied the real-world feasibility and benefits of this technique as an effort to improve users&#39; experience for websites across our network.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/3tmFcDGsMhGlSKQ3XxEzHs/bee56ed45ce2e6a8947728599a624444/image16-1.png\" alt=\"Connection Coalescing allows reusing a TLS connection across different domains\" class=\"kg-image\" width=\"1496\" height=\"593\" loading=\"lazy\"/>\n            \n            </figure><p>Connection Coalescing allows reusing a TLS connection across different domains</p><h3>Connection Coalescing</h3><p>The <i>technique</i> is often referred to as <a href=\"https://daniel.haxx.se/blog/2016/08/18/http2-connection-coalescing/\">Connection Coalescing</a> and, to put it simply, is a way to access resources from <i>different hostnames that are accessible from the same web server</i>.</p><p>There are several reasons for why a single server could handle requests for different hosts, ranging from low-cost virtual hosting to the usage of <a href=\"https://www.cloudflare.com/learning/cdn/what-is-a-cdn/\">CDNs</a> and cloud providers (including Cloudflare, that acts as a reverse proxy for approximately <a href=\"https://www.cloudflare.com/learning/what-is-cloudflare/\">25 million Internet properties</a>). Before going into the technical conditions required to enable connection coalescing, we should take a look at some benefits such a strategy can provide.</p><ul><li><p><b>Privacy</b>. When resources at different hostnames are loaded via separate TLS connections, those connections expose metadata to ISPs and other observers via the Server Name Indicator (SNI) field about the destinations that are being contacted (i.e., in the absence of <a href=\"/esni/\">encrypted SNI</a>). This set of exposed SNI’s can allow an on-path adversary to fingerprint traffic and possibly determine user interactions on the webpage. On the other hand, coalesced requests for more than one hostname on a single connection exposes only <b>one</b> destination, and helps avoid such threats.</p></li><li><p><b>Performance</b>. Additional TLS handshakes and TCP connections can incur significant <a href=\"/how-expensive-is-crypto-anyway/\">costs in terms of cpu, memory and other resources</a>. Thus, coalescing requests to use the same connection can optimize resource utilization.</p></li><li><p><b>Resource Prioritization.</b> Multiplexing requests on a single connection means that applications have better visibility and more direct control over how related <a href=\"/better-http-2-prioritization-for-a-faster-web/\">resources are prioritized and scheduled</a>. In the absence of coalescing, the network properties (for example, route congestion) can interfere with the intended order of delivery for resources. This reliability gained through connection coalescing opens up new optimization opportunities to improve web page load times, among other things.</p></li></ul><p>However, along with all these potential benefits, connection coalescing also has some associated risk factors that need to be considered in practice. First, TCP incorporates “fair” congestion control mechanisms — if there are ten connections on the same route, each gets approximately 1/10th of the total bandwidth. So with a route congested and bandwidth restricted, a client relying on <i>multiple connections</i> might be better off (for example, if they have five of the ten connections, their total share of bandwidth would be half). Second, browsers will use different parallelization routines for scheduling requests on multiple connections versus the same connection — it is not immediately clear whether the former or latter would perform better. Third, multiple connections exhibit an inherent form of load balancing for TLS-termination processes. That’s because multiple requests on the same connection must be answered by the same TLS-termination process that holds the session keys (often on the same physical server). So, it is important to study connection coalescing carefully before rolling it out widely.</p><p>With this context in mind, we studied the feasibility of connection coalescing on real-world traffic. More specifically, the two questions we wanted to answer were(a) can we empirically demonstrate and quantify the theoretical benefits of connection coalescing?, and (b) could coalescing cause unintended side effects, such as performance degradation, due to the risks highlighted above?</p><p>In order to answer these questions, we first made the observation that a large number of Cloudflare customers request subresources from <a href=\"/an-update-on-cdnjs/\">cdnjs</a> — which is also powered by Cloudflare. For context, <a href=\"https://cdnjs.cloudflare.com/\">cdnjs</a> has public JavaScript and CSS libraries (like <a href=\"https://jquery.com/\">jQuery</a>), and is used by <a href=\"https://w3techs.com/technologies/details/cd-cdnjs\"><i>more than 12%</i></a> <i>of all websites on the Internet</i>. One popular way these websites include resources from cdnjs is by using <code>&lt;script src=&quot;https://cdnjs.cloudflare.com/...&quot; &gt;&lt;/script&gt;</code> HTML tags. But there are other ways as well, such as the usage of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\">Fetch</a> APIs. Regardless of the way these resources are included, browsers will need to fetch them for completely loading a website.</p><p>We then identified a list of approximately four thousand websites using Cloudflare (on the <a href=\"https://www.cloudflare.com/plans/free/\">Free plan</a>) that likely used cdnjs. We divided this list of sites into evenly-sized and randomly-picked <i>control</i> and <i>experiment</i> groups. Our plan was to enable coalescing only for the <i>experiment</i> group, so that subresource requests generated from their web pages for cdnjs could reuse existing connections. In this way, we were able to compare results obtained on the <i>experiment</i> group, with the ones for the <i>control</i> group, and attribute any differences observed to connection coalescing.</p><p>In order to signal browsers that the requests can be coalesced, we served cdnjs and the sites from the same IP address in a few regions around the world. This meant the same DNS responses for all the zones that were part of the study — eventually load balanced by our Anycast network. These sites also had TLS certificates that included cdnjs.</p><p>The above two conditions (same IP and compatible certificate) are required to achieve coalescing as per the <a href=\"https://datatracker.ietf.org/doc/html/rfc7540#section-9.1.1\">HTTP/2 spec</a>. However, the <a href=\"https://datatracker.ietf.org/doc/html/draft-ietf-quic-http-29#section-3.4\">QUIC spec</a> allows coalescing even if only the second condition is met. Major web browsers are <a href=\"https://mailarchive.ietf.org/arch/msg/quic/0nqKySdzmXK6CwZ9dKfD5GsQgqE/\">yet to adopt the QUIC coalescing mechanism</a>, and currently use only the HTTP/2 coalescing logic for both protocols.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/6qIQMnxndHLQGdhdmswsxg/a3bd501b7429c7551cfa6b311330b421/image14-1.png\" alt=\"Requests to Experiment Group Zones and cdnjs being coalesced on the same TLS connection\" class=\"kg-image\" width=\"1392\" height=\"570\" loading=\"lazy\"/>\n            \n            </figure><p>Requests to Experiment Group Zones and cdnjs being coalesced on the same TLS connection</p><h3>Results</h3><p>We started noticing evidence of real-world coalescing from the day our experiment was launched. The following graph shows that approximately 50% of requests to cdnjs from our experiment group sites are coalesced (i.e., their TLS SNI does not equal cdnjs) as compared to 0% of requests from the control group sites.</p>\n            <figure class=\"kg-card kg-image-card kg-width-wide\">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/A3Z2xGpVTKtXr05t6Vzkd/8f3e8efb4d7cbd6d964b781b4a465959/image2-21.png\" alt=\"Coalesced Requests to cdnjs from Control and Experimental Group Zones\" class=\"kg-image\" width=\"1999\" height=\"416\" loading=\"lazy\"/>\n            \n            </figure><p>Coalesced Requests to cdnjs from Control and Experimental Group Zones</p><p>In addition, we conducted active measurements using our private <a href=\"https://webpagetest.org/\">WebPageTest</a> instances at the landing pages of <i>experiment</i> and <i>control</i> sites — using the two well-supported browsers: Google Chrome and Firefox. From our results, Chrome created about 78% fewer TLS connections to cdnjs for our <i>experiment</i> group sites, as compared to the <i>control</i> group. But surprisingly, Firefox created just roughly 22% fewer connections. As TLS handshakes are computationally expensive because they involve cryptographic signatures and key exchange algorithms, fewer handshakes meant less CPU cycles spent by both the client and the server.</p><p>Upon further analysis, we were able to make two observations from the data:</p><ul><li><p>A fraction of sites that never coalesced connections with either browser appeared to load subresources with <a href=\"https://www.google.com/search?q=CORS&rlz=1C5AVSZ_enUS817US817&oq=CORS&aqs=chrome..69i57j0i433i512j46i199i433i465i512j46i433i512j0i131i433i512j0i433i512j0i512j0i131i433i457j46i433i512j0i433i512.151j0j7&sourceid=chrome&ie=UTF-8\">CORS</a> enabled (i.e., <code>&lt;script src=&quot;https://cdnjs.cloudflare.com/...&quot; integrity=&quot;sha512-894Y...&quot; **crossorigin=&quot;anonymous&quot;**&gt;</code>). This is the default way cdnjs recommends inclusion of subresources, as CORS is needed for <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity\">integrity checks</a> that provide substantial mitigations against script-manipulation attacks. We do not recommend removing this attribute. Our testing also revealed that using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\">Fetch</a> APIs to load subresources disabled coalescing as well. It is unclear why browsers choose to not coalesce such connections, and we are in contact with the vendors to find out.</p></li><li><p>Although both Firefox and Chrome coalesced requests for cdnjs on existing connections, the reason for the discrepancy in the number of TLS connections to cdnjs (approximately 78% vs roughly 22%) is because Firefox appears to open new connections even if it does not end up using them.</p></li></ul><p>After evaluating the potential benefits of coalescing, we wanted to understand if coalescing caused any unintended side effects. Hence, the final measurement we conducted was to check whether our experiments were detrimental to a website’s performance. We tracked <a href=\"/start-measuring-web-vitals-with-browser-insights/\">Page Load Times (PLT) and Largest Contentful Paint (LCP)</a> across a variety of stimulated network conditions using both Chrome and Firefox and found the results for experiment vs control group to <i>not</i> be statistically significant.</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/3mqWfurrAFY6NrvUrO067u/03d9b019eb0c6baac51fce3341510d72/image3-19.png\" alt=\"Page load times for control and experiment group sites. Each site was loaded once, and the “fullyLoaded” metric from WebPageTest is reported\" class=\"kg-image\" width=\"1074\" height=\"814\" loading=\"lazy\"/>\n            \n            </figure><p>Page load times for control and experiment group sites. Each site was loaded once, and the “<i>fullyLoaded</i>” metric from WebPageTest is reported</p><h3>Conclusion</h3><p>We consider our experimentation successful in determining the feasibility of connection coalescing and highlighting its potential benefits in terms of privacy and performance. More specifically, we observed the privacy benefits of coalescing in more than 50% of requests to cdnjs from real-world traffic. In addition, our active testing demonstrated that browsers create fewer TLS connections with coalescing enabled. Interestingly, our results also revealed that the benefits might not always occur (i.e., CORS-enabled requests, Firefox creating additional TLS connections despite coalescing). Finally, we did not find any evidence that coalescing can cause harm to real-world users’ experience on the Internet.</p><p>Some future directions we would like to explore include:</p><ul><li><p>More aggressive connection reuse with multiple hostnames, while identifying conditions most suitable for coalescing.</p></li><li><p>Understanding how different connection reuse methods compare, e.g., IP-based coalescing vs. use of <a href=\"https://datatracker.ietf.org/doc/html/rfc8336\">Origin Frames</a>, and what effects do they have on user experience over the Internet.</p></li><li><p>Evaluating coalescing support among different browser vendors, and encouraging adoption of HTTP/3 QUIC based coalescing.</p></li><li><p>Reaping the full benefits of connection coalescing by experimenting with custom priority schemes for requests within the same connection.</p></li></ul><p>Please send questions and feedback to <a href=\"mailto:ask-research@cloudflare.com\">ask-research@cloudflare.com</a>. We’re excited to continue this line of work in our effort to help build a better Internet! For those interested in joining our team please visit our <a href=\"https://www.cloudflare.com/careers/jobs/?department=Technology%20Research&location=default\">Careers Page</a>.</p>",
		"id": "3oUA8RgBt2s0bO1exBJegm",
		"localeList": {
			"name": "Coalescing Connections to Improve Network Privacy and Performance Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "Real world experiments for evaluating connection coalescing effects.",
		"metadata": {
			"title": "Coalescing Connections to Improve Network Privacy and Performance",
			"description": "Real world experiments for evaluating connection coalescing effects.",
			"imgPreview": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/5jRGecFHkF5WHoUavXCpkA/dbb3f3efe5f9c761084f1e4b67b13aa3/connection-coalescing-experiments-Vi5H6X.png"
		},
		"primary_author": {},
		"published_at": "2021-10-13T13:59:25.000+01:00",
		"slug": "connection-coalescing-experiments",
		"tags": [
			{
				"id": "1x7tpPmKIUCt19EDgM1Tsl",
				"name": "Research",
				"slug": "research"
			},
			{
				"id": "3BWeMuiOShelE7QM48sW9j",
				"name": "Privacy",
				"slug": "privacy"
			},
			{
				"id": "4gN0ARax0fHxjtZL07THOe",
				"name": "Performance",
				"slug": "performance"
			},
			{
				"id": "6w6vJHQwGq09SjUQT52hul",
				"name": "Browser Insights",
				"slug": "browser-insights"
			},
			{
				"id": "3Fo5JgRZ6Fh2HHzhEr7AKn",
				"name": "Better Internet",
				"slug": "better-internet"
			},
			{
				"id": "1goKAxv27P7ytwqLodJSAK",
				"name": "CDNJS",
				"slug": "cdnjs"
			}
		],
		"title": "Coalescing Connections to Improve Network Privacy and Performance",
		"updated_at": "2024-08-27T01:43:08.807Z",
		"url": "https://blog.cloudflare.com/connection-coalescing-experiments"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.blurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}