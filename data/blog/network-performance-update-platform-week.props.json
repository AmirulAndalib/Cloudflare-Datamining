{
	"initialReadingTime": "9",
	"locale": "en-us",
	"localesAvailable": [],
	"post": {
		"authors": [
			{
				"name": "David Tuber",
				"slug": "tubes",
				"bio": "PM for Network and Availability",
				"profile_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/5PdDoZIvkvRblH53Q2YTqo/536c3167e1c39805722fe4af5f2d17cd/tubes.png",
				"location": "Seattle, WA",
				"website": null,
				"twitter": "@tubes__",
				"facebook": null
			}
		],
		"excerpt": "In addition to sharing a general update on where our network performance stands, we’re also sharing updated performance metrics on our Workers platform. We’ve done an extensive benchmark of Cloudflare Workers vs Fastly’s Compute@Edge",
		"feature_image": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/4kmBeDaEuC01LF5KYrAywI/0b830f0c5bd49a8d78a549e3202a828f/network-performance-update-platform-week.png",
		"featured": false,
		"html": "\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/1ETCalDqRtqSwvqO3RMMpp/89f173adfd0b62f6c38bfb7757f23630/eIfTjNuUKg-8rExJ4HVS_B6y05ghflIbY54vI4Y4JORGrrCvhd0G1CkUcw4DAkJK2dT0P5t2MEgzv2K-cxjmhn9MzEujUVP041FqwasJ3ZLCjBrzbQDV7hV7QAbG.png\" alt=\"\" class=\"kg-image\" width=\"1600\" height=\"900\" loading=\"lazy\"/>\n            \n            </figure><p>In September 2021, we <a href=\"/benchmarking-edge-network-performance/\">shared extensive benchmarking results</a> of 1,000 networks all around the world. The results showed that on a range of tests (TCP connection time, time to first byte, time to last byte), and on different measures (p95, mean), Cloudflare was the fastest provider in 49% of networks around the world. Since then, we’ve worked to continuously improve performance, with the ultimate goal of being the fastest everywhere and an intermediate goal to grow the number of networks where we’re the fastest by at least 10% every Innovation Week. We met that goal during <a href=\"/network-performance-update-security-week/\">Security Week</a> (March 2022), and we’re carrying the work over to Platform Week (May 2022).</p><p>We’re excited to update you on the latest results, but before we do: after running with this benchmark for nine months, we&#39;ve also been looking for ways to improve the benchmark itself — to make it even more representative of speeds in the real world. To that end, we&#39;re expanding our measured networks from 1,000 to 3,000, to give an even more accurate sense of real world performance across the globe.</p><p>In terms of results: using the old benchmark of 1,000 networks, we’re the fastest in 69% of them. In this new expanded view of 3,000 networks, we’re the fastest in 42% of them. We’ve demonstrated a consistent ability to improve our performance against what we measure, and we’re excited to optimize our performance and lift our ranking in these smaller networks all around the world.</p><p>In addition to sharing a general update on where our network performance stands, we’re also sharing updated performance metrics on our Workers platform (given that it’s Platform Week!). We’ve done an extensive benchmark of Cloudflare Workers vs Fastly’s Compute@Edge.</p><p>We’ve got the results below, but before we get to that, we want to spend a bit of time on our revamped measurements.</p><h2>Revamped measurements</h2><p>A few months ago, we discussed the performance of Cloudflare Workers, as compared to other similar offerings out there. We compared our performance to Fastly’s Compute@Edge, showing that Workers was significantly faster.</p><p>After we published our results, there were questions and suggestions on how to improve our testing methodology (including sharing more detail about where and how we ran the tests). As we re-ran tests for this iteration, we made some small changes, and also worked to address the suggestions from the community. Let’s talk about what’s changed and why.</p><h3>Measuring what matters</h3><p>To quantify global network performance, we have to get enough data from around the world, across all manner of different networks, comparing ourselves with other providers. We used Real User Measurements (RUM) to fetch a 100kB file from different providers. Users around the world report the performance of different providers. The more users who report the data, the higher fidelity the signal is. The goal is to provide an accurate picture of where different providers are faster, and more importantly, where Cloudflare can improve. You can read more about the methodology in the original Speed Week blog post <a href=\"/benchmarking-edge-network-performance/\">here</a>.</p><p>In the process of quantifying network performance, it became clear where we needed to expand our scope in measuring performance. <a href=\"/network-performance-update-security-week/\">After Security Week</a>, we were fastest in 71% of networks, and we decided that we wanted to expand the pool of networks from the top 1,000 most reported networks to the top 3,000 most reported networks.</p><p>We’ve shown the graph detailing the <i>number</i> of networks where Cloudflare is #1 in network performance, but from here on out, we will only be showing this graph in <i>percentages</i> of networks where we are number one out of 100%, since the denominator will be changing going forward as we set ourselves harder and harder challenges.</p><h3>Benchmarking for everyone</h3><p>At the time we published our earlier set of benchmarks, we had an unnecessary “no benchmarking” clause in our Terms of Service. It has since been removed. It’s been a while since we’ve worried about such things, and the clause lived past its intended life in our ToS.</p><p>We’ve done the work to show where we are the fastest provider, and it’s important that everyone else be able to validate that independently. We’re also confident that well run benchmarks will only help further improve performance for Workers, other Cloudflare products, and the Internet as a whole. Game on.</p><h3>Measuring Workers performance from real users</h3><p>To run our tests, we used Catchpoint, an industry standard “synthetic” testing tool, and measurements collected from real users distributed around the world. Catchpoint is a monitoring platform that has <a href=\"https://www.catchpoint.com/global-observability-network\">around 2,000 total endpoints</a> distributed around the world that can be configured to fetch specific resources and time each test. Catchpoint is useful for network providers like us as it provides a consistent, repeatable way to measure end-to-end performance of a workload, and delivers a best-effort approximation for what a user sees.</p><p>Catchpoint has a series of backbone nodes that are embedded in ISPs around the world. That means that these nodes are plugged into ISP routers just like you are, and the traffic goes through the ISP network to each endpoint they are monitoring. These can approximate a real user, but they will never truly approximate a real user. For example, the bandwidth for these nodes is 100% dedicated for platform monitoring, as opposed to your home Internet connection, where your Internet experience will be a mixed bag of different use cases, some of which won’t talk to Workers applications at all.</p><p>For this new test, we chose 300 backbone nodes that are embedded in last mile ISPs around the world. We filtered out nodes in cloud providers, or in metro areas with multiple transit options, trying to remove duplicate paths as much as possible.</p><p>We cross-checked these tests with our own data set, which is collected from users connecting to free websites when they are served 1xxx error pages, similar to how we collect data for global network performance. When a user sees this error page, that page will contain a call that will execute these tests and upload performance metrics on these calls to Cloudflare. Users would run these calls independently of the error page, ensuring that Cloudflare did not get a head start in these tests.</p><p>We also changed our test methodology to use paid accounts for both Fastly and Cloudflare.</p><h3>Changing the numbers we look at</h3><p>For this new test, we decided to look at Wait time in addition to Time to First Byte. <a href=\"https://www.catchpoint.com/blog/http-request-anatomy\">Time to First Byte</a> is the time it takes for a web server to establish a connection, fetch the content, and deliver the first byte of a response to a user, and Wait time is the time the client spends waiting for the server to send back that first byte after the connection is established. We are using this particular measurement to look at the actual time it takes for the server to compute the request on the machine. <a href=\"https://blog.catchpoint.com/2010/09/17/anatomyhttp/?_ga=2.244682437.1326161414.1652456190-846434697.1631231609\">Wait time</a> is a subcomponent of TTFB, and contains the machine processing time, the time it takes the server to give the response to the socket to be sent back to the user, and the time it takes the response to reach the user. There could be latency in passing the request to the socket on the machine, but we measured the actual time it took the server to send the request for all tests and found it to be zero:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/3eXmohXQvNpex5OqjBXq1u/ce22f5f108c524f5057a092ba3e89b07/image2-39.png\" alt=\"\" class=\"kg-image\" width=\"1974\" height=\"486\" loading=\"lazy\"/>\n            \n            </figure><p>So we would calculate the wait time as the amount of time spent on the box plus the time it took the server to send the packet over the wire to the client.</p><p>However, others have noted that using Time to First Byte to measure performance of serverless computing solutions could potentially be misleading because user performance measurements can be influenced by more than just the time spent computing functions on the machine. For example, things like the time to connect to the server, DNS resolution, and cache times can impact Time to First Byte. Time to connect to the server (connect) can be impacted by how well peered a network is (or how poorly). DNS resolution can be impacted by client behavior, local DNS behavior, or by the performance of the provider’s DNS. Cache times can be driven by the performance of the cache on the server itself.</p><p>We agree that it is difficult to tease out computing time from Time to First Byte. To look at that particular aspect of serverless computing, we look at Wait, which is a value that contains the least amount of variables: we aren’t caching anything during our tests, DNS isn’t part of the wait time, and the only thing impacting Wait aside from the time spent on the machine is the Connect time.</p><p>However, since we’re trying to measure the end user experience and not just the amount of time spent on a server, we want to use both the Wait and TTFB so that we can show the time spent both on the server and how that impacts end-to-end performance.</p><h3>What’s in the test?</h3><p>For our test this time around, we decided to measure three things: a simple JavaScript function like last time, a complex JavaScript function, and a complex Rust function. Here are the functions for each of them:</p>\n            <pre class=\"language-js\"><code class=\"language-js\">async function getErrorResponse(event, message, status) {\n  return new Response(message, {status: status, headers: {&#039;Content-Type&#039;: &#039;text/plain&#039;}});\n}</pre></code>\n            \n            <pre class=\"language-js\"><code class=\"language-js\">function testHardBusyLoop() {\n  let value = 0;\n  let offset = Date.now();\n\n  for (let n = 0; n &lt; 15000; n++) {\n    value += Math.floor(Math.abs(Math.sin(offset + n)) * 10);\n  }\n\n  return value;\n}</pre></code>\n            \n            <pre class=\"language-rust\"><code class=\"language-rust\">fn test_hard_busy_loop() -&gt; i32 {\n  let mut value = 0;\n  let offset = Date::now().as_millis();\n\n  for n in 0..15000 {\n    value += (((offset + n) as f64).sin().abs() * 10.0) as i32;\n  }\n\n  value\n}</pre></code>\n            <p>The goals of each of these tests is simple: test the ability of Workers and Compute@Edge to perform compute actions.</p><h2>Latest update on network performance</h2><p>We have two updates on data: a general network performance update, and then data on how Workers compares with Compute@Edge.</p><p>At Security Week (March 2022), we shared that we were faster in more of the most reported networks than our competitors. Out of the top 1,000 networks in the world (by number of IPv4 addresses advertised), here’s a breakdown of how many providers are number one in p95 TCP Connection Time, which represents the time it takes for a user to connect to the provider. This data is from Security Week (March 2022):</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/27GOQxEzoC8xxd4ENFU4Cm/53d37b3d7c6c859aba3d0e26b8addbac/image5-15.png\" alt=\"\" class=\"kg-image\" width=\"1204\" height=\"516\" loading=\"lazy\"/>\n            \n            </figure><p>Recognizing that we are now looking at different numbers of networks, here is what the distribution looks like for the top 3,000 networks for Platform Week (May 2022):</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/2LmzCwB1Y3BbyJJ1z8v7Yd/3cc1dcda809b5127f0da30f391336d6c/image8-3.png\" alt=\"\" class=\"kg-image\" width=\"1176\" height=\"496\" loading=\"lazy\"/>\n            \n            </figure><p>In addition to being the fastest across popular <i>networks</i>, Cloudflare is also committed to being the fastest provider in every country.</p><p>Using data on the top 1,000 networks from Full Stack Week (March 2022), here’s what the world map looks like:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/7zThyt1MKYzfdikI7hkgMV/a6a0b9167d2e95cd9d53482201097c80/image9-2.png\" alt=\"\" class=\"kg-image\" width=\"1999\" height=\"1025\" loading=\"lazy\"/>\n            \n            </figure><p>And here’s what the world looks like while looking at the top 3,000 networks:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/47bQqlUVtvF5kNq36qb358/12d7cb8f4a673786b56e8eef087b59d0/image11.png\" alt=\"\" class=\"kg-image\" width=\"1999\" height=\"1007\" loading=\"lazy\"/>\n            \n            </figure><p>Cloudflare became #1 in more countries in Africa and Europe, some of which previously did not have enough samples to officially be counted to one provider or another.</p><h2>Workers vs Compute@Edge</h2><p>Moving on from general network results, what does performance look like when comparing serverless compute products across providers — in this case, Cloudflare Workers performance to Compute@Edge? Looking at the Catchpoint data, the first thing we noticed was Cloudflare is faster than Fastly in all tests at the 95th percentile for Time to First Byte:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/6wL9DyjkpfxlbYQIsPcEKw/38c13f06efdd53e7686361040f2f2008/image3-30.png\" alt=\"\" class=\"kg-image\" width=\"1998\" height=\"900\" loading=\"lazy\"/>\n            \n            </figure><p>Test</p><p>95th percentile TTFB (ms)</p><p>Cloudflare JS no-op</p><p>469</p><p>Fastly JS no-op</p><p>596</p><p>Cloudflare JS hard</p><p>481</p><p>Fastly JS hard</p><p>631</p><p>Cloudflare Rust hard</p><p>493</p><p>Fastly Rust hard</p><p>577</p><p>Cloudflare is significantly faster at all tests compared to Fastly. But let’s dig into why that is. Looking at p95 Wait, we can see that Cloudflare does have an edge in most tests related to compute on-box:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/4qBIGm4DLEPbKZU6MgeFI/85b6173907b68b8aca29a52cce05ed92/image10-1.png\" alt=\"\" class=\"kg-image\" width=\"1982\" height=\"912\" loading=\"lazy\"/>\n            \n            </figure><p>Test</p><p>95th Percentile Wait (ms)</p><p>Cloudflare JS no-op</p><p>123</p><p>Fastly JS no-op</p><p>123</p><p>Cloudflare JS hard</p><p>136</p><p>Fastly JS hard</p><p>170</p><p>Cloudflare Rust hard</p><p>160</p><p>Fastly Rust hard</p><p>121</p><p>Looking at the Wait times, you can see that Cloudflare does have a significant edge in on-box performance, except in Rust, where Fastly claims their workloads are the most optimized. This data backs up that claim. But why is Fastly so much slower on Time to First Byte? The answer lies in the rest of the request. While latency spent in compute matters, it only matters in conjunction with the rest of the network performance. And Cloudflare has an advantage over Fastly in Connect times and SSL establishment times:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/6fC76Hvccza62kgiuAQLJI/228bfa3e766cbbce69b22136198b02d0/image4-24.png\" alt=\"\" class=\"kg-image\" width=\"1982\" height=\"1370\" loading=\"lazy\"/>\n            \n            </figure><p>Test</p><p>95th Percentile Connect (ms)</p><p>95th Percentile SSL (ms)</p><p>Cloudflare JS no-op</p><p>81</p><p>289</p><p>Fastly JS no-op</p><p>88</p><p>293</p><p>Cloudflare JS hard</p><p>81</p><p>286</p><p>Fastly JS hard</p><p>88</p><p>291</p><p>Cloudflare Rust hard</p><p>81</p><p>288</p><p>Fastly Rust hard</p><p>88</p><p>295</p><p>Cloudflare’s hyper-optimized web stack allows us to process all requests faster, meaning that Workers code gets started faster. Having that extra head start in Connect and SSL allows us to further increase the distance between us and Compute@Edge.</p><p>To verify these results, we compared the Catchpoint results to our own data set. Here is the p95 TTFB for the JavaScript and Rust hard loops for both Fastly and Cloudflare from our data:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/6d2NTigMxkcPtya4OYoL29/ca1579442e07b98564017325b6e9734b/image1-43.png\" alt=\"\" class=\"kg-image\" width=\"1999\" height=\"657\" loading=\"lazy\"/>\n            \n            </figure><p>As you can see, Cloudflare is faster on JavaScript and Rust calls. And when you look at wait time, you will see that outside of Catchpoint results, Cloudflare even beats Fastly in the Rust hard tests:</p>\n            <figure class=\"kg-card kg-image-card \">\n            \n            <Image src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/gMdeYBHGrgSPR4psKORBU/f5138ac4f42f3e9ad8db665046b4dfbe/image6-15.png\" alt=\"\" class=\"kg-image\" width=\"1999\" height=\"661\" loading=\"lazy\"/>\n            \n            </figure><p>The big takeaway from this is that in addition to Cloudflare being faster for the time spent processing requests, Cloudflare’s network and performance optimizations as a whole set us apart and make our Workers platform even faster.</p><h2>A fast network makes for a faster developer platform</h2><p>Cloudflare’s commitment to building the fastest network allows us to deliver unparalleled performance for all applications, including our developer tools. Whether it’s by accelerating Cloudflare Pages performance by hosting on every single Cloudflare server, or by deploying Workers in 275 cities without developers needing to configure a thing, Cloudflare’s developer tools are all built on top of Cloudflare’s global network. We’re committed to making our network faster so that our developer products are as performant as they could possibly be.</p><p>And it’s not just the developer platform. Cloudflare runs an integrated and optimized stack that includes DDoS protection, <a href=\"https://www.cloudflare.com/learning/ddos/glossary/web-application-firewall-waf/\">WAF</a>, rate limiting, bot management, caching, SSL, smart routing, and more. By having a single software stack we are able to offer the widest range of features while ensuring that performance (no matter which of our products you use) remains excellent. We don’t want you to have to compromise performance to get security or vice versa.</p>",
		"id": "6vHeIpQFkzdUdqwEHsA0oi",
		"localeList": {
			"name": "Network performance update: Platform Week Config",
			"enUS": "English for Locale",
			"zhCN": "No Page for Locale",
			"zhHansCN": "No Page for Locale",
			"zhTW": "No Page for Locale",
			"frFR": "No Page for Locale",
			"deDE": "No Page for Locale",
			"itIT": "No Page for Locale",
			"jaJP": "No Page for Locale",
			"koKR": "No Page for Locale",
			"ptBR": "No Page for Locale",
			"esLA": "No Page for Locale",
			"esES": "No Page for Locale",
			"enAU": "No Page for Locale",
			"enCA": "No Page for Locale",
			"enIN": "No Page for Locale",
			"enGB": "No Page for Locale",
			"idID": "No Page for Locale",
			"ruRU": "No Page for Locale",
			"svSE": "No Page for Locale",
			"viVN": "No Page for Locale",
			"plPL": "No Page for Locale",
			"arAR": "No Page for Locale",
			"nlNL": "No Page for Locale",
			"thTH": "No Page for Locale",
			"trTR": "No Page for Locale",
			"heIL": "No Page for Locale",
			"lvLV": "No Page for Locale",
			"etEE": "No Page for Locale",
			"ltLT": "No Page for Locale"
		},
		"meta_description": "In addition to sharing a general update on where our network performance stands, we’re also sharing updated performance metrics on our Workers platform. We’ve done an extensive benchmark of Cloudflare Workers vs Fastly’s Compute@Edge.",
		"metadata": {
			"title": "Network performance update: Platform Week",
			"description": "In addition to sharing a general update on where our network performance stands, we’re also sharing updated performance metrics on our Workers platform. We’ve done an extensive benchmark of Cloudflare Workers vs Fastly’s Compute@Edge.",
			"imgPreview": "https://cf-assets.www.cloudflare.com/slt3lc6tev37/6tDjfXycuzEqp7uKTXKIFe/4d2ba796c62a7676f3a1e9ef04aa991e/network-performance-update-platform-week-hmZHFB.png"
		},
		"primary_author": {},
		"published_at": "2022-05-16T14:45:00.000+01:00",
		"slug": "network-performance-update-platform-week",
		"tags": [
			{
				"id": "1VkRSlsXf1AYB3QvlWU1JK",
				"name": "Platform Week",
				"slug": "platform-week"
			},
			{
				"id": "9nGp6RbH7FA3Tqg2MEy2p",
				"name": "Network Performance Update",
				"slug": "network-performance-update"
			}
		],
		"title": "Network performance update: Platform Week",
		"updated_at": "2024-08-27T01:30:39.336Z",
		"url": "https://blog.cloudflare.com/network-performance-update-platform-week"
	},
	"translations": {
		"posts.by": "By",
		"footer.gdpr": "GDPR",
		"lang_blurb1": "This post is also available in {lang1}.",
		"lang_blurb2": "This post is also available in {lang1} and {lang2}.",
		"lang_blurb3": "This post is also available in {lang1}, {lang2} and {lang3}.",
		"footer.blurb": "Cloudflare's connectivity cloud protects <a target='_blank' href='https://www.cloudflare.com/network-services/' rel='noreferrer'>entire corporate networks</a>, helps customers build <a target='_blank' href='https://workers.cloudflare.com/' rel='noreferrer'>Internet-scale applications efficiently</a>, accelerates any <a target='_blank' href='https://www.cloudflare.com/performance/accelerate-internet-applications/' rel='noreferrer'>website or Internet application</a>, <a target='_blank' href='https://www.cloudflare.com/ddos/' rel='noreferrer'>wards off DDoS attacks</a>, keeps <a target='_blank' href='https://www.cloudflare.com/application-security/' rel='noreferrer'>hackers at bay</a>, and can help you on <a target='_blank' href='https://www.cloudflare.com/products/zero-trust/' rel='noreferrer'>your journey to Zero Trust</a>.<br/><br/>Visit <a target='_blank' href='https://one.one.one.one/' rel='noreferrer'>1.1.1.1</a> from any device to get started with our free app that makes your Internet faster and safer.<br/><br/>To learn more about our mission to help build a better Internet, <a target='_blank' href='https://www.cloudflare.com/learning/what-is-cloudflare/' rel='noreferrer'>start here</a>. If you&apos;re looking for a new career direction, check out <a target='_blank' href='http://www.cloudflare.com/careers' rel='noreferrer'>our open positions</a>.",
		"footer.press": "Press",
		"header.title": "The Cloudflare Blog",
		"search.clear": "Clear",
		"search.filter": "Filter",
		"search.source": "Source",
		"footer.careers": "Careers",
		"footer.company": "Company",
		"footer.support": "Support",
		"footer.the_net": "theNet",
		"search.filters": "Filters",
		"footer.our_team": "Our team",
		"footer.webinars": "Webinars",
		"page.more_posts": "More posts",
		"posts.time_read": "{time} min read",
		"search.language": "Language",
		"footer.community": "Community",
		"footer.resources": "Resources",
		"footer.solutions": "Solutions",
		"footer.trademark": "Trademark",
		"header.subscribe": "Subscribe",
		"footer.compliance": "Compliance",
		"footer.free_plans": "Free plans",
		"footer.impact_ESG": "Impact/ESG",
		"posts.follow_on_X": "Follow on X",
		"footer.help_center": "Help center",
		"footer.network_map": "Network Map",
		"header.please_wait": "Please Wait",
		"page.related_posts": "Related posts",
		"search.result_stat": "Results <strong>{search_range}</strong> of <strong>{search_total}</strong> for <strong>{search_keyword}</strong>",
		"footer.case_studies": "Case Studies",
		"footer.connect_2024": "Connect 2024",
		"footer.terms_of_use": "Terms of Use",
		"footer.white_papers": "White Papers",
		"footer.cloudflare_tv": "Cloudflare TV",
		"footer.community_hub": "Community Hub",
		"footer.compare_plans": "Compare plans",
		"footer.contact_sales": "Contact Sales",
		"header.contact_sales": "Contact Sales",
		"header.email_address": "Email Address",
		"page.error.not_found": "Page not found",
		"footer.developer_docs": "Developer docs",
		"footer.privacy_policy": "Privacy Policy",
		"footer.request_a_demo": "Request a demo",
		"page.continue_reading": "Continue reading",
		"footer.analysts_report": "Analyst reports",
		"footer.for_enterprises": "For enterprises",
		"footer.getting_started": "Getting Started",
		"footer.learning_center": "Learning Center",
		"footer.project_galileo": "Project Galileo",
		"pagination.newer_posts": "Newer Posts",
		"pagination.older_posts": "Older Posts",
		"posts.social_buttons.x": "Discuss on X",
		"search.source_location": "Source/Location",
		"footer.about_cloudflare": "About Cloudflare",
		"footer.athenian_project": "Athenian Project",
		"footer.become_a_partner": "Become a partner",
		"footer.cloudflare_radar": "Cloudflare Radar",
		"footer.network_services": "Network services",
		"footer.trust_and_safety": "Trust & Safety",
		"header.get_started_free": "Get Started Free",
		"page.search.placeholder": "Search Cloudflare",
		"footer.cloudflare_status": "Cloudflare Status",
		"footer.cookie_preference": "Cookie Preferences",
		"header.valid_email_error": "Must be valid email.",
		"footer.connectivity_cloud": "Connectivity cloud",
		"footer.developer_services": "Developer services",
		"footer.investor_relations": "Investor relations",
		"page.not_found.error_code": "Error Code: 404",
		"footer.logos_and_press_kit": "Logos & press kit",
		"footer.application_services": "Application services",
		"footer.get_a_recommendation": "Get a recommendation",
		"posts.social_buttons.reddit": "Discuss on Reddit",
		"footer.sse_and_sase_services": "SSE and SASE services",
		"page.not_found.outdated_link": "You may have used an outdated link, or you may have typed the address incorrectly.",
		"footer.report_security_issues": "Report Security Issues",
		"page.error.error_message_page": "Sorry, we can't find the page you are looking for.",
		"header.subscribe_notifications": "Subscribe to receive notifications of new posts:",
		"footer.cloudflare_for_campaigns": "Cloudflare for Campaigns",
		"header.subscription_confimation": "Subscription confirmed. Thank you for subscribing!",
		"posts.social_buttons.hackernews": "Discuss on Hacker News",
		"footer.diversity_equity_inclusion": "Diversity, equity & inclusion",
		"footer.critical_infrastructure_defense_project": "Critical Infrastructure Defense Project"
	}
}