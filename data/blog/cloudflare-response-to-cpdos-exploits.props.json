{
	"post": {
		"id": "5db1dc31fd9e450505d993c4",
		"uuid": "0913ab55-1c3c-4d8a-af01-f05bdee3c3f1",
		"title": "Cloudflare response to CPDoS exploits",
		"slug": "cloudflare-response-to-cpdos-exploits",
		"html": "<p>Three vulnerabilities were disclosed as <a href=\"https://cpdos.org\">Cache Poisoning Denial of Service</a> attacks in a paper written by Hoai Viet Nguyen, Luigi Lo Iacono, and Hannes Federrath of TH Köln - University of Applied Sciences. These attacks are similar to the cache poisoning attacks presented last year at DEFCON. <a href=\"http://blog.cloudflare.com/cache-poisoning-protection/\">Our blog post</a> in response to those attacks includes a detailed description of what a cache poisoning attack is.</p><p><strong>Most customers do not have to take any action to protect themselves from the newly disclosed vulnerabilities</strong>. Some configuration changes are recommended if you are a Cloudflare customer running unpatched versions of Microsoft IIS and have <a href=\"https://docs.microsoft.com/en-us/iis/configuration/system.webserver/security/requestfiltering/requestlimits/headerlimits/add\">request filtering</a> enabled on your origin or have forced caching of HTTP response code 400 through the use of Cloudflare Workers. </p><p>We have not seen any attempted exploitation of the vulnerabilities described in this paper.</p><p>Maintaining the integrity of our content caching infrastructure and ensuring our customers are able to quickly and reliably serve the content they expect to their visitors is of paramount importance to us. In practice, Cloudflare ensures caches serve the content they should in two ways:<br></p><ol><li>We build our caching infrastructure to behave in ways compliant with industry standards.</li><li>We actively add defenses to our caching logic to protect customers from common caching pitfalls. We see our job as solving customer problems whenever possible, even if they’re not directly related to using Cloudflare. Examples of this philosophy can be found in how we <a href=\"http://blog.cloudflare.com/cache-poisoning-protection/\">addressed</a> <a href=\"http://blog.cloudflare.com/web-cache-deception-attack-revisited/\">previously</a> discovered cache attack techniques.</li></ol><p>A summary of the three attacks disclosed in the paper and how Cloudflare handles them:</p><p><strong><strong><strong>HTTP Header Method Override (HMO)</strong>:</strong></strong></p><ul><li><strong><strong><strong>Impact: </strong></strong></strong>Some web frameworks support headers for overriding the HTTP method sent in the HTTP request. Ex: A GET request sent with <code>X-HTTP-Method: POST</code> will be treated by the origin as a POST request (this is not a standard but something many frameworks support). An attacker can use this behavior to potentially trick a <a href=\"https://www.cloudflare.com/learning/cdn/what-is-a-cdn/\">CDN</a> into caching poisoned content.</li><li><strong><strong><strong>Mitigation:</strong> </strong></strong>We include the following method override headers as part of customer cache keys for requests which include the headers. This ensures that requests made with the headers present do not poison cache contents for requests without them. Note that Cloudflare does <em>not</em> interpret these headers as an actual method override (ie. the GET request in the above example stays a GET request in our eyes). Headers we consider as part of this cache key modification logic are:<br><br>1) X-HTTP-Method-Override<br>2) X-HTTP-Method<br>3) X-Method-Override</li></ul><p><strong><strong><strong>Oversized HTTP Headers (HHO)</strong>:</strong></strong></p><ul><li><strong><strong><strong>Impact: </strong></strong></strong>The attacker sends large headers that a CDN passes through to origin, but are too large for the origin server to handle. If in this case the origin returns an error page that a shared cache deems cacheable it can result in denial of service for subsequent visitors.</li><li><strong><strong><strong>Mitigation:</strong> </strong></strong>Cloudflare does not cache HTTP status code 400 responses by default, which is the common denial of service vector called out by the exploit authors. Some CDN vendors <em>did</em> cache 400 responses, which created the poisoning vector called out by the exploit authors. Cloudflare customers were never vulnerable if their origins emitted 400 errors in response to oversized headers.<br><br>The one exception to this is Microsoft IIS in specific circumstances. Versions of Microsoft IIS that have not applied the <a href=\"https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0941\">security update</a> for CVE-2019-0941 will return an HTTP 404 response if limits are configured and exceeded for individual request header sizes using the <a href=\"https://docs.microsoft.com/en-us/iis/configuration/system.webserver/security/requestfiltering/requestlimits/headerlimits/add\">“headerLimits” configuration directive</a>. Shared caches are permitted to cache these 404 responses. We recommend either upgrading IIS or removing headerLimits configuration directives on your origin.</li></ul><p><strong><strong><strong>HTTP Meta Characters</strong>:</strong></strong></p><ul><li><strong><strong><strong>Impact:</strong> </strong></strong>Essentially the same attack as oversized HTTP headers, except the attack uses meta characters like <code>\\r</code> and <code>\\n</code> to cause origins to return errors to shared caches.</li><li><strong><strong><strong>Mitigation:</strong> </strong></strong>Same as oversized HTTP headers; Cloudflare does not cache 400 errors by default.</li></ul><p>In addition to the behavior laid out above, Cloudflare’s caching logic <a href=\"https://support.cloudflare.com/hc/en-us/articles/115003206852-Enabling-Origin-Cache-Control-with-Cloudflare-Page-Rules\">respects origin Cache-Control headers</a>, which allows customers extremely granular control over how our caches behave. We actively work with customers to ensure that they are following best practices for avoiding cache poisoning attacks and add defense in depth through smarter software whenever possible.</p><p>We look forward to continuing to work with the security community on issues like those discovered to make the Internet safer and more secure for everyone.<br></p>",
		"comment_id": "5db1dc31fd9e450505d993c4",
		"feature_image": null,
		"featured": false,
		"visibility": "public",
		"created_at": "2019-10-24T18:15:29.000+01:00",
		"updated_at": "2023-09-19T17:15:46.000+01:00",
		"published_at": "2019-10-24T18:27:49.000+01:00",
		"custom_excerpt": "Three vulnerabilities were disclosed as Cache Poisoning Denial of Service attacks in a paper written by Hoai Viet Nguyen, Luigi Lo Iacono, and Hannes Federrath of TH Köln - University of Applied Sciences. These attacks are similar to the cache poisoning attacks presented last year at DEFCON.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "5d1644b141acde0011a94f8f",
				"name": "Rustam Lalkaka",
				"slug": "rustam",
				"profile_image": "http://blog.cloudflare.com/content/images/2017/05/AAEAAQAAAAAAAAc9AAAAJDg0MzBkZTg1LTNkOTUtNGFlYy1hMjJiLTQxMjlmYzkyNjJjMA.jpg",
				"cover_image": null,
				"bio": "In his role as Vice President of Product Management at Cloudflare, Rustam leads teams helping make the Internet safer, faster, more secure, and more private for all 4 billion Internet users. ",
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@lalkaka",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/rustam/"
			}
		],
		"tags": [
			{
				"id": "5d16450341acde0011a95169",
				"name": "Attacks",
				"slug": "attacks",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/attacks/"
			},
			{
				"id": "5d16450341acde0011a951aa",
				"name": "Vulnerabilities",
				"slug": "vulnerabilities",
				"description": "Vulnerabilities (EN)",
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/vulnerabilities/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f8f",
			"name": "Rustam Lalkaka",
			"slug": "rustam",
			"profile_image": "http://blog.cloudflare.com/content/images/2017/05/AAEAAQAAAAAAAAc9AAAAJDg0MzBkZTg1LTNkOTUtNGFlYy1hMjJiLTQxMjlmYzkyNjJjMA.jpg",
			"cover_image": null,
			"bio": "In his role as Vice President of Product Management at Cloudflare, Rustam leads teams helping make the Internet safer, faster, more secure, and more private for all 4 billion Internet users. ",
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@lalkaka",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/rustam/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a95169",
			"name": "Attacks",
			"slug": "attacks",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/attacks/"
		},
		"url": "http://blog.cloudflare.com/cloudflare-response-to-cpdos-exploits/",
		"excerpt": "Three vulnerabilities were disclosed as Cache Poisoning Denial of Service attacks in a paper written by Hoai Viet Nguyen, Luigi Lo Iacono, and Hannes Federrath of TH Köln - University of Applied Sciences. These attacks are similar to the cache poisoning attacks presented last year at DEFCON.",
		"reading_time": 3,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	},
	"locale": "en-us"
}