{
	"locale": "en-us",
	"post": {
		"id": "63742956c343b2000a361041",
		"uuid": "4ae64147-9309-4d43-88aa-736277a17ae5",
		"title": "Xata Workers: client-side database access without client-side secrets",
		"slug": "xata-customer-story",
		"html": "<figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/11/Customer-Story_-Xata_light.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>We’re excited to have Xata building their serverless functions product – Xata Workers – on top of <a href=\"https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/\">Workers for Platforms</a>. Xata Workers act as middleware to simplify database access and allow their developers to deploy functions that sit in front of their databases. Workers for Platforms opens up a whole suite of use cases for Xata developers all while providing the security, scalability and performance of Cloudflare Workers. </p><p>Now, handing it over to Alexis, a Senior Software Engineer at Xata to tell us more.</p><h3 id=\"introduction\">Introduction</h3><p>In the last few years, there's been a rise of Jamstack, and new ways of thinking about the cloud that some people call serverless or edge computing. Instead of maintaining dedicated servers to run a single service, these architectures split applications in smaller services or functions.</p><p>By simplifying the state and context of our applications, we can benefit from external providers deploying these functions in dozens of servers across the globe. This architecture benefits the developer and user experience alike. Developers don’t have to manage servers, and users don’t have to experience latency. Your application simply scales, even if you receive hundreds of thousands of unexpected visitors.</p><p>When it comes to databases though, we still struggle with the complexity of orchestrating replication, failover and high availability. Traditional databases are difficult to scale horizontally and usually require a lot of infrastructure maintenance or learning complex database optimization concepts.</p><p>At Xata we are building a modern data platform designed for scalable applications. It allows you to focus on your application logic, instead of having to worry about how the data is stored.</p><h3 id=\"making-databases-accessible-to-everyone\">Making databases accessible to everyone</h3><p>We started Xata with the mission of helping developers build their applications and forget about maintaining the underlying infrastructure.</p><p>With that mission in mind, we asked ourselves: how can we make databases accessible to everyone? How can we provide a delightful experience for a frontend engineer or designer using a database?</p><p>To begin with, we built an appealing web dashboard, that any developer — no matter their experience — can be comfortable using to work with their data.</p><p>Whether they’re defining or refining their schema, viewing or adding records, fine-tuning search results with query boosters, or getting code snippets to speed up development with our SDK. We believe that only the best user experience can provide the best development experience.</p><p>We identified a major challenge amongst our user base early on. Many front-end developers want to access their database from client-side code.</p><p>Allowing access to a database from client-side code comes with several security risks if not done properly. For example, someone could inspect the code, find the credentials, and if they weren’t scoped to a single operation, potentially query or modify other parts of the database. Unfortunately, this is a common reason for data leaks and security breaches.</p><p>It was a hard problem to solve, and after plenty of brainstorming, we agreed on two potential ways forward: implementing row-level access rules or writing API routes that talked to the database from server code.</p><p>Row-level access rules are a good way to solve this, but they would have required us to define our own opinionated language. For our users, it would have been hard to migrate away when they outgrow this solution. Instead, we preferred to focus on making serverless functions easier for our users.</p><p>Typically, serverless functions require you to either choose a full stack framework or manually write, compile, deploy and use them. This generally adds a lot of cognitive overhead even to choose the right solution. We wanted to simplify accessing the database from the frontend without sacrificing flexibility for developers. This is why we decided to build Xata Workers.</p><h3 id=\"xata-workers\">Xata Workers</h3><p>A Xata Worker is a function that a developer can write in JavaScript or TypeScript as client-side code. Rather than being executed client-side, it will actually be executed on Cloudflare’s global network.</p><p>You can think of a Xata Worker as a <code>getServerSideProps</code> function in Next.js or a <code>loader</code> function in Remix. You write your server logic in a function and our tooling takes care of deploying and running it server-side for you (yes, it’s that easy).</p><p>The main difference with other alternatives is that Xata Workers are, by design, agnostic to a framework or hosting provider. You can use them to build any kind of application or website, and even upload it as static HTML in a service like GitHub Pages or S3. You don't need a full stack web framework to use Xata Workers.</p><p>With our command line tool, we handle the build and deployment process. When the function is invoked, the Xata Worker actually makes a request to a serverless function over the network.</p><pre><code>import { useQuery } from '@tanstack/react-query';\nimport { xataWorker } from '~/xata';\n\nconst listProducts = xataWorker('listProducts', async ({ xata }) =&gt; {\n  return await xata.db.products.sort('popularity', 'desc').getMany();\n});\n\nexport const Home = () =&gt; {\n  const { data = [] } = useQuery(['products'], listProducts);\n\n  return (\n    &lt;Grid&gt;\n      {data.map((product) =&gt; (\n        &lt;ProductCard key={product.id} product={product} /&gt;\n      ))}\n    &lt;/Grid&gt;\n  );\n};\n</code></pre><p>In the code snippet above, you can see a React component that connects to an e-commerce database with products on sale. Inside the UI component, with a popular client-side data fetching library, data is retrieved from the serverless function and for each product it renders another component in a grid.</p><p>As you can see a Xata Worker is a function that wraps any user-defined code and receives an instance of our SDK as a parameter. This instance has access to the database and, given that the code doesn’t run on the browser anymore, your secrets are not exposed for malicious usage.</p><p>When using a Xata Worker in TypeScript, our command line tool also generates custom types based on your schema. These types offer type-safety for your queries or mutations, and improve your developer experience by adding extra intellisense to your IDE.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/11/Untitled.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>A Xata Worker, like any other function, can receive additional parameters that pass application state, context or user tokens. The code you write in the function can either return an object that will be serialized over the network with a superset of JSON to support dates and other non-primitive data types, or a full response with a custom status code and headers.</p><p>Developers can write all their logic, including their own authentication and authorization. Unlike complex row level access control rules, you can easily express your logic without constraints and even unit test it with the rest of your code.</p><h3 id=\"how-we-use-cloudflare\">How we use Cloudflare</h3><p>We are happy to join the <a href=\"http://blog.cloudflare.com/welcome-to-the-supercloud-and-developer-week-2022/\">Supercloud</a> movement, Cloudflare has an excellent track record, and we are using<a href=\"https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/\"> Cloudflare Workers for Platforms</a> to host our serverless functions. By using the Workers isolated execution contexts we reduce security risks of running untrusted code on our own while being close to our users, resulting in super low latency.</p><p>All of it, without having to deploy extra infrastructure to handle our user’s application load or ask them to configure how the serverless functions should be deployed. It really feels like magic! Now, let's dive into the internals of how we use Cloudflare to run our Xata Workers.</p><p>For every workspace in Xata we create a Worker Namespace, a Workers for Platform concept to organize Workers and restrict the routing between them. We used Namespaces to group and encapsulate the different functions coming from all the databases built by a client or team.</p><p>When a user deploys a Xata Worker, we create a new Worker Script, and we upload the compiled code to its Namespace. Each script has a unique name with a compilation identifier so that the user can have multiple versions of the same function running at the same time.</p><p>During the compilation, we inject the database connection details and the database name. This way, the function can connect to the database without leaking secrets and restricting the scope of access to the database, all of it transparently for the developer.</p><p>When the client-side application runs a Xata Worker, it calls a Dispatcher function that processes the request and calls the correct Worker Script. The dispatcher function is also responsible for configuring the CORS headers and the log drain that can be used by the developer to debug their functions.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/11/Untitled--1-.png\" class=\"kg-image\" alt=\"A diagram featuring Xata worker workflow with Cloudflare\" loading=\"lazy\"></figure><p>By using Cloudflare, we are also able to benefit from other products in the Workers ecosystem. For example, we can provide an easy way to cache the results of a query in Cloudflare's global network. That way, we can serve the results for read-only queries directly from locations closer to the end users, without having to call the database again and again for every Worker invocation. For the developer, it's only a matter of adding a \"cache\" parameter to their query with the number of milliseconds they want to cache the results in a KV Namespace.</p><pre><code>import { xataWorker } from '~/xata';\n\nconst listProducts = xataWorker('listProducts', async ({ xata }) =&gt; {\n  return await xata.db.products.sort('popularity', 'desc').getMany({\n    cache: 15 * 60 * 1000 // TTL\n  });\n});\n</code></pre><p>In development mode, we provide a command to run the functions locally and test them before deploying them to production. This enables rapid development workflows with real-time filesystem change monitoring and hot reloading of the workers code. Internally, we use the latest version of miniflare to emulate the Cloudflare Workers runtime, mimicking the real production environment.</p><h3 id=\"conclusion\">Conclusion</h3><p>Xata is now out of beta and available for everyone. We offer a generous free tier that allows you to build and deploy your applications and only pay to scale them when you actually need it.</p><p>You can<a href=\"https://app.xata.io\"> sign up for free</a>, create a database in seconds and enjoy features such as branching with zero downtime migrations, search and analytics, transactions, and many others. Check out our<a href=\"https://xata.io\"> website</a> to learn more!</p><p>Xata Workers are currently in private beta. If you are interested in trying them out, you can sign up for the<a href=\"https://xata.io/beta/workers\"> waitlist</a> and talk us through your use case. We are looking for developers that are willing to provide feedback and shape this new feature for our serverless data platform.</p><p>We are very proud of our collaboration with Cloudflare for this new feature. Processing data closer to where it's being requested is the future of computing and we are excited to be part of this movement. We look forward to seeing what you build with Xata Workers.</p>",
		"comment_id": "63742956c343b2000a361041",
		"feature_image": "http://blog.cloudflare.com/content/images/2022/11/Customer-Story_-Xata_light-1.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2022-11-16T00:05:42.000+00:00",
		"updated_at": "2023-05-02T02:12:06.000+01:00",
		"published_at": "2022-11-16T14:00:00.000+00:00",
		"custom_excerpt": "Xata is on a mission to solve the industry’s hardest data problems with their Serverless Data Platform. We’re excited to have Xata building their serverless functions product – Xata Workers – on top of Workers for Platforms. Here is Xata’s story.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "636bd0e7c343b2000a36030c",
				"name": "Alexis Rico (Guest Blogger)",
				"slug": "alexis",
				"profile_image": "http://blog.cloudflare.com/content/images/2022/11/Screenshot-2022-11-09-at-16.09.29.png",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@SferaDev",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/alexis/"
			},
			{
				"id": "613a16bb3a467902a7476f60",
				"name": "Tanushree Sharma",
				"slug": "tanushree",
				"profile_image": "http://blog.cloudflare.com/content/images/2021/09/IMG_1328-1.jpg",
				"cover_image": null,
				"bio": "Product Manager, Cloudflare Workers",
				"website": null,
				"location": "Austin",
				"facebook": null,
				"twitter": "@_tanushreeeee",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/tanushree/"
			}
		],
		"tags": [
			{
				"id": "63742b3cc343b2000a36105b",
				"name": "#BLOG-1524",
				"slug": "hash-blog-1524",
				"description": null,
				"feature_image": null,
				"visibility": "internal",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/404/"
			},
			{
				"id": "607030964b1e0f03f340f2d8",
				"name": "Developer Week",
				"slug": "developer-week",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developer-week/"
			},
			{
				"id": "5d16450341acde0011a95253",
				"name": "Cloudflare Workers",
				"slug": "workers",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/workers/"
			},
			{
				"id": "5d16450341acde0011a95252",
				"name": "Serverless",
				"slug": "serverless",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Serverless.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Serverless",
				"meta_description": "Cloudflare blog posts tagged 'serverless'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/serverless/"
			},
			{
				"id": "5d16450341acde0011a95204",
				"name": "Developers",
				"slug": "developers",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Developers-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Developers",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Developers'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developers/"
			},
			{
				"id": "6450636642d421000a133298",
				"name": "Guest Post",
				"slug": "guest-post",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/guest-post/"
			},
			{
				"id": "64a3e2b834124c000b00b717",
				"name": "Developer Platform",
				"slug": "developer-platform",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developer-platform/"
			}
		],
		"primary_author": {
			"id": "636bd0e7c343b2000a36030c",
			"name": "Alexis Rico (Guest Blogger)",
			"slug": "alexis",
			"profile_image": "http://blog.cloudflare.com/content/images/2022/11/Screenshot-2022-11-09-at-16.09.29.png",
			"cover_image": null,
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@SferaDev",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/alexis/"
		},
		"primary_tag": null,
		"url": "http://blog.cloudflare.com/xata-customer-story/",
		"excerpt": "Xata is on a mission to solve the industry’s hardest data problems with their Serverless Data Platform. We’re excited to have Xata building their serverless functions product – Xata Workers – on top of Workers for Platforms. Here is Xata’s story.",
		"reading_time": 7,
		"access": true,
		"comments": false,
		"og_image": "http://blog.cloudflare.com/content/images/2022/11/Xata-Workers--client-side-database-access-without-client-side-secrets-OG-1.png",
		"og_title": null,
		"og_description": null,
		"twitter_image": "http://blog.cloudflare.com/content/images/2022/11/Xata-Workers--client-side-database-access-without-client-side-secrets-OG.png",
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	}
}