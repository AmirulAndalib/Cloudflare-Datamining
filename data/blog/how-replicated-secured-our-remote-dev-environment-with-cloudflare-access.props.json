{
	"post": {
		"id": "5e57dc6f82886b01bd034272",
		"uuid": "89778b06-ef1b-4950-be98-c71a19798618",
		"title": "How Replicated Developers Develop Remotely",
		"slug": "how-replicated-secured-our-remote-dev-environment-with-cloudflare-access",
		"html": "<p><em>This is a guest post by <a href=\"https://www.linkedin.com/in/campbe79/\">Marc Campbell</a> and <a href=\"https://www.linkedin.com/in/grantlmiller/\">Grant Miller</a>, co-founders of <a href=\"https://www.replicated.com/\">Replicated</a>.</em></p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2020/03/BDES-429_Replicated-Guest-Blog-Post-@2x.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>Replicated is a 5-year old infrastructure software company with a focus on enabling a new model of enterprise software delivery that we call Kubernetes Off-The-Shelf (KOTS) Software. Our team of 22 is largely technical with a geographic focus on Los Angeles and a few remote team members throughout the US. Our goal is to make it easy to install and operate third party software, so that sending your data to multi-tenant SaaS providers isn’t the only way to use their services. We think that it’s possible and easy to bring the applications to your data, securely and without a lot of operational overhead. While building Replicated, we began using Cloudflare first for DNS and DDoS protection, and over time started to use other Cloudflare services to help keep our services available and secure.</p><p>At Replicated, our development environment needs to be run on Kubernetes. Our product, <a href=\"http://github.com/replicatedhq/kots\">KOTS</a>, runs in Kubernetes and manages the lifecycle of 3rd-party applications in the Kubernetes cluster. Building and validating the product requires a developer to have access to a cluster. As our engineering team has grown to include dedicated front end engineers and other specialists who shouldn’t have to worry about building and maintaining their own cluster, the complexity of managing a local environment became a burden, and we needed to simplify in order to maintain developer productivity.</p><p>We’ve designed a solution that uses cloud-based infrastructure components, accessed and secured with Cloudflare Access and Argo, to move our development environment to Infrastructure as a Service (IaaS) resources; meaning our entire development environment is in the cloud. As a result, we’ve reduced the amount of time that a developer spends troubleshooting their local environment and allow every engineer on the team to maintain a full stack development environment, even if they are without deep Kubernetes expertise.</p><h3 id=\"previous-dev-environments-with-docker-for-mac\">Previous Dev Environments with Docker for Mac</h3><p>We started with each developer building their own local environments, using whatever tools they were comfortable with. Our first attempt to build a standard development environment that works for our engineering team was to use <a href=\"https://hub.docker.com/editions/community/docker-ce-desktop-mac\">Docker for Mac</a> and its <a href=\"https://www.docker.com/blog/docker-desktop-certified-kubernetes/\">built-in Kubernetes distribution</a>. We would buy the best MacBook Pros available (16 GB, then 32 GB, now 64 GB), and everyone would have the entire stack running on their laptop.</p><p>This worked pretty well, except that there was a set of problems that our engineers would continue to hit--battery life was terrible because of the constant CPU usage, Docker For Mac was different from “real Kubernetes” in some meaningful ways, and Docker for Mac’s built-in K8s regularly would just sometimes stop working and the developer would need to uninstall and reinstall the entire stack. It was miserable.</p><p>We’d lose hours every week from engineers troubleshooting their local environments. When a front end engineer (who wasn’t expected to be a Kubernetes expert) would have issues, they’d need to pair and get help from a backend engineer; consuming not just one but two people’s valuable time.</p><p>We needed something better.</p><h3 id=\"to-the-cloud\">To The Cloud</h3><p>Rather than running Docker locally, we now create an instance in Google Cloud for each developer. These instances have no public IP and are based on our machine image which has all of our prerequisites installed. This includes many tools, including a Kubernetes distribution that’s completely local to the server. We run a docker registry in each developer’s cluster as a cluster add-on. The cloud server has a magical tool called cloudflared running on it that replaces all of the network configuration and security work we would otherwise have had to do.‌‌</p><p>Cloudflared powers Argo Tunnel. When it starts, cloudflared creates four secure HTTP/2 tunnels to two Cloudflare data centers. When a request comes in for a development machine, Cloudflare routes that request over one of those tunnels directly to the machine running that developer’s environment. For example, my hostname is “marc.repl.dev”. Whenever I connect to that, from anywhere on earth, Cloudflare will see that I reach my development environment securely. If I need to spin up a new development environment, there is no configuration to do, wherever is running cloudflared with the appropriate credentials will receive the traffic. This all works on any cloud and in any cloud region.</p><p>‌‌This configuration has several advantages over a traditional deployment. For one, the server does not have a public IP and we don’t need to have any ports open in the Google Load Balancer, including for SSH. The only way to connect to these servers is through the Argo Tunnel, secured by Cloudflare Access. Access provides a<a href=\"http://blog.cloudflare.com/cloudflare-access-now-teams-of-any-size-can-turn-off-their-vpn/\"> BeyondCorp-style</a> method of authentication, this ensures that the environment can be reached from anywhere in the world without the use of a VPN.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2020/03/access-replicated@2x--1-.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>BeyondCorp is an elaborate way of saying that all our authentication is managed in a single place. We can write a policy which defines which machines a user should have access to and trust it will be applied everywhere. This means rather than managing SSH certificates which are hard to revoke and long-living, we can allow developers to login with the same Google credentials we use everywhere else! Should, knock on wood, a developer leave, we can revoke those credentials instantly; no more worrying what public keys they still might have lying around.</p><h3 id=\"what-happens-on-the-developer-s-machines\">What happens on the developer’s machines?</h3><p>Through Argo Tunnel and Access we now have the ability to connect to our new development instances, but that isn’t enough to allow our engineers to work. They need to be able to write and execute code on that remote machine in a seamless way. To solve that problem we turned to the <a href=\"https://code.visualstudio.com/docs/remote/ssh\">Remote SSH extension</a> for VS Code. In the words of the documentation for that project:</p><p>The Visual Studio Code Remote SSH extension allows you to open a remote folder on any remote machine, virtual machine, or container with a running SSH server and take full advantage of VS Code's feature set. Once connected to a server, you can interact with files and folders anywhere on the remote filesystem.</p><p>With Remote SSH, VS Code seamlessly reads and writes files to the developer’s remote server. When a developer opens a project, it feels local and seamless, but everything is authenticated by Access and proxied through Argo over SSH. Our developers can travel anywhere in the world, and trust their development environment will be accessible and fast.</p><p>Locally, a developer has a .ssh/config file to define local ports to forward through the SSH connection to a port that’s only available on the remote server. For example, my .ssh/config file contains:‌‌</p><!--kg-card-begin: markdown--><pre><code class=\"language-rust\">Host marc.repl.dev\nHostName marc.repl.dev\nUser marc\nLocalForward 8080 127.0.0.1:30080\nLocalForward 8005 127.0.0.1:30015\n...\n</code></pre>\n<!--kg-card-end: markdown--><p>To build and execute code our developers open the embedded terminal in VS Code. This automatically connects them to the remote server. We use <a href=\"https://github.com/GoogleContainerTools/skaffold\">skaffold</a>, a Kubernetes CLI for local development. A simple skaffold dev starts the stack on their remote machine which feels local because it’s all happening inside VS Code. Once it’s started, the developer can access localhost in their browser to view the results of their work by visiting <a href=\"http://localhost:8080\">http://localhost:8080</a>. The SSH config above will forward this traffic to port 30080 on the remote server. Port 30080 on the remote server is a NodePort configured in the local cluster, that has the web server running in it. All of our APIs and web servers have static NodePorts for local development environments.</p><p>Now, when a developer starts at Replicated, their first day (or even week) isn’t consumed by setting up the development environment--now it takes less than an hour. We have a Terraform script that makes it easy to replace any one of our developer’s machines in seconds.</p><h3 id=\"the-aftermath\">The Aftermath</h3><p>All developers at Replicated have now been using this environment for nine months. We haven’t eliminated the problems that occasionally come up where Kubernetes isn’t playing nicely, or Docker uses too much disk space. However, these problems do occur much less frequently than they did on Docker for Mac. We now have two new options that weren’t easily available when everyone ran their environment locally.</p><p>First, a backend engineer can just ssh through the Argo Tunnel into the other developers server to troubleshoot and help. Every development environment has become a collaborative place. This is great when two engineers aren’t in the same room.  Also, we’re less attached to our development environments--if my server isn’t working properly for unknown reasons, instead of troubleshooting it for hours, I can delete it and get a new clean one.</p><p>Some additional benefits include:</p><ul><li>Developers can have multiple envs easily (to try out a new k8s version, for example)</li><li>Battery life is awesome again on laptops</li><li>We don’t need the biggest and most powerful laptops anymore (Hello Chromebooks and Tablets)</li><li>Developers can choose their local OS and environment (MacOS, Windows, Linux) because they are all supported, as long as SSH is supported.</li><li>Code does not live on a developer laptop; it doesn’t travel with them to coffee shops and other insecure places. This is great for security purposes--a lost laptop no longer means the codebase is out there with it.</li></ul><h3 id=\"how-to\">How To</h3><p>Beyond just telling you what we did, we’d like to show you how to replicate it for yourself! This assumes you have a domain which is already configured to use Cloudflare.</p><ol><li>Create an instance to represent your development environment in the cloud of your choice.</li></ol><!--kg-card-begin: markdown--><pre><code class=\"language-rust\">gcloud compute instances create my-dev-universe`</code></pre>\n<!--kg-card-end: markdown--><p>2.   Configure your instance to run cloudflared when it starts up, and give it a helpful hostname like dev.mysite.com.‌‌</p><!--kg-card-begin: markdown--><pre><code class=\"language-rustsudo\">cat “hostname: dev.mysite.com\\n” &gt; ~/.cloudflared/config.yml\ncloudflared login\nsudo cloudflared service install</code></pre>\n<!--kg-card-end: markdown--><p>3.  Write an Access policy to allow only you to access your machine‌‌</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2020/03/AccessPolicy.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>‌4. Configure your local machine to SSH via Cloudflare:‌‌</p><!--kg-card-begin: markdown--><pre><code class=\"language-rust\">sudo apt-get install cloudflare/cloudflare/cloudflared\ncloudflared access ssh-config --hostname dev.mysite.com --short-lived-cert\n&gt;&gt; ~/.ssh/config</code></pre>\n<!--kg-card-end: markdown--><p>4. Install <a href=\"https://code.visualstudio.com/\">VS Code</a> and the <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack\">Remote Development extension pack</a></p><p>5. In VS Code select ‘Remote-SSH: Connect to Host…’ from the Command Palette and enter <a href=\"mailto:user@dev.mysite.com\">user@dev.mysite.com</a>. A browser window will open where you will be prompted to login with the identity provider you configured with Cloudflare.</p><p>6. You’re done! If you select File &gt; Open you will be seeing files on your remote machine. The embedded terminal will also execute code on that remote machine.</p><p>7. Once you’re ready to get a production-ready setup for your team, take a look at the <a href=\"https://gist.github.com/marccampbell/28585dfddafd25fe63be71e91cc0da0b\">instructions</a> we share with our team.</p><h3 id=\"conclusion\">Conclusion</h3><p>There is no doubt that the world is becoming more Internet-connected, and that deployment environments are becoming more complex. It stands to reason that it’s only a matter of time before all software development happens through and in concert with the Internet.</p><p>While it might not be the best solution for every team, it has resulted in a dramatically better experience for Replicated and we hope it does for you as well.</p><h3 id=\"how-to-get-started-\">How to get started‌‌</h3><p>‌‌Replicated develops remotely with <a href=\"https://teams.cloudflare.com/access/\">Cloudflare Access</a>, a remote access gateway that helps you secure access to internal applications and infrastructure without a VPN. </p><p>Effective until September 1, 2020, Cloudflare is making Access and other Cloudflare for Teams products free to small businesses. We're doing this to help ensure that small businesses that implement work from home policies in order to combat the spread of the Coronavirus (COVID-19) can ensure business continuity.</p><p>‌You can learn more and apply at c<a href=\"https://www.cloudflare.com/smallbusiness/\">loudflare.com/smallbusiness</a> now.</p>",
		"comment_id": "5e57dc6f82886b01bd034272",
		"feature_image": "http://blog.cloudflare.com/content/images/2020/02/How-Replicated-secured-our-remote-dev-environ-1.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2020-02-27T15:12:47.000+00:00",
		"updated_at": "2020-03-26T21:03:47.000+00:00",
		"published_at": "2020-03-10T13:00:00.000+00:00",
		"custom_excerpt": "Replicated is a 5-year old infrastructure software company with a focus on enabling a new model of enterprise software delivery that we call Kubernetes Off-The-Shelf (KOTS) Software.",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"tags": [
			{
				"id": "5d16450341acde0011a9522f",
				"name": "Cloudflare Access",
				"slug": "cloudflare-access",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/cloudflare-access/"
			},
			{
				"id": "5e13bb91135aa90272a71e1e",
				"name": "Cloudflare Zero Trust",
				"slug": "cloudflare-zero-trust",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/cloudflare-zero-trust/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			},
			{
				"id": "5d16450341acde0011a95256",
				"name": "VPN",
				"slug": "vpn",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/vpn/"
			}
		],
		"authors": [
			{
				"id": "5d1644b141acde0011a94f96",
				"name": "Guest Author",
				"slug": "guest-author",
				"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2019/10/Screen-Shot-2019-10-09-at-11.21.59-AM.png",
				"cover_image": "http://blog.cloudflare.com/content/images/2019/05/general@2x-9.png",
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/guest-author/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a94f96",
			"name": "Guest Author",
			"slug": "guest-author",
			"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2019/10/Screen-Shot-2019-10-09-at-11.21.59-AM.png",
			"cover_image": "http://blog.cloudflare.com/content/images/2019/05/general@2x-9.png",
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": null,
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/guest-author/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a9522f",
			"name": "Cloudflare Access",
			"slug": "cloudflare-access",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/cloudflare-access/"
		},
		"url": "http://blog.cloudflare.com/how-replicated-secured-our-remote-dev-environment-with-cloudflare-access/",
		"excerpt": "Replicated is a 5-year old infrastructure software company with a focus on enabling a new model of enterprise software delivery that we call Kubernetes Off-The-Shelf (KOTS) Software.",
		"reading_time": 8,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": "Replicated is a 5-year old infrastructure software company with a focus on enabling a new model of enterprise software delivery that we call Kubernetes Off-The-Shelf (KOTS) Software.",
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	},
	"locale": "en-us"
}