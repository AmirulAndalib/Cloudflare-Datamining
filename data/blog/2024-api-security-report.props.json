{
	"post": {
		"id": "659c02d6aa281c000a8acd31",
		"uuid": "dcd6a6e5-a47f-4fe9-bf29-e7a16f6e82d1",
		"title": "Introducing Cloudflare’s 2024 API security and management report",
		"slug": "2024-api-security-report",
		"html": "<!--kg-card-begin: markdown--><p><small>This post is also available in <a href=\"http://blog.cloudflare.com/ja-jp/2024-api-security-report-ja-jp/\">日本語</a>, <a href=\"http://blog.cloudflare.com/zh-cn/2024-api-security-report-zh-cn/\">简体中文</a>, <a href=\"http://blog.cloudflare.com/ko-kr/2024-api-security-report-ko-kr/\">한국어</a>, <a href=\"http://blog.cloudflare.com/fr-fr/2024-api-security-report-fr-fr/\">Français</a>,  <a href=\"http://blog.cloudflare.com/zh-tw/2024-api-security-report-zh-tw/\">繁體中文</a>, <a href=\"http://blog.cloudflare.com/es-es/2024-api-security-report-es-es/\">Español</a>, <a href=\"http://blog.cloudflare.com/de-de/2024-api-security-report-de-de/\">Deutsch</a>, <a href=\"http://blog.cloudflare.com/pt-br/2024-api-security-report-pt-br/\">Português</a> and <a href=\"http://blog.cloudflare.com/nl-nl/2024-api-security-report-nl-nl/\">Nederlands</a>.</small></p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2024/01/Artboard-1-1.png\" class=\"kg-image\" alt=\"Introducing Cloudflare’s 2024 API security and management report\" loading=\"lazy\" width=\"1465\" height=\"845\"></figure><p>You may know Cloudflare as the company powering nearly 20% of the web. But powering and protecting websites and static content is only a fraction of what we do. In fact, well over half of the dynamic traffic on our network consists not of web pages, but of Application Programming Interface (API) traffic — the plumbing that makes technology work. This blog introduces and is a supplement to the <a href=\"https://www.cloudflare.com/lp/api-security-report/\">API Security Report for 2024</a> where we detail exactly how we’re protecting our customers, and what it means for the future of API security. Unlike other industry API reports, our report isn’t based on user surveys — but instead, based on real traffic data.</p><p>If there’s only one thing you take away from our report this year, it’s this: many organizations lack accurate API inventories, <em>even when they believe they can correctly identify API traffic</em>. Cloudflare helps organizations discover all of their public-facing APIs using<a href=\"http://blog.cloudflare.com/ml-api-discovery-and-schema-learning/\"> two approaches</a>. First, customers configure our API discovery tool to monitor for identifying tokens present in their known API traffic. We then use a machine learning model that scans not just these known API calls, but <em>all</em> HTTP requests, identifying API traffic that may be going unaccounted for. The difference between these approaches is striking: <strong>we found 30.7% more API endpoints through machine learning-based discovery </strong>than the self-reported approach, suggesting that nearly a third of APIs are “<a href=\"https://www.cloudflare.com/learning/security/api/what-is-shadow-api/\">Shadow APIs</a>” — and may not be properly inventoried and secured.</p><p>Read on for extras and highlights from our inaugural API security report. In the <a href=\"https://www.cloudflare.com/2024-api-security-management-report/\">full report</a>, you’ll find updated statistics about the threats we see and prevent, along with our predictions for 2024. We predict that a lack of API security focus at organizations will lead to increased complexity and loss of control, and increased access to generative AI will lead to more API risk. We also anticipate an increase in API business logic attacks in 2024. Lastly, all of the above risks will necessitate growing governance around API security.</p><h3 id=\"hidden-attack-surfaces\">Hidden attack surfaces</h3><p>How are web pages and APIs different? APIs are a quick and easy way for applications to retrieve data in the background, or ask that work be done from other applications. For example, anyone can write a weather app without being a meteorologist: a developer can write the structure of the page or mobile application and ask a weather API for the forecast using the user’s location. Critically, most end users don’t know that the data was provided by the weather API and not the app’s owner.</p><p>While APIs are the critical plumbing of the Internet, they're also ripe for abuse. For example, flaws in API authentication and authorization at Optus <a href=\"https://www.bleepingcomputer.com/news/security/optus-hacker-apologizes-and-allegedly-deletes-all-stolen-data/\">led to a threat actor offering</a> 10 million user records for sale, and government agencies have <a href=\"https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-208a\">warned about</a> these exact API attacks. Developers in an organization will often create Internet-facing APIs, used by their own applications to function more efficiently, but it's on the security team to protect these new public interfaces. If the process of documenting APIs and bringing them to the attention of the security team isn't clear, they become Shadow APIs — operating in production but without the organization's knowledge. This is where the security challenge begins to emerge.</p><p>To help customers solve this problem, we shipped <a href=\"https://developers.cloudflare.com/api-shield/security/api-discovery/\">API Discovery</a>. When we <a href=\"http://blog.cloudflare.com/ml-api-discovery-and-schema-learning/\">introduced</a> our latest release, we mentioned how few organizations have accurate API inventories. Security teams sometimes are forced to adopt an “email and ask” approach to build an inventory, and in doing so responses are immediately stale upon the next application release when APIs change. Better is to track API changes by code base changes, keeping up with new releases. However, this still has a drawback of only inventorying actively maintained code. Legacy applications may not see new releases, despite receiving production traffic.</p><p>Cloudflare's approach to API management involves creating a comprehensive, accurate API inventory using a blend of machine learning-based API discovery and network traffic inspection. This is integral to our <a href=\"https://www.cloudflare.com/application-services/products/api-gateway/\">API Gateway</a> product, where customers can manage their Internet-facing endpoints and monitor API health. The API Gateway also allows customers to identify their API traffic using session identifiers (typically a header or cookie), which aids in specifically identifying API traffic for the discovery process.</p><p>As noted earlier, our analysis reveals that even knowledgeable customers often overlook significant portions of their API traffic. By comparing session-based API discovery (using API sessions to pinpoint traffic) with our machine learning-based API discovery (analyzing <em>all</em> incoming traffic), we found that the latter uncovers on average 30.7% more endpoints! Without broad traffic analysis, you may be missing almost a third of your API inventory.</p><p>If you aren’t a Cloudflare customer, you can still get started building an API inventory. APIs are typically cataloged in a standardized format called <a href=\"https://spec.openapis.org/oas/latest.html\">OpenAPI</a>, and many development tools can build OpenAPI formatted schema files. If you have a file with that format, you can start to build an API inventory yourself by collecting these schemas. Here is an example of how you can pull the endpoints out of a schema file, assuming your have an OpenAPI v3 formatted file named <code>my_schema.json</code>:</p><!--kg-card-begin: markdown--><pre><code class=\"language-python\">import json\nimport csv\nfrom io import StringIO\n\n# Load the OpenAPI schema from a file\nwith open(&quot;my_schema.json&quot;, &quot;r&quot;) as file:\n    schema = json.load(file)\n\n# Prepare CSV output\noutput = StringIO()\nwriter = csv.writer(output)\n\n# Write CSV header\nwriter.writerow([&quot;Server&quot;, &quot;Path&quot;, &quot;Method&quot;])\n\n# Extract and write data to CSV\nservers = schema.get(&quot;servers&quot;, [])\nfor server in servers:\n    url = server['url']\n    for path, methods in schema['paths'].items():\n        for method in methods.keys():\n            writer.writerow([url, path, method])\n\n# Get and print CSV string\ncsv_output = output.getvalue().strip()\nprint(csv_output)\n</code></pre>\n<!--kg-card-end: markdown--><p>Unless you have been generating OpenAPI schemas and tracking API inventory from the beginning of your application’s development process, you’re probably missing some endpoints across your production application API inventory.</p><h3 id=\"precise-rate-limits-minimize-attack-potential\">Precise rate limits minimize attack potential</h3><p>When it comes to stopping abuse, most practitioners’ thoughts first come to <a href=\"https://www.cloudflare.com/learning/bots/what-is-rate-limiting/\">rate limiting</a>. <strong>Implementing limits on your API is a valuable tool to keep abuse in check and prevent accidental overload of the origin.</strong> But how do you know if you’ve chosen the correct rate limiting approach? Approaches can vary, but they generally come down to the error code chosen, and the basis for the limit value itself.</p><p>For some APIs, practitioners configure rate limiting errors to respond with an HTTP 403 (forbidden), while others will respond with HTTP 429 (too many requests). Using HTTP 403 sounds innocent enough until you realize that other security tools are also responding with 403 codes. When you’re under attack, it can be hard to decipher which tools are responsible for which errors / blocking.</p><p>Alternatively, if you utilize HTTP 429 for your rate limits, attackers will instantly know that they’ve been rate limited and can “surf” right under the limit without being detected. This can be OK if you’re only limiting requests to ensure your back-end stays alive, but it can tip your cards to attackers. In addition, attackers can “scale out” to more API clients to effectively request above the rate limit.</p><p>There are pros and cons to both approaches, but we find that by far most APIs respond with HTTP 429 out of all the 4xx and 5xx error messages (almost 52%).</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2024/01/Untitled.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"1600\" height=\"885\"></figure><p>What about the logic of the rate limit rule itself, not just the response code? Implementing request limits on IP addresses can be tempting, but <strong>we recommend you base the limit on a session ID as a best practice and only fall back to IP address (or IP + JA3 fingerprint) when session IDs aren’t available</strong>. Setting rate limits on user sessions instead of IPs will reliably identify your real users and minimize false positives due to shared IP space. Cloudflare’s <a href=\"https://www.cloudflare.com/application-services/products/rate-limiting/\">Advanced Rate Limiting</a> and API Gateway’s <a href=\"https://developers.cloudflare.com/api-shield/security/volumetric-abuse-detection/\">volumetric abuse protection</a> make it easy to enforce these limits by profiling session traffic on each API endpoint and giving one-click solutions to set up the per-endpoint rate limits.</p><p>To find values for your rate limits, Cloudflare API Gateway computes session request statistics for you. We suggest a limit by looking at the distribution of requests per session across <em>all</em> sessions to your API as identified by the customer-configured API session identifier. We then <a href=\"https://developers.cloudflare.com/api-shield/security/volumetric-abuse-detection/#observe-rate-limits\">compute statistical p-levels</a> — which describe the request rates for different cohorts of traffic — for p50, p90, and p99 on this distribution and use the variance of the distribution to come up with a recommended threshold for every single endpoint in your API inventory. The recommendation might not match the p-levels, which is an important distinction and a reason not to use p-levels alone. Along with the recommendation, API Gateway informs users of our confidence in the recommendation. Generally, the more API sessions we’re able to collect, the more confident we’ll be in the recommendation.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2024/01/Screenshot-2024-01-04-at-12.50.45-1.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"2082\" height=\"1116\"></figure><p>Activating a rate limit is as easy as clicking the ‘create rule’ link, and API Gateway will automatically bring your session identifier over to the advanced rate limit rule creation page, ensuring your rules have pinpoint accuracy to defend against attacks and minimize false positives compared to traditional, overly broad limits.</p><h3 id=\"apis-are-also-victim-to-web-application-attacks\">APIs are also victim to web application attacks</h3><p>APIs aren’t immune from normal OWASP Top 10 style attacks like <a href=\"https://www.cloudflare.com/learning/security/threats/sql-injection/\">SQL injection</a>. The body of API requests can also find its way as a database input just like a web page form input or URL argument. It’s important to ensure that you have a <a href=\"https://www.cloudflare.com/learning/ddos/glossary/web-application-firewall-waf/\">web application firewall (WAF)</a> also protecting your API traffic to defend against these styles of attacks.</p><p>In fact, when we looked at Cloudflare’s WAF managed rules, injection attacks were the second most common threat vector Cloudflare saw carried out on APIs. The most common threat was HTTP Anomaly. Examples of HTTP anomalies include malformed method names, null byte characters in headers, non-standard ports or content length of zero with a POST request. Here are the stats on the other top threats we saw against APIs:</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2024/01/Untitled--1---1-.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"1600\" height=\"822\"></figure><p>Absent from the chart is broken authentication and authorization. Broken authentication and authorization occur when an API fails to check whether the entity sending requests for information to an API actually has the permission to request that data or not. It can also happen when attacks try to forge credentials and insert less restricted permissions into their existing (valid) credentials that have more restricted permissions. OWASP categorizes these attacks in a few different ways, but the main categories are Broken Object Level Authorization (BOLA) and Broken Function Level Authorization (BFLA) attacks.</p><p>The root cause of a successful BOLA / BFLA attack lies in an origin API not checking proper ownership of database records against the identity requesting those records. Tracking these specific attacks can be difficult, as the permission structure may be simply absent, inadequate, or improperly implemented. Can you see the chicken-and-egg problem here? It would be easy to stop these attacks if we knew the proper permission structure, but if we or our customers knew the proper permission structure or could guarantee its enforcement, the attacks would be unsuccessful to begin with. Stay tuned for future API Gateway feature launches where we’ll use our knowledge of API traffic norms to automatically suggest security policies that highlight and stop BOLA / BFLA attacks.</p><p>Here are four ways to plug authentication loopholes that may exist for your APIs, even if you don’t have a fine-grained authorization policy available:</p><ol><li>First, enforce authentication on each publicly accessible API unless there's a business approved exception. Look to technologies like mTLS and JSON Web Tokens.</li><li>Limit the speed of API requests to your servers to slow down potential attackers.</li><li>Block abnormal volumes of sensitive data outflow.</li><li>Block attackers from skipping legitimate sequences of API requests.</li></ol><h3 id=\"apis-are-surprisingly-human-driven-not-machine-driven-anymore\">APIs are surprisingly human driven, not machine driven anymore</h3><p>If you’ve been around technology since the pre-smartphone days when fewer people were habitually online, it can be tempting to think of APIs as only used for machine-to-machine communication in something like an overnight batch job process. However, the truth couldn’t be more different. As we’ve discussed, many web and mobile applications are powered by APIs, which facilitate everything from authentication to transactions to serving media files. As people use these applications, there is a corresponding increase in API traffic volume.</p><p>We can illustrate this by looking at the API traffic patterns observed during holidays, when people gather around friends and family and spend more time socializing in person and less time online. We’ve annotated the following Worldwide API traffic graph with common holidays and promotions. Notice how traffic peaks around Black Friday and Cyber Monday around the +10% level when people shop online, but then traffic drops off for the festivities of Christmas and New Years days.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"http://blog.cloudflare.com/content/images/2024/01/Untitled--2-.png\" class=\"kg-image\" alt loading=\"lazy\" width=\"1600\" height=\"647\"></figure><p>This pattern <a href=\"http://blog.cloudflare.com/cyber-week-analyzing-internet-traffic-and-e-commerce-trends\">closely resembles</a> what we observe in regular HTTP traffic. It’s clear that APIs are no longer just the realm of automated processes but are intricately linked with human behaviors and social trends.</p><h3 id=\"recommendations\">Recommendations</h3><p>There is no silver bullet for holistic API security. For the best effect, Cloudflare recommends four strategies for increasing API security posture:</p><ol><li>Combine API application development, visibility, performance, and security with a unified control plane that can keep an up-to-date API inventory.</li><li>Use security tools that utilize machine learning technologies to free up human resources and reduce costs.</li><li>Adopt a positive security model for your APIs (see below for an explanation on positive and negative security models).</li><li>Measure and improve your organization’s API maturity level over time (also see below for an explanation of an API maturity level).</li></ol><p>What do we mean by a ‘positive’ or ‘negative’ security model? In a negative model, security tools look for known signs of attack and take action to stop those attacks. In a positive model, security tools look for known good requests and only let those through, blocking all else. APIs are often so structured that positive security models make sense for the highest levels of security. You can also combine security models, such as using a WAF in a negative model sense, and using API Schema Validation in a positive model sense.</p><p>Here’s a quick way to gauge your organization’s API security maturity level over time: Novice organizations will get started by assembling their first API inventory, no matter how incomplete. More mature organizations will strive for API inventory accuracy and automatic updates. The most mature organizations will actively enforce security checks in a positive security model on their APIs, enforcing API schema, valid authentication, and checking behavior for signs of abuse.</p><h3 id=\"predictions\">Predictions</h3><p>In closing, our top four predictions for 2024 and beyond:</p><p><strong>Increased loss of control and complexity:</strong> we surveyed practitioners in the API Security and Management field and 73% responded that security requirements interfere with their productivity and innovation. Coupled with increasingly sprawling applications and inaccurate inventories, API risks and complexity will rise.</p><p><strong>Easier access to AI leading to more API risks:</strong> the rise in generative AI brings potential risks, including AI models’ APIs being vulnerable to attack, but also developers shipping buggy, AI-written code. Forrester predicts that, in 2024, without proper guardrails, “at least three data breaches will be publicly blamed on insecure AI-generated code – either due to security flaws in the generated code itself or vulnerabilities in AI-suggested dependencies.”</p><p><strong>Increase in business logic-based fraud attacks:</strong> professional fraudsters run their operations just like a business, and they have costs like any other. We anticipate attackers will run fraud bots efficiently against APIs even more than in previous years.</p><p><strong>Growing governance:</strong> The first version of <a href=\"https://www.cloudflare.com/learning/privacy/what-is-pci-dss-compliance/\">PCI DSS</a> that directly addresses API security will go into effect in March 2024. Check your industry’s specific requirements with your audit department to be ready for requirements as they come into effect.</p><p>If you’re interested in the full report, you can download the 2024 API Security Report <a href=\"https://www.cloudflare.com/2024-api-security-management-report/\">here</a>, which includes full detail on our recommendations.</p><p><em>Cloudflare API Gateway is our <a href=\"https://www.cloudflare.com/application-services/solutions/api-security/\">API security solution</a>, and it is available for all Enterprise customers. If you aren’t subscribed to API Gateway, </em><a href=\"http://dash.cloudflare.com/?to=/:account/:zone/security/api-shield\"><em>click here</em></a><em> to view your initial API Discovery results and start a trial in the Cloudflare dashboard. To learn how to use API Gateway to secure your traffic, </em><a href=\"https://developers.cloudflare.com/api-shield/\"><em>click here</em></a><em> to view our development docs and </em><a href=\"https://developers.cloudflare.com/api-shield/get-started/\"><em>here</em></a><em> for our getting started guide.</em></p>",
		"comment_id": "659c02d6aa281c000a8acd31",
		"feature_image": "http://blog.cloudflare.com/content/images/2024/01/Artboard-1.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2024-01-08T14:12:38.000+00:00",
		"updated_at": "2024-04-12T17:04:15.000+01:00",
		"published_at": "2024-01-09T14:00:03.000+00:00",
		"custom_excerpt": "Today, we’re releasing our 2024 API Security and Management Report. This blog introduces and is a supplement to the API Security and Management Report for 2024 where we detail exactly how we’re protecting our customers, and what it means for the future of API security",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"authors": [
			{
				"id": "63ee9b4bea5b01000ae295bb",
				"name": "John Cosgrove",
				"slug": "john-cosgrove",
				"profile_image": "http://blog.cloudflare.com/content/images/2023/03/IMG-9296-smol.jpg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@cameracoz",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/john-cosgrove/"
			},
			{
				"id": "61605095966cdd02a833ba42",
				"name": "Sabina Zejnilovic",
				"slug": "sabina",
				"profile_image": "http://blog.cloudflare.com/content/images/2021/10/sabina-1.JPG",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/sabina/"
			}
		],
		"tags": [
			{
				"id": "659c02fcaa281c000a8acd38",
				"name": "#BLOG-2204",
				"slug": "hash-blog-2204",
				"description": null,
				"feature_image": null,
				"visibility": "internal",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/404/"
			},
			{
				"id": "6231b1426e52fb000b52ecdf",
				"name": "API Gateway",
				"slug": "api-gateway",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/api-gateway/"
			},
			{
				"id": "63160eb0ec6c4e000bf2b142",
				"name": "API Security",
				"slug": "api-security",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/api-security/"
			},
			{
				"id": "5f725568c9353501baf0c682",
				"name": "API Shield",
				"slug": "api-shield",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/api-shield/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			}
		],
		"primary_author": {
			"id": "63ee9b4bea5b01000ae295bb",
			"name": "John Cosgrove",
			"slug": "john-cosgrove",
			"profile_image": "http://blog.cloudflare.com/content/images/2023/03/IMG-9296-smol.jpg",
			"cover_image": null,
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@cameracoz",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/john-cosgrove/"
		},
		"primary_tag": null,
		"url": "http://blog.cloudflare.com/2024-api-security-report/",
		"excerpt": "Today, we’re releasing our 2024 API Security and Management Report. This blog introduces and is a supplement to the API Security and Management Report for 2024 where we detail exactly how we’re protecting our customers, and what it means for the future of API security",
		"reading_time": 11,
		"access": true,
		"comments": false,
		"og_image": "http://blog.cloudflare.com/content/images/2024/01/Introducing-Cloudflare-s-2024-API-security-and-management-report-OG-1.png",
		"og_title": null,
		"og_description": null,
		"twitter_image": "http://blog.cloudflare.com/content/images/2024/01/Introducing-Cloudflare-s-2024-API-security-and-management-report-OG.png",
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": "Today, we’re releasing our 2024 API Security and Management Report. This blog introduces and is a supplement to the API Security and Management Report for 2024 where we detail exactly how we’re protecting our customers, and what it means for the future of API security.",
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": "Introducing Cloudflare’s 2024 API security and management report",
		"feature_image_caption": null
	},
	"locale": "en-us"
}