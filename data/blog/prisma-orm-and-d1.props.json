{
	"locale": "en-us",
	"post": {
		"access": true,
		"authors": [
			{
				"id": "660c7efda5fcdf000a08f8e9",
				"name": "Jon Harrell (Guest Author)",
				"slug": "jon-guest",
				"profile_image": "http://blog.cloudflare.com/content/images/2024/04/1602519318329.jpg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@jonbharrell",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/jon-guest/"
			}
		],
		"canonical_url": null,
		"codeinjection_foot": null,
		"codeinjection_head": null,
		"comment_id": "660c7aeaa5fcdf000a08f886",
		"comments": false,
		"created_at": "2024-04-02T22:38:50.000+01:00",
		"custom_excerpt": "Together, Cloudflare and Prisma make it easier than ever to deploy globally available apps with a focus on developer experience. To further that goal, Prisma ORM now natively supports Cloudflare Workers and D1 in Preview",
		"custom_template": null,
		"email_subject": null,
		"excerpt": "Together, Cloudflare and Prisma make it easier than ever to deploy globally available apps with a focus on developer experience. To further that goal, Prisma ORM now natively supports Cloudflare Workers and D1 in Preview",
		"feature_image": "http://blog.cloudflare.com/content/images/2024/04/image2-5.png",
		"feature_image_alt": "Improving Cloudflare Workers and D1 developer experience with Prisma ORM",
		"feature_image_caption": null,
		"featured": false,
		"frontmatter": null,
		"html": "<figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2024/04/image2-4.png\" class=\"kg-image\" alt=\"Improving Cloudflare Workers and D1 developer experience with Prisma ORM\" loading=\"lazy\" width=\"1999\" height=\"1125\"></figure><p>Working with databases can be difficult. Developers face increasing data complexity and needs beyond simple create, read, update, and delete (CRUD) operations. Unfortunately, these issues also compound on themselves: developers have a harder time iterating in an increasingly complex environment. Cloudflare Workers and D1 help by reducing time spent managing infrastructure and deploying applications, and <a href=\"https://prisma.io\">Prisma</a> provides a great experience for your team to work and interact with data.  </p><p>Together, Cloudflare and Prisma make it easier than ever to deploy globally available apps with a focus on developer experience. To further that goal, Prisma Object Relational Mapper (ORM) now natively supports Cloudflare Workers and D1 in Preview. With version <code>5.12.0</code> of Prisma ORM you can now interact with your data stored in D1 from your Cloudflare Workers with the convenience of the Prisma Client API. Learn more and <a href=\"https://pris.ly/d/d1\">try it out now</a>.</p><h3 id=\"what-is-prisma\">What is Prisma?</h3><p>From writing to debugging, SQL queries take a long time and slow developer productivity. Even before writing queries, modeling tables can quickly become unwieldy, and migrating data is a nerve-wracking process. Prisma ORM looks to resolve all of these issues by providing an intuitive data modeling language, an automated migration workflow, and a developer-friendly and type-safe client for JavaScript and TypeScript, allowing developers to focus on what they enjoy: developing!</p><p><a href=\"https://prisma.io\">Prisma</a> is focused on making working with data easy. Alongside an ORM, Prisma offers <a href=\"https://www.prisma.io/data-platform/accelerate\">Accelerate</a> and <a href=\"https://www.prisma.io/data-platform/pulse\">Pulse</a>, products built on Cloudflare that cover needs from connection pooling, to query caching, to real-time type-safe database subscriptions.</p><h2 id=\"how-to-get-started-with-prisma-orm-cloudflare-workers-and-d1\"><strong>How to get started with Prisma ORM, Cloudflare Workers, and D1</strong></h2><p>To get started with Prisma ORM and D1, first create a basic Cloudflare Workers app. This guide will start with the <code>”Hello World”</code> Worker example app, but any Workers example app will work. If you don’t have a project yet, start by creating a new one. Name your project something memorable, like <code>my-d1-prisma-app</code> and select “Hello World” worker and TypeScript. For now, we will choose to not deploy and will wait until after we have set up D1 and Prisma ORM.</p><p><code>npm create cloudflare@latest</code></p><p>Next, move into your newly created project and make sure that dependencies are installed:</p><p><code>cd my-d1-prisma-app &amp;&amp; npm install</code></p><p>After dependencies are installed, we can move on to the D1 setup.</p><p>First, create a new D1 database for your app.</p><pre><code>npx wrangler d1 create prod-prisma-d1-app\n.\n.\n.\n\n[[d1_databases]]\nbinding = \"DB\" # i.e. available in your Worker on env.DB\ndatabase_name = \"prod-prisma-d1-app\"\ndatabase_id = \"&lt;unique-ID-for-your-database&gt;\"\n</code></pre><p>The section starting with <code>[[d1_databases]]</code> is the binding configuration needed in your <code>wrangler.toml</code> for your Worker to communicate with D1. Add that now:</p><pre><code>// wrangler.toml\nname=\"my-d1-prisma-app\"\nmain = \"src/index.ts\"\ncompatibility_date = \"2024-03-20\"\ncompatibility_flags = [\"nodejs_compat\"]\n\n[[d1_databases]]\nbinding = \"DB\" # i.e. available in your Worker on env.DB\ndatabase_name = \"prod-prisma-d1-app\"\ndatabase_id = \"&lt;unique-ID-for-your-database&gt;\"\n</code></pre><p>Your application now has D1 available! Next, add Prisma ORM to manage your queries, schema and migrations! To add Prisma ORM, first make sure the latest version is installed. Prisma ORM versions 5.12.0 and up support Cloudflare Workers and D1.</p><p><code>npm install prisma@latest @prisma/client@latest @prisma/adapter-d1</code></p><p>Now run <code>npx prisma init</code> in order to create the necessary files to start with. Since D1 uses SQLite’s SQL dialect, we set the provider to be <code>sqlite</code>.</p><p><code>npx prisma init --datasource-provider sqlite</code></p><p>This will create a few files, but the one to look at first is your <a href=\"https://www.prisma.io/docs/orm/prisma-schema/overview\">Prisma schema file</a>, available at <code>prisma/schema.prisma</code></p><pre><code>// schema.prisma\n// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url  = env(\"DATABASE_URL\")\n}\n</code></pre><p>Before you can create any models, first enable the <code>driverAdapters</code> Preview feature. This will allow the Prisma Client to use an adapter to communicate with D1.</p><pre><code>// schema.prisma\n// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n+ previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n</code></pre><p>Now you are ready to create your first model! In this app, you will be creating a “ticker”, a mainstay of many classic Internet sites.</p><p>Add a new model to your schema, <code>Visit</code>, which will track that an individual visited your site. A <code>Visit</code> is a simple model that will have a unique ID and the time at which an individual visited your site.</p><pre><code>// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n+ model Visit {\n+   id        Int      @id @default(autoincrement())\n+   visitTime DateTime @default(now())\n+ }\n\n</code></pre><p>Now that you have a schema and a model, let’s create a migration. First use <code>wrangler</code> to generate an empty migration file and <code>prisma migrate</code> to fill it. If prompted, select “yes” to create a migrations folder at the root of your project.</p><pre><code>npx wrangler d1 migrations create prod-prisma-d1-app init\n ⛅️ wrangler 3.36.0\n-------------------\n✔ No migrations folder found. Set `migrations_dir` in wrangler.toml to choose a different path.\nOk to create /path/to/your/project/my-d1-prisma-app/migrations? … yes\n✅ Successfully created Migration '0001_init.sql'!\n\nThe migration is available for editing here\n/path/to/your/project/my-d1-prisma-app/migrations/0001_init.sql\n</code></pre><pre><code>npx prisma migrate diff --script --from-empty --to-schema-datamodel ./prisma/schema.prisma &gt;&gt; migrations/0001_init.sql</code></pre><p>The <code>npx prisma migrate diff</code> command takes the difference between your database (which is currently empty) and the Prisma schema. It then saves this difference to a new file in the migrations directory.</p><pre><code>// 0001_init.sql\n-- Migration number: 0001 \t 2024-03-21T22:15:50.184Z\n-- CreateTable\nCREATE TABLE \"Visit\" (\n    \"id\" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    \"visitTime\" DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP\n</code></pre><p>Now you can migrate your local and remote D1 database instances using <code>wrangler</code> and re-generate your Prisma Client to begin making queries.</p><pre><code>npx wrangler d1 migrations apply prod-prisma-d1-app --local\nnpx wrangler d1 migrations apply prod-prisma-d1-app --remote\nnpx prisma generate\n</code></pre><p>Make sure to import <code>PrismaClient</code> and <code>PrismaD1</code>, define the binding for your D1 database, and you’re ready to use Prisma in your application.</p><pre><code class=\"language-js\">// src/index.ts\nimport { PrismaClient } from \"@prisma/client\";\nimport { PrismaD1 } from \"@prisma/adapter-d1\";\n\nexport interface Env {\n  DB: D1Database,\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise&lt;Response&gt; {\n    const adapter = new PrismaD1(env.DB);\n    const prisma = new PrismaClient({ adapter });\n    const { pathname } = new URL(request.url);\n\n    if (pathname === '/') {\n      const numVisitors = await prisma.visit.count();\n      return new Response(\n        `You have had ${numVisitors} visitors!`\n      );\n    }\n\n    return new Response('');\n  },\n};\n</code></pre><p>You may notice that there’s always 0 visitors. Add another route to create a new visitor whenever someone visits the <code>/visit</code> route</p><pre><code class=\"language-js\">// src/index.ts\nimport { PrismaClient } from \"@prisma/client\";\nimport { PrismaD1 } from \"@prisma/adapter-d1\";\n\nexport interface Env {\n  DB: D1Database,\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise&lt;Response&gt; {\n    const adapter = new PrismaD1(env.DB);\n    const prisma = new PrismaClient({ adapter });\n    const { pathname } = new URL(request.url);\n\n    if (pathname === '/') {\n      const numVisitors = await prisma.visit.count();\n      return new Response(\n        `You have had ${numVisitors} visitors!`\n      );\n    } else if (pathname === '/visit') {\n      const newVisitor = await prisma.visit.create({ data: {} });\n      return new Response(\n        `You visited at ${newVisitor.visitTime}. Thanks!`\n      );\n    }\n\n    return new Response('');\n  },\n};\n</code></pre><p>Your app is now set up to record visits and report how many visitors you have had!</p><h2 id=\"summary-and-further-reading\">Summary and further reading</h2><p>We were able to build a simple app easily with Cloudflare Workers, D1 and Prisma ORM, but the benefits don’t stop there! Check the <a href=\"https://www.prisma.io/docs\">official documentation</a> for information on using Prisma ORM with <a href=\"https://www.prisma.io/docs/orm/prisma-client/deployment/edge/deploy-to-cloudflare#d1\">D1</a> along with workflows for <a href=\"https://www.prisma.io/docs/orm/prisma-migrate/getting-started\">migrating your data</a>, and even <a href=\"https://www.prisma.io/docs/orm/prisma-client/client-extensions\">extending the Prisma Client</a> for your specific needs.</p>",
		"id": "660c7aeaa5fcdf000a08f886",
		"meta_description": "Together, Cloudflare and Prisma make it easier than ever to deploy globally available apps with a focus on developer experience. To further that goal, Prisma ORM now natively supports Cloudflare Workers and D1 in Preview",
		"meta_title": null,
		"og_description": null,
		"og_image": "http://blog.cloudflare.com/content/images/2024/04/Improving-Cloudflare-Workers-and-D1-developer-experience-with-Prisma-ORM-OG-1.png",
		"og_title": null,
		"primary_author": {
			"id": "660c7efda5fcdf000a08f8e9",
			"name": "Jon Harrell (Guest Author)",
			"slug": "jon-guest",
			"profile_image": "http://blog.cloudflare.com/content/images/2024/04/1602519318329.jpg",
			"cover_image": null,
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@jonbharrell",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/jon-guest/"
		},
		"primary_tag": null,
		"published_at": "2024-04-03T14:03:09.000+01:00",
		"reading_time": 5,
		"slug": "prisma-orm-and-d1",
		"tags": [
			{
				"id": "660c7b45a5fcdf000a08f88a",
				"name": "#BLOG-2292",
				"slug": "hash-blog-2292",
				"description": null,
				"feature_image": null,
				"visibility": "internal",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/404/"
			},
			{
				"id": "607030964b1e0f03f340f2d8",
				"name": "Developer Week",
				"slug": "developer-week",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developer-week/"
			},
			{
				"id": "5d16450341acde0011a95204",
				"name": "Developers",
				"slug": "developers",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Developers-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Developers",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Developers'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developers/"
			},
			{
				"id": "64a3e2b834124c000b00b717",
				"name": "Developer Platform",
				"slug": "developer-platform",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developer-platform/"
			},
			{
				"id": "632af1846266f8000bd3e23c",
				"name": "D1",
				"slug": "d1",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/d1/"
			},
			{
				"id": "660c7b46a5fcdf000a08f88b",
				"name": "Prisma",
				"slug": "prisma",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/prisma/"
			},
			{
				"id": "5d16450341acde0011a95263",
				"name": "Partners",
				"slug": "partners",
				"description": null,
				"feature_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2020/06/image-2-1.png",
				"visibility": "public",
				"meta_title": "Partners Blog",
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/partners/"
			},
			{
				"id": "65c0d31851a92e000adeae66",
				"name": "#front-page",
				"slug": "hash-front-page",
				"description": null,
				"feature_image": null,
				"visibility": "internal",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/404/"
			}
		],
		"title": "Improving Cloudflare Workers and D1 developer experience with Prisma ORM",
		"twitter_description": null,
		"twitter_image": "http://blog.cloudflare.com/content/images/2024/04/Improving-Cloudflare-Workers-and-D1-developer-experience-with-Prisma-ORM-OG.png",
		"twitter_title": null,
		"updated_at": "2024-04-03T14:03:09.000+01:00",
		"url": "http://blog.cloudflare.com/prisma-orm-and-d1/",
		"uuid": "37fcbbaf-db2a-4671-9046-fe004e85e84b",
		"visibility": "public"
	}
}