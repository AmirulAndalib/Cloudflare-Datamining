{
	"locale": "en-us",
	"post": {
		"id": "6374b042c343b2000a361201",
		"uuid": "6bf01d81-10b0-411d-a340-1bdc264d0083",
		"title": "UPDATE Supercloud SET status = 'open alpha' WHERE product = 'D1';",
		"slug": "d1-open-alpha",
		"html": "<!--kg-card-begin: markdown--><p><em><small>This post is also available in <a href=\"http://blog.cloudflare.com/zh-cn/d1-open-alpha-zh-cn/\">简体中文</a>, <a href=\"http://blog.cloudflare.com/ja-jp/d1-open-alpha-ja-jp/\">日本語</a> and <a href=\"http://blog.cloudflare.com/es-es/d1-open-alpha-es-es/\">Español</a>.</small></em></p>\n<!--kg-card-end: markdown--><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/11/image1-48.png\" class=\"kg-image\" alt=\"UPDATE Supercloud SET status = 'open alpha' WHERE product = 'D1';\" loading=\"lazy\"></figure><p>In May 2022, we <a href=\"http://blog.cloudflare.com/introducing-d1/\">announced</a> our quest to simplify databases – building them, maintaining them, integrating them. Our goal is to empower you with the tools to run a database that is powerful, scalable, with world-beating performance without any hassle. And we first set our sights on reimagining the database development experience for every type of user – not just database experts.</p><p>Over the past couple of months, we’ve <a href=\"http://blog.cloudflare.com/whats-new-with-d1/\">been working</a> to create just that, while learning some very important lessons along the way. As it turns out, building a global relational database product on top of Workers pushes the boundaries of the developer platform to their absolute limit, and often beyond them, but in a way that’s absolutely thrilling to us at Cloudflare. It means that while our progress might seem slow from outside, every improvement, bug fix or stress test helps lay down a path for <em>all</em> of our customers to build the world’s most <a href=\"http://blog.cloudflare.com/welcome-to-the-supercloud-and-developer-week-2022/\">ambitious serverless application</a>.</p><p>However, as we continue down the road to making D1 production ready, it wouldn’t be “the Cloudflare way” unless we stopped for feedback first – even though it’s not <em>quite</em> finished yet. In the spirit of Developer Week, <strong>there is no better time to introduce the D1 open alpha</strong>!</p><p>An “open alpha” is a new concept for us. You'll likely hear the term “open beta” on various announcements at Cloudflare, and while it makes sense for many products here, it wasn’t quite right for D1. There are still some crucial pieces that are still in active development and testing, so before we release the fully-formed D1 as a public beta for you to start building real-world apps with, we want to make sure everybody can start to get a feel for the product on their hobby apps or side-projects.</p><h2 id=\"what-s-included-in-the-alpha\">What’s included in the alpha?</h2><p>While a lot is still changing behind the scenes with D1, we’ve put a lot of thought into how you, as a developer, interact with it – even if you’re new to databases.</p><h3 id=\"using-the-d1-dashboard\">Using the D1 dashboard</h3><p>In a few clicks you can get your D1 database up and running right from within your dashboard. In our D1 interface, you can create, maintain and view your database as you please. Changes made in the UI are instantly available to your Worker - no redeploy required!</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/11/image2-30.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><h3 id=\"use-wrangler\">Use Wrangler</h3><p>If you’re looking to get your hands a little dirty, you can also work with your database using our Wrangler CLI. Create your database and begin adding your data manually or bootstrap your database with one of two ways:</p><p><strong>1.  Execute an SQL file</strong></p><!--kg-card-begin: markdown--><pre><code class=\"language-sh\">$ wrangler d1 execute my-database-name --file ./customers.sql\n</code></pre>\n<!--kg-card-end: markdown--><p>where your <code>.sql</code> file looks something like this:</p><p>customers.sql</p><!--kg-card-begin: markdown--><pre><code class=\"language-sql\">DROP TABLE IF EXISTS Customers;\nCREATE TABLE Customers (CustomerID INT, CompanyName TEXT, ContactName TEXT, PRIMARY KEY (`CustomerID`));\nINSERT INTO Customers (CustomerID, CompanyName, ContactName) \nVALUES (1, 'Alfreds Futterkiste', 'Maria Anders'),(4, 'Around the Horn', 'Thomas Hardy'),(11, 'Bs Beverages', 'Victoria Ashworth'),(13, 'Bs Beverages', 'Random Name');\n</code></pre>\n<!--kg-card-end: markdown--><p><strong>2. Create and run migrations</strong></p><p>Migrations are a way to version your database changes. With D1, you can <a href=\"https://developers.cloudflare.com/d1/migrations/\">create a migration</a> and then apply it to your database.</p><p>To create the migration, execute:</p><!--kg-card-begin: markdown--><pre><code class=\"language-sh\">wrangler d1 migrations create &lt;my-database-name&gt; &lt;short description of migration&gt;\n</code></pre>\n<!--kg-card-end: markdown--><p>This will create an SQL file in a <code>migrations</code> folder where you can then go ahead and add your queries. Then apply the migrations to your database by executing:</p><!--kg-card-begin: markdown--><pre><code class=\"language-sh\">wrangler d1 migrations apply &lt;my-database-name&gt;\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"access-d1-from-within-your-worker\">Access D1 from within your Worker</h3><p>You can attach your D1 to a Worker by adding the D1 binding to your <code>wrangler.toml</code> configuration file. Then interact with D1 by executing queries inside your Worker like so:</p><!--kg-card-begin: markdown--><pre><code class=\"language-js\">export default {\n async fetch(request, env) {\n   const { pathname } = new URL(request.url);\n\n   if (pathname === &quot;/api/beverages&quot;) {\n     const { results } = await env.DB.prepare(\n       &quot;SELECT * FROM Customers WHERE CompanyName = ?&quot;\n     )\n       .bind(&quot;Bs Beverages&quot;)\n       .all();\n     return Response.json(results);\n   }\n\n   return new Response(&quot;Call /api/beverages to see Bs Beverages customers&quot;);\n },\n};\n</code></pre>\n<!--kg-card-end: markdown--><h3 id=\"or-access-d1-from-within-your-pages-function\">Or access D1 from within your Pages Function</h3><p>In this Alpha launch, D1 also supports integration with <a href=\"https://pages.cloudflare.com/\">Cloudflare Pages</a>! You can add a D1 binding inside the Pages dashboard, and write your queries inside a Pages Function to build a full-stack application! Check out the <a href=\"https://developers.cloudflare.com/pages/platform/functions/bindings/#d1-database\">full documentation</a> to get started with Pages and D1.</p><h2 id=\"community-built-tooling\">Community built tooling</h2><p>During our private alpha period, the excitement behind D1 led to some valuable contributions to the D1 ecosystem and developer experience by members of the community. Here are some of our favorite projects to date:</p><h3 id=\"d1-orm\">d1-orm</h3><p>An Object Relational Mapping (ORM) is a way for you to query and manipulate data by using JavaScript. Created by a Cloudflare Discord Community Champion, the <code>d1-orm</code> seeks to provide a strictly typed experience while using D1:</p><!--kg-card-begin: markdown--><pre><code class=\"language-ts\">const users = new Model(\n    // table name, primary keys, indexes etc\n    tableDefinition,\n    // column types, default values, nullable etc\n    columnDefinitions\n)\n\n// TS helper for typed queries\ntype User = Infer&lt;type of users&gt;;\n\n// ORM-style query builder\nconst user = await users.First({\n    where: {\n        id: 1,\n    },\n});\n</code></pre>\n<!--kg-card-end: markdown--><p>You can check out the <a href=\"https://docs.interactions.rest/d1-orm/\">full documentation</a>, and provide feedback by making an issue on the <a href=\"https://github.com/Interactions-as-a-Service/d1-orm/issues\">GitHub repository</a>.</p><h3 id=\"workers-qb\">workers-qb</h3><p>This is a zero-dependency query builder that provides a simple standardized interface while keeping the benefits and speed of using raw queries over a traditional ORM. While not intended to provide ORM-like functionality, <code>workers-qb</code> makes it easier to interact with the database from code for direct SQL access:</p><!--kg-card-begin: markdown--><pre><code class=\"language-js\">const qb = new D1QB(env.DB)\n\nconst fetched = await qb.fetchOne({\n  tableName: 'employees',\n  fields: 'count(*) as count',\n  where: {\n    conditions: 'department = ?1',\n    params: ['HQ'],\n  },\n})\n</code></pre>\n<!--kg-card-end: markdown--><p>You can read more about the query builder <a href=\"https://workers-qb.massadas.com/\">here</a>.</p><h3 id=\"d1-console\">d1-console</h3><p>Instead of running the <code>wrangler d1 execute</code> command in your terminal every time you want to interact with your database, you can interact with D1 from within the <code>d1-console</code>. Created by a Discord Community Champion, this gives the benefit of executing multi-line queries, obtaining command history, and viewing a cleanly formatted table output.</p><figure class=\"kg-card kg-image-card\"><img src=\"http://blog.cloudflare.com/content/images/2022/11/image3-23.png\" class=\"kg-image\" alt loading=\"lazy\"></figure><p>While this is a community project today, we plan to natively support a “D1 Console” in the future. For now, get started by checking out the <code>d1-console</code> package <a href=\"https://github.com/isaac-mcfadyen/d1-console\">here</a>.</p><h3 id=\"d1-adapter-for-kysely\">D1 adapter for <a href=\"https://github.com/koskimas/kysely\">Kysely</a></h3><p>Kysely is a type-safe and autocompletion-friendly typescript SQL query builder. With this adapter you can interact with D1 with the familiar Kysely interface:</p><!--kg-card-begin: markdown--><pre><code class=\"language-ts\">// Create Kysely instance with kysely-d1\nconst db = new Kysely&lt;Database&gt;({ \n  dialect: new D1Dialect({ database: env.DB })\n});\n    \n// Read row from D1 table\nconst result = await db\n  .selectFrom('kv')\n  .selectAll()\n  .where('key', '=', key)\n  .executeTakeFirst();\n</code></pre>\n<!--kg-card-end: markdown--><p>Check out the project <a href=\"https://github.com/aidenwallis/kysely-d1\">here</a>.</p><h2 id=\"what-s-still-in-testing\">What’s still in testing?</h2><p>The biggest pieces that have been disabled for this alpha release are replication and JavaScript transaction support. While we’ll be rolling out these changes gradually, we want to call out some limitations that exist today that we’re actively working on testing:</p><ul><li><strong>Database location: </strong>Each D1 database only runs a single instance. It’s created close to where you, as the developer, create the database, and does not currently move regions based on access patterns. Workers running elsewhere in the world will see higher latency as a result.</li><li><strong>Concurrency limitations:</strong> Under high load, read and write queries may be queued rather than triggering new replicas to be created. As a result, the performance &amp; throughput characteristics of the open alpha won’t be representative of the final product.</li><li><strong>Availability limitations:</strong> Backups will block access to the DB while they’re running. In most cases this should only be a second or two, and any requests that arrive during the backup will be queued.</li></ul><p>You can also check out a more detailed, up-to-date list on <a href=\"https://developers.cloudflare.com/d1/platform/limits/\">D1 alpha Limitations</a>.</p><h2 id=\"request-for-feedback\">Request for feedback</h2><p>While we can make all sorts of guesses and bets on the kind of databases you want to use D1 for, we are not the users – you are! We want developers from all backgrounds to preview the D1 tech at its early stages, and let us know where we need to improve to make it suitable for your production apps.</p><p>For general feedback about your experience and to interact with other folks in the alpha, join our <a href=\"https://discord.com/channels/595317990191398933/992060581832032316\">#d1-open-alpha</a> channel in the <a href=\"https://discord.gg/cloudflaredev\">Cloudflare Developers Discord</a>. We plan to make any important announcements and changes in this channel as well as on our <a href=\"https://discord.com/channels/595317990191398933/832698219824807956\">monthly community calls</a>.</p><p>To file more specific feature requests (no matter how wacky) and report any bugs, create a thread in the <a href=\"https://community.cloudflare.com/c/developers/d1\">Cloudflare Community forum</a> under the D1 category. We will be maintaining this forum as a way to plan for the months ahead!</p><h2 id=\"get-started\">Get started</h2><p>Want to get started right away? Check out our<a href=\"https://developers.cloudflare.com/d1/\"> D1 documentation</a> to get started today. <a href=\"https://github.com/cloudflare/d1-northwind\">Build</a> our classic <a href=\"https://northwind.d1sql.com/\">Northwind Traders demo</a> to explore the D1 experience and deploy your first D1 database!</p>",
		"comment_id": "6374b042c343b2000a361201",
		"feature_image": "http://blog.cloudflare.com/content/images/2022/11/image1-49.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2022-11-16T09:41:22.000+00:00",
		"updated_at": "2024-02-15T23:05:49.000+00:00",
		"published_at": "2022-11-16T14:01:00.000+00:00",
		"custom_excerpt": "As we continue down the road to making D1 production ready, it wouldn’t be “the Cloudflare way” unless we stopped for feedback first. D1 is now in Open Alpha!",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"tags": [
			{
				"id": "6374b7bfc343b2000a361244",
				"name": "#BLOG-1458",
				"slug": "hash-blog-1458",
				"description": null,
				"feature_image": null,
				"visibility": "internal",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/404/"
			},
			{
				"id": "607030964b1e0f03f340f2d8",
				"name": "Developer Week",
				"slug": "developer-week",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developer-week/"
			},
			{
				"id": "5d16450341acde0011a95253",
				"name": "Cloudflare Workers",
				"slug": "workers",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/workers/"
			},
			{
				"id": "6332ccf5f9a3dd000ae691bd",
				"name": "Database",
				"slug": "database",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/database/"
			},
			{
				"id": "5d16450341acde0011a95204",
				"name": "Developers",
				"slug": "developers",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Developers-1.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Developers",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Developers'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developers/"
			},
			{
				"id": "637237b6c343b2000a360d14",
				"name": "Supercloud",
				"slug": "supercloud",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/supercloud/"
			},
			{
				"id": "632af1846266f8000bd3e23c",
				"name": "D1",
				"slug": "d1",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/d1/"
			},
			{
				"id": "64a3e2b834124c000b00b717",
				"name": "Developer Platform",
				"slug": "developer-platform",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/developer-platform/"
			}
		],
		"authors": [
			{
				"id": "60ca07829c281c01bd7398c7",
				"name": "Nevi Shah",
				"slug": "nevi",
				"profile_image": "http://blog.cloudflare.com/content/images/2021/07/Screen-Shot-2021-07-26-at-3.28.33-PM.png",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@nevikashah",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/nevi/"
			},
			{
				"id": "5fe0d054586dd703f368356f",
				"name": "Glen Maddern",
				"slug": "glen",
				"profile_image": "http://blog.cloudflare.com/content/images/2020/12/me_640.jpg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@glenmaddern",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/glen/"
			},
			{
				"id": "5f7305b4c9353501baf0c723",
				"name": "Sven Sauleau",
				"slug": "sven",
				"profile_image": "https://blog-cloudflare-com-assets.storage.googleapis.com/2020/09/7cBY6-H7_400x400--1-.jpg",
				"cover_image": null,
				"bio": null,
				"website": null,
				"location": null,
				"facebook": null,
				"twitter": "@svensauleau",
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/sven/"
			}
		],
		"primary_author": {
			"id": "60ca07829c281c01bd7398c7",
			"name": "Nevi Shah",
			"slug": "nevi",
			"profile_image": "http://blog.cloudflare.com/content/images/2021/07/Screen-Shot-2021-07-26-at-3.28.33-PM.png",
			"cover_image": null,
			"bio": null,
			"website": null,
			"location": null,
			"facebook": null,
			"twitter": "@nevikashah",
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/nevi/"
		},
		"primary_tag": null,
		"url": "http://blog.cloudflare.com/d1-open-alpha/",
		"excerpt": "As we continue down the road to making D1 production ready, it wouldn’t be “the Cloudflare way” unless we stopped for feedback first. D1 is now in Open Alpha!",
		"reading_time": 6,
		"access": true,
		"comments": false,
		"og_image": "http://blog.cloudflare.com/content/images/2022/11/Making-the-D1-alpha-available-to-everyone-OG-5.png",
		"og_title": null,
		"og_description": null,
		"twitter_image": "http://blog.cloudflare.com/content/images/2022/11/Making-the-D1-alpha-available-to-everyone-OG-4.png",
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": "As we continue down the road to making D1 production ready, it wouldn’t be “the Cloudflare way” unless we stopped for feedback first. D1 is now in Open Alpha!",
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	}
}