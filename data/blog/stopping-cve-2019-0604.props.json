{
	"locale": "en-us",
	"post": {
		"id": "5d16453b41acde0011a95855",
		"uuid": "97de2fe6-1aac-4d84-aa45-a7153f8b2554",
		"title": "Stopping SharePoint’s CVE-2019-0604",
		"slug": "stopping-cve-2019-0604",
		"html": "<p>On Saturday, 11th May 2019, we got the news of a critical web vulnerability being actively exploited in the wild by advanced persistent threats (<a href=\"https://en.wikipedia.org/wiki/Advanced_persistent_threat\">APTs</a>), affecting Microsoft’s SharePoint server (versions 2010 through 2019).</p><p>This was <a href=\"https://www.rapid7.com/db/vulnerabilities/msft-cve-2019-0604\">CVE-2019-0604</a>, a Remote Code Execution vulnerability in Microsoft SharePoint Servers which was not previously known to be exploitable via the web.</p><p>Several cyber security centres including the Canadian Centre for Cyber Security and Saudi Arabia’s National Center put out <a href=\"https://www.ncsc.gov.sa/wps/portal/ncsc/home/Alerts/!ut/p/z1/lVLRboJAEPwaH8kud-cBj2elYKkxYgpyLwYR67VyaEts-_c9apM2aYS6T3PJ3O7szIKEJUidn9Rj3qha53vzziRf2fbYDUmA9zMnGqMYzRe3QxpQMUVIQIIsdHNodpDp4rXYq_UAWzDAXV2VZ7xq4arULflQqA1khBPGiyGxkOWOxYiXW57tEWvLGS9dToi33kD6NR0njIU2I9EsRkRBkzCk7o2NAQX5W5w7cgTOEZOJmER0HvHv_x0E2b1cz3zyv_l4oQReqf-vQNndfmEcvzuTLntoIlZPx6MUJsdaN-V7A8v-INM2yh5z-uRlZj3nZ70g8bjpEDt-Evt0ljBIT6p8gwddv1TmFhdXXk-IcKgql34oU1aQWs_bqU_ZJ0-OxIA!/dz/d5/L2dBISEvZ0FBIS9nQSEh/\">alerts</a> for this threat, indicating it was being exploited to download and execute malicious code which would in turn take complete control of servers.</p><p>The affected software versions:</p><ul><li>Microsoft SharePoint Foundation 2010 Service Pack 2</li><li>Microsoft SharePoint Foundation 2013 Service Pack 1</li><li>Microsoft SharePoint Server 2010 Service Pack 2</li><li>Microsoft SharePoint Server 2013 Service Pack 1</li><li>Microsoft SharePoint Enterprise Server 2016</li><li>Microsoft SharePoint Server 2019</li></ul><h3 id=\"introduction\">Introduction</h3><p>The vulnerability was initially given a critical CVSS v3 rating of 8.8 on the Zero Day Initiative <a href=\"https://www.zerodayinitiative.com/advisories/ZDI-19-181/\">advisory</a> (however the advisory states authentication is required). This would imply only an insider threat, someone who has authorisation within SharePoint, such as an employee, on the local network could exploit the vulnerability.</p><p>We discovered that was not always the case, since there were paths which could be reached without authentication, via external facing websites. Using the NIST NVD calculator, it determines the actual base score to be a 9.8 severity out of 10 without the authentication requirement.</p><p>As part of our internal vulnerability scoring process, we decided this was critical enough to require immediate attention. This was for a number of reasons. The first being it was a critical CVE affecting a major software ecosystem, primarily aimed at enterprise businesses. There appeared to be no stable patch available at the time. And, there were several reports of it being actively exploited in the wild by APTs.</p><p>We deployed an initial firewall rule the same day, rule 100157. This allowed us to analyse traffic and request frequency before making a decision on the default action. At the same time, it gave our customers the ability to protect their online assets from these attacks in advance of a patch.</p><p>We observed the first probes at around 4:47 PM on the 11th of May, which went on until 9:12 PM. We have reason to believe these were not successful attacks, and were simply reconnaissance probes at this point.</p><p>The online vulnerable hosts exposed to the web were largely made up of high traffic enterprise businesses, which makes sense based on the below graph from W3Techs.</p><p></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://blog.cloudflare.com/content/images/2019/05/pasted-image-0.png\" class=\"kg-image\" alt loading=\"lazy\"><figcaption>Figure 1: Depicts SharePoint’s market position (Image attributed to W3Techs)</figcaption></figure><p></p><p>The publicly accessible proof of concept exploit code found online did not work out of the box. Therefore it was not immediately widely used, since it required weaponisation by a more skilled adversary.</p><p>We give customers advance notice of most rule changes. However, in this case, we decided that the risk was high enough that we needed to act upon this, and so made the decision to make an immediate rule release to block this malicious traffic for all of our customers on May 13th.</p><p>We were confident enough in going default block here, as the requests we’d analysed so far did not appear to be legitimate. We took several factors into consideration to determine this, some of which are detailed below.</p><p>The bulk of requests we’d seen so far, a couple hundred, originated from cloud instances, within the same IP ranges. They were enumerating the subdomains of many websites over a short time period.</p><p>This is a fairly common scenario. Malicious actors will perform reconnaissance using various methods in an attempt to find a vulnerable host to attack, before actually exploiting the vulnerability. The query string parameters also appeared suspicious, having only the ones necessary to exploit the vulnerability and nothing more.</p><p>The rule was deployed in default block mode protecting our customers, before security researchers <a href=\"https://twitter.com/1oopho1e/status/1127916284899995648\">discovered</a> how to weaponise the exploit and before a stable patch from Microsoft was widely adopted.</p><h3 id=\"the-vulnerability\">The vulnerability</h3><p>Zero Day Initiative did a good job in drilling down on the <a href=\"https://www.thezdi.com/blog/2019/3/13/cve-2019-0604-details-of-a-microsoft-sharepoint-rce-vulnerability\">root cause</a> of this vulnerability, and how it could potentially be exploited in practice.</p><p>From debugging the .NET executable, they discovered the following functions could eventually reach the deserialisation call, and so may potentially be exploitable.</p><p></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://blog.cloudflare.com/content/images/2019/05/2.png\" class=\"kg-image\" alt loading=\"lazy\"><figcaption>Figure 2: Depicts the affected function calls (Image attributed to Trend Micro Zero Day Initiative)</figcaption></figure><p></p><p>The most interesting ones here are the “<code>.Page_Load</code>” and “<code>.OnLoad</code>” methods, as these can be directly accessed by visiting a webpage. However, only one appears to not require authentication, ItemPicker.ValidateEntity which can be reached via the Picker.aspx webpage.</p><p>The vulnerability lies in the following function calls:</p><!--kg-card-begin: markdown--><pre><code>EntityInstanceIdEncoder.DecodeEntityInstanceId(encodedId);\nMicrosoft.SharePoint.BusinessData.Infrastructure.EntityInstanceIdEncoder.DecodeEntityInstanceId(pe.Key);\n</code></pre>\n<!--kg-card-end: markdown--><p></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://blog.cloudflare.com/content/images/2019/05/3-1.png\" class=\"kg-image\" alt loading=\"lazy\"><figcaption>Figure 3: PickerEntity Validation (Image attributed to Trend Micro Zero Day Initiative)</figcaption></figure><p></p><p>The PickerEntity ValidateEntity function takes “pe” (Picker Entity) as an argument.</p><p>After checking pe.Key is not null, and it matches the necessary format: via a call to</p><!--kg-card-begin: markdown--><pre><code>Microsoft.SharePoint.BusinessData.Infrastucture.EntityInstanceIdEncoder.IsEncodedIdentifier(pe.Key)\n</code></pre>\n<!--kg-card-end: markdown--><p>it continues to define an object of <code>identifierValues</code> from the result of</p><!--kg-card-begin: markdown--><pre><code>Microsoft.SharePoint.BusinessData.Infrastructure.EntityInstanceIdEncoder.DecodeEntityInstanceId(pe.Key)\n</code></pre>\n<!--kg-card-end: markdown--><p>where the actual deserialisation takes place.</p><p>Otherwise, it will raise an <code>AuthenticationException</code>, which will display an error page to the user.</p><p>The affected function call can be seen below. First, there is a conditional check on the encodedId argument which is passed to <code>DecodeEntityInstanceId()</code>, if it begins with <code>__</code>, it will continue onto deserialising the XML Schema with <a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.xml.serialization.xmlserializer.deserialize?view=netframework-4.8#System_Xml_Serialization_XmlSerializer_Deserialize_System_IO_TextReader_\"><code>xmlSerializer.Deserialize()</code></a>.</p><p></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://blog.cloudflare.com/content/images/2019/05/4-1.png\" class=\"kg-image\" alt loading=\"lazy\"><figcaption>Figure 4: DecodeEntityInstanceId leading to the deserialisation (Image attributed to Trend Micro Zero Day Initiative)</figcaption></figure><p></p><p>When reached, the encodedId (in the form of an XML serialised payload) would be deserialised, and eventually executed on the system in a SharePoint application pool context, leading to a full system compromise.</p><p>One such XML payload which spawns a calculator (calc.exe) instance via a call to command prompt (cmd.exe):</p><p></p><!--kg-card-begin: markdown--><pre><code>&lt;ResourceDictionary\nxmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;\nxmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;\nxmlns:System=&quot;clr-namespace:System;assembly=mscorlib&quot;\nxmlns:Diag=&quot;clr-namespace:System.Diagnostics;assembly=system&quot;&gt;\n    &lt;ObjectDataProvider x:Key=&quot;LaunchCalch&quot; ObjectType=&quot;{x:Type Diag:Process}&quot; MethodName=&quot;Start&quot;&gt;\n        &lt;ObjectDataProvider.MethodParameters&gt;\n            &lt;System:String&gt;cmd.exe&lt;/System:String&gt;\n            &lt;System:String&gt;/c calc.exe&lt;/System:String&gt;\n        &lt;/ObjectDataProvider.MethodParameters&gt;\n    &lt;/ObjectDataProvider&gt;\n&lt;/ResourceDictionary&gt;\n</code></pre>\n<!--kg-card-end: markdown--><p></p><h3 id=\"analysis\">Analysis</h3><p>When we first deployed the rule in log mode, we did not initially see many hits, other than a hundred probes later that evening.</p><p>We believe this was largely due to the unknowns of the vulnerability and its exploitation, as a number of conditions had to be met to craft a working exploit that are not yet widely known.</p><p>It wasn’t until after we had set the rule in default drop mode, that we saw the attacks really start to ramp up. On Monday the 13th we observed our first exploit attempts, and on the 14th saw what we believe to be individuals manually attempting to exploit sites for this vulnerability.</p><p>Given this was a weekend, it realistically gives you 1 working day to have rolled out a patch across your organisation, before malicious actors started attempting to exploit this vulnerability.</p><p></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"http://blog.cloudflare.com/content/images/2019/05/5-1.png\" class=\"kg-image\" alt loading=\"lazy\"><figcaption>Figure 5: Depicts requests matched, rule 100157 was set as default block early 13th May.</figcaption></figure><p></p><p>Further into the week, we started seeing smaller spikes for the rule. And on the 16th May, the same day the UK’s NCSC put out an <a href=\"https://www.ncsc.gov.uk/news/alert-microsoft-sharepoint-remote-code-vulnerability\">alert</a> reporting of highly successful exploitation attempts against UK organisations, thousands of requests were dropped, primarily launched at larger enterprises and government entities.</p><p>This is often the nature of such targeted attacks, malicious actors will try to automate exploits to have the biggest possible impact, and that’s exactly what we saw here.</p><p>So far into our analysis, we’ve seen malicious hits for the following paths:</p><ul><li>/_layouts/15/Picker.aspx</li><li>/_layouts/Picker.aspx</li><li>/_layouts/15/downloadexternaldata.aspx</li></ul><p>The bulk of attacks we’ve seen have been targeting the unauthenticated Picker.aspx endpoint as one would expect, using the ItemPickerDialog type:</p><!--kg-card-begin: markdown--><pre><code>/_layouts/15/picker.aspx?PickerDialogType=Microsoft.SharePoint.Portal.WebControls.ItemPickerDialog\n</code></pre>\n<!--kg-card-end: markdown--><p>We expect the vulnerability to be exploited more when a complete exploit is publicly available, so it is important to update your systems if you have not already. We also recommend isolating these systems to the internal network in cases they do not need to be external facing, in order to avoid an unnecessary attack surface.</p><p>Sometimes it’s not practical to isolate such systems to an internal network, this is usually the case for global organisations, with teams spanning multiple locations. In these cases, we highly recommend putting these systems behind an access management solution, like <a href=\"https://www.cloudflare.com/products/cloudflare-access/\">Cloudflare Access</a>. This gives you granular control over who can access resources, and has the additional benefit of auditing user access.</p><p>Microsoft initially released a patch, but it did not address all vulnerable functions, therefore customers were left vulnerable with the only options being to virtually patch their systems or shut their services down entirely until an effective fix became available.</p><p>This is a prime example of why firewalls like Cloudflare’s <a href=\"https://www.cloudflare.com/waf/\">WAF</a> are critical to keeping a business online. Sometimes patching is not an option, and even when it is, it can take time to roll out effectively across an enterprise.</p>",
		"comment_id": "5ced56f900888c00c0898b3a",
		"feature_image": "http://blog.cloudflare.com/content/images/2019/05/3-2.png",
		"featured": false,
		"visibility": "public",
		"created_at": "2019-05-28T16:42:49.000+01:00",
		"updated_at": "2024-01-09T20:57:58.000+00:00",
		"published_at": "2019-05-28T19:45:41.000+01:00",
		"custom_excerpt": "On Saturday, 11th May 2019, we got the news of a critical web vulnerability being actively exploited in the wild by advanced persistent threats (APTs), affecting Microsoft’s SharePoint server (versions 2010 through 2019).",
		"codeinjection_head": null,
		"codeinjection_foot": null,
		"custom_template": null,
		"canonical_url": null,
		"tags": [
			{
				"id": "5d16450341acde0011a951e6",
				"name": "WAF",
				"slug": "waf",
				"description": null,
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/waf/"
			},
			{
				"id": "5d16450341acde0011a951aa",
				"name": "Vulnerabilities",
				"slug": "vulnerabilities",
				"description": "Vulnerabilities (EN)",
				"feature_image": null,
				"visibility": "public",
				"meta_title": null,
				"meta_description": null,
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/vulnerabilities/"
			},
			{
				"id": "5d16450341acde0011a95265",
				"name": "Security",
				"slug": "security",
				"description": null,
				"feature_image": "http://blog.cloudflare.com/content/images/2020/10/Security.png",
				"visibility": "public",
				"meta_title": "Cloudflare Blog: Security",
				"meta_description": "Collection of Cloudflare blog posts tagged 'Security'.",
				"og_image": null,
				"og_title": null,
				"og_description": null,
				"twitter_image": null,
				"twitter_title": null,
				"twitter_description": null,
				"codeinjection_head": null,
				"codeinjection_foot": null,
				"canonical_url": null,
				"accent_color": null,
				"url": "http://blog.cloudflare.com/tag/security/"
			}
		],
		"authors": [
			{
				"id": "5d1644b141acde0011a95026",
				"name": "Georgie Yoxall",
				"slug": "georgie",
				"profile_image": "http://blog.cloudflare.com/content/images/2019/06/0.jpeg",
				"cover_image": "http://blog.cloudflare.com/content/images/2019/06/general@2x-2.png",
				"bio": null,
				"website": "https://yoxall.me.uk",
				"location": "UK",
				"facebook": null,
				"twitter": null,
				"meta_title": null,
				"meta_description": null,
				"url": "http://blog.cloudflare.com/author/georgie/"
			}
		],
		"primary_author": {
			"id": "5d1644b141acde0011a95026",
			"name": "Georgie Yoxall",
			"slug": "georgie",
			"profile_image": "http://blog.cloudflare.com/content/images/2019/06/0.jpeg",
			"cover_image": "http://blog.cloudflare.com/content/images/2019/06/general@2x-2.png",
			"bio": null,
			"website": "https://yoxall.me.uk",
			"location": "UK",
			"facebook": null,
			"twitter": null,
			"meta_title": null,
			"meta_description": null,
			"url": "http://blog.cloudflare.com/author/georgie/"
		},
		"primary_tag": {
			"id": "5d16450341acde0011a951e6",
			"name": "WAF",
			"slug": "waf",
			"description": null,
			"feature_image": null,
			"visibility": "public",
			"meta_title": null,
			"meta_description": null,
			"og_image": null,
			"og_title": null,
			"og_description": null,
			"twitter_image": null,
			"twitter_title": null,
			"twitter_description": null,
			"codeinjection_head": null,
			"codeinjection_foot": null,
			"canonical_url": null,
			"accent_color": null,
			"url": "http://blog.cloudflare.com/tag/waf/"
		},
		"url": "http://blog.cloudflare.com/stopping-cve-2019-0604/",
		"excerpt": "On Saturday, 11th May 2019, we got the news of a critical web vulnerability being actively exploited in the wild by advanced persistent threats (APTs), affecting Microsoft’s SharePoint server (versions 2010 through 2019).",
		"reading_time": 7,
		"access": true,
		"comments": false,
		"og_image": null,
		"og_title": null,
		"og_description": null,
		"twitter_image": null,
		"twitter_title": null,
		"twitter_description": null,
		"meta_title": null,
		"meta_description": null,
		"email_subject": null,
		"frontmatter": null,
		"feature_image_alt": null,
		"feature_image_caption": null
	}
}