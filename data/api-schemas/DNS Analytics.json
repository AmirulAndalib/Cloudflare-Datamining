{
	"GET /zones/{identifier}/dns_analytics/report": {
		"description": "Retrieves a list of summarised aggregate metrics over a given time period.\n\nSee [Analytics API properties](https://developers.cloudflare.com/dns/reference/analytics-api-properties/) for detailed information about the available query parameters.",
		"operationId": "dns-analytics-table",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "metrics",
				"schema": {
					"description": "A comma-separated list of metrics to query.",
					"example": "queryCount,uncachedCount",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "dimensions",
				"schema": {
					"description": "A comma-separated list of dimensions to group results by.",
					"example": "queryType",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "since",
				"schema": {
					"description": "Start date and time of requesting data period in ISO 8601 format.",
					"example": "2023-11-11T12:00:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "until",
				"schema": {
					"description": "End date and time of requesting data period in ISO 8601 format.",
					"example": "2023-11-11T13:00:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 100000,
					"description": "Limit number of returned metrics.",
					"example": 100,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "sort",
				"schema": {
					"description": "A comma-separated list of dimensions to sort by, where each dimension may be prefixed by - (descending) or + (ascending).",
					"example": "+responseCode,-queryName",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "filters",
				"schema": {
					"description": "Segmentation filter in 'attribute operator value' format.",
					"example": "responseCode==NOERROR,queryType==A",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/result"
												},
												{
													"properties": {
														"data": {
															"items": {
																"properties": {
																	"metrics": {
																		"description": "Array with one item per requested metric. Each item is a single value.",
																		"items": {
																			"description": "Nominal metric value.",
																			"type": "number"
																		},
																		"type": "array"
																	}
																},
																"required": [
																	"metrics"
																]
															}
														}
													},
													"required": [
														"data"
													]
												}
											]
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Table response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/result"
														},
														{
															"properties": {
																"data": {
																	"items": {
																		"properties": {
																			"metrics": {
																				"description": "Array with one item per requested metric. Each item is a single value.",
																				"items": {
																					"description": "Nominal metric value.",
																					"type": "number"
																				},
																				"type": "array"
																			}
																		},
																		"required": [
																			"metrics"
																		]
																	}
																}
															},
															"required": [
																"data"
															]
														}
													]
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Table response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Table",
		"tags": [
			"DNS Analytics"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#analytics:read"
			]
		}
	},
	"GET /zones/{identifier}/dns_analytics/report/bytime": {
		"description": "Retrieves a list of aggregate metrics grouped by time interval.\n\nSee [Analytics API properties](https://developers.cloudflare.com/dns/reference/analytics-api-properties/) for detailed information about the available query parameters.",
		"operationId": "dns-analytics-by-time",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "metrics",
				"schema": {
					"description": "A comma-separated list of metrics to query.",
					"example": "queryCount,uncachedCount",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "dimensions",
				"schema": {
					"description": "A comma-separated list of dimensions to group results by.",
					"example": "queryType",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "since",
				"schema": {
					"description": "Start date and time of requesting data period in ISO 8601 format.",
					"example": "2023-11-11T12:00:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "until",
				"schema": {
					"description": "End date and time of requesting data period in ISO 8601 format.",
					"example": "2023-11-11T13:00:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 100000,
					"description": "Limit number of returned metrics.",
					"example": 100,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "sort",
				"schema": {
					"description": "A comma-separated list of dimensions to sort by, where each dimension may be prefixed by - (descending) or + (ascending).",
					"example": "+responseCode,-queryName",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "filters",
				"schema": {
					"description": "Segmentation filter in 'attribute operator value' format.",
					"example": "responseCode==NOERROR,queryType==A",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "time_delta",
				"schema": {
					"description": "Unit of time to group data by.",
					"enum": [
						"all",
						"auto",
						"year",
						"quarter",
						"month",
						"week",
						"day",
						"hour",
						"dekaminute",
						"minute"
					],
					"example": "hour",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/result"
												},
												{
													"properties": {
														"data": {
															"items": {
																"properties": {
																	"metrics": {
																		"description": "Array with one item per requested metric. Each item is an array of values, broken down by time interval.",
																		"items": {
																			"description": "Nominal metric values, broken down by time interval.",
																			"properties": {
																				"items": {
																					"description": "Nominal metric value.",
																					"type": "number"
																				}
																			},
																			"type": "array"
																		},
																		"type": "array"
																	}
																},
																"required": [
																	"metrics"
																]
															}
														},
														"query": {
															"properties": {
																"time_delta": {
																	"$ref": "#/components/schemas/time_delta"
																}
															},
															"required": [
																"time_delta"
															],
															"type": "object"
														},
														"time_intervals": {
															"description": "Array of time intervals in the response data. Each interval is represented as an array containing two values: the start time, and the end time.\n",
															"items": {
																"description": "Array with exactly two items, representing the start and end time (respectively) of this time interval.",
																"items": {
																	"description": "Time value.",
																	"example": "2023-11-11T12:00:00Z",
																	"format": "date-time",
																	"type": "string"
																},
																"type": "array"
															},
															"type": "array"
														}
													},
													"required": [
														"time_intervals",
														"query",
														"data"
													]
												}
											]
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "By Time response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/result"
														},
														{
															"properties": {
																"data": {
																	"items": {
																		"properties": {
																			"metrics": {
																				"description": "Array with one item per requested metric. Each item is an array of values, broken down by time interval.",
																				"items": {
																					"description": "Nominal metric values, broken down by time interval.",
																					"properties": {
																						"items": {
																							"description": "Nominal metric value.",
																							"type": "number"
																						}
																					},
																					"type": "array"
																				},
																				"type": "array"
																			}
																		},
																		"required": [
																			"metrics"
																		]
																	}
																},
																"query": {
																	"properties": {
																		"time_delta": {
																			"$ref": "#/components/schemas/time_delta"
																		}
																	},
																	"required": [
																		"time_delta"
																	],
																	"type": "object"
																},
																"time_intervals": {
																	"description": "Array of time intervals in the response data. Each interval is represented as an array containing two values: the start time, and the end time.\n",
																	"items": {
																		"description": "Array with exactly two items, representing the start and end time (respectively) of this time interval.",
																		"items": {
																			"description": "Time value.",
																			"example": "2023-11-11T12:00:00Z",
																			"format": "date-time",
																			"type": "string"
																		},
																		"type": "array"
																	},
																	"type": "array"
																}
															},
															"required": [
																"time_intervals",
																"query",
																"data"
															]
														}
													]
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "By Time response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "By Time",
		"tags": [
			"DNS Analytics"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#analytics:read"
			]
		}
	}
}