{
	"DELETE /organizations/{organization_identifier}/members/{identifier}": {
		"deprecated": true,
		"description": "Remove a member from an organization.",
		"operationId": "organization-members-remove-member",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "organization_identifier",
				"required": true,
				"schema": {
					"description": "Organization identifier tag.",
					"example": "01a7362d577a6c3019a474fd6f485823",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"id": {
									"description": "Identifier",
									"example": "023e105f4ecef8ad9ca31a8372d0c353",
									"maxLength": 32,
									"readOnly": true,
									"type": "string"
								}
							}
						}
					}
				},
				"description": "Remove Member response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"id": {
											"description": "Identifier",
											"example": "023e105f4ecef8ad9ca31a8372d0c353",
											"maxLength": 32,
											"readOnly": true,
											"type": "string"
										}
									}
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Remove Member response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Remove Member",
		"tags": [
			"Organization Members"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /organizations/{organization_identifier}/members": {
		"deprecated": true,
		"description": "List all members of a organization.",
		"operationId": "organization-members-list-members",
		"parameters": [
			{
				"in": "path",
				"name": "organization_identifier",
				"required": true,
				"schema": {
					"description": "Organization identifier tag.",
					"example": "01a7362d577a6c3019a474fd6f485823",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"email": {
														"$ref": "#/components/schemas/email"
													},
													"id": {
														"$ref": "#/components/schemas/common_components-schemas-identifier"
													},
													"name": {
														"$ref": "#/components/schemas/member_components-schemas-name"
													},
													"roles": {
														"description": "Roles assigned to this Member.",
														"items": {
															"$ref": "#/components/schemas/schemas-role-T4zsbpB8"
														},
														"type": "array"
													},
													"status": {
														"description": "A member's status in the organization.",
														"enum": [
															"accepted",
															"invited"
														],
														"example": "accepted"
													}
												},
												"required": [
													"id",
													"name",
													"email",
													"status",
													"roles"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Members response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"email": {
																"$ref": "#/components/schemas/email"
															},
															"id": {
																"$ref": "#/components/schemas/common_components-schemas-identifier"
															},
															"name": {
																"$ref": "#/components/schemas/member_components-schemas-name"
															},
															"roles": {
																"description": "Roles assigned to this Member.",
																"items": {
																	"$ref": "#/components/schemas/schemas-role-T4zsbpB8"
																},
																"type": "array"
															},
															"status": {
																"description": "A member's status in the organization.",
																"enum": [
																	"accepted",
																	"invited"
																],
																"example": "accepted"
															}
														},
														"required": [
															"id",
															"name",
															"email",
															"status",
															"roles"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Members response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "List Members",
		"tags": [
			"Organization Members"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /organizations/{organization_identifier}/members/{identifier}": {
		"deprecated": true,
		"description": "Get information about a specific member of an organization.",
		"operationId": "organization-members-member-details",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Membership identifier tag.",
					"example": "4536bcfad5faccb111b47003c79917fa",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "organization_identifier",
				"required": true,
				"schema": {
					"description": "Organization identifier tag.",
					"example": "01a7362d577a6c3019a474fd6f485823",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/components/schemas/membership_components-schemas-identifier"
												},
												"roles": {
													"description": "Roles assigned to this member.",
													"items": {
														"$ref": "#/components/schemas/role"
													},
													"type": "array"
												},
												"status": {
													"readOnly": true
												},
												"user": {
													"properties": {
														"email": {
															"$ref": "#/components/schemas/email"
														},
														"first_name": {
															"$ref": "#/components/schemas/first_name"
														},
														"id": {
															"$ref": "#/components/schemas/common_components-schemas-identifier"
														},
														"last_name": {
															"$ref": "#/components/schemas/last_name"
														},
														"two_factor_authentication_enabled": {
															"$ref": "#/components/schemas/two_factor_authentication_enabled"
														}
													},
													"readOnly": true,
													"required": [
														"email"
													],
													"type": "object"
												}
											},
											"required": [
												"id",
												"user",
												"status",
												"roles"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Member Details response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/components/schemas/membership_components-schemas-identifier"
														},
														"roles": {
															"description": "Roles assigned to this member.",
															"items": {
																"$ref": "#/components/schemas/role"
															},
															"type": "array"
														},
														"status": {
															"readOnly": true
														},
														"user": {
															"properties": {
																"email": {
																	"$ref": "#/components/schemas/email"
																},
																"first_name": {
																	"$ref": "#/components/schemas/first_name"
																},
																"id": {
																	"$ref": "#/components/schemas/common_components-schemas-identifier"
																},
																"last_name": {
																	"$ref": "#/components/schemas/last_name"
																},
																"two_factor_authentication_enabled": {
																	"$ref": "#/components/schemas/two_factor_authentication_enabled"
																}
															},
															"readOnly": true,
															"required": [
																"email"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"user",
														"status",
														"roles"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Member Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Member Details",
		"tags": [
			"Organization Members"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /organizations/{organization_identifier}/members/{identifier}": {
		"deprecated": true,
		"description": "Change the Roles of an Organization's Member.",
		"operationId": "organization-members-edit-member-roles",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "organization_identifier",
				"required": true,
				"schema": {
					"description": "Organization identifier tag.",
					"example": "01a7362d577a6c3019a474fd6f485823",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"roles": {
								"description": "Array of Roles associated with this Member.",
								"items": {
									"description": "Role identifier tag.",
									"example": "3536bcfad5faccb999b47003c79917fb",
									"maxLength": 32,
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/components/schemas/membership_components-schemas-identifier"
												},
												"roles": {
													"description": "Roles assigned to this member.",
													"items": {
														"$ref": "#/components/schemas/role"
													},
													"type": "array"
												},
												"status": {
													"readOnly": true
												},
												"user": {
													"properties": {
														"email": {
															"$ref": "#/components/schemas/email"
														},
														"first_name": {
															"$ref": "#/components/schemas/first_name"
														},
														"id": {
															"$ref": "#/components/schemas/common_components-schemas-identifier"
														},
														"last_name": {
															"$ref": "#/components/schemas/last_name"
														},
														"two_factor_authentication_enabled": {
															"$ref": "#/components/schemas/two_factor_authentication_enabled"
														}
													},
													"readOnly": true,
													"required": [
														"email"
													],
													"type": "object"
												}
											},
											"required": [
												"id",
												"user",
												"status",
												"roles"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Edit Member Roles response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/components/schemas/membership_components-schemas-identifier"
														},
														"roles": {
															"description": "Roles assigned to this member.",
															"items": {
																"$ref": "#/components/schemas/role"
															},
															"type": "array"
														},
														"status": {
															"readOnly": true
														},
														"user": {
															"properties": {
																"email": {
																	"$ref": "#/components/schemas/email"
																},
																"first_name": {
																	"$ref": "#/components/schemas/first_name"
																},
																"id": {
																	"$ref": "#/components/schemas/common_components-schemas-identifier"
																},
																"last_name": {
																	"$ref": "#/components/schemas/last_name"
																},
																"two_factor_authentication_enabled": {
																	"$ref": "#/components/schemas/two_factor_authentication_enabled"
																}
															},
															"readOnly": true,
															"required": [
																"email"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"user",
														"status",
														"roles"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Edit Member Roles response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Edit Member Roles",
		"tags": [
			"Organization Members"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}