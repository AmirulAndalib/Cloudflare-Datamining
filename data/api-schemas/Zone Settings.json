{
	"GET /zones/{zone_identifier}/settings": {
		"description": "Available settings for your user in relation to a zone.",
		"operationId": "zone-settings-get-all-zone-settings",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"$ref": "#/components/schemas/messages"
										},
										"messages": {
											"$ref": "#/components/schemas/messages"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"anyOf": [
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"0rtt"
																		],
																		"example": "0rtt"
																	},
																	"value": {
																		"$ref": "#/components/schemas/0rtt_value"
																	}
																}
															}
														],
														"description": "0-RTT session resumption enabled for this zone.",
														"title": "0-RTT Value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"advanced_ddos"
																		],
																		"example": "advanced_ddos"
																	},
																	"value": {
																		"$ref": "#/components/schemas/advanced_ddos_value"
																	}
																}
															}
														],
														"description": "Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones.",
														"title": "Advanced DDoS Protection"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"always_online"
																		],
																		"example": "always_online"
																	},
																	"value": {
																		"$ref": "#/components/schemas/always_online_value"
																	}
																}
															}
														],
														"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
														"title": "Always Online Mode"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"always_use_https"
																		],
																		"example": "always_use_https"
																	},
																	"value": {
																		"$ref": "#/components/schemas/always_use_https_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
														"title": "Zone Enable Always Use HTTPS"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"automatic_https_rewrites"
																		],
																		"example": "automatic_https_rewrites"
																	},
																	"value": {
																		"$ref": "#/components/schemas/automatic_https_rewrites_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
														"title": "Zone Enable Automatic HTTPS Rewrites"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"brotli"
																		],
																		"example": "brotli"
																	},
																	"value": {
																		"$ref": "#/components/schemas/brotli_value"
																	}
																}
															}
														],
														"description": "When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.",
														"title": "Brotli Compression"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"browser_cache_ttl"
																		],
																		"example": "browser_cache_ttl"
																	},
																	"value": {
																		"$ref": "#/components/schemas/browser_cache_ttl_value"
																	}
																}
															}
														],
														"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).",
														"title": "Browser Cache TTL"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"browser_check"
																		],
																		"example": "browser_check"
																	},
																	"value": {
																		"$ref": "#/components/schemas/browser_check_value"
																	}
																}
															}
														],
														"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).",
														"title": "Browser Check"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"cache_level"
																		],
																		"example": "cache_level"
																	},
																	"value": {
																		"$ref": "#/components/schemas/cache_level_value"
																	}
																}
															}
														],
														"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).",
														"title": "Cloudflare Cache Level"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"challenge_ttl"
																		],
																		"example": "challenge_ttl"
																	},
																	"value": {
																		"$ref": "#/components/schemas/challenge_ttl_value"
																	}
																}
															}
														],
														"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).",
														"title": "Challenge Page TTL"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"ciphers"
																		],
																		"example": "ciphers"
																	},
																	"value": {
																		"$ref": "#/components/schemas/ciphers_value"
																	}
																}
															}
														],
														"default": [],
														"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
														"title": "Zone ciphers allowed for TLS termination"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "How to flatten the cname destination.",
																		"enum": [
																			"cname_flattening"
																		]
																	},
																	"value": {
																		"$ref": "#/components/schemas/cname_flattening_value"
																	}
																}
															}
														],
														"description": "Whether or not cname flattening is on.",
														"title": "Cloudflare CNAME Flattening"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"development_mode"
																		],
																		"example": "development_mode"
																	},
																	"time_remaining": {
																		"description": "Value of the zone setting.\nNotes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.",
																		"example": 3600,
																		"readOnly": true,
																		"type": "number"
																	},
																	"value": {
																		"$ref": "#/components/schemas/development_mode_value"
																	}
																}
															}
														],
														"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
														"title": "Development Mode"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"early_hints"
																		],
																		"example": "early_hints"
																	},
																	"value": {
																		"$ref": "#/components/schemas/early_hints_value"
																	}
																}
															}
														],
														"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
														"title": "Early Hints"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"edge_cache_ttl"
																		],
																		"example": "edge_cache_ttl"
																	},
																	"value": {
																		"$ref": "#/components/schemas/edge_cache_ttl_value"
																	}
																}
															}
														],
														"description": "Time (in seconds) that a resource will be ensured to remain on Cloudflare's cache servers.",
														"title": "Edge Cache TTL"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"email_obfuscation"
																		],
																		"example": "email_obfuscation"
																	},
																	"value": {
																		"$ref": "#/components/schemas/email_obfuscation_value"
																	}
																}
															}
														],
														"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).",
														"title": "Email Obfuscation"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"h2_prioritization"
																		],
																		"example": "h2_prioritization"
																	},
																	"value": {
																		"$ref": "#/components/schemas/h2_prioritization_value"
																	}
																}
															}
														],
														"description": "HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.",
														"title": "HTTP/2 Edge Prioritization"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"hotlink_protection"
																		],
																		"example": "hotlink_protection"
																	},
																	"value": {
																		"$ref": "#/components/schemas/hotlink_protection_value"
																	}
																}
															}
														],
														"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).",
														"title": "Hotlink Protection"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"http2"
																		],
																		"example": "http2"
																	},
																	"value": {
																		"$ref": "#/components/schemas/http2_value"
																	}
																}
															}
														],
														"description": "HTTP2 enabled for this zone.",
														"title": "HTTP2 Value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"http3"
																		],
																		"example": "http3"
																	},
																	"value": {
																		"$ref": "#/components/schemas/http3_value"
																	}
																}
															}
														],
														"description": "HTTP3 enabled for this zone.",
														"title": "HTTP3 Value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"image_resizing"
																		],
																		"example": "image_resizing"
																	},
																	"value": {
																		"$ref": "#/components/schemas/image_resizing_value"
																	}
																}
															}
														],
														"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.",
														"title": "Image Resizing"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"ip_geolocation"
																		],
																		"example": "ip_geolocation"
																	},
																	"value": {
																		"$ref": "#/components/schemas/ip_geolocation_value"
																	}
																}
															}
														],
														"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).",
														"title": "IP Geolocation"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"ipv6"
																		],
																		"example": "ipv6"
																	},
																	"value": {
																		"$ref": "#/components/schemas/ipv6_value"
																	}
																}
															}
														],
														"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).",
														"title": "IPv6"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "identifier of the zone setting.",
																		"enum": [
																			"max_upload"
																		],
																		"example": "max_upload"
																	},
																	"value": {
																		"$ref": "#/components/schemas/max_upload_value"
																	}
																}
															}
														],
														"description": "Maximum size of an allowable upload.",
														"title": "Max Upload"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"min_tls_version"
																		],
																		"example": "min_tls_version"
																	},
																	"value": {
																		"$ref": "#/components/schemas/min_tls_version_value"
																	}
																}
															}
														],
														"default": "1.0",
														"description": "Only accepts HTTPS requests that use at least the TLS protocol version specified. For example, if TLS 1.1 is selected, TLS 1.0 connections will be rejected, while 1.1, 1.2, and 1.3 (if enabled) will be permitted.",
														"title": "Zone Minimum TLS Version value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Zone setting identifier.",
																		"enum": [
																			"minify"
																		],
																		"example": "minify"
																	},
																	"value": {
																		"$ref": "#/components/schemas/minify_value"
																	}
																}
															}
														],
														"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
														"title": "Auto-Minify Assets"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"mirage"
																		],
																		"example": "mirage"
																	},
																	"value": {
																		"$ref": "#/components/schemas/mirage_value"
																	}
																}
															}
														],
														"description": "Automatically optimize image loading for website visitors on mobile\ndevices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed)\nfor more information.\n",
														"title": "Mirage Image Optimization"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Identifier of the zone setting.",
																		"enum": [
																			"mobile_redirect"
																		],
																		"example": "mobile_redirect"
																	},
																	"value": {
																		"$ref": "#/components/schemas/mobile_redirect_value"
																	}
																}
															}
														],
														"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
														"title": "Mobile Redirect"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Zone setting identifier.",
																		"enum": [
																			"nel"
																		],
																		"example": "nel"
																	},
																	"value": {
																		"$ref": "#/components/schemas/nel_value"
																	}
																}
															}
														],
														"description": "Enable Network Error Logging reporting on your zone. (Beta) ",
														"title": "Network Error Logging"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"opportunistic_encryption"
																		],
																		"example": "opportunistic_encryption"
																	},
																	"value": {
																		"$ref": "#/components/schemas/opportunistic_encryption_value"
																	}
																}
															}
														],
														"description": "Enables the Opportunistic Encryption feature for a zone.",
														"title": "Enable Opportunistic Encryption for a zone"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"opportunistic_onion"
																		],
																		"example": "opportunistic_onion"
																	},
																	"value": {
																		"$ref": "#/components/schemas/opportunistic_onion_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
														"title": "Zone Enable Onion Routing"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"orange_to_orange"
																		],
																		"example": "orange_to_orange"
																	},
																	"value": {
																		"$ref": "#/components/schemas/orange_to_orange_value"
																	}
																}
															}
														],
														"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
														"title": "Orange to Orange"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"origin_error_page_pass_thru"
																		],
																		"example": "origin_error_page_pass_thru"
																	},
																	"value": {
																		"$ref": "#/components/schemas/origin_error_page_pass_thru_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
														"title": "Error Pages On"
													},
													{
														"allOf": [
															{
																"properties": {
																	"id": {
																		"description": "Identifier of the zone setting.",
																		"enum": [
																			"origin_max_http_version"
																		],
																		"example": "origin_max_http_version"
																	},
																	"modified_on": {
																		"description": "last time this setting was modified.",
																		"example": "2014-01-01T05:20:00.12345Z",
																		"format": "date-time",
																		"nullable": true,
																		"readOnly": true,
																		"type": "string"
																	}
																},
																"required": [
																	"id"
																]
															}
														],
														"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.).",
														"title": "Origin Max HTTP version"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"polish"
																		],
																		"example": "polish"
																	},
																	"value": {
																		"$ref": "#/components/schemas/polish_value"
																	}
																}
															}
														],
														"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
														"title": "Polish Image Optimization"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"prefetch_preload"
																		],
																		"example": "prefetch_preload"
																	},
																	"value": {
																		"$ref": "#/components/schemas/prefetch_preload_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
														"title": "Prefetch preload"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"privacy_pass"
																		],
																		"example": "privacy_pass"
																	},
																	"value": {
																		"$ref": "#/components/schemas/privacy_pass_value"
																	}
																}
															}
														],
														"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).",
														"title": "Privacy Pass"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"proxy_read_timeout"
																		],
																		"example": "proxy_read_timeout"
																	},
																	"value": {
																		"$ref": "#/components/schemas/proxy_read_timeout_value"
																	}
																}
															}
														],
														"description": "Maximum time between two read operations from origin.",
														"title": "Proxy Read Timeout"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"default": "pseudo_ipv4",
																		"description": "Value of the Pseudo IPv4 setting.",
																		"enum": [
																			"pseudo_ipv4"
																		]
																	},
																	"value": {
																		"$ref": "#/components/schemas/pseudo_ipv4_value"
																	}
																}
															}
														],
														"description": "The value set for the Pseudo IPv4 setting.",
														"title": "Pseudo IPv4 Value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"response_buffering"
																		],
																		"example": "response_buffering"
																	},
																	"value": {
																		"$ref": "#/components/schemas/response_buffering_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
														"title": "Response Buffering"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"rocket_loader"
																		],
																		"example": "rocket_loader"
																	},
																	"value": {
																		"$ref": "#/components/schemas/rocket_loader_value"
																	}
																}
															}
														],
														"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
														"title": "Rocket Loader"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"automatic_platform_optimization"
																		],
																		"example": "automatic_platform_optimization"
																	},
																	"value": {
																		"$ref": "#/components/schemas/automatic_platform_optimization"
																	}
																}
															}
														],
														"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare's edge network and caches third-party fonts.",
														"title": "Automatic Platform Optimization for WordPress"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone's security header.",
																		"enum": [
																			"security_header"
																		],
																		"example": "security_header"
																	},
																	"value": {
																		"$ref": "#/components/schemas/security_header_value"
																	}
																}
															}
														],
														"description": "Cloudflare security header for a zone.",
														"title": "Security Header"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"security_level"
																		],
																		"example": "security_level"
																	},
																	"value": {
																		"$ref": "#/components/schemas/security_level_value"
																	}
																}
															}
														],
														"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).",
														"title": "Security Level"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"server_side_exclude"
																		],
																		"example": "server_side_exclude"
																	},
																	"value": {
																		"$ref": "#/components/schemas/server_side_exclude_value"
																	}
																}
															}
														],
														"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).",
														"title": "Server Side Exclude"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Zone setting identifier.",
																		"enum": [
																			"sha1_support"
																		],
																		"example": "sha1_support"
																	},
																	"value": {
																		"$ref": "#/components/schemas/sha1_support_value"
																	}
																}
															}
														],
														"description": "Allow SHA1 support.",
														"title": "Toggle SHA1 support"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"sort_query_string_for_cache"
																		],
																		"example": "sort_query_string_for_cache"
																	},
																	"value": {
																		"$ref": "#/components/schemas/sort_query_string_for_cache_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
														"title": "Get String Sort"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"ssl"
																		],
																		"example": "ssl"
																	},
																	"value": {
																		"$ref": "#/components/schemas/ssl_value"
																	}
																}
															}
														],
														"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).",
														"title": "SSL"
													},
													{
														"allOf": [
															{
																"properties": {
																	"enabled": {
																		"$ref": "#/components/schemas/ssl_recommender_enabled"
																	},
																	"id": {
																		"description": "Enrollment value for SSL/TLS Recommender.",
																		"enum": [
																			"ssl_recommender"
																		],
																		"example": "ssl_recommender"
																	}
																}
															}
														],
														"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
														"title": "SSL/TLS Recommender"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Zone setting identifier.",
																		"enum": [
																			"tls_1_2_only"
																		],
																		"example": "tls_1_2_only"
																	},
																	"value": {
																		"$ref": "#/components/schemas/tls_1_2_only_value"
																	}
																}
															}
														],
														"description": "Only allows TLS1.2.",
														"title": "TLS1.2 only"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"tls_1_3"
																		],
																		"example": "tls_1_3"
																	},
																	"value": {
																		"$ref": "#/components/schemas/tls_1_3_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Enables Crypto TLS 1.3 feature for a zone.",
														"title": "Enable TLS 1.3 value for a zone"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"tls_client_auth"
																		],
																		"example": "tls_client_auth"
																	},
																	"value": {
																		"$ref": "#/components/schemas/tls_client_auth_value"
																	}
																}
															}
														],
														"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).",
														"title": "TLS Client Authentication"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"true_client_ip_header"
																		],
																		"example": "true_client_ip_header"
																	},
																	"value": {
																		"$ref": "#/components/schemas/true_client_ip_header_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
														"title": "True Client IP Header"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"waf"
																		],
																		"example": "waf"
																	},
																	"value": {
																		"$ref": "#/components/schemas/waf_value"
																	}
																}
															}
														],
														"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).",
														"title": "Web Application Firewall"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"webp"
																		],
																		"example": "webp"
																	},
																	"value": {
																		"$ref": "#/components/schemas/webp_value"
																	}
																}
															}
														],
														"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
														"title": "Polish WebP Conversion"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"websockets"
																		],
																		"example": "websockets"
																	},
																	"value": {
																		"$ref": "#/components/schemas/websockets_value"
																	}
																}
															}
														],
														"description": "WebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming. For more information refer to [Can I use Cloudflare with Websockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Can-I-use-Cloudflare-with-WebSockets-).",
														"title": "WebSockets"
													}
												]
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get all Zone settings response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get all Zone settings response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get all Zone settings",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/0rtt": {
		"description": "Gets 0-RTT session resumption setting.",
		"operationId": "zone-settings-get-0-rtt-session-resumption-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"0rtt"
															],
															"example": "0rtt"
														},
														"value": {
															"default": "off",
															"description": "Value of the 0-RTT setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "0-RTT session resumption enabled for this zone.",
											"title": "0-RTT Value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get 0-RTT session resumption setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get 0-RTT session resumption setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get 0-RTT session resumption setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/advanced_ddos": {
		"description": "Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones.",
		"operationId": "zone-settings-get-advanced-ddos-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"advanced_ddos"
															],
															"example": "advanced_ddos"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.\nNotes: Defaults to on for Business+ plans",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones.",
											"title": "Advanced DDoS Protection"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Advanced DDOS setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Advanced DDOS setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Advanced DDOS setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_identifier}/settings/always_online": {
		"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
		"operationId": "zone-settings-get-always-online-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"always_online"
															],
															"example": "always_online"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
											"title": "Always Online Mode"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Always Online setting response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Always Online setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Always Online setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/always_use_https": {
		"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
		"operationId": "zone-settings-get-always-use-https-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"always_use_https"
															],
															"example": "always_use_https"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
											"title": "Zone Enable Always Use HTTPS"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Always Use HTTPS setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Always Use HTTPS setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Always Use HTTPS setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/automatic_https_rewrites": {
		"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
		"operationId": "zone-settings-get-automatic-https-rewrites-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"automatic_https_rewrites"
															],
															"example": "automatic_https_rewrites"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
											"title": "Zone Enable Automatic HTTPS Rewrites"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Automatic HTTPS Rewrites setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Automatic HTTPS Rewrites setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Automatic HTTPS Rewrites setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/automatic_platform_optimization": {
		"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/)\nserves your WordPress site from Cloudflare's edge network and caches\nthird-party fonts.\n",
		"operationId": "zone-settings-get-automatic_platform_optimization-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"properties": {
												"cache_by_device_type": {
													"description": "Indicates whether or not [cache by device type](https://developers.cloudflare.com/automatic-platform-optimization/reference/cache-device-type/) is enabled.",
													"example": false,
													"type": "boolean"
												},
												"cf": {
													"default": false,
													"description": "Indicates whether or not Cloudflare proxy is enabled.",
													"example": true,
													"type": "boolean"
												},
												"enabled": {
													"default": false,
													"description": "Indicates whether or not Automatic Platform Optimization is enabled.",
													"example": true,
													"type": "boolean"
												},
												"hostnames": {
													"description": "An array of hostnames where Automatic Platform Optimization for WordPress is activated.",
													"example": [
														"www.example.com",
														"example.com",
														"shop.example.com"
													],
													"items": {
														"format": "hostname",
														"type": "string"
													},
													"type": "array"
												},
												"wordpress": {
													"default": false,
													"description": "Indicates whether or not site is powered by WordPress.",
													"example": true,
													"type": "boolean"
												},
												"wp_plugin": {
													"default": false,
													"description": "Indicates whether or not [Cloudflare for WordPress plugin](https://wordpress.org/plugins/cloudflare/) is installed.",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"enabled",
												"cf",
												"wordpress",
												"wp_plugin",
												"hostnames",
												"cache_by_device_type"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Automatic Platform Optimization for WordPress setting response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Automatic Platform Optimization for WordPress setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Automatic Platform Optimization for WordPress setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/brotli": {
		"description": "When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.",
		"operationId": "zone-settings-get-brotli-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"brotli"
															],
															"example": "brotli"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"on"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.",
											"title": "Brotli Compression"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Brotli setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Brotli setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Brotli setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/browser_cache_ttl": {
		"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).",
		"operationId": "zone-settings-get-browser-cache-ttl-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"browser_cache_ttl"
															],
															"example": "browser_cache_ttl"
														},
														"value": {
															"default": 14400,
															"description": "Value of the zone setting.\nNotes: Setting a TTL of 0 is equivalent to selecting `Respect Existing Headers`",
															"enum": [
																0,
																30,
																60,
																120,
																300,
																1200,
																1800,
																3600,
																7200,
																10800,
																14400,
																18000,
																28800,
																43200,
																57600,
																72000,
																86400,
																172800,
																259200,
																345600,
																432000,
																691200,
																1382400,
																2073600,
																2678400,
																5356800,
																16070400,
																31536000
															],
															"type": "number"
														}
													}
												}
											],
											"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).",
											"title": "Browser Cache TTL"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Browser Cache TTL setting response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Browser Cache TTL setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Browser Cache TTL setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/browser_check": {
		"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).",
		"operationId": "zone-settings-get-browser-check-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"browser_check"
															],
															"example": "browser_check"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).",
											"title": "Browser Check"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Browser Check setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Browser Check setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Browser Check setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/cache_level": {
		"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).",
		"operationId": "zone-settings-get-cache-level-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"cache_level"
															],
															"example": "cache_level"
														},
														"value": {
															"default": "aggressive",
															"description": "Value of the zone setting.",
															"enum": [
																"aggressive",
																"basic",
																"simplified"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).",
											"title": "Cloudflare Cache Level"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Cache Level setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Cache Level setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Cache Level setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/challenge_ttl": {
		"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).",
		"operationId": "zone-settings-get-challenge-ttl-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"challenge_ttl"
															],
															"example": "challenge_ttl"
														},
														"value": {
															"default": 1800,
															"description": "Value of the zone setting.",
															"enum": [
																300,
																900,
																1800,
																2700,
																3600,
																7200,
																10800,
																14400,
																28800,
																57600,
																86400,
																604800,
																2592000,
																31536000
															],
															"type": "number"
														}
													}
												}
											],
											"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).",
											"title": "Challenge Page TTL"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Challenge TTL setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Challenge TTL setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Challenge TTL setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/ciphers": {
		"description": "Gets ciphers setting.",
		"operationId": "zone-settings-get-ciphers-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ciphers"
															],
															"example": "ciphers"
														},
														"value": {
															"default": [],
															"description": "Value of the zone setting.",
															"example": [
																"ECDHE-RSA-AES128-GCM-SHA256",
																"AES128-SHA"
															],
															"items": {
																"type": "string"
															},
															"type": "array",
															"uniqueItems": true
														}
													}
												}
											],
											"default": [],
											"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
											"title": "Zone ciphers allowed for TLS termination"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get ciphers setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get ciphers setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get ciphers setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/development_mode": {
		"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
		"operationId": "zone-settings-get-development-mode-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"development_mode"
															],
															"example": "development_mode"
														},
														"time_remaining": {
															"description": "Value of the zone setting.\nNotes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.",
															"example": 3600,
															"readOnly": true,
															"type": "number"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
											"title": "Development Mode"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Development Mode setting response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Development Mode setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Development Mode setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/early_hints": {
		"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
		"operationId": "zone-settings-get-early-hints-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"early_hints"
															],
															"example": "early_hints"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
											"title": "Early Hints"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Early Hints setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Early Hints setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Early Hints setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/email_obfuscation": {
		"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).",
		"operationId": "zone-settings-get-email-obfuscation-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"email_obfuscation"
															],
															"example": "email_obfuscation"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).",
											"title": "Email Obfuscation"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Email Obfuscation setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Email Obfuscation setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Email Obfuscation setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/h2_prioritization": {
		"description": "Gets HTTP/2 Edge Prioritization setting.\n",
		"operationId": "zone-settings-get-h2_prioritization-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"h2_prioritization"
															],
															"example": "h2_prioritization"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off",
																"custom"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.",
											"title": "HTTP/2 Edge Prioritization"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get HTTP/2 Edge Prioritization setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get HTTP/2 Edge Prioritization setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get HTTP/2 Edge Prioritization setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/hotlink_protection": {
		"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).",
		"operationId": "zone-settings-get-hotlink-protection-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"hotlink_protection"
															],
															"example": "hotlink_protection"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).",
											"title": "Hotlink Protection"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Hotlink Protection setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Hotlink Protection setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Hotlink Protection setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/http2": {
		"description": "Value of the HTTP2 setting.",
		"operationId": "zone-settings-get-h-t-t-p-2-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"http2"
															],
															"example": "http2"
														},
														"value": {
															"default": "off",
															"description": "Value of the HTTP2 setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "HTTP2 enabled for this zone.",
											"title": "HTTP2 Value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get HTTP2 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get HTTP2 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get HTTP2 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/http3": {
		"description": "Value of the HTTP3 setting.",
		"operationId": "zone-settings-get-h-t-t-p-3-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"http3"
															],
															"example": "http3"
														},
														"value": {
															"default": "off",
															"description": "Value of the HTTP3 setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "HTTP3 enabled for this zone.",
											"title": "HTTP3 Value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get HTTP3 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get HTTP3 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get HTTP3 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/image_resizing": {
		"description": "Image Resizing provides on-demand resizing, conversion and optimisation\nfor images served through Cloudflare's network. Refer to the\n[Image Resizing documentation](https://developers.cloudflare.com/images/)\nfor more information.\n",
		"operationId": "zone-settings-get-image_resizing-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"image_resizing"
															],
															"example": "image_resizing"
														},
														"value": {
															"default": "off",
															"description": "Whether the feature is enabled, disabled, or enabled in `open proxy` mode.",
															"enum": [
																"on",
																"off",
																"open"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.",
											"title": "Image Resizing"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Image Resizing setting response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Image Resizing setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Image Resizing setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/ip_geolocation": {
		"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).",
		"operationId": "zone-settings-get-ip-geolocation-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ip_geolocation"
															],
															"example": "ip_geolocation"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).",
											"title": "IP Geolocation"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get IP Geolocation setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get IP Geolocation setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get IP Geolocation setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/ipv6": {
		"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).",
		"operationId": "zone-settings-get-i-pv6-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ipv6"
															],
															"example": "ipv6"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"on"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).",
											"title": "IPv6"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get IPv6 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get IPv6 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get IPv6 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/min_tls_version": {
		"description": "Gets Minimum TLS Version setting.",
		"operationId": "zone-settings-get-minimum-tls-version-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"min_tls_version"
															],
															"example": "min_tls_version"
														},
														"value": {
															"default": "1.0",
															"description": "Value of the zone setting.",
															"enum": [
																"1.0",
																"1.1",
																"1.2",
																"1.3"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "1.0",
											"description": "Only accepts HTTPS requests that use at least the TLS protocol version specified. For example, if TLS 1.1 is selected, TLS 1.0 connections will be rejected, while 1.1, 1.2, and 1.3 (if enabled) will be permitted.",
											"title": "Zone Minimum TLS Version value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Minimum TLS Version setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Minimum TLS Version setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Minimum TLS Version setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/minify": {
		"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
		"operationId": "zone-settings-get-minify-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "Zone setting identifier.",
															"enum": [
																"minify"
															],
															"example": "minify"
														},
														"value": {
															"description": "Value of the zone setting.",
															"properties": {
																"css": {
																	"default": "off",
																	"description": "Automatically minify all CSS files for your website.",
																	"enum": [
																		"on",
																		"off"
																	]
																},
																"html": {
																	"default": "off",
																	"description": "Automatically minify all HTML files for your website.",
																	"enum": [
																		"on",
																		"off"
																	]
																},
																"js": {
																	"default": "off",
																	"description": "Automatically minify all JavaScript files for your website.",
																	"enum": [
																		"on",
																		"off"
																	]
																}
															},
															"type": "object"
														}
													}
												}
											],
											"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
											"title": "Auto-Minify Assets"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Minify setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Minify setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Minify setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/mirage": {
		"description": "Automatically optimize image loading for website visitors on mobile\ndevices. Refer to our [blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed)\nfor more information.\n",
		"operationId": "zone-settings-get-mirage-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"mirage"
															],
															"example": "mirage"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Automatically optimize image loading for website visitors on mobile\ndevices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed)\nfor more information.\n",
											"title": "Mirage Image Optimization"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Mirage setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Mirage setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Mirage setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/mobile_redirect": {
		"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
		"operationId": "zone-settings-get-mobile-redirect-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "Identifier of the zone setting.",
															"enum": [
																"mobile_redirect"
															],
															"example": "mobile_redirect"
														},
														"value": {
															"description": "Value of the zone setting.",
															"properties": {
																"mobile_subdomain": {
																	"description": "Which subdomain prefix you wish to redirect visitors on mobile devices to (subdomain must already exist).",
																	"example": "m",
																	"minLength": 1,
																	"nullable": true,
																	"type": "string"
																},
																"status": {
																	"default": "off",
																	"description": "Whether or not mobile redirect is enabled.",
																	"enum": [
																		"on",
																		"off"
																	]
																},
																"strip_uri": {
																	"default": false,
																	"description": "Whether to drop the current page path and redirect to the mobile subdomain URL root, or keep the path and redirect to the same page on the mobile subdomain.",
																	"example": false,
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
											"title": "Mobile Redirect"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Mobile Redirect setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Mobile Redirect setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Mobile Redirect setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/nel": {
		"description": "Enable Network Error Logging reporting on your zone. (Beta)\n",
		"operationId": "zone-settings-get-nel-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "Zone setting identifier.",
															"enum": [
																"nel"
															],
															"example": "nel"
														},
														"value": {
															"description": "Value of the zone setting.",
															"properties": {
																"enabled": {
																	"default": false,
																	"example": false,
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"description": "Enable Network Error Logging reporting on your zone. (Beta) ",
											"title": "Network Error Logging"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Network Error Logging setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Network Error Logging setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Network Error Logging setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/opportunistic_encryption": {
		"description": "Gets Opportunistic Encryption setting.",
		"operationId": "zone-settings-get-opportunistic-encryption-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"opportunistic_encryption"
															],
															"example": "opportunistic_encryption"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Enables the Opportunistic Encryption feature for a zone.",
											"title": "Enable Opportunistic Encryption for a zone"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Opportunistic Encryption setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Opportunistic Encryption setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Opportunistic Encryption setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/opportunistic_onion": {
		"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
		"operationId": "zone-settings-get-opportunistic-onion-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"opportunistic_onion"
															],
															"example": "opportunistic_onion"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
											"title": "Zone Enable Onion Routing"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Opportunistic Onion setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Opportunistic Onion setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Opportunistic Onion setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/orange_to_orange": {
		"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other\nzones also on Cloudflare.\n",
		"operationId": "zone-settings-get-orange_to_orange-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"orange_to_orange"
															],
															"example": "orange_to_orange"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
											"title": "Orange to Orange"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Orange to Orange (O2O) setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Orange to Orange (O2O) setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Orange to Orange (O2O) setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/origin_error_page_pass_thru": {
		"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
		"operationId": "zone-settings-get-enable-error-pages-on-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"origin_error_page_pass_thru"
															],
															"example": "origin_error_page_pass_thru"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
											"title": "Error Pages On"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Enable Error Pages On setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Enable Error Pages On setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Enable Error Pages On setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_identifier}/settings/origin_max_http_version": {
		"description": "The highest HTTP version Cloudflare will attempt to use with your\norigin. This setting allows Cloudflare to make HTTP/2 requests to your\norigin. (Refer to \n[Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/),\nfor more information.).\n",
		"operationId": "zone-settings-get-origin_max_http_version-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"id": {
															"description": "Identifier of the zone setting.",
															"enum": [
																"origin_max_http_version"
															],
															"example": "origin_max_http_version"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														}
													},
													"required": [
														"id"
													]
												}
											],
											"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.).",
											"title": "Origin Max HTTP version"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Origin Max HTTP Version setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Origin Max HTTP Version setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Origin Max HTTP Version setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/polish": {
		"description": "Automatically optimize image loading for website visitors on mobile\ndevices. Refer to our [blog post](http://blog.cloudflare.com/polish-solving-mobile-speed)\nfor more information.\n",
		"operationId": "zone-settings-get-polish-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"polish"
															],
															"example": "polish"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"lossless",
																"lossy"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
											"title": "Polish Image Optimization"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Polish setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Polish setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Polish setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/prefetch_preload": {
		"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
		"operationId": "zone-settings-get-prefetch-preload-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"prefetch_preload"
															],
															"example": "prefetch_preload"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
											"title": "Prefetch preload"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get prefetch preload setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get prefetch preload setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get prefetch preload setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_identifier}/settings/privacy_pass": {
		"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).",
		"operationId": "zone-settings-get-privacy-pass-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"privacy_pass"
															],
															"example": "privacy_pass"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).",
											"title": "Privacy Pass"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Privacy Pass setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Privacy Pass setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Privacy Pass setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/proxy_read_timeout": {
		"description": "Maximum time between two read operations from origin.\n",
		"operationId": "zone-settings-get-proxy_read_timeout-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"proxy_read_timeout"
															],
															"example": "proxy_read_timeout"
														},
														"value": {
															"default": 100,
															"description": "Value of the zone setting.\nNotes: Value must be between 1 and 6000",
															"type": "number"
														}
													}
												}
											],
											"description": "Maximum time between two read operations from origin.",
											"title": "Proxy Read Timeout"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Proxy Read Timeout setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Proxy Read Timeout setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Proxy Read Timeout setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/pseudo_ipv4": {
		"description": "Value of the Pseudo IPv4 setting.",
		"operationId": "zone-settings-get-pseudo-i-pv4-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"default": "pseudo_ipv4",
															"description": "Value of the Pseudo IPv4 setting.",
															"enum": [
																"pseudo_ipv4"
															]
														},
														"value": {
															"default": "off",
															"description": "Value of the Pseudo IPv4 setting.",
															"enum": [
																"off",
																"add_header",
																"overwrite_header"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "The value set for the Pseudo IPv4 setting.",
											"title": "Pseudo IPv4 Value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Pseudo IPv4 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Pseudo IPv4 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Pseudo IPv4 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/response_buffering": {
		"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
		"operationId": "zone-settings-get-response-buffering-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"response_buffering"
															],
															"example": "response_buffering"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
											"title": "Response Buffering"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Response Buffering setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Response Buffering setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Response Buffering setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_identifier}/settings/rocket_loader": {
		"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation\nthat prioritises rendering your content while loading your site's\nJavascript asynchronously. Turning on Rocket Loader will immediately\nimprove a web page's rendering time sometimes measured as Time to First\nPaint (TTFP), and also the `window.onload` time (assuming there is\nJavaScript on the page). This can have a positive impact on your Google\nsearch ranking. When turned on, Rocket Loader will automatically defer\nthe loading of all Javascript referenced in your HTML, with no\nconfiguration required. Refer to \n[Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056)\nfor more information.\n",
		"operationId": "zone-settings-get-rocket_loader-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"rocket_loader"
															],
															"example": "rocket_loader"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
											"title": "Rocket Loader"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Rocket Loader setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Rocket Loader setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Rocket Loader setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/security_header": {
		"description": "Cloudflare security header for a zone.",
		"operationId": "zone-settings-get-security-header-(-hsts)-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone's security header.",
															"enum": [
																"security_header"
															],
															"example": "security_header"
														},
														"value": {
															"properties": {
																"strict_transport_security": {
																	"description": "Strict Transport Security.",
																	"properties": {
																		"enabled": {
																			"description": "Whether or not strict transport security is enabled.",
																			"example": true,
																			"type": "boolean"
																		},
																		"include_subdomains": {
																			"description": "Include all subdomains for strict transport security.",
																			"example": true,
																			"type": "boolean"
																		},
																		"max_age": {
																			"description": "Max age in seconds of the strict transport security.",
																			"example": 86400,
																			"type": "number"
																		},
																		"nosniff": {
																			"description": "Whether or not to include 'X-Content-Type-Options: nosniff' header.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"description": "Cloudflare security header for a zone.",
											"title": "Security Header"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Security Header (HSTS) setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Security Header (HSTS) setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Security Header (HSTS) setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/security_level": {
		"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).",
		"operationId": "zone-settings-get-security-level-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"security_level"
															],
															"example": "security_level"
														},
														"value": {
															"default": "medium",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"essentially_off",
																"low",
																"medium",
																"high",
																"under_attack"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).",
											"title": "Security Level"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Security Level setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Security Level setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Security Level setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/server_side_exclude": {
		"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).",
		"operationId": "zone-settings-get-server-side-exclude-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"server_side_exclude"
															],
															"example": "server_side_exclude"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).",
											"title": "Server Side Exclude"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Server Side Exclude setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Server Side Exclude setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Server Side Exclude setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/sort_query_string_for_cache": {
		"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
		"operationId": "zone-settings-get-enable-query-string-sort-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"sort_query_string_for_cache"
															],
															"example": "sort_query_string_for_cache"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
											"title": "Get String Sort"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Enable Query String Sort setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Enable Query String Sort setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Enable Query String Sort setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_identifier}/settings/ssl": {
		"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).",
		"operationId": "zone-settings-get-ssl-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ssl"
															],
															"example": "ssl"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.\nNotes: Depends on the zone's plan level",
															"enum": [
																"off",
																"flexible",
																"full",
																"strict"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).",
											"title": "SSL"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get SSL setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get SSL setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get SSL setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/ssl_recommender": {
		"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and\nrecommend (by sending periodic emails) the most secure SSL/TLS setting\nyour origin servers support.\n",
		"operationId": "zone-settings-get-ssl_recommender-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"enabled": {
															"default": false,
															"description": "ssl-recommender enrollment setting.",
															"type": "boolean"
														},
														"id": {
															"description": "Enrollment value for SSL/TLS Recommender.",
															"enum": [
																"ssl_recommender"
															],
															"example": "ssl_recommender"
														}
													}
												}
											],
											"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
											"title": "SSL/TLS Recommender"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get SSL/TLS Recommender enrollment setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get SSL/TLS Recommender enrollment setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get SSL/TLS Recommender enrollment setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/tls_1_3": {
		"description": "Gets TLS 1.3 setting enabled for a zone.",
		"operationId": "zone-settings-get-tls-1.-3-setting-enabled-for-a-zone",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"tls_1_3"
															],
															"example": "tls_1_3"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
															"enum": [
																"on",
																"off",
																"zrt"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Enables Crypto TLS 1.3 feature for a zone.",
											"title": "Enable TLS 1.3 value for a zone"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get TLS 1.3 setting enabled for a zone response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get TLS 1.3 setting enabled for a zone response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get TLS 1.3 setting enabled for a zone",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/tls_client_auth": {
		"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).",
		"operationId": "zone-settings-get-tls-client-auth-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"tls_client_auth"
															],
															"example": "tls_client_auth"
														},
														"value": {
															"default": "on",
															"description": "value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).",
											"title": "TLS Client Authentication"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get TLS Client Auth setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get TLS Client Auth setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get TLS Client Auth setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_identifier}/settings/true_client_ip_header": {
		"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
		"operationId": "zone-settings-get-true-client-ip-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"true_client_ip_header"
															],
															"example": "true_client_ip_header"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
											"title": "True Client IP Header"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get True Client IP setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get True Client IP setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get True Client IP setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_identifier}/settings/waf": {
		"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).",
		"operationId": "zone-settings-get-web-application-firewall-(-waf)-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"waf"
															],
															"example": "waf"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).",
											"title": "Web Application Firewall"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Web Application Firewall (WAF) setting response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get Web Application Firewall (WAF) setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Web Application Firewall (WAF) setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/webp": {
		"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
		"operationId": "zone-settings-get-web-p-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"webp"
															],
															"example": "webp"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"on"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
											"title": "Polish WebP Conversion"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get WebP setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get WebP setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get WebP setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/settings/websockets": {
		"description": "Gets Websockets setting. For more information about Websockets, please refer to [Using Cloudflare with WebSockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Using-Cloudflare-with-WebSockets).",
		"operationId": "zone-settings-get-web-sockets-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"websockets"
															],
															"example": "websockets"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"on"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "WebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming. For more information refer to [Can I use Cloudflare with Websockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Can-I-use-Cloudflare-with-WebSockets-).",
											"title": "WebSockets"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get WebSockets setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Get WebSockets setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get WebSockets setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings": {
		"description": "Edit settings for a zone.",
		"operationId": "zone-settings-edit-zone-settings-info",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"items": {
								"description": "One or more zone setting objects. Must contain an ID and a value.",
								"example": [
									{
										"id": "always_online",
										"value": "on"
									},
									{
										"id": "browser_cache_ttl",
										"value": 18000
									},
									{
										"id": "ip_geolocation",
										"value": "off"
									}
								],
								"items": {
									"oneOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"0rtt"
															],
															"example": "0rtt"
														},
														"value": {
															"$ref": "#/components/schemas/0rtt_value"
														}
													}
												}
											],
											"description": "0-RTT session resumption enabled for this zone.",
											"title": "0-RTT Value"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"advanced_ddos"
															],
															"example": "advanced_ddos"
														},
														"value": {
															"$ref": "#/components/schemas/advanced_ddos_value"
														}
													}
												}
											],
											"description": "Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones.",
											"title": "Advanced DDoS Protection"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"always_online"
															],
															"example": "always_online"
														},
														"value": {
															"$ref": "#/components/schemas/always_online_value"
														}
													}
												}
											],
											"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
											"title": "Always Online Mode"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"always_use_https"
															],
															"example": "always_use_https"
														},
														"value": {
															"$ref": "#/components/schemas/always_use_https_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
											"title": "Zone Enable Always Use HTTPS"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"automatic_https_rewrites"
															],
															"example": "automatic_https_rewrites"
														},
														"value": {
															"$ref": "#/components/schemas/automatic_https_rewrites_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
											"title": "Zone Enable Automatic HTTPS Rewrites"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"brotli"
															],
															"example": "brotli"
														},
														"value": {
															"$ref": "#/components/schemas/brotli_value"
														}
													}
												}
											],
											"description": "When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.",
											"title": "Brotli Compression"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"browser_cache_ttl"
															],
															"example": "browser_cache_ttl"
														},
														"value": {
															"$ref": "#/components/schemas/browser_cache_ttl_value"
														}
													}
												}
											],
											"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).",
											"title": "Browser Cache TTL"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"browser_check"
															],
															"example": "browser_check"
														},
														"value": {
															"$ref": "#/components/schemas/browser_check_value"
														}
													}
												}
											],
											"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).",
											"title": "Browser Check"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"cache_level"
															],
															"example": "cache_level"
														},
														"value": {
															"$ref": "#/components/schemas/cache_level_value"
														}
													}
												}
											],
											"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).",
											"title": "Cloudflare Cache Level"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"challenge_ttl"
															],
															"example": "challenge_ttl"
														},
														"value": {
															"$ref": "#/components/schemas/challenge_ttl_value"
														}
													}
												}
											],
											"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).",
											"title": "Challenge Page TTL"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ciphers"
															],
															"example": "ciphers"
														},
														"value": {
															"$ref": "#/components/schemas/ciphers_value"
														}
													}
												}
											],
											"default": [],
											"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
											"title": "Zone ciphers allowed for TLS termination"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "How to flatten the cname destination.",
															"enum": [
																"cname_flattening"
															]
														},
														"value": {
															"$ref": "#/components/schemas/cname_flattening_value"
														}
													}
												}
											],
											"description": "Whether or not cname flattening is on.",
											"title": "Cloudflare CNAME Flattening"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"development_mode"
															],
															"example": "development_mode"
														},
														"time_remaining": {
															"description": "Value of the zone setting.\nNotes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.",
															"example": 3600,
															"readOnly": true,
															"type": "number"
														},
														"value": {
															"$ref": "#/components/schemas/development_mode_value"
														}
													}
												}
											],
											"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
											"title": "Development Mode"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"early_hints"
															],
															"example": "early_hints"
														},
														"value": {
															"$ref": "#/components/schemas/early_hints_value"
														}
													}
												}
											],
											"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
											"title": "Early Hints"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"edge_cache_ttl"
															],
															"example": "edge_cache_ttl"
														},
														"value": {
															"$ref": "#/components/schemas/edge_cache_ttl_value"
														}
													}
												}
											],
											"description": "Time (in seconds) that a resource will be ensured to remain on Cloudflare's cache servers.",
											"title": "Edge Cache TTL"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"email_obfuscation"
															],
															"example": "email_obfuscation"
														},
														"value": {
															"$ref": "#/components/schemas/email_obfuscation_value"
														}
													}
												}
											],
											"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).",
											"title": "Email Obfuscation"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"h2_prioritization"
															],
															"example": "h2_prioritization"
														},
														"value": {
															"$ref": "#/components/schemas/h2_prioritization_value"
														}
													}
												}
											],
											"description": "HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.",
											"title": "HTTP/2 Edge Prioritization"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"hotlink_protection"
															],
															"example": "hotlink_protection"
														},
														"value": {
															"$ref": "#/components/schemas/hotlink_protection_value"
														}
													}
												}
											],
											"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).",
											"title": "Hotlink Protection"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"http2"
															],
															"example": "http2"
														},
														"value": {
															"$ref": "#/components/schemas/http2_value"
														}
													}
												}
											],
											"description": "HTTP2 enabled for this zone.",
											"title": "HTTP2 Value"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"http3"
															],
															"example": "http3"
														},
														"value": {
															"$ref": "#/components/schemas/http3_value"
														}
													}
												}
											],
											"description": "HTTP3 enabled for this zone.",
											"title": "HTTP3 Value"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"image_resizing"
															],
															"example": "image_resizing"
														},
														"value": {
															"$ref": "#/components/schemas/image_resizing_value"
														}
													}
												}
											],
											"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.",
											"title": "Image Resizing"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ip_geolocation"
															],
															"example": "ip_geolocation"
														},
														"value": {
															"$ref": "#/components/schemas/ip_geolocation_value"
														}
													}
												}
											],
											"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).",
											"title": "IP Geolocation"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ipv6"
															],
															"example": "ipv6"
														},
														"value": {
															"$ref": "#/components/schemas/ipv6_value"
														}
													}
												}
											],
											"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).",
											"title": "IPv6"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "identifier of the zone setting.",
															"enum": [
																"max_upload"
															],
															"example": "max_upload"
														},
														"value": {
															"$ref": "#/components/schemas/max_upload_value"
														}
													}
												}
											],
											"description": "Maximum size of an allowable upload.",
											"title": "Max Upload"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"min_tls_version"
															],
															"example": "min_tls_version"
														},
														"value": {
															"$ref": "#/components/schemas/min_tls_version_value"
														}
													}
												}
											],
											"default": "1.0",
											"description": "Only accepts HTTPS requests that use at least the TLS protocol version specified. For example, if TLS 1.1 is selected, TLS 1.0 connections will be rejected, while 1.1, 1.2, and 1.3 (if enabled) will be permitted.",
											"title": "Zone Minimum TLS Version value"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "Zone setting identifier.",
															"enum": [
																"minify"
															],
															"example": "minify"
														},
														"value": {
															"$ref": "#/components/schemas/minify_value"
														}
													}
												}
											],
											"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
											"title": "Auto-Minify Assets"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"mirage"
															],
															"example": "mirage"
														},
														"value": {
															"$ref": "#/components/schemas/mirage_value"
														}
													}
												}
											],
											"description": "Automatically optimize image loading for website visitors on mobile\ndevices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed)\nfor more information.\n",
											"title": "Mirage Image Optimization"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "Identifier of the zone setting.",
															"enum": [
																"mobile_redirect"
															],
															"example": "mobile_redirect"
														},
														"value": {
															"$ref": "#/components/schemas/mobile_redirect_value"
														}
													}
												}
											],
											"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
											"title": "Mobile Redirect"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "Zone setting identifier.",
															"enum": [
																"nel"
															],
															"example": "nel"
														},
														"value": {
															"$ref": "#/components/schemas/nel_value"
														}
													}
												}
											],
											"description": "Enable Network Error Logging reporting on your zone. (Beta) ",
											"title": "Network Error Logging"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"opportunistic_encryption"
															],
															"example": "opportunistic_encryption"
														},
														"value": {
															"$ref": "#/components/schemas/opportunistic_encryption_value"
														}
													}
												}
											],
											"description": "Enables the Opportunistic Encryption feature for a zone.",
											"title": "Enable Opportunistic Encryption for a zone"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"opportunistic_onion"
															],
															"example": "opportunistic_onion"
														},
														"value": {
															"$ref": "#/components/schemas/opportunistic_onion_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
											"title": "Zone Enable Onion Routing"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"orange_to_orange"
															],
															"example": "orange_to_orange"
														},
														"value": {
															"$ref": "#/components/schemas/orange_to_orange_value"
														}
													}
												}
											],
											"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
											"title": "Orange to Orange"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"origin_error_page_pass_thru"
															],
															"example": "origin_error_page_pass_thru"
														},
														"value": {
															"$ref": "#/components/schemas/origin_error_page_pass_thru_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
											"title": "Error Pages On"
										},
										{
											"allOf": [
												{
													"properties": {
														"id": {
															"description": "Identifier of the zone setting.",
															"enum": [
																"origin_max_http_version"
															],
															"example": "origin_max_http_version"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														}
													},
													"required": [
														"id"
													]
												}
											],
											"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.).",
											"title": "Origin Max HTTP version"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"polish"
															],
															"example": "polish"
														},
														"value": {
															"$ref": "#/components/schemas/polish_value"
														}
													}
												}
											],
											"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
											"title": "Polish Image Optimization"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"prefetch_preload"
															],
															"example": "prefetch_preload"
														},
														"value": {
															"$ref": "#/components/schemas/prefetch_preload_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
											"title": "Prefetch preload"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"privacy_pass"
															],
															"example": "privacy_pass"
														},
														"value": {
															"$ref": "#/components/schemas/privacy_pass_value"
														}
													}
												}
											],
											"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).",
											"title": "Privacy Pass"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"proxy_read_timeout"
															],
															"example": "proxy_read_timeout"
														},
														"value": {
															"$ref": "#/components/schemas/proxy_read_timeout_value"
														}
													}
												}
											],
											"description": "Maximum time between two read operations from origin.",
											"title": "Proxy Read Timeout"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"default": "pseudo_ipv4",
															"description": "Value of the Pseudo IPv4 setting.",
															"enum": [
																"pseudo_ipv4"
															]
														},
														"value": {
															"$ref": "#/components/schemas/pseudo_ipv4_value"
														}
													}
												}
											],
											"description": "The value set for the Pseudo IPv4 setting.",
											"title": "Pseudo IPv4 Value"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"response_buffering"
															],
															"example": "response_buffering"
														},
														"value": {
															"$ref": "#/components/schemas/response_buffering_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
											"title": "Response Buffering"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"rocket_loader"
															],
															"example": "rocket_loader"
														},
														"value": {
															"$ref": "#/components/schemas/rocket_loader_value"
														}
													}
												}
											],
											"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
											"title": "Rocket Loader"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"automatic_platform_optimization"
															],
															"example": "automatic_platform_optimization"
														},
														"value": {
															"$ref": "#/components/schemas/automatic_platform_optimization"
														}
													}
												}
											],
											"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare's edge network and caches third-party fonts.",
											"title": "Automatic Platform Optimization for WordPress"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone's security header.",
															"enum": [
																"security_header"
															],
															"example": "security_header"
														},
														"value": {
															"$ref": "#/components/schemas/security_header_value"
														}
													}
												}
											],
											"description": "Cloudflare security header for a zone.",
											"title": "Security Header"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"security_level"
															],
															"example": "security_level"
														},
														"value": {
															"$ref": "#/components/schemas/security_level_value"
														}
													}
												}
											],
											"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).",
											"title": "Security Level"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"server_side_exclude"
															],
															"example": "server_side_exclude"
														},
														"value": {
															"$ref": "#/components/schemas/server_side_exclude_value"
														}
													}
												}
											],
											"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).",
											"title": "Server Side Exclude"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "Zone setting identifier.",
															"enum": [
																"sha1_support"
															],
															"example": "sha1_support"
														},
														"value": {
															"$ref": "#/components/schemas/sha1_support_value"
														}
													}
												}
											],
											"description": "Allow SHA1 support.",
											"title": "Toggle SHA1 support"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"sort_query_string_for_cache"
															],
															"example": "sort_query_string_for_cache"
														},
														"value": {
															"$ref": "#/components/schemas/sort_query_string_for_cache_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
											"title": "Get String Sort"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ssl"
															],
															"example": "ssl"
														},
														"value": {
															"$ref": "#/components/schemas/ssl_value"
														}
													}
												}
											],
											"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).",
											"title": "SSL"
										},
										{
											"allOf": [
												{
													"properties": {
														"enabled": {
															"$ref": "#/components/schemas/ssl_recommender_enabled"
														},
														"id": {
															"description": "Enrollment value for SSL/TLS Recommender.",
															"enum": [
																"ssl_recommender"
															],
															"example": "ssl_recommender"
														}
													}
												}
											],
											"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
											"title": "SSL/TLS Recommender"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "Zone setting identifier.",
															"enum": [
																"tls_1_2_only"
															],
															"example": "tls_1_2_only"
														},
														"value": {
															"$ref": "#/components/schemas/tls_1_2_only_value"
														}
													}
												}
											],
											"description": "Only allows TLS1.2.",
											"title": "TLS1.2 only"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"tls_1_3"
															],
															"example": "tls_1_3"
														},
														"value": {
															"$ref": "#/components/schemas/tls_1_3_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Enables Crypto TLS 1.3 feature for a zone.",
											"title": "Enable TLS 1.3 value for a zone"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"tls_client_auth"
															],
															"example": "tls_client_auth"
														},
														"value": {
															"$ref": "#/components/schemas/tls_client_auth_value"
														}
													}
												}
											],
											"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).",
											"title": "TLS Client Authentication"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"true_client_ip_header"
															],
															"example": "true_client_ip_header"
														},
														"value": {
															"$ref": "#/components/schemas/true_client_ip_header_value"
														}
													}
												}
											],
											"default": "off",
											"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
											"title": "True Client IP Header"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"waf"
															],
															"example": "waf"
														},
														"value": {
															"$ref": "#/components/schemas/waf_value"
														}
													}
												}
											],
											"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).",
											"title": "Web Application Firewall"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"webp"
															],
															"example": "webp"
														},
														"value": {
															"$ref": "#/components/schemas/webp_value"
														}
													}
												}
											],
											"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
											"title": "Polish WebP Conversion"
										},
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/base-R2bccQuO"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"websockets"
															],
															"example": "websockets"
														},
														"value": {
															"$ref": "#/components/schemas/websockets_value"
														}
													}
												}
											],
											"description": "WebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming. For more information refer to [Can I use Cloudflare with Websockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Can-I-use-Cloudflare-with-WebSockets-).",
											"title": "WebSockets"
										}
									],
									"type": "object"
								},
								"minItems": 1,
								"type": "array"
							}
						},
						"required": [
							"items"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"$ref": "#/components/schemas/messages"
										},
										"messages": {
											"$ref": "#/components/schemas/messages"
										},
										"success": {
											"description": "Whether the API call was successful",
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"anyOf": [
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"0rtt"
																		],
																		"example": "0rtt"
																	},
																	"value": {
																		"$ref": "#/components/schemas/0rtt_value"
																	}
																}
															}
														],
														"description": "0-RTT session resumption enabled for this zone.",
														"title": "0-RTT Value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"advanced_ddos"
																		],
																		"example": "advanced_ddos"
																	},
																	"value": {
																		"$ref": "#/components/schemas/advanced_ddos_value"
																	}
																}
															}
														],
														"description": "Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones.",
														"title": "Advanced DDoS Protection"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"always_online"
																		],
																		"example": "always_online"
																	},
																	"value": {
																		"$ref": "#/components/schemas/always_online_value"
																	}
																}
															}
														],
														"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
														"title": "Always Online Mode"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"always_use_https"
																		],
																		"example": "always_use_https"
																	},
																	"value": {
																		"$ref": "#/components/schemas/always_use_https_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
														"title": "Zone Enable Always Use HTTPS"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"automatic_https_rewrites"
																		],
																		"example": "automatic_https_rewrites"
																	},
																	"value": {
																		"$ref": "#/components/schemas/automatic_https_rewrites_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
														"title": "Zone Enable Automatic HTTPS Rewrites"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"brotli"
																		],
																		"example": "brotli"
																	},
																	"value": {
																		"$ref": "#/components/schemas/brotli_value"
																	}
																}
															}
														],
														"description": "When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.",
														"title": "Brotli Compression"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"browser_cache_ttl"
																		],
																		"example": "browser_cache_ttl"
																	},
																	"value": {
																		"$ref": "#/components/schemas/browser_cache_ttl_value"
																	}
																}
															}
														],
														"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).",
														"title": "Browser Cache TTL"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"browser_check"
																		],
																		"example": "browser_check"
																	},
																	"value": {
																		"$ref": "#/components/schemas/browser_check_value"
																	}
																}
															}
														],
														"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).",
														"title": "Browser Check"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"cache_level"
																		],
																		"example": "cache_level"
																	},
																	"value": {
																		"$ref": "#/components/schemas/cache_level_value"
																	}
																}
															}
														],
														"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).",
														"title": "Cloudflare Cache Level"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"challenge_ttl"
																		],
																		"example": "challenge_ttl"
																	},
																	"value": {
																		"$ref": "#/components/schemas/challenge_ttl_value"
																	}
																}
															}
														],
														"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).",
														"title": "Challenge Page TTL"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"ciphers"
																		],
																		"example": "ciphers"
																	},
																	"value": {
																		"$ref": "#/components/schemas/ciphers_value"
																	}
																}
															}
														],
														"default": [],
														"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
														"title": "Zone ciphers allowed for TLS termination"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "How to flatten the cname destination.",
																		"enum": [
																			"cname_flattening"
																		]
																	},
																	"value": {
																		"$ref": "#/components/schemas/cname_flattening_value"
																	}
																}
															}
														],
														"description": "Whether or not cname flattening is on.",
														"title": "Cloudflare CNAME Flattening"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"development_mode"
																		],
																		"example": "development_mode"
																	},
																	"time_remaining": {
																		"description": "Value of the zone setting.\nNotes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.",
																		"example": 3600,
																		"readOnly": true,
																		"type": "number"
																	},
																	"value": {
																		"$ref": "#/components/schemas/development_mode_value"
																	}
																}
															}
														],
														"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
														"title": "Development Mode"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"early_hints"
																		],
																		"example": "early_hints"
																	},
																	"value": {
																		"$ref": "#/components/schemas/early_hints_value"
																	}
																}
															}
														],
														"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
														"title": "Early Hints"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"edge_cache_ttl"
																		],
																		"example": "edge_cache_ttl"
																	},
																	"value": {
																		"$ref": "#/components/schemas/edge_cache_ttl_value"
																	}
																}
															}
														],
														"description": "Time (in seconds) that a resource will be ensured to remain on Cloudflare's cache servers.",
														"title": "Edge Cache TTL"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"email_obfuscation"
																		],
																		"example": "email_obfuscation"
																	},
																	"value": {
																		"$ref": "#/components/schemas/email_obfuscation_value"
																	}
																}
															}
														],
														"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).",
														"title": "Email Obfuscation"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"h2_prioritization"
																		],
																		"example": "h2_prioritization"
																	},
																	"value": {
																		"$ref": "#/components/schemas/h2_prioritization_value"
																	}
																}
															}
														],
														"description": "HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.",
														"title": "HTTP/2 Edge Prioritization"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"hotlink_protection"
																		],
																		"example": "hotlink_protection"
																	},
																	"value": {
																		"$ref": "#/components/schemas/hotlink_protection_value"
																	}
																}
															}
														],
														"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).",
														"title": "Hotlink Protection"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"http2"
																		],
																		"example": "http2"
																	},
																	"value": {
																		"$ref": "#/components/schemas/http2_value"
																	}
																}
															}
														],
														"description": "HTTP2 enabled for this zone.",
														"title": "HTTP2 Value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"http3"
																		],
																		"example": "http3"
																	},
																	"value": {
																		"$ref": "#/components/schemas/http3_value"
																	}
																}
															}
														],
														"description": "HTTP3 enabled for this zone.",
														"title": "HTTP3 Value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"image_resizing"
																		],
																		"example": "image_resizing"
																	},
																	"value": {
																		"$ref": "#/components/schemas/image_resizing_value"
																	}
																}
															}
														],
														"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.",
														"title": "Image Resizing"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"ip_geolocation"
																		],
																		"example": "ip_geolocation"
																	},
																	"value": {
																		"$ref": "#/components/schemas/ip_geolocation_value"
																	}
																}
															}
														],
														"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).",
														"title": "IP Geolocation"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"ipv6"
																		],
																		"example": "ipv6"
																	},
																	"value": {
																		"$ref": "#/components/schemas/ipv6_value"
																	}
																}
															}
														],
														"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).",
														"title": "IPv6"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "identifier of the zone setting.",
																		"enum": [
																			"max_upload"
																		],
																		"example": "max_upload"
																	},
																	"value": {
																		"$ref": "#/components/schemas/max_upload_value"
																	}
																}
															}
														],
														"description": "Maximum size of an allowable upload.",
														"title": "Max Upload"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"min_tls_version"
																		],
																		"example": "min_tls_version"
																	},
																	"value": {
																		"$ref": "#/components/schemas/min_tls_version_value"
																	}
																}
															}
														],
														"default": "1.0",
														"description": "Only accepts HTTPS requests that use at least the TLS protocol version specified. For example, if TLS 1.1 is selected, TLS 1.0 connections will be rejected, while 1.1, 1.2, and 1.3 (if enabled) will be permitted.",
														"title": "Zone Minimum TLS Version value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Zone setting identifier.",
																		"enum": [
																			"minify"
																		],
																		"example": "minify"
																	},
																	"value": {
																		"$ref": "#/components/schemas/minify_value"
																	}
																}
															}
														],
														"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
														"title": "Auto-Minify Assets"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"mirage"
																		],
																		"example": "mirage"
																	},
																	"value": {
																		"$ref": "#/components/schemas/mirage_value"
																	}
																}
															}
														],
														"description": "Automatically optimize image loading for website visitors on mobile\ndevices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed)\nfor more information.\n",
														"title": "Mirage Image Optimization"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Identifier of the zone setting.",
																		"enum": [
																			"mobile_redirect"
																		],
																		"example": "mobile_redirect"
																	},
																	"value": {
																		"$ref": "#/components/schemas/mobile_redirect_value"
																	}
																}
															}
														],
														"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
														"title": "Mobile Redirect"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Zone setting identifier.",
																		"enum": [
																			"nel"
																		],
																		"example": "nel"
																	},
																	"value": {
																		"$ref": "#/components/schemas/nel_value"
																	}
																}
															}
														],
														"description": "Enable Network Error Logging reporting on your zone. (Beta) ",
														"title": "Network Error Logging"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"opportunistic_encryption"
																		],
																		"example": "opportunistic_encryption"
																	},
																	"value": {
																		"$ref": "#/components/schemas/opportunistic_encryption_value"
																	}
																}
															}
														],
														"description": "Enables the Opportunistic Encryption feature for a zone.",
														"title": "Enable Opportunistic Encryption for a zone"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"opportunistic_onion"
																		],
																		"example": "opportunistic_onion"
																	},
																	"value": {
																		"$ref": "#/components/schemas/opportunistic_onion_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
														"title": "Zone Enable Onion Routing"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"orange_to_orange"
																		],
																		"example": "orange_to_orange"
																	},
																	"value": {
																		"$ref": "#/components/schemas/orange_to_orange_value"
																	}
																}
															}
														],
														"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
														"title": "Orange to Orange"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"origin_error_page_pass_thru"
																		],
																		"example": "origin_error_page_pass_thru"
																	},
																	"value": {
																		"$ref": "#/components/schemas/origin_error_page_pass_thru_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
														"title": "Error Pages On"
													},
													{
														"allOf": [
															{
																"properties": {
																	"id": {
																		"description": "Identifier of the zone setting.",
																		"enum": [
																			"origin_max_http_version"
																		],
																		"example": "origin_max_http_version"
																	},
																	"modified_on": {
																		"description": "last time this setting was modified.",
																		"example": "2014-01-01T05:20:00.12345Z",
																		"format": "date-time",
																		"nullable": true,
																		"readOnly": true,
																		"type": "string"
																	}
																},
																"required": [
																	"id"
																]
															}
														],
														"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.).",
														"title": "Origin Max HTTP version"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"polish"
																		],
																		"example": "polish"
																	},
																	"value": {
																		"$ref": "#/components/schemas/polish_value"
																	}
																}
															}
														],
														"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
														"title": "Polish Image Optimization"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"prefetch_preload"
																		],
																		"example": "prefetch_preload"
																	},
																	"value": {
																		"$ref": "#/components/schemas/prefetch_preload_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
														"title": "Prefetch preload"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"privacy_pass"
																		],
																		"example": "privacy_pass"
																	},
																	"value": {
																		"$ref": "#/components/schemas/privacy_pass_value"
																	}
																}
															}
														],
														"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).",
														"title": "Privacy Pass"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"proxy_read_timeout"
																		],
																		"example": "proxy_read_timeout"
																	},
																	"value": {
																		"$ref": "#/components/schemas/proxy_read_timeout_value"
																	}
																}
															}
														],
														"description": "Maximum time between two read operations from origin.",
														"title": "Proxy Read Timeout"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"default": "pseudo_ipv4",
																		"description": "Value of the Pseudo IPv4 setting.",
																		"enum": [
																			"pseudo_ipv4"
																		]
																	},
																	"value": {
																		"$ref": "#/components/schemas/pseudo_ipv4_value"
																	}
																}
															}
														],
														"description": "The value set for the Pseudo IPv4 setting.",
														"title": "Pseudo IPv4 Value"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"response_buffering"
																		],
																		"example": "response_buffering"
																	},
																	"value": {
																		"$ref": "#/components/schemas/response_buffering_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
														"title": "Response Buffering"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"rocket_loader"
																		],
																		"example": "rocket_loader"
																	},
																	"value": {
																		"$ref": "#/components/schemas/rocket_loader_value"
																	}
																}
															}
														],
														"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
														"title": "Rocket Loader"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"automatic_platform_optimization"
																		],
																		"example": "automatic_platform_optimization"
																	},
																	"value": {
																		"$ref": "#/components/schemas/automatic_platform_optimization"
																	}
																}
															}
														],
														"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare's edge network and caches third-party fonts.",
														"title": "Automatic Platform Optimization for WordPress"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone's security header.",
																		"enum": [
																			"security_header"
																		],
																		"example": "security_header"
																	},
																	"value": {
																		"$ref": "#/components/schemas/security_header_value"
																	}
																}
															}
														],
														"description": "Cloudflare security header for a zone.",
														"title": "Security Header"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"security_level"
																		],
																		"example": "security_level"
																	},
																	"value": {
																		"$ref": "#/components/schemas/security_level_value"
																	}
																}
															}
														],
														"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).",
														"title": "Security Level"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"server_side_exclude"
																		],
																		"example": "server_side_exclude"
																	},
																	"value": {
																		"$ref": "#/components/schemas/server_side_exclude_value"
																	}
																}
															}
														],
														"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).",
														"title": "Server Side Exclude"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Zone setting identifier.",
																		"enum": [
																			"sha1_support"
																		],
																		"example": "sha1_support"
																	},
																	"value": {
																		"$ref": "#/components/schemas/sha1_support_value"
																	}
																}
															}
														],
														"description": "Allow SHA1 support.",
														"title": "Toggle SHA1 support"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"sort_query_string_for_cache"
																		],
																		"example": "sort_query_string_for_cache"
																	},
																	"value": {
																		"$ref": "#/components/schemas/sort_query_string_for_cache_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
														"title": "Get String Sort"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"ssl"
																		],
																		"example": "ssl"
																	},
																	"value": {
																		"$ref": "#/components/schemas/ssl_value"
																	}
																}
															}
														],
														"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).",
														"title": "SSL"
													},
													{
														"allOf": [
															{
																"properties": {
																	"enabled": {
																		"$ref": "#/components/schemas/ssl_recommender_enabled"
																	},
																	"id": {
																		"description": "Enrollment value for SSL/TLS Recommender.",
																		"enum": [
																			"ssl_recommender"
																		],
																		"example": "ssl_recommender"
																	}
																}
															}
														],
														"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
														"title": "SSL/TLS Recommender"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "Zone setting identifier.",
																		"enum": [
																			"tls_1_2_only"
																		],
																		"example": "tls_1_2_only"
																	},
																	"value": {
																		"$ref": "#/components/schemas/tls_1_2_only_value"
																	}
																}
															}
														],
														"description": "Only allows TLS1.2.",
														"title": "TLS1.2 only"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"tls_1_3"
																		],
																		"example": "tls_1_3"
																	},
																	"value": {
																		"$ref": "#/components/schemas/tls_1_3_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Enables Crypto TLS 1.3 feature for a zone.",
														"title": "Enable TLS 1.3 value for a zone"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"tls_client_auth"
																		],
																		"example": "tls_client_auth"
																	},
																	"value": {
																		"$ref": "#/components/schemas/tls_client_auth_value"
																	}
																}
															}
														],
														"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).",
														"title": "TLS Client Authentication"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"true_client_ip_header"
																		],
																		"example": "true_client_ip_header"
																	},
																	"value": {
																		"$ref": "#/components/schemas/true_client_ip_header_value"
																	}
																}
															}
														],
														"default": "off",
														"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
														"title": "True Client IP Header"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"waf"
																		],
																		"example": "waf"
																	},
																	"value": {
																		"$ref": "#/components/schemas/waf_value"
																	}
																}
															}
														],
														"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).",
														"title": "Web Application Firewall"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"webp"
																		],
																		"example": "webp"
																	},
																	"value": {
																		"$ref": "#/components/schemas/webp_value"
																	}
																}
															}
														],
														"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
														"title": "Polish WebP Conversion"
													},
													{
														"allOf": [
															{
																"$ref": "#/components/schemas/base-R2bccQuO"
															},
															{
																"properties": {
																	"id": {
																		"description": "ID of the zone setting.",
																		"enum": [
																			"websockets"
																		],
																		"example": "websockets"
																	},
																	"value": {
																		"$ref": "#/components/schemas/websockets_value"
																	}
																}
															}
														],
														"description": "WebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming. For more information refer to [Can I use Cloudflare with Websockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Can-I-use-Cloudflare-with-WebSockets-).",
														"title": "WebSockets"
													}
												]
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Edit zone settings info response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Edit zone settings info response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Edit zone settings info",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/0rtt": {
		"description": "Changes the 0-RTT session resumption setting.",
		"operationId": "zone-settings-change-0-rtt-session-resumption-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the 0-RTT setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"0rtt"
															],
															"example": "0rtt"
														},
														"value": {
															"default": "off",
															"description": "Value of the 0-RTT setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "0-RTT session resumption enabled for this zone.",
											"title": "0-RTT Value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change 0-RTT session resumption setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change 0-RTT session resumption setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change 0-RTT session resumption setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/always_online": {
		"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
		"operationId": "zone-settings-change-always-online-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"always_online"
															],
															"example": "always_online"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
											"title": "Always Online Mode"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Always Online setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Always Online setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Always Online setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/always_use_https": {
		"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
		"operationId": "zone-settings-change-always-use-https-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"always_use_https"
															],
															"example": "always_use_https"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
											"title": "Zone Enable Always Use HTTPS"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Always Use HTTPS setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Always Use HTTPS setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Always Use HTTPS setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/automatic_https_rewrites": {
		"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
		"operationId": "zone-settings-change-automatic-https-rewrites-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"automatic_https_rewrites"
															],
															"example": "automatic_https_rewrites"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
											"title": "Zone Enable Automatic HTTPS Rewrites"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Automatic HTTPS Rewrites setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Automatic HTTPS Rewrites setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Automatic HTTPS Rewrites setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/automatic_platform_optimization": {
		"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/)\nserves your WordPress site from Cloudflare's edge network and caches\nthird-party fonts.\n",
		"operationId": "zone-settings-change-automatic_platform_optimization-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"properties": {
									"cache_by_device_type": {
										"description": "Indicates whether or not [cache by device type](https://developers.cloudflare.com/automatic-platform-optimization/reference/cache-device-type/) is enabled.",
										"example": false,
										"type": "boolean"
									},
									"cf": {
										"default": false,
										"description": "Indicates whether or not Cloudflare proxy is enabled.",
										"example": true,
										"type": "boolean"
									},
									"enabled": {
										"default": false,
										"description": "Indicates whether or not Automatic Platform Optimization is enabled.",
										"example": true,
										"type": "boolean"
									},
									"hostnames": {
										"description": "An array of hostnames where Automatic Platform Optimization for WordPress is activated.",
										"example": [
											"www.example.com",
											"example.com",
											"shop.example.com"
										],
										"items": {
											"format": "hostname",
											"type": "string"
										},
										"type": "array"
									},
									"wordpress": {
										"default": false,
										"description": "Indicates whether or not site is powered by WordPress.",
										"example": true,
										"type": "boolean"
									},
									"wp_plugin": {
										"default": false,
										"description": "Indicates whether or not [Cloudflare for WordPress plugin](https://wordpress.org/plugins/cloudflare/) is installed.",
										"example": true,
										"type": "boolean"
									}
								},
								"required": [
									"enabled",
									"cf",
									"wordpress",
									"wp_plugin",
									"hostnames",
									"cache_by_device_type"
								],
								"type": "object"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"properties": {
												"cache_by_device_type": {
													"description": "Indicates whether or not [cache by device type](https://developers.cloudflare.com/automatic-platform-optimization/reference/cache-device-type/) is enabled.",
													"example": false,
													"type": "boolean"
												},
												"cf": {
													"default": false,
													"description": "Indicates whether or not Cloudflare proxy is enabled.",
													"example": true,
													"type": "boolean"
												},
												"enabled": {
													"default": false,
													"description": "Indicates whether or not Automatic Platform Optimization is enabled.",
													"example": true,
													"type": "boolean"
												},
												"hostnames": {
													"description": "An array of hostnames where Automatic Platform Optimization for WordPress is activated.",
													"example": [
														"www.example.com",
														"example.com",
														"shop.example.com"
													],
													"items": {
														"format": "hostname",
														"type": "string"
													},
													"type": "array"
												},
												"wordpress": {
													"default": false,
													"description": "Indicates whether or not site is powered by WordPress.",
													"example": true,
													"type": "boolean"
												},
												"wp_plugin": {
													"default": false,
													"description": "Indicates whether or not [Cloudflare for WordPress plugin](https://wordpress.org/plugins/cloudflare/) is installed.",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"enabled",
												"cf",
												"wordpress",
												"wp_plugin",
												"hostnames",
												"cache_by_device_type"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Automatic Platform Optimization for WordPress setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Automatic Platform Optimization for WordPress setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Automatic Platform Optimization for WordPress setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/brotli": {
		"description": "When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.",
		"operationId": "zone-settings-change-brotli-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"off",
									"on"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"brotli"
															],
															"example": "brotli"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"on"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When the client requesting an asset supports the Brotli compression algorithm, Cloudflare will serve a Brotli compressed version of the asset.",
											"title": "Brotli Compression"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Brotli setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Brotli setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Brotli setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/browser_cache_ttl": {
		"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).",
		"operationId": "zone-settings-change-browser-cache-ttl-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": 14400,
								"description": "Value of the zone setting.\nNotes: Setting a TTL of 0 is equivalent to selecting `Respect Existing Headers`",
								"enum": [
									0,
									30,
									60,
									120,
									300,
									1200,
									1800,
									3600,
									7200,
									10800,
									14400,
									18000,
									28800,
									43200,
									57600,
									72000,
									86400,
									172800,
									259200,
									345600,
									432000,
									691200,
									1382400,
									2073600,
									2678400,
									5356800,
									16070400,
									31536000
								],
								"type": "number"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"browser_cache_ttl"
															],
															"example": "browser_cache_ttl"
														},
														"value": {
															"default": 14400,
															"description": "Value of the zone setting.\nNotes: Setting a TTL of 0 is equivalent to selecting `Respect Existing Headers`",
															"enum": [
																0,
																30,
																60,
																120,
																300,
																1200,
																1800,
																3600,
																7200,
																10800,
																14400,
																18000,
																28800,
																43200,
																57600,
																72000,
																86400,
																172800,
																259200,
																345600,
																432000,
																691200,
																1382400,
																2073600,
																2678400,
																5356800,
																16070400,
																31536000
															],
															"type": "number"
														}
													}
												}
											],
											"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276).",
											"title": "Browser Cache TTL"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Browser Cache TTL setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Browser Cache TTL setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Browser Cache TTL setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/browser_check": {
		"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).",
		"operationId": "zone-settings-change-browser-check-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"browser_check"
															],
															"example": "browser_check"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086).",
											"title": "Browser Check"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Browser Check setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Browser Check setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Browser Check setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/cache_level": {
		"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).",
		"operationId": "zone-settings-change-cache-level-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "aggressive",
								"description": "Value of the zone setting.",
								"enum": [
									"aggressive",
									"basic",
									"simplified"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"cache_level"
															],
															"example": "cache_level"
														},
														"value": {
															"default": "aggressive",
															"description": "Value of the zone setting.",
															"enum": [
																"aggressive",
																"basic",
																"simplified"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256).",
											"title": "Cloudflare Cache Level"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Cache Level setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Cache Level setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Cache Level setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/challenge_ttl": {
		"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).",
		"operationId": "zone-settings-change-challenge-ttl-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": 1800,
								"description": "Value of the zone setting.",
								"enum": [
									300,
									900,
									1800,
									2700,
									3600,
									7200,
									10800,
									14400,
									28800,
									57600,
									86400,
									604800,
									2592000,
									31536000
								],
								"type": "number"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"challenge_ttl"
															],
															"example": "challenge_ttl"
														},
														"value": {
															"default": 1800,
															"description": "Value of the zone setting.",
															"enum": [
																300,
																900,
																1800,
																2700,
																3600,
																7200,
																10800,
																14400,
																28800,
																57600,
																86400,
																604800,
																2592000,
																31536000
															],
															"type": "number"
														}
													}
												}
											],
											"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136).",
											"title": "Challenge Page TTL"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Challenge TTL setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Challenge TTL setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Challenge TTL setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/ciphers": {
		"description": "Changes ciphers setting.",
		"operationId": "zone-settings-change-ciphers-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": [],
								"description": "Value of the zone setting.",
								"example": [
									"ECDHE-RSA-AES128-GCM-SHA256",
									"AES128-SHA"
								],
								"items": {
									"type": "string"
								},
								"type": "array",
								"uniqueItems": true
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ciphers"
															],
															"example": "ciphers"
														},
														"value": {
															"default": [],
															"description": "Value of the zone setting.",
															"example": [
																"ECDHE-RSA-AES128-GCM-SHA256",
																"AES128-SHA"
															],
															"items": {
																"type": "string"
															},
															"type": "array",
															"uniqueItems": true
														}
													}
												}
											],
											"default": [],
											"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
											"title": "Zone ciphers allowed for TLS termination"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change ciphers setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change ciphers setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change ciphers setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/development_mode": {
		"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
		"operationId": "zone-settings-change-development-mode-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"development_mode"
															],
															"example": "development_mode"
														},
														"time_remaining": {
															"description": "Value of the zone setting.\nNotes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.",
															"example": 3600,
															"readOnly": true,
															"type": "number"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
											"title": "Development Mode"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Development Mode setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Development Mode setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Development Mode setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/early_hints": {
		"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
		"operationId": "zone-settings-change-early-hints-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"early_hints"
															],
															"example": "early_hints"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
											"title": "Early Hints"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Early Hints setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Early Hints setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Early Hints setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/email_obfuscation": {
		"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).",
		"operationId": "zone-settings-change-email-obfuscation-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"email_obfuscation"
															],
															"example": "email_obfuscation"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016).",
											"title": "Email Obfuscation"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Email Obfuscation setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Email Obfuscation setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Email Obfuscation setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/h2_prioritization": {
		"description": "Gets HTTP/2 Edge Prioritization setting.\n",
		"operationId": "zone-settings-change-h2_prioritization-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"editable": {
												"default": true,
												"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
												"enum": [
													true,
													false
												],
												"readOnly": true,
												"type": "boolean"
											},
											"id": {
												"description": "Identifier of the zone setting.",
												"example": "development_mode",
												"type": "string"
											},
											"modified_on": {
												"description": "last time this setting was modified.",
												"example": "2014-01-01T05:20:00.12345Z",
												"format": "date-time",
												"nullable": true,
												"readOnly": true,
												"type": "string"
											},
											"value": {
												"description": "Current value of the zone setting.",
												"example": "on"
											}
										},
										"required": [
											"id",
											"value"
										]
									},
									{
										"properties": {
											"id": {
												"description": "ID of the zone setting.",
												"enum": [
													"h2_prioritization"
												],
												"example": "h2_prioritization"
											},
											"value": {
												"default": "off",
												"description": "Value of the zone setting.",
												"enum": [
													"on",
													"off",
													"custom"
												],
												"type": "string"
											}
										}
									}
								],
								"description": "HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.",
								"title": "HTTP/2 Edge Prioritization"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"h2_prioritization"
															],
															"example": "h2_prioritization"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off",
																"custom"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.",
											"title": "HTTP/2 Edge Prioritization"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change HTTP/2 Edge Prioritization setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change HTTP/2 Edge Prioritization setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change HTTP/2 Edge Prioritization setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/hotlink_protection": {
		"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).",
		"operationId": "zone-settings-change-hotlink-protection-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"hotlink_protection"
															],
															"example": "hotlink_protection"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026).",
											"title": "Hotlink Protection"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Hotlink Protection setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Hotlink Protection setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Hotlink Protection setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/http2": {
		"description": "Value of the HTTP2 setting.",
		"operationId": "zone-settings-change-h-t-t-p-2-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the HTTP2 setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"http2"
															],
															"example": "http2"
														},
														"value": {
															"default": "off",
															"description": "Value of the HTTP2 setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "HTTP2 enabled for this zone.",
											"title": "HTTP2 Value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change HTTP2 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change HTTP2 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change HTTP2 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/http3": {
		"description": "Value of the HTTP3 setting.",
		"operationId": "zone-settings-change-h-t-t-p-3-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the HTTP3 setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"http3"
															],
															"example": "http3"
														},
														"value": {
															"default": "off",
															"description": "Value of the HTTP3 setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "HTTP3 enabled for this zone.",
											"title": "HTTP3 Value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change HTTP3 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change HTTP3 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change HTTP3 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/image_resizing": {
		"description": "Image Resizing provides on-demand resizing, conversion and optimisation\nfor images served through Cloudflare's network. Refer to the\n[Image Resizing documentation](https://developers.cloudflare.com/images/)\nfor more information.\n",
		"operationId": "zone-settings-change-image_resizing-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"editable": {
												"default": true,
												"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
												"enum": [
													true,
													false
												],
												"readOnly": true,
												"type": "boolean"
											},
											"id": {
												"description": "Identifier of the zone setting.",
												"example": "development_mode",
												"type": "string"
											},
											"modified_on": {
												"description": "last time this setting was modified.",
												"example": "2014-01-01T05:20:00.12345Z",
												"format": "date-time",
												"nullable": true,
												"readOnly": true,
												"type": "string"
											},
											"value": {
												"description": "Current value of the zone setting.",
												"example": "on"
											}
										},
										"required": [
											"id",
											"value"
										]
									},
									{
										"properties": {
											"id": {
												"description": "ID of the zone setting.",
												"enum": [
													"image_resizing"
												],
												"example": "image_resizing"
											},
											"value": {
												"default": "off",
												"description": "Whether the feature is enabled, disabled, or enabled in `open proxy` mode.",
												"enum": [
													"on",
													"off",
													"open"
												],
												"type": "string"
											}
										}
									}
								],
								"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.",
								"title": "Image Resizing"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"image_resizing"
															],
															"example": "image_resizing"
														},
														"value": {
															"default": "off",
															"description": "Whether the feature is enabled, disabled, or enabled in `open proxy` mode.",
															"enum": [
																"on",
																"off",
																"open"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. Refer to the [Image Resizing documentation](https://developers.cloudflare.com/images/) for more information.",
											"title": "Image Resizing"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Image Resizing setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Image Resizing setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Image Resizing setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/ip_geolocation": {
		"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).",
		"operationId": "zone-settings-change-ip-geolocation-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ip_geolocation"
															],
															"example": "ip_geolocation"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236).",
											"title": "IP Geolocation"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change IP Geolocation setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change IP Geolocation setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change IP Geolocation setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/ipv6": {
		"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).",
		"operationId": "zone-settings-change-i-pv6-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"off",
									"on"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ipv6"
															],
															"example": "ipv6"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"on"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586).",
											"title": "IPv6"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change IPv6 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change IPv6 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change IPv6 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/min_tls_version": {
		"description": "Changes Minimum TLS Version setting.",
		"operationId": "zone-settings-change-minimum-tls-version-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "1.0",
								"description": "Value of the zone setting.",
								"enum": [
									"1.0",
									"1.1",
									"1.2",
									"1.3"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"min_tls_version"
															],
															"example": "min_tls_version"
														},
														"value": {
															"default": "1.0",
															"description": "Value of the zone setting.",
															"enum": [
																"1.0",
																"1.1",
																"1.2",
																"1.3"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "1.0",
											"description": "Only accepts HTTPS requests that use at least the TLS protocol version specified. For example, if TLS 1.1 is selected, TLS 1.0 connections will be rejected, while 1.1, 1.2, and 1.3 (if enabled) will be permitted.",
											"title": "Zone Minimum TLS Version value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Minimum TLS Version setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Minimum TLS Version setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Minimum TLS Version setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/minify": {
		"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
		"operationId": "zone-settings-change-minify-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"description": "Value of the zone setting.",
								"properties": {
									"css": {
										"default": "off",
										"description": "Automatically minify all CSS files for your website.",
										"enum": [
											"on",
											"off"
										]
									},
									"html": {
										"default": "off",
										"description": "Automatically minify all HTML files for your website.",
										"enum": [
											"on",
											"off"
										]
									},
									"js": {
										"default": "off",
										"description": "Automatically minify all JavaScript files for your website.",
										"enum": [
											"on",
											"off"
										]
									}
								},
								"type": "object"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "Zone setting identifier.",
															"enum": [
																"minify"
															],
															"example": "minify"
														},
														"value": {
															"description": "Value of the zone setting.",
															"properties": {
																"css": {
																	"default": "off",
																	"description": "Automatically minify all CSS files for your website.",
																	"enum": [
																		"on",
																		"off"
																	]
																},
																"html": {
																	"default": "off",
																	"description": "Automatically minify all HTML files for your website.",
																	"enum": [
																		"on",
																		"off"
																	]
																},
																"js": {
																	"default": "off",
																	"description": "Automatically minify all JavaScript files for your website.",
																	"enum": [
																		"on",
																		"off"
																	]
																}
															},
															"type": "object"
														}
													}
												}
											],
											"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
											"title": "Auto-Minify Assets"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Minify setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Minify setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Minify setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/mirage": {
		"description": "Automatically optimize image loading for website visitors on mobile devices. Refer to our [blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more information.",
		"operationId": "zone-settings-change-web-mirage-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"mirage"
															],
															"example": "mirage"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Automatically optimize image loading for website visitors on mobile\ndevices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed)\nfor more information.\n",
											"title": "Mirage Image Optimization"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Mirage setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Mirage setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Mirage setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/mobile_redirect": {
		"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
		"operationId": "zone-settings-change-mobile-redirect-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"description": "Value of the zone setting.",
								"properties": {
									"mobile_subdomain": {
										"description": "Which subdomain prefix you wish to redirect visitors on mobile devices to (subdomain must already exist).",
										"example": "m",
										"minLength": 1,
										"nullable": true,
										"type": "string"
									},
									"status": {
										"default": "off",
										"description": "Whether or not mobile redirect is enabled.",
										"enum": [
											"on",
											"off"
										]
									},
									"strip_uri": {
										"default": false,
										"description": "Whether to drop the current page path and redirect to the mobile subdomain URL root, or keep the path and redirect to the same page on the mobile subdomain.",
										"example": false,
										"type": "boolean"
									}
								},
								"type": "object"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "Identifier of the zone setting.",
															"enum": [
																"mobile_redirect"
															],
															"example": "mobile_redirect"
														},
														"value": {
															"description": "Value of the zone setting.",
															"properties": {
																"mobile_subdomain": {
																	"description": "Which subdomain prefix you wish to redirect visitors on mobile devices to (subdomain must already exist).",
																	"example": "m",
																	"minLength": 1,
																	"nullable": true,
																	"type": "string"
																},
																"status": {
																	"default": "off",
																	"description": "Whether or not mobile redirect is enabled.",
																	"enum": [
																		"on",
																		"off"
																	]
																},
																"strip_uri": {
																	"default": false,
																	"description": "Whether to drop the current page path and redirect to the mobile subdomain URL root, or keep the path and redirect to the same page on the mobile subdomain.",
																	"example": false,
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
											"title": "Mobile Redirect"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Mobile Redirect setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Mobile Redirect setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Mobile Redirect setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/nel": {
		"description": "Automatically optimize image loading for website visitors on mobile devices. Refer to our [blog post](http://blog.cloudflare.com/nel-solving-mobile-speed) for more information.",
		"operationId": "zone-settings-change-nel-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"editable": {
												"default": true,
												"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
												"enum": [
													true,
													false
												],
												"readOnly": true,
												"type": "boolean"
											},
											"id": {
												"description": "Identifier of the zone setting.",
												"example": "development_mode",
												"type": "string"
											},
											"modified_on": {
												"description": "last time this setting was modified.",
												"example": "2014-01-01T05:20:00.12345Z",
												"format": "date-time",
												"nullable": true,
												"readOnly": true,
												"type": "string"
											},
											"value": {
												"description": "Current value of the zone setting.",
												"example": "on"
											}
										},
										"required": [
											"id",
											"value"
										]
									},
									{
										"properties": {
											"id": {
												"description": "Zone setting identifier.",
												"enum": [
													"nel"
												],
												"example": "nel"
											},
											"value": {
												"description": "Value of the zone setting.",
												"properties": {
													"enabled": {
														"default": false,
														"example": false,
														"type": "boolean"
													}
												},
												"type": "object"
											}
										}
									}
								],
								"description": "Enable Network Error Logging reporting on your zone. (Beta) ",
								"title": "Network Error Logging"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "Zone setting identifier.",
															"enum": [
																"nel"
															],
															"example": "nel"
														},
														"value": {
															"description": "Value of the zone setting.",
															"properties": {
																"enabled": {
																	"default": false,
																	"example": false,
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"description": "Enable Network Error Logging reporting on your zone. (Beta) ",
											"title": "Network Error Logging"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Network Error Logging setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Network Error Logging setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Network Error Logging setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/opportunistic_encryption": {
		"description": "Changes Opportunistic Encryption setting.",
		"operationId": "zone-settings-change-opportunistic-encryption-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"opportunistic_encryption"
															],
															"example": "opportunistic_encryption"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Enables the Opportunistic Encryption feature for a zone.",
											"title": "Enable Opportunistic Encryption for a zone"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Opportunistic Encryption setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Opportunistic Encryption setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Opportunistic Encryption setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/opportunistic_onion": {
		"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
		"operationId": "zone-settings-change-opportunistic-onion-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"opportunistic_onion"
															],
															"example": "opportunistic_onion"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
											"title": "Zone Enable Onion Routing"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Opportunistic Onion setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Opportunistic Onion setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Opportunistic Onion setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/orange_to_orange": {
		"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other\nzones also on Cloudflare.\n",
		"operationId": "zone-settings-change-orange_to_orange-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"editable": {
												"default": true,
												"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
												"enum": [
													true,
													false
												],
												"readOnly": true,
												"type": "boolean"
											},
											"id": {
												"description": "Identifier of the zone setting.",
												"example": "development_mode",
												"type": "string"
											},
											"modified_on": {
												"description": "last time this setting was modified.",
												"example": "2014-01-01T05:20:00.12345Z",
												"format": "date-time",
												"nullable": true,
												"readOnly": true,
												"type": "string"
											},
											"value": {
												"description": "Current value of the zone setting.",
												"example": "on"
											}
										},
										"required": [
											"id",
											"value"
										]
									},
									{
										"properties": {
											"id": {
												"description": "ID of the zone setting.",
												"enum": [
													"orange_to_orange"
												],
												"example": "orange_to_orange"
											},
											"value": {
												"default": "on",
												"description": "Value of the zone setting.",
												"enum": [
													"on",
													"off"
												],
												"type": "string"
											}
										}
									}
								],
								"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
								"title": "Orange to Orange"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"orange_to_orange"
															],
															"example": "orange_to_orange"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
											"title": "Orange to Orange"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Orange to Orange (O2O) setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Orange to Orange (O2O) setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Orange to Orange (O2O) setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/origin_error_page_pass_thru": {
		"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
		"operationId": "zone-settings-change-enable-error-pages-on-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"origin_error_page_pass_thru"
															],
															"example": "origin_error_page_pass_thru"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
											"title": "Error Pages On"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Enable Error Pages On setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Enable Error Pages On setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Enable Error Pages On setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_identifier}/settings/origin_max_http_version": {
		"description": "The highest HTTP version Cloudflare will attempt to use with your\norigin. This setting allows Cloudflare to make HTTP/2 requests to your\norigin. (Refer to \n[Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/),\nfor more information.).\n",
		"operationId": "zone-settings-change-origin_max_http_version-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"id": {
												"description": "Identifier of the zone setting.",
												"enum": [
													"origin_max_http_version"
												],
												"example": "origin_max_http_version"
											},
											"modified_on": {
												"description": "last time this setting was modified.",
												"example": "2014-01-01T05:20:00.12345Z",
												"format": "date-time",
												"nullable": true,
												"readOnly": true,
												"type": "string"
											}
										},
										"required": [
											"id"
										]
									}
								],
								"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.).",
								"title": "Origin Max HTTP version"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"id": {
															"description": "Identifier of the zone setting.",
															"enum": [
																"origin_max_http_version"
															],
															"example": "origin_max_http_version"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														}
													},
													"required": [
														"id"
													]
												}
											],
											"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.).",
											"title": "Origin Max HTTP version"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Origin Max HTTP Version setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Origin Max HTTP Version setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Origin Max HTTP Version setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/polish": {
		"description": "Automatically optimize image loading for website visitors on mobile devices. Refer to our [blog post](http://blog.cloudflare.com/polish-solving-mobile-speed) for more information.",
		"operationId": "zone-settings-change-polish-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"editable": {
												"default": true,
												"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
												"enum": [
													true,
													false
												],
												"readOnly": true,
												"type": "boolean"
											},
											"id": {
												"description": "Identifier of the zone setting.",
												"example": "development_mode",
												"type": "string"
											},
											"modified_on": {
												"description": "last time this setting was modified.",
												"example": "2014-01-01T05:20:00.12345Z",
												"format": "date-time",
												"nullable": true,
												"readOnly": true,
												"type": "string"
											},
											"value": {
												"description": "Current value of the zone setting.",
												"example": "on"
											}
										},
										"required": [
											"id",
											"value"
										]
									},
									{
										"properties": {
											"id": {
												"description": "ID of the zone setting.",
												"enum": [
													"polish"
												],
												"example": "polish"
											},
											"value": {
												"default": "off",
												"description": "Value of the zone setting.",
												"enum": [
													"off",
													"lossless",
													"lossy"
												],
												"type": "string"
											}
										}
									}
								],
								"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
								"title": "Polish Image Optimization"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"polish"
															],
															"example": "polish"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"lossless",
																"lossy"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
											"title": "Polish Image Optimization"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Polish setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Polish setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Polish setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/prefetch_preload": {
		"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
		"operationId": "zone-settings-change-prefetch-preload-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"prefetch_preload"
															],
															"example": "prefetch_preload"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
											"title": "Prefetch preload"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change prefetch preload setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change prefetch preload setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change prefetch preload setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_identifier}/settings/privacy_pass": {
		"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).",
		"operationId": "zone-settings-change-privacy-pass-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"privacy_pass"
															],
															"example": "privacy_pass"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass).",
											"title": "Privacy Pass"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Privacy Pass setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Privacy Pass setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Privacy Pass setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/proxy_read_timeout": {
		"description": "Maximum time between two read operations from origin.\n",
		"operationId": "zone-settings-change-proxy_read_timeout-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"editable": {
												"default": true,
												"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
												"enum": [
													true,
													false
												],
												"readOnly": true,
												"type": "boolean"
											},
											"id": {
												"description": "Identifier of the zone setting.",
												"example": "development_mode",
												"type": "string"
											},
											"modified_on": {
												"description": "last time this setting was modified.",
												"example": "2014-01-01T05:20:00.12345Z",
												"format": "date-time",
												"nullable": true,
												"readOnly": true,
												"type": "string"
											},
											"value": {
												"description": "Current value of the zone setting.",
												"example": "on"
											}
										},
										"required": [
											"id",
											"value"
										]
									},
									{
										"properties": {
											"id": {
												"description": "ID of the zone setting.",
												"enum": [
													"proxy_read_timeout"
												],
												"example": "proxy_read_timeout"
											},
											"value": {
												"default": 100,
												"description": "Value of the zone setting.\nNotes: Value must be between 1 and 6000",
												"type": "number"
											}
										}
									}
								],
								"description": "Maximum time between two read operations from origin.",
								"title": "Proxy Read Timeout"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"proxy_read_timeout"
															],
															"example": "proxy_read_timeout"
														},
														"value": {
															"default": 100,
															"description": "Value of the zone setting.\nNotes: Value must be between 1 and 6000",
															"type": "number"
														}
													}
												}
											],
											"description": "Maximum time between two read operations from origin.",
											"title": "Proxy Read Timeout"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Proxy Read Timeout setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Proxy Read Timeout setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Proxy Read Timeout setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/pseudo_ipv4": {
		"description": "Value of the Pseudo IPv4 setting.",
		"operationId": "zone-settings-change-pseudo-i-pv4-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the Pseudo IPv4 setting.",
								"enum": [
									"off",
									"add_header",
									"overwrite_header"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"default": "pseudo_ipv4",
															"description": "Value of the Pseudo IPv4 setting.",
															"enum": [
																"pseudo_ipv4"
															]
														},
														"value": {
															"default": "off",
															"description": "Value of the Pseudo IPv4 setting.",
															"enum": [
																"off",
																"add_header",
																"overwrite_header"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "The value set for the Pseudo IPv4 setting.",
											"title": "Pseudo IPv4 Value"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Pseudo IPv4 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Pseudo IPv4 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Pseudo IPv4 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/response_buffering": {
		"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
		"operationId": "zone-settings-change-response-buffering-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"response_buffering"
															],
															"example": "response_buffering"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
											"title": "Response Buffering"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Response Buffering setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Response Buffering setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Response Buffering setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_identifier}/settings/rocket_loader": {
		"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation\nthat prioritises rendering your content while loading your site's\nJavascript asynchronously. Turning on Rocket Loader will immediately\nimprove a web page's rendering time sometimes measured as Time to First\nPaint (TTFP), and also the `window.onload` time (assuming there is\nJavaScript on the page). This can have a positive impact on your Google\nsearch ranking. When turned on, Rocket Loader will automatically defer\nthe loading of all Javascript referenced in your HTML, with no\nconfiguration required. Refer to \n[Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056)\nfor more information.\n",
		"operationId": "zone-settings-change-rocket_loader-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"editable": {
												"default": true,
												"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
												"enum": [
													true,
													false
												],
												"readOnly": true,
												"type": "boolean"
											},
											"id": {
												"description": "Identifier of the zone setting.",
												"example": "development_mode",
												"type": "string"
											},
											"modified_on": {
												"description": "last time this setting was modified.",
												"example": "2014-01-01T05:20:00.12345Z",
												"format": "date-time",
												"nullable": true,
												"readOnly": true,
												"type": "string"
											},
											"value": {
												"description": "Current value of the zone setting.",
												"example": "on"
											}
										},
										"required": [
											"id",
											"value"
										]
									},
									{
										"properties": {
											"id": {
												"description": "ID of the zone setting.",
												"enum": [
													"rocket_loader"
												],
												"example": "rocket_loader"
											},
											"value": {
												"default": "off",
												"description": "Value of the zone setting.",
												"enum": [
													"on",
													"off"
												],
												"type": "string"
											}
										}
									}
								],
								"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
								"title": "Rocket Loader"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"rocket_loader"
															],
															"example": "rocket_loader"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
											"title": "Rocket Loader"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Rocket Loader setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Rocket Loader setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Rocket Loader setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/security_header": {
		"description": "Cloudflare security header for a zone.",
		"operationId": "zone-settings-change-security-header-(-hsts)-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"properties": {
									"strict_transport_security": {
										"description": "Strict Transport Security.",
										"properties": {
											"enabled": {
												"description": "Whether or not strict transport security is enabled.",
												"example": true,
												"type": "boolean"
											},
											"include_subdomains": {
												"description": "Include all subdomains for strict transport security.",
												"example": true,
												"type": "boolean"
											},
											"max_age": {
												"description": "Max age in seconds of the strict transport security.",
												"example": 86400,
												"type": "number"
											},
											"nosniff": {
												"description": "Whether or not to include 'X-Content-Type-Options: nosniff' header.",
												"example": true,
												"type": "boolean"
											}
										},
										"type": "object"
									}
								},
								"type": "object"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone's security header.",
															"enum": [
																"security_header"
															],
															"example": "security_header"
														},
														"value": {
															"properties": {
																"strict_transport_security": {
																	"description": "Strict Transport Security.",
																	"properties": {
																		"enabled": {
																			"description": "Whether or not strict transport security is enabled.",
																			"example": true,
																			"type": "boolean"
																		},
																		"include_subdomains": {
																			"description": "Include all subdomains for strict transport security.",
																			"example": true,
																			"type": "boolean"
																		},
																		"max_age": {
																			"description": "Max age in seconds of the strict transport security.",
																			"example": 86400,
																			"type": "number"
																		},
																		"nosniff": {
																			"description": "Whether or not to include 'X-Content-Type-Options: nosniff' header.",
																			"example": true,
																			"type": "boolean"
																		}
																	},
																	"type": "object"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"description": "Cloudflare security header for a zone.",
											"title": "Security Header"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Security Header (HSTS) setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Security Header (HSTS) setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Security Header (HSTS) setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/security_level": {
		"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).",
		"operationId": "zone-settings-change-security-level-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "medium",
								"description": "Value of the zone setting.",
								"enum": [
									"off",
									"essentially_off",
									"low",
									"medium",
									"high",
									"under_attack"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"security_level"
															],
															"example": "security_level"
														},
														"value": {
															"default": "medium",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"essentially_off",
																"low",
																"medium",
																"high",
																"under_attack"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056).",
											"title": "Security Level"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Security Level setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Security Level setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Security Level setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/server_side_exclude": {
		"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).",
		"operationId": "zone-settings-change-server-side-exclude-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"server_side_exclude"
															],
															"example": "server_side_exclude"
														},
														"value": {
															"default": "on",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036).",
											"title": "Server Side Exclude"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Server Side Exclude setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Server Side Exclude setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Server Side Exclude setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/sort_query_string_for_cache": {
		"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
		"operationId": "zone-settings-change-enable-query-string-sort-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"sort_query_string_for_cache"
															],
															"example": "sort_query_string_for_cache"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
											"title": "Get String Sort"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Enable Query String Sort setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Enable Query String Sort setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Enable Query String Sort setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_identifier}/settings/ssl": {
		"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).",
		"operationId": "zone-settings-change-ssl-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.\nNotes: Depends on the zone's plan level",
								"enum": [
									"off",
									"flexible",
									"full",
									"strict"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"ssl"
															],
															"example": "ssl"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.\nNotes: Depends on the zone's plan level",
															"enum": [
																"off",
																"flexible",
																"full",
																"strict"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416).",
											"title": "SSL"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change SSL setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change SSL setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change SSL setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/ssl_recommender": {
		"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and\nrecommend (by sending periodic emails) the most secure SSL/TLS setting\nyour origin servers support.\n",
		"operationId": "zone-settings-change-ssl_recommender-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"allOf": [
									{
										"properties": {
											"enabled": {
												"default": false,
												"description": "ssl-recommender enrollment setting.",
												"type": "boolean"
											},
											"id": {
												"description": "Enrollment value for SSL/TLS Recommender.",
												"enum": [
													"ssl_recommender"
												],
												"example": "ssl_recommender"
											}
										}
									}
								],
								"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
								"title": "SSL/TLS Recommender"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"enabled": {
															"default": false,
															"description": "ssl-recommender enrollment setting.",
															"type": "boolean"
														},
														"id": {
															"description": "Enrollment value for SSL/TLS Recommender.",
															"enum": [
																"ssl_recommender"
															],
															"example": "ssl_recommender"
														}
													}
												}
											],
											"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
											"title": "SSL/TLS Recommender"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change SSL/TLS Recommender enrollment setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change SSL/TLS Recommender enrollment setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change SSL/TLS Recommender enrollment setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/tls_1_3": {
		"description": "Changes TLS 1.3 setting.",
		"operationId": "zone-settings-change-tls-1.-3-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
								"enum": [
									"on",
									"off",
									"zrt"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"tls_1_3"
															],
															"example": "tls_1_3"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
															"enum": [
																"on",
																"off",
																"zrt"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Enables Crypto TLS 1.3 feature for a zone.",
											"title": "Enable TLS 1.3 value for a zone"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change TLS 1.3 setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change TLS 1.3 setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change TLS 1.3 setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/tls_client_auth": {
		"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).",
		"operationId": "zone-settings-change-tls-client-auth-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "on",
								"description": "value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"tls_client_auth"
															],
															"example": "tls_client_auth"
														},
														"value": {
															"default": "on",
															"description": "value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only).",
											"title": "TLS Client Authentication"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change TLS Client Auth setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change TLS Client Auth setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change TLS Client Auth setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_identifier}/settings/true_client_ip_header": {
		"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
		"operationId": "zone-settings-change-true-client-ip-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"true_client_ip_header"
															],
															"example": "true_client_ip_header"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"default": "off",
											"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
											"title": "True Client IP Header"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change True Client IP setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change True Client IP setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change True Client IP setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_identifier}/settings/waf": {
		"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).",
		"operationId": "zone-settings-change-web-application-firewall-(-waf)-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"waf"
															],
															"example": "waf"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"on",
																"off"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016).",
											"title": "Web Application Firewall"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Web Application Firewall (WAF) setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change Web Application Firewall (WAF) setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change Web Application Firewall (WAF) setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/webp": {
		"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
		"operationId": "zone-settings-change-web-p-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"off",
									"on"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"webp"
															],
															"example": "webp"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"on"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
											"title": "Polish WebP Conversion"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change WebP setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change WebP setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change WebP setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/settings/websockets": {
		"description": "Changes Websockets setting. For more information about Websockets, please refer to [Using Cloudflare with WebSockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Using-Cloudflare-with-WebSockets).",
		"operationId": "zone-settings-change-web-sockets-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the zone setting.",
								"enum": [
									"off",
									"on"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"success": {
													"description": "Whether the API call was successful",
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"editable": {
															"default": true,
															"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level).",
															"enum": [
																true,
																false
															],
															"readOnly": true,
															"type": "boolean"
														},
														"id": {
															"description": "Identifier of the zone setting.",
															"example": "development_mode",
															"type": "string"
														},
														"modified_on": {
															"description": "last time this setting was modified.",
															"example": "2014-01-01T05:20:00.12345Z",
															"format": "date-time",
															"nullable": true,
															"readOnly": true,
															"type": "string"
														},
														"value": {
															"description": "Current value of the zone setting.",
															"example": "on"
														}
													},
													"required": [
														"id",
														"value"
													]
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"websockets"
															],
															"example": "websockets"
														},
														"value": {
															"default": "off",
															"description": "Value of the zone setting.",
															"enum": [
																"off",
																"on"
															],
															"type": "string"
														}
													}
												}
											],
											"description": "WebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming. For more information refer to [Can I use Cloudflare with Websockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Can-I-use-Cloudflare-with-WebSockets-).",
											"title": "WebSockets"
										}
									}
								}
							]
						}
					}
				},
				"description": "Change WebSockets setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"minLength": 1
								},
								"messages": {
									"allOf": [
										{
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										}
									],
									"example": []
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful",
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"type": "object"
						}
					}
				},
				"description": "Change WebSockets setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Change WebSockets setting",
		"tags": [
			"Zone Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}