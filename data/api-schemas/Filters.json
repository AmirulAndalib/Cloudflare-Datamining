{
	"DELETE /zones/{zone_identifier}/filters": {
		"description": "Deletes one or more existing filters.",
		"operationId": "filters-delete-filters",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"id": {
								"description": "The unique identifier of the filter.",
								"example": "372e67954025e0ba6aaa6d586b9e0b61",
								"maxLength": 32,
								"minLength": 32,
								"readOnly": true,
								"type": "string"
							}
						},
						"required": [
							"id"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"$ref": "#/components/schemas/filter-4swOYiiq"
													},
													{
														"required": [
															"id"
														],
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete filters response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"$ref": "#/components/schemas/filter-4swOYiiq"
															},
															{
																"required": [
																	"id"
																],
																"type": "object"
															}
														]
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete filters response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Delete filters",
		"tags": [
			"Filters"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /zones/{zone_identifier}/filters/{id}": {
		"description": "Deletes an existing filter.",
		"operationId": "filters-delete-a-filter",
		"parameters": [
			{
				"in": "path",
				"name": "id",
				"required": true,
				"schema": {
					"description": "The unique identifier of the filter.",
					"example": "372e67954025e0ba6aaa6d586b9e0b61",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-single"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/filter-4swOYiiq"
												},
												{
													"required": [
														"id"
													],
													"type": "object"
												}
											]
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a filter response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/filter-4swOYiiq"
														},
														{
															"required": [
																"id"
															],
															"type": "object"
														}
													]
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a filter response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Delete a filter",
		"tags": [
			"Filters"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/filters": {
		"description": "Fetches filters in a zone. You can filter the results using several optional parameters.",
		"operationId": "filters-list-filters",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "paused",
				"schema": {
					"description": "When true, indicates that the filter is currently paused.",
					"example": false,
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "expression",
				"schema": {
					"description": "A case-insensitive string to find in the expression.",
					"example": "php",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "description",
				"schema": {
					"description": "A case-insensitive string to find in the description.",
					"example": "browsers",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "ref",
				"schema": {
					"description": "The filter ref (a short reference tag) to search for. Must be an exact match.",
					"example": "FIL-100",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 25,
					"description": "Number of filters per page.",
					"maximum": 100,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "id",
				"schema": {
					"description": "The unique identifier of the filter.",
					"example": "372e67954025e0ba6aaa6d586b9e0b61",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"$ref": "#/components/schemas/filter-4swOYiiq"
													},
													{
														"required": [
															"id",
															"expression",
															"paused"
														],
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List filters response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"$ref": "#/components/schemas/filter-4swOYiiq"
															},
															{
																"required": [
																	"id",
																	"expression",
																	"paused"
																],
																"type": "object"
															}
														]
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List filters response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "List filters",
		"tags": [
			"Filters"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/filters/{id}": {
		"description": "Fetches the details of a filter.",
		"operationId": "filters-get-a-filter",
		"parameters": [
			{
				"in": "path",
				"name": "id",
				"required": true,
				"schema": {
					"description": "The unique identifier of the filter.",
					"example": "372e67954025e0ba6aaa6d586b9e0b61",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-single"
								},
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"allOf": [
														{
															"$ref": "#/components/schemas/filter-4swOYiiq"
														},
														{
															"required": [
																"id",
																"expression",
																"paused"
															],
															"type": "object"
														}
													]
												},
												{
													"nullable": true
												}
											]
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a filter response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/filter-4swOYiiq"
																},
																{
																	"required": [
																		"id",
																		"expression",
																		"paused"
																	],
																	"type": "object"
																}
															]
														},
														{
															"nullable": true
														}
													]
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a filter response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get a filter",
		"tags": [
			"Filters"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_identifier}/filters": {
		"description": "Creates one or more filters.",
		"operationId": "filters-create-filters",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"required": [
							"expression"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"$ref": "#/components/schemas/filter-4swOYiiq"
													},
													{
														"required": [
															"id",
															"expression",
															"paused"
														],
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create filters response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"$ref": "#/components/schemas/filter-4swOYiiq"
															},
															{
																"required": [
																	"id",
																	"expression",
																	"paused"
																],
																"type": "object"
															}
														]
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create filters response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Create filters",
		"tags": [
			"Filters"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_identifier}/filters": {
		"description": "Updates one or more existing filters.",
		"operationId": "filters-update-filters",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"required": [
							"id"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"$ref": "#/components/schemas/filter-4swOYiiq"
													},
													{
														"required": [
															"id",
															"expression",
															"paused"
														],
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update filters response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"$ref": "#/components/schemas/filter-4swOYiiq"
															},
															{
																"required": [
																	"id",
																	"expression",
																	"paused"
																],
																"type": "object"
															}
														]
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update filters response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Update filters",
		"tags": [
			"Filters"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_identifier}/filters/{id}": {
		"description": "Updates an existing filter.",
		"operationId": "filters-update-a-filter",
		"parameters": [
			{
				"in": "path",
				"name": "id",
				"required": true,
				"schema": {
					"description": "The unique identifier of the filter.",
					"example": "372e67954025e0ba6aaa6d586b9e0b61",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"required": [
							"id"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-single"
								},
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"allOf": [
														{
															"$ref": "#/components/schemas/filter-4swOYiiq"
														},
														{
															"required": [
																"id",
																"expression",
																"paused"
															],
															"type": "object"
														}
													]
												},
												{
													"nullable": true
												}
											]
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a filter response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"allOf": [
																{
																	"$ref": "#/components/schemas/filter-4swOYiiq"
																},
																{
																	"required": [
																		"id",
																		"expression",
																		"paused"
																	],
																	"type": "object"
																}
															]
														},
														{
															"nullable": true
														}
													]
												}
											},
											"required": [
												"result"
											],
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a filter response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Update a filter",
		"tags": [
			"Filters"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}