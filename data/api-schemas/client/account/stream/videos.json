{
	"id": "https://api.cloudflare.com/schemas/v4/client/account/stream/videos.json",
	"title": "Stream Videos",
	"description": "You can upload videos to Cloudflare Stream for fast video processing and delivery.",
	"type": "object",
	"links": [
		{
			"title": "Upload videos from a URL",
			"description": "Uploads a video to Stream from a provided URL.",
			"rel": "collection",
			"href": "accounts/{#/definitions/account_identifier}/stream/copy",
			"method": "POST",
			"cfOwnership": "stream",
			"html_id": "stream-videos-upload-videos-from-a-url",
			"uri": "accounts/:account_identifier/stream/copy",
			"curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream/copy\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"url\":\"https://example.com/myvideo.mp4\",\"creator\":\"creator-id_abcde12345\",\"thumbnailTimestampPct\":0.529241,\"allowedOrigins\":[\"example.com\"],\"requireSignedURLs\":true,\"watermark\":{\"uid\":\"ea95132c15732412d22c1476fa83f27a\"}}'",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"url": {
						"type": "string",
						"example": "\"https://example.com/myvideo.mp4\"",
						"description": "A video's URL. The server must be publicly routable and support `HTTP HEAD` requests and `HTTP GET` range requests. The server should respond to `HTTP HEAD` requests with a `content-range` header that includes the size of the file.",
						"format": "uri"
					},
					"creator": {
						"type": "string",
						"example": "\"creator-id_abcde12345\"",
						"description": "A user-defined identifier for the media creator.",
						"maxLength": 64
					},
					"thumbnailTimestampPct": {
						"type": "number",
						"example": "0.529241",
						"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
						"default": 0,
						"minimum": 0,
						"maximum": 1
					},
					"allowedOrigins": {
						"type": "array",
						"example": "[\n  \"example.com\"\n]",
						"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
						"items": {
							"type": "string"
						}
					},
					"requireSignedURLs": {
						"type": "boolean",
						"example": "true",
						"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
						"readOnly": true,
						"default": false
					},
					"watermark": {
						"type": "object",
						"example": "{\n  \"uid\": \"ea95132c15732412d22c1476fa83f27a\"\n}",
						"properties": {
							"uid": {
								"type": "string",
								"example": "\"ea95132c15732412d22c1476fa83f27a\"",
								"description": "The unique identifier for the watermark profile.",
								"maxLength": 32
							}
						}
					}
				},
				"required_props": [
					"url"
				],
				"optional_props": [
					"creator",
					"thumbnailTimestampPct",
					"allowedOrigins",
					"requireSignedURLs",
					"watermark"
				],
				"objects": [],
				"example": "{\n  \"url\": \"https://example.com/myvideo.mp4\",\n  \"creator\": \"creator-id_abcde12345\",\n  \"thumbnailTimestampPct\": 0.529241,\n  \"allowedOrigins\": [\n    \"example.com\"\n  ],\n  \"requireSignedURLs\": true,\n  \"watermark\": {\n    \"uid\": \"ea95132c15732412d22c1476fa83f27a\"\n  }\n}"
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"allowedOrigins\": [\n      \"example.com\"\n    ],\n    \"created\": \"2014-01-02T02:20:00Z\",\n    \"duration\": 300,\n    \"input\": {\n      \"height\": 1080,\n      \"width\": 1920\n    },\n    \"maxDurationSeconds\": 300,\n    \"meta\": {},\n    \"modified\": \"2014-01-02T02:20:00Z\",\n    \"uploadExpiry\": \"2014-01-02T02:20:00Z\",\n    \"playback\": {\n      \"hls\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8\",\n      \"dash\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd\"\n    },\n    \"preview\": \"https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a\",\n    \"readyToStream\": true,\n    \"requireSignedURLs\": true,\n    \"size\": 4190963,\n    \"status\": {\n      \"state\": \"inprogress\",\n      \"pctComplete\": 51,\n      \"errorReasonCode\": \"ERR_NON_VIDEO\",\n      \"errorReasonText\": \"The file was not recognized as a valid video file.\"\n    },\n    \"thumbnail\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg\",\n    \"thumbnailTimestampPct\": 0.529241,\n    \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n    \"creator\": \"creator-id_abcde12345\",\n    \"liveInput\": \"fc0a8dc887b16759bfd9ad922230a014\",\n    \"uploaded\": \"2014-01-02T02:20:00Z\",\n    \"watermark\": {\n      \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n      \"size\": 29472,\n      \"height\": 600,\n      \"width\": 400,\n      \"created\": \"2014-01-02T02:20:00Z\",\n      \"downloadedFrom\": \"https://company.com/logo.png\",\n      \"name\": \"Marketing Videos\",\n      \"opacity\": 0.75,\n      \"padding\": 0.1,\n      \"scale\": 0.1,\n      \"position\": \"center\"\n    },\n    \"nft\": {\n      \"contract\": \"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\n      \"token\": 5\n    }\n  }\n}"
		},
		{
			"title": "Upload videos via HTTP requests",
			"description": "Uploads a video up to 200MB using a single HTTP POST (`multipart/form-data`) request.",
			"rel": "collection",
			"href": "accounts/{#/definitions/account_identifier}/stream",
			"method": "POST",
			"cfOwnership": "stream",
			"encType": "multipart/form-data",
			"cfRequestHeaders": {
				"required": [
					"X-Auth-Email",
					"X-Auth-Key"
				],
				"properties": {
					"X-Auth-Email": {
						"description": "Your Cloudflare email",
						"type": "string",
						"example": "user@example.com"
					},
					"X-Auth-Key": {
						"description": "Your Cloudflare API key",
						"type": "string",
						"minLength": 45,
						"maxLength": 45,
						"example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
					}
				}
			},
			"html_id": "stream-videos-upload-videos-via-http-requests",
			"uri": "accounts/:account_identifier/stream",
			"curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     --form 'file=@/Users/kyle/Desktop/skiing.mp4'",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"file": {
						"type": "string",
						"example": "\"@/Users/kyle/Desktop/skiing.mp4\"",
						"description": "The video file to upload."
					}
				},
				"required_props": [
					"file"
				],
				"optional_props": [],
				"objects": [],
				"example": "{\n  \"file\": \"@/Users/kyle/Desktop/skiing.mp4\"\n}"
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": [\n    {\n      \"allowedOrigins\": [\n        \"example.com\"\n      ],\n      \"created\": \"2014-01-02T02:20:00Z\",\n      \"duration\": 300,\n      \"input\": {\n        \"height\": 1080,\n        \"width\": 1920\n      },\n      \"maxDurationSeconds\": 300,\n      \"meta\": {},\n      \"modified\": \"2014-01-02T02:20:00Z\",\n      \"uploadExpiry\": \"2014-01-02T02:20:00Z\",\n      \"playback\": {\n        \"hls\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8\",\n        \"dash\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd\"\n      },\n      \"preview\": \"https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a\",\n      \"readyToStream\": true,\n      \"requireSignedURLs\": true,\n      \"size\": 4190963,\n      \"status\": {\n        \"state\": \"inprogress\",\n        \"pctComplete\": 51,\n        \"errorReasonCode\": \"ERR_NON_VIDEO\",\n        \"errorReasonText\": \"The file was not recognized as a valid video file.\"\n      },\n      \"thumbnail\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg\",\n      \"thumbnailTimestampPct\": 0.529241,\n      \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n      \"creator\": \"creator-id_abcde12345\",\n      \"liveInput\": \"fc0a8dc887b16759bfd9ad922230a014\",\n      \"uploaded\": \"2014-01-02T02:20:00Z\",\n      \"watermark\": null,\n      \"nft\": {\n        \"contract\": \"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\n        \"token\": 5\n      }\n    }\n  ]\n}"
		},
		{
			"title": "Upload videos via direct upload URLs",
			"description": "Creates a direct upload that allows video uploads without an API key.",
			"rel": "collection",
			"href": "accounts/{#/definitions/account_identifier}/stream/direct_upload",
			"method": "POST",
			"cfOwnership": "stream",
			"html_id": "stream-videos-upload-videos-via-direct-upload-urls",
			"uri": "accounts/:account_identifier/stream/direct_upload",
			"curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream/direct_upload\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"maxDurationSeconds\":300,\"expiry\":\"2021-01-02T02:20:00Z\",\"creator\":\"creator-id_abcde12345\",\"thumbnailTimestampPct\":0.529241,\"allowedOrigins\":[\"example.com\"],\"requireSignedURLs\":true,\"watermark\":{\"uid\":\"ea95132c15732412d22c1476fa83f27a\"}}'",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"maxDurationSeconds": {
						"type": "integer",
						"example": "300",
						"description": "Calculates the amount of time a video occupies before the video is uploaded. Direct uploads occupy minutes of videos on your Stream account until they are expired. After upload, the upload duration is used instead. If a video longer than the value is uploaded, the video results in an error.",
						"minimum": 1,
						"maximum": 21600
					},
					"expiry": {
						"type": "string",
						"example": "\"2021-01-02T02:20:00Z\"",
						"description": "The date and time after upload when videos will not be accepted.",
						"format": "date-time",
						"default": "Now + 30 minutes"
					},
					"creator": {
						"type": "string",
						"example": "\"creator-id_abcde12345\"",
						"description": "A user-defined identifier for the media creator.",
						"maxLength": 64
					},
					"thumbnailTimestampPct": {
						"type": "number",
						"example": "0.529241",
						"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
						"default": 0,
						"minimum": 0,
						"maximum": 1
					},
					"allowedOrigins": {
						"type": "array",
						"example": "[\n  \"example.com\"\n]",
						"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
						"items": {
							"type": "string"
						}
					},
					"requireSignedURLs": {
						"type": "boolean",
						"example": "true",
						"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
						"readOnly": true,
						"default": false
					},
					"watermark": {
						"type": "object",
						"example": "{\n  \"uid\": \"ea95132c15732412d22c1476fa83f27a\"\n}",
						"properties": {
							"uid": {
								"type": "string",
								"example": "\"ea95132c15732412d22c1476fa83f27a\"",
								"description": "The unique identifier for the watermark profile.",
								"maxLength": 32
							}
						}
					}
				},
				"required_props": [
					"maxDurationSeconds"
				],
				"optional_props": [
					"expiry",
					"creator",
					"thumbnailTimestampPct",
					"allowedOrigins",
					"requireSignedURLs",
					"watermark"
				],
				"objects": [],
				"example": "{\n  \"maxDurationSeconds\": 300,\n  \"expiry\": \"2021-01-02T02:20:00Z\",\n  \"creator\": \"creator-id_abcde12345\",\n  \"thumbnailTimestampPct\": 0.529241,\n  \"allowedOrigins\": [\n    \"example.com\"\n  ],\n  \"requireSignedURLs\": true,\n  \"watermark\": {\n    \"uid\": \"ea95132c15732412d22c1476fa83f27a\"\n  }\n}"
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"uploadURL\": \"www.example.com/samplepath\",\n    \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n    \"watermark\": {\n      \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n      \"size\": 29472,\n      \"height\": 600,\n      \"width\": 400,\n      \"created\": \"2014-01-02T02:20:00Z\",\n      \"downloadedFrom\": \"https://company.com/logo.png\",\n      \"name\": \"Marketing Videos\",\n      \"opacity\": 0.75,\n      \"padding\": 0.1,\n      \"scale\": 0.1,\n      \"position\": \"center\"\n    }\n  }\n}"
		},
		{
			"title": "List videos",
			"description": "Lists up to 1000 videos from a single request. For a specific range, refer to the optional parameters.",
			"rel": "collection",
			"href": "accounts/{#/definitions/account_identifier}/stream",
			"method": "GET",
			"cfOwnership": "stream",
			"html_id": "stream-videos-list-videos",
			"uri": "accounts/:account_identifier/stream",
			"curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream?after=2014-01-02T02:20:00Z&before=2014-01-02T02:20:00Z&creator=creator-id_abcde12345&include_counts=false&search=puppy.mp4&limit=undefined&asc=false&status=downloading,queued,inprogress,ready,error\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"after": {
						"type": "string",
						"example": "\"2014-01-02T02:20:00Z\"",
						"description": "Lists videos created after the specified date and time.",
						"format": "date-time"
					},
					"before": {
						"type": "string",
						"example": "\"2014-01-02T02:20:00Z\"",
						"description": "Lists videos created before the specified date and time.",
						"format": "date-time"
					},
					"creator": {
						"type": "string",
						"example": "\"creator-id_abcde12345\"",
						"description": "Filters by the media creator's user-defined identifier.",
						"maxLength": 64
					},
					"include_counts": {
						"type": "boolean",
						"example": "false",
						"description": "Lists stats in the response that include the number of videos in the response range and the total number of videos available.",
						"default": false
					},
					"search": {
						"type": "string",
						"example": "\"puppy.mp4\"",
						"description": "Searches over the `name` key in the `meta` field. This field can be set with the upload request of after the request."
					},
					"limit": {
						"type": "integer",
						"description": "The number of videos to include in the response.",
						"minimum": 0,
						"maximum": 1000
					},
					"asc": {
						"type": "boolean",
						"example": "false",
						"description": "Lists videos in ascending order of creation.",
						"default": false
					},
					"status": {
						"type": "string",
						"example": "\"downloading,queued,inprogress,ready,error\"",
						"description": "Filters videos by status.",
						"default": "downloading,queued,inprogress,ready,error",
						"enum": [
							"pendingupload",
							"downloading",
							"queued",
							"inprogress",
							"ready",
							"error"
						]
					}
				},
				"required_props": [],
				"optional_props": [
					"after",
					"before",
					"creator",
					"include_counts",
					"search",
					"limit",
					"asc",
					"status"
				],
				"objects": [],
				"example": "{\n  \"after\": \"2014-01-02T02:20:00Z\",\n  \"before\": \"2014-01-02T02:20:00Z\",\n  \"creator\": \"creator-id_abcde12345\",\n  \"include_counts\": false,\n  \"search\": \"puppy.mp4\",\n  \"asc\": false,\n  \"status\": \"downloading,queued,inprogress,ready,error\"\n}"
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": [\n    {\n      \"allowedOrigins\": [\n        \"example.com\"\n      ],\n      \"created\": \"2014-01-02T02:20:00Z\",\n      \"duration\": 300,\n      \"input\": {\n        \"height\": 1080,\n        \"width\": 1920\n      },\n      \"maxDurationSeconds\": 300,\n      \"meta\": {},\n      \"modified\": \"2014-01-02T02:20:00Z\",\n      \"uploadExpiry\": \"2014-01-02T02:20:00Z\",\n      \"playback\": {\n        \"hls\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8\",\n        \"dash\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd\"\n      },\n      \"preview\": \"https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a\",\n      \"readyToStream\": true,\n      \"requireSignedURLs\": true,\n      \"size\": 4190963,\n      \"status\": {\n        \"state\": \"inprogress\",\n        \"pctComplete\": 51,\n        \"errorReasonCode\": \"ERR_NON_VIDEO\",\n        \"errorReasonText\": \"The file was not recognized as a valid video file.\"\n      },\n      \"thumbnail\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg\",\n      \"thumbnailTimestampPct\": 0.529241,\n      \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n      \"creator\": \"creator-id_abcde12345\",\n      \"liveInput\": \"fc0a8dc887b16759bfd9ad922230a014\",\n      \"uploaded\": \"2014-01-02T02:20:00Z\",\n      \"watermark\": {\n        \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n        \"size\": 29472,\n        \"height\": 600,\n        \"width\": 400,\n        \"created\": \"2014-01-02T02:20:00Z\",\n        \"downloadedFrom\": \"https://company.com/logo.png\",\n        \"name\": \"Marketing Videos\",\n        \"opacity\": 0.75,\n        \"padding\": 0.1,\n        \"scale\": 0.1,\n        \"position\": \"center\"\n      },\n      \"nft\": {\n        \"contract\": \"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\n        \"token\": 5\n      }\n    }\n  ],\n  \"total\": \"35586\",\n  \"range\": \"1000\"\n}"
		},
		{
			"title": "Initiate video uploads using TUS",
			"description": "Initiates a video upload using the TUS protocol. On success, the server responds with a status code 201 (created) and includes a `location` header to indicate where the content should be uploaded. Refer to https://tus.io for protocol details.",
			"rel": "collection",
			"href": "accounts/{#/definitions/account_identifier}/stream",
			"method": "POST",
			"cfOwnership": "stream",
			"cfRequestHeaders": {
				"type": "object",
				"required": [
					"X-Auth-Email",
					"X-Auth-Key",
					"Tus-Resumable",
					"Upload-Length"
				],
				"properties": {
					"X-Auth-Email": {
						"description": "Your Cloudflare email",
						"type": "string",
						"example": "user@example.com"
					},
					"X-Auth-Key": {
						"description": "Your Cloudflare API key",
						"type": "string",
						"minLength": 45,
						"maxLength": 45,
						"example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
					},
					"Tus-Resumable": {
						"description": "Specifies the TUS protocol version. This value must be included in every upload request.",
						"type": "string",
						"enum": [
							"1.0.0"
						],
						"example": "1.0.0",
						"cfNotes": "The only supported version of TUS protocol is 1.0.0."
					},
					"Upload-Creator": {
						"description": "A user-defined identifier for the media creator.",
						"example": "creator-id_abcde12345",
						"maxLength": 64,
						"type": "string"
					},
					"Upload-Length": {
						"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
						"type": "integer",
						"minimum": 0,
						"example": 900000000
					}
				}
			},
			"html_id": "stream-videos-initiate-video-uploads-using-tus",
			"uri": "accounts/:account_identifier/stream",
			"curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Tus-Resumable: 1.0.0\" \\\n     -H \"Upload-Creator: creator-id_abcde12345\" \\\n     -H \"Upload-Length: 900000000\""
		},
		{
			"title": "Retrieve video details",
			"description": "Fetches details for a single video.",
			"rel": "self",
			"href": "accounts/{#/definitions/account_identifier}/stream/{#/definitions/identifier}",
			"method": "GET",
			"cfOwnership": "stream",
			"html_id": "stream-videos-retrieve-video-details",
			"uri": "accounts/:account_identifier/stream/:identifier",
			"curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream/ea95132c15732412d22c1476fa83f27a\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"allowedOrigins\": [\n      \"example.com\"\n    ],\n    \"created\": \"2014-01-02T02:20:00Z\",\n    \"duration\": 300,\n    \"input\": {\n      \"height\": 1080,\n      \"width\": 1920\n    },\n    \"maxDurationSeconds\": 300,\n    \"meta\": {},\n    \"modified\": \"2014-01-02T02:20:00Z\",\n    \"uploadExpiry\": \"2014-01-02T02:20:00Z\",\n    \"playback\": {\n      \"hls\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8\",\n      \"dash\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd\"\n    },\n    \"preview\": \"https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a\",\n    \"readyToStream\": true,\n    \"requireSignedURLs\": true,\n    \"size\": 4190963,\n    \"status\": {\n      \"state\": \"inprogress\",\n      \"pctComplete\": 51,\n      \"errorReasonCode\": \"ERR_NON_VIDEO\",\n      \"errorReasonText\": \"The file was not recognized as a valid video file.\"\n    },\n    \"thumbnail\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg\",\n    \"thumbnailTimestampPct\": 0.529241,\n    \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n    \"creator\": \"creator-id_abcde12345\",\n    \"liveInput\": \"fc0a8dc887b16759bfd9ad922230a014\",\n    \"uploaded\": \"2014-01-02T02:20:00Z\",\n    \"watermark\": {\n      \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n      \"size\": 29472,\n      \"height\": 600,\n      \"width\": 400,\n      \"created\": \"2014-01-02T02:20:00Z\",\n      \"downloadedFrom\": \"https://company.com/logo.png\",\n      \"name\": \"Marketing Videos\",\n      \"opacity\": 0.75,\n      \"padding\": 0.1,\n      \"scale\": 0.1,\n      \"position\": \"center\"\n    },\n    \"nft\": {\n      \"contract\": \"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\n      \"token\": 5\n    }\n  }\n}"
		},
		{
			"title": "Retreieve embed Code HTML",
			"description": "Fetches an HTML code snippet to embed a video in a web page delivered through Cloudflare. On success, returns an HTML fragment for use on web pages to display a video. On failure, returns a JSON response body.",
			"rel": "tag:cloudflare.com,2018:embed-code",
			"href": "accounts/{#/definitions/account_identifier}/stream/{#/definitions/identifier}/embed",
			"mediaType": "text/html",
			"method": "GET",
			"cfOwnership": "stream",
			"html_id": "stream-videos-retreieve-embed-code-html",
			"uri": "accounts/:account_identifier/stream/:identifier/embed",
			"curl": "curl -X GET \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream/ea95132c15732412d22c1476fa83f27a/embed\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
			"response": "<stream id=\"ea95132c15732412d22c1476fa83f27a\"></stream><script data-cfasync=\"false\" defer type=\"text/javascript\" src=\"https://embed.cloudflarestream.com/embed/we4g.fla9.latest.js\"></script>"
		},
		{
			"title": "Delete video",
			"description": "Deletes a video and its copies from Cloudflare Stream.",
			"rel": "self",
			"href": "accounts/{#/definitions/account_identifier}/stream/{#/definitions/identifier}",
			"cfOwnership": "stream",
			"method": "DELETE",
			"html_id": "stream-videos-delete-video",
			"uri": "accounts/:account_identifier/stream/:identifier",
			"curl": "curl -X DELETE \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream/ea95132c15732412d22c1476fa83f27a\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\""
		},
		{
			"title": "Associate videos to NFTs",
			"description": "Asssociates videos with a token ID and contract address to transfer admin rights on a video. If a change in ownership of the ERC-721 token happens on the Ethereum blockchain, the new token owner can claim control of the video.",
			"rel": "self",
			"href": "accounts/{#/definitions/account_identifier}/stream/{#/definitions/identifier}",
			"cfOwnership": "stream",
			"method": "POST",
			"html_id": "stream-videos-associate-videos-to-nfts",
			"uri": "accounts/:account_identifier/stream/:identifier",
			"curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream/ea95132c15732412d22c1476fa83f27a\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"contract\":\"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\"token\":5}'",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"contract": {
						"type": "string",
						"example": "\"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\"",
						"readOnly": true,
						"description": "The ERC-721 compatible contract address.",
						"maxLength": 42,
						"minLength": 42
					},
					"token": {
						"type": "integer",
						"example": "5",
						"readOnly": true,
						"description": "The token ID for the NFT."
					}
				},
				"required_props": [],
				"optional_props": [
					"contract",
					"token"
				],
				"objects": [],
				"example": "{\n  \"contract\": \"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\n  \"token\": 5\n}"
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": [\n    {\n      \"allowedOrigins\": [\n        \"example.com\"\n      ],\n      \"created\": \"2014-01-02T02:20:00Z\",\n      \"duration\": 300,\n      \"input\": {\n        \"height\": 1080,\n        \"width\": 1920\n      },\n      \"maxDurationSeconds\": 300,\n      \"meta\": {},\n      \"modified\": \"2014-01-02T02:20:00Z\",\n      \"uploadExpiry\": \"2014-01-02T02:20:00Z\",\n      \"playback\": {\n        \"hls\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8\",\n        \"dash\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd\"\n      },\n      \"preview\": \"https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a\",\n      \"readyToStream\": true,\n      \"requireSignedURLs\": true,\n      \"size\": 4190963,\n      \"status\": {\n        \"state\": \"inprogress\",\n        \"pctComplete\": 51,\n        \"errorReasonCode\": \"ERR_NON_VIDEO\",\n        \"errorReasonText\": \"The file was not recognized as a valid video file.\"\n      },\n      \"thumbnail\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg\",\n      \"thumbnailTimestampPct\": 0.529241,\n      \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n      \"creator\": \"creator-id_abcde12345\",\n      \"liveInput\": \"fc0a8dc887b16759bfd9ad922230a014\",\n      \"uploaded\": \"2014-01-02T02:20:00Z\",\n      \"watermark\": {\n        \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n        \"size\": 29472,\n        \"height\": 600,\n        \"width\": 400,\n        \"created\": \"2014-01-02T02:20:00Z\",\n        \"downloadedFrom\": \"https://company.com/logo.png\",\n        \"name\": \"Marketing Videos\",\n        \"opacity\": 0.75,\n        \"padding\": 0.1,\n        \"scale\": 0.1,\n        \"position\": \"center\"\n      },\n      \"nft\": {\n        \"contract\": \"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\n        \"token\": 5\n      }\n    }\n  ],\n  \"total\": \"35586\",\n  \"range\": \"1000\"\n}"
		},
		{
			"title": "Create signed URL tokens for videso",
			"description": "Creates a signed URL token for a video. If a body is not provided in the request, a token is created with default values.",
			"rel": "self",
			"href": "accounts/{#/definitions/account_identifier}/stream/{#/definitions/identifier}/token",
			"cfOwnership": "stream",
			"method": "POST",
			"html_id": "stream-videos-create-signed-url-tokens-for-videso",
			"uri": "accounts/:account_identifier/stream/:identifier/token",
			"curl": "curl -X POST \"https://api.cloudflare.com/client/v4/accounts/023e105f4ecef8ad9ca31a8372d0c353/stream/ea95132c15732412d22c1476fa83f27a/token\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"id\":\"ab0d4ef71g4425f8dcba9041231813000\",\"pem\":\"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc284dnBvOFpEWXRkOUgzbWlPaW1qYXAzVXlVM0oyZ3kwTUYvN1R4blJuRnkwRHpDCkxqUk9naFZsQ0hPQmxsd3NVaE9GU0lyYnN4K05tUTdBeS90TFpXSGxuVGF3UWJ5WGZGOStJeDhVSnNlSHBGV1oKNVF5Z1JYd2liSjh1MVVsZ2xlcmZHMkpueldjVXpZTzEySktZN3doSkw1ajROMWgxZFJNUXQ5Q1pkZFlCQWRzOQpCdk02cjRFMDcxQkhQekhWeDMrUTI1VWtubGdUNXIwS3FiM1E1Y0dlTlBXY1JreW1ybkJEWWR0OXR4eFFMb1dPCllzNXdsMnVYWFVYL0VGcDMwajU0Nmp6czllWExLYlNDbjJjTDZFVE96Y2x3aG9DRGx2a2VQT05rUE9LMDVKNUMKTm1TdFdhMG9hV1VGRzM0MFl3cVVrWGt4OU9tNndXd1JldU1uU1FJREFRQUJBb0lCQUFJOHo1ck5kOEdtOGJBMgo1S3pxQjI1R2lOVENwbUNJeW53NXRJWHZTQmNHcEdydUcvdlN2WG9kVlFVSVY0TWdHQkVXUEFrVzdsNWVBcHI4CnA1ZFd5SkRXYTNkdklFSE9vSEpYU3dBYksxZzZEMTNVa2NkZ1EyRGpoNVhuWDhHZCtBY2c2SmRTQWgxOWtYSHEKMk54RUtBVDB6Ri83a1g2MkRkREFBcWxmQkpGSXJodVIvZUdEVWh4L2piTTRhQ2JCcFdiM0pnRE9OYm5tS1ZoMwpxS2ZwZmRZZENZU1lzWUxrNTlxRDF2VFNwUVFUQ0VadW9VKzNzRVNhdkJzaUs1bU0vTzY5ZkRMRXNURG1MeTVQCmhEK3BMQXI0SlhNNjFwRGVBS0l3cUVqWWJybXlDRHRXTUdJNnZzZ0E1eXQzUUJaME9vV2w5QUkwdWxoZ3p4dXQKZ2ZFNTRRRUNnWUVBN0F3a0lhVEEzYmQ4Nk9jSVZnNFlrWGk1cm5aNDdsM1k4V24zcjIzUmVISXhLdkllRUtSbgp5bUlFNDFtRVBBSmlGWFpLK1VPTXdkeS9EcnFJUithT1JiT2NiV01jWUg2QzgvbG1wdVJFaXE3SW1Ub3VWcnA4CnlnUkprMWprVDA4cTIvNmg4eTBEdjJqMitsaHFXNzRNOUt0cmwxcTRlWmZRUFREL01tR1NnTWtDZ1lFQXdhY04KaSttN1p6dnJtL3NuekF2VlZ5SEtwZHVUUjNERk1naC9maC9tZ0ZHZ1RwZWtUOVV5b3FleGNYQXdwMVlhL01iQQoyNTVJVDZRbXZZTm5yNXp6Wmxic2tMV0hsYllvbWhmWnVXTHhXR3hRaEFORWdaMFVVdUVTRGMvbWx2UXZHbEtSCkZoaGhBUWlVSmdDamhPaHk1SlBiNGFldGRKd0UxK09lVWRFaE1vRUNnWUVBNG8yZ25CM1o4ck5xa3NzemlBek4KYmNuMlJVbDJOaW9pejBwS3JMaDFaT29NNE5BekpQdjJsaHRQMzdtS0htS1hLMHczRjFqTEgwSTBxZmxFVmVZbQpSU1huakdHazJjUnpBYUVzOGgrQzNheDE0Z01pZUtGU3BqNUpNOEFNbVVZOXQ1cUVhN2FYc3o0V1ZoOUlMYmVTCkRiNzlhKzVwd21LQVBrcnBsTHhyZFdrQ2dZQlNNSHVBWVdBbmJYZ1BDS2FZWklGVWJNUWNacmY0ZnpWQ2lmYksKYWZHampvRlNPZXdEOGdGK3BWdWJRTGwxbkFieU44ek1xVDRaaHhybUhpcFlqMjJDaHV2NmN3RXJtbGRiSnpwQwpBMnRaVXdkTk1ESFlMUG5lUHlZeGRJWnlsUXFVeW14SGkydElUQUxNcWtLOGV3ZWdXZHpkeGhQSlJScU5JazhrCmZIVHhnUUtCZ1FEUFc2UXIxY3F3QjNUdnVWdWR4WGRqUTdIcDFodXhrNEVWaEFJZllKNFhSTW1NUE5YS28wdHUKdUt6LzE0QW14R0dvSWJxYVc1bDMzeFNteUxhem84clNUN0tSTjVKME9JSHcrZkR5SFgxdHpVSjZCTldDcEFTcwpjbWdNK0htSzVON0w2bkNaZFJQY2IwU1hGaVRQUGhCUG1PVWFDUnpER0ZMK2JYM1VwajJKbWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\",\"exp\":1621555515,\"nbf\":1621548315,\"downloadable\":false,\"accessRules\":[{\"type\":\"ip.geoip.country\",\"country\":[\"US\",\"MX\"],\"action\":\"block\"},{\"type\":\"ip.src\",\"ip\":[\"93.184.216.0/24\",\"2400:cb00::/32\"],\"action\":\"allow\"},{\"type\":\"any\",\"action\":\"block\"}]}'",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"id": {
						"type": "string",
						"example": "\"ab0d4ef71g4425f8dcba9041231813000\"",
						"readOnly": true,
						"description": "The optional ID of a Stream signing key. If present, the `pem` field is also required."
					},
					"pem": {
						"type": "string",
						"example": "\"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc284dnBvOFpEWXRkOUgzbWlPaW1qYXAzVXlVM0oyZ3kwTUYvN1R4blJuRnkwRHpDCkxqUk9naFZsQ0hPQmxsd3NVaE9GU0lyYnN4K05tUTdBeS90TFpXSGxuVGF3UWJ5WGZGOStJeDhVSnNlSHBGV1oKNVF5Z1JYd2liSjh1MVVsZ2xlcmZHMkpueldjVXpZTzEySktZN3doSkw1ajROMWgxZFJNUXQ5Q1pkZFlCQWRzOQpCdk02cjRFMDcxQkhQekhWeDMrUTI1VWtubGdUNXIwS3FiM1E1Y0dlTlBXY1JreW1ybkJEWWR0OXR4eFFMb1dPCllzNXdsMnVYWFVYL0VGcDMwajU0Nmp6czllWExLYlNDbjJjTDZFVE96Y2x3aG9DRGx2a2VQT05rUE9LMDVKNUMKTm1TdFdhMG9hV1VGRzM0MFl3cVVrWGt4OU9tNndXd1JldU1uU1FJREFRQUJBb0lCQUFJOHo1ck5kOEdtOGJBMgo1S3pxQjI1R2lOVENwbUNJeW53NXRJWHZTQmNHcEdydUcvdlN2WG9kVlFVSVY0TWdHQkVXUEFrVzdsNWVBcHI4CnA1ZFd5SkRXYTNkdklFSE9vSEpYU3dBYksxZzZEMTNVa2NkZ1EyRGpoNVhuWDhHZCtBY2c2SmRTQWgxOWtYSHEKMk54RUtBVDB6Ri83a1g2MkRkREFBcWxmQkpGSXJodVIvZUdEVWh4L2piTTRhQ2JCcFdiM0pnRE9OYm5tS1ZoMwpxS2ZwZmRZZENZU1lzWUxrNTlxRDF2VFNwUVFUQ0VadW9VKzNzRVNhdkJzaUs1bU0vTzY5ZkRMRXNURG1MeTVQCmhEK3BMQXI0SlhNNjFwRGVBS0l3cUVqWWJybXlDRHRXTUdJNnZzZ0E1eXQzUUJaME9vV2w5QUkwdWxoZ3p4dXQKZ2ZFNTRRRUNnWUVBN0F3a0lhVEEzYmQ4Nk9jSVZnNFlrWGk1cm5aNDdsM1k4V24zcjIzUmVISXhLdkllRUtSbgp5bUlFNDFtRVBBSmlGWFpLK1VPTXdkeS9EcnFJUithT1JiT2NiV01jWUg2QzgvbG1wdVJFaXE3SW1Ub3VWcnA4CnlnUkprMWprVDA4cTIvNmg4eTBEdjJqMitsaHFXNzRNOUt0cmwxcTRlWmZRUFREL01tR1NnTWtDZ1lFQXdhY04KaSttN1p6dnJtL3NuekF2VlZ5SEtwZHVUUjNERk1naC9maC9tZ0ZHZ1RwZWtUOVV5b3FleGNYQXdwMVlhL01iQQoyNTVJVDZRbXZZTm5yNXp6Wmxic2tMV0hsYllvbWhmWnVXTHhXR3hRaEFORWdaMFVVdUVTRGMvbWx2UXZHbEtSCkZoaGhBUWlVSmdDamhPaHk1SlBiNGFldGRKd0UxK09lVWRFaE1vRUNnWUVBNG8yZ25CM1o4ck5xa3NzemlBek4KYmNuMlJVbDJOaW9pejBwS3JMaDFaT29NNE5BekpQdjJsaHRQMzdtS0htS1hLMHczRjFqTEgwSTBxZmxFVmVZbQpSU1huakdHazJjUnpBYUVzOGgrQzNheDE0Z01pZUtGU3BqNUpNOEFNbVVZOXQ1cUVhN2FYc3o0V1ZoOUlMYmVTCkRiNzlhKzVwd21LQVBrcnBsTHhyZFdrQ2dZQlNNSHVBWVdBbmJYZ1BDS2FZWklGVWJNUWNacmY0ZnpWQ2lmYksKYWZHampvRlNPZXdEOGdGK3BWdWJRTGwxbkFieU44ek1xVDRaaHhybUhpcFlqMjJDaHV2NmN3RXJtbGRiSnpwQwpBMnRaVXdkTk1ESFlMUG5lUHlZeGRJWnlsUXFVeW14SGkydElUQUxNcWtLOGV3ZWdXZHpkeGhQSlJScU5JazhrCmZIVHhnUUtCZ1FEUFc2UXIxY3F3QjNUdnVWdWR4WGRqUTdIcDFodXhrNEVWaEFJZllKNFhSTW1NUE5YS28wdHUKdUt6LzE0QW14R0dvSWJxYVc1bDMzeFNteUxhem84clNUN0tSTjVKME9JSHcrZkR5SFgxdHpVSjZCTldDcEFTcwpjbWdNK0htSzVON0w2bkNaZFJQY2IwU1hGaVRQUGhCUG1PVWFDUnpER0ZMK2JYM1VwajJKbWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\"",
						"readOnly": true,
						"description": "The optional base64 encoded private key in PEM format associated with a Stream signing key. If present, the `id` field is also required."
					},
					"exp": {
						"type": "integer",
						"example": "1621555515",
						"readOnly": true,
						"description": "The optional unix epoch timestamp that specficies the time after a token is not accepted. The maximum time specification is 24 hours from issuing time. If this field is not set, the default is one hour after issuing."
					},
					"nbf": {
						"type": "integer",
						"example": "1621548315",
						"readOnly": true,
						"description": "The optional unix epoch timestamp that specifies the time before a the token is not accepted. If this field is not set, the default is one hour before issuing."
					},
					"downloadable": {
						"type": "boolean",
						"example": "false",
						"readOnly": true,
						"description": "The optional boolean value that enables using signed tokens to access MP4 download links for a video.",
						"default": false
					},
					"accessRules": {
						"type": "array",
						"example": "[\n  {\n    \"type\": \"ip.geoip.country\",\n    \"country\": [\n      \"US\",\n      \"MX\"\n    ],\n    \"action\": \"block\"\n  },\n  {\n    \"type\": \"ip.src\",\n    \"ip\": [\n      \"93.184.216.0/24\",\n      \"2400:cb00::/32\"\n    ],\n    \"action\": \"allow\"\n  },\n  {\n    \"type\": \"any\",\n    \"action\": \"block\"\n  }\n]",
						"readOnly": true,
						"description": "The optional list of access rule constraints on the token. Access can be blocked or allowed based on an IP, IP range, or by country. Access rules are evaluated from first to last. If a rule matches, the associated action is applied and no further rules are evaluated.",
						"items": {
							"type": "object",
							"readOnly": true,
							"description": "Defines rules for fine-grained control over content than signed URL tokens alone. Access rules primarily make tokens conditionally valid based on user information. Access Rules are specified on token payloads as the `accessRules` property containing an array of Rule objects.",
							"properties": {
								"action": {
									"readOnly": true,
									"description": "The action to take when a request matches a rule. If the action is `block`, the signed token blocks views for viewers matching the rule.",
									"type": "string",
									"enum": [
										"allow",
										"block"
									],
									"example": "allow"
								},
								"type": {
									"readOnly": true,
									"description": "Lists available rule types to match for requests. An `any` type matches all requests and can be used as a wildcard to apply default actions after other rules.",
									"type": "string",
									"enum": [
										"any",
										"ip.src",
										"ip.geoip.country"
									],
									"example": "ip.src"
								},
								"ip": {
									"readOnly": true,
									"description": "An array of IPv4 or IPV6 addresses or CIDRs used to match requests.",
									"type": "array",
									"items": {
										"type": "string"
									},
									"example": "[\"1.2.3.4\",\"93.184.216.0/24\",\"2400:cb00::/32\"]"
								},
								"country": {
									"readOnly": true,
									"description": "An array of 2-letter country codes in ISO 3166-1 Alpha-2 format used to match requests.",
									"type": "array",
									"items": {
										"type": "string"
									},
									"example": "[\"GB\", \"IE\"]"
								}
							}
						}
					}
				},
				"required_props": [],
				"optional_props": [
					"id",
					"pem",
					"exp",
					"nbf",
					"downloadable",
					"accessRules"
				],
				"objects": [],
				"example": "{\n  \"id\": \"ab0d4ef71g4425f8dcba9041231813000\",\n  \"pem\": \"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc284dnBvOFpEWXRkOUgzbWlPaW1qYXAzVXlVM0oyZ3kwTUYvN1R4blJuRnkwRHpDCkxqUk9naFZsQ0hPQmxsd3NVaE9GU0lyYnN4K05tUTdBeS90TFpXSGxuVGF3UWJ5WGZGOStJeDhVSnNlSHBGV1oKNVF5Z1JYd2liSjh1MVVsZ2xlcmZHMkpueldjVXpZTzEySktZN3doSkw1ajROMWgxZFJNUXQ5Q1pkZFlCQWRzOQpCdk02cjRFMDcxQkhQekhWeDMrUTI1VWtubGdUNXIwS3FiM1E1Y0dlTlBXY1JreW1ybkJEWWR0OXR4eFFMb1dPCllzNXdsMnVYWFVYL0VGcDMwajU0Nmp6czllWExLYlNDbjJjTDZFVE96Y2x3aG9DRGx2a2VQT05rUE9LMDVKNUMKTm1TdFdhMG9hV1VGRzM0MFl3cVVrWGt4OU9tNndXd1JldU1uU1FJREFRQUJBb0lCQUFJOHo1ck5kOEdtOGJBMgo1S3pxQjI1R2lOVENwbUNJeW53NXRJWHZTQmNHcEdydUcvdlN2WG9kVlFVSVY0TWdHQkVXUEFrVzdsNWVBcHI4CnA1ZFd5SkRXYTNkdklFSE9vSEpYU3dBYksxZzZEMTNVa2NkZ1EyRGpoNVhuWDhHZCtBY2c2SmRTQWgxOWtYSHEKMk54RUtBVDB6Ri83a1g2MkRkREFBcWxmQkpGSXJodVIvZUdEVWh4L2piTTRhQ2JCcFdiM0pnRE9OYm5tS1ZoMwpxS2ZwZmRZZENZU1lzWUxrNTlxRDF2VFNwUVFUQ0VadW9VKzNzRVNhdkJzaUs1bU0vTzY5ZkRMRXNURG1MeTVQCmhEK3BMQXI0SlhNNjFwRGVBS0l3cUVqWWJybXlDRHRXTUdJNnZzZ0E1eXQzUUJaME9vV2w5QUkwdWxoZ3p4dXQKZ2ZFNTRRRUNnWUVBN0F3a0lhVEEzYmQ4Nk9jSVZnNFlrWGk1cm5aNDdsM1k4V24zcjIzUmVISXhLdkllRUtSbgp5bUlFNDFtRVBBSmlGWFpLK1VPTXdkeS9EcnFJUithT1JiT2NiV01jWUg2QzgvbG1wdVJFaXE3SW1Ub3VWcnA4CnlnUkprMWprVDA4cTIvNmg4eTBEdjJqMitsaHFXNzRNOUt0cmwxcTRlWmZRUFREL01tR1NnTWtDZ1lFQXdhY04KaSttN1p6dnJtL3NuekF2VlZ5SEtwZHVUUjNERk1naC9maC9tZ0ZHZ1RwZWtUOVV5b3FleGNYQXdwMVlhL01iQQoyNTVJVDZRbXZZTm5yNXp6Wmxic2tMV0hsYllvbWhmWnVXTHhXR3hRaEFORWdaMFVVdUVTRGMvbWx2UXZHbEtSCkZoaGhBUWlVSmdDamhPaHk1SlBiNGFldGRKd0UxK09lVWRFaE1vRUNnWUVBNG8yZ25CM1o4ck5xa3NzemlBek4KYmNuMlJVbDJOaW9pejBwS3JMaDFaT29NNE5BekpQdjJsaHRQMzdtS0htS1hLMHczRjFqTEgwSTBxZmxFVmVZbQpSU1huakdHazJjUnpBYUVzOGgrQzNheDE0Z01pZUtGU3BqNUpNOEFNbVVZOXQ1cUVhN2FYc3o0V1ZoOUlMYmVTCkRiNzlhKzVwd21LQVBrcnBsTHhyZFdrQ2dZQlNNSHVBWVdBbmJYZ1BDS2FZWklGVWJNUWNacmY0ZnpWQ2lmYksKYWZHampvRlNPZXdEOGdGK3BWdWJRTGwxbkFieU44ek1xVDRaaHhybUhpcFlqMjJDaHV2NmN3RXJtbGRiSnpwQwpBMnRaVXdkTk1ESFlMUG5lUHlZeGRJWnlsUXFVeW14SGkydElUQUxNcWtLOGV3ZWdXZHpkeGhQSlJScU5JazhrCmZIVHhnUUtCZ1FEUFc2UXIxY3F3QjNUdnVWdWR4WGRqUTdIcDFodXhrNEVWaEFJZllKNFhSTW1NUE5YS28wdHUKdUt6LzE0QW14R0dvSWJxYVc1bDMzeFNteUxhem84clNUN0tSTjVKME9JSHcrZkR5SFgxdHpVSjZCTldDcEFTcwpjbWdNK0htSzVON0w2bkNaZFJQY2IwU1hGaVRQUGhCUG1PVWFDUnpER0ZMK2JYM1VwajJKbWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\",\n  \"exp\": 1621555515,\n  \"nbf\": 1621548315,\n  \"downloadable\": false,\n  \"accessRules\": [\n    {\n      \"type\": \"ip.geoip.country\",\n      \"country\": [\n        \"US\",\n        \"MX\"\n      ],\n      \"action\": \"block\"\n    },\n    {\n      \"type\": \"ip.src\",\n      \"ip\": [\n        \"93.184.216.0/24\",\n        \"2400:cb00::/32\"\n      ],\n      \"action\": \"allow\"\n    },\n    {\n      \"type\": \"any\",\n      \"action\": \"block\"\n    }\n  ]\n}"
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIn0.eyJzdWIiOiJlYTk1MTMyYzE1NzMyNDEyZDIyYzE0NzZmYTgzZjI3YSIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIiwiZXhwIjoiMTUzNzQ2MDM2NSIsIm5iZiI6IjE1Mzc0NTMxNjUifQ.OZhqOARADn1iubK6GKcn25hN3nU-hCFF5q9w2C4yup0C4diG7aMIowiRpP-eDod8dbAJubsiFuTKrqPcmyCKWYsiv0TQueukqbQlF7HCO1TV-oF6El5-7ldJ46eD-ZQ0XgcIYEKrQOYFF8iDQbqPm3REWd6BnjKZdeVrLzuRaiSnZ9qqFpGu5dfxIY9-nZKDubJHqCr3Imtb211VIG_b9MdtO92JjvkDS-rxT_pkEfTZSafl1OU-98A7KBGtPSJHz2dHORIrUiTA6on4eIXTj9aFhGiir4rSn-rn0OjPRTtJMWIDMoQyE_fwrSYzB7MPuzL2t82BWaEbHZTfixBm5A\"\n  }\n}"
		}
	],
	"cfLinkErrors": {
		"10000": "Internal Server Error",
		"10001": "Authentication Failure",
		"10002": "Authorization Failure: Credential not authorized",
		"10003": "Not Found: Resource not found",
		"10004": "Decoding Error: Cannot decode request body",
		"10005": "Bad Request",
		"10006": "Beta Access Error",
		"10007": "Forbidden: Copy upload not enabled",
		"10008": "Invalid Duration",
		"10009": "Forbidden: Allowed key count exceeded",
		"10010": "Invalid URL",
		"10011": "File size too large",
		"10012": "Forbidden: Webhook feature not enabled",
		"10014": "File size too large",
		"10015": "Chunk size is too small",
		"10016": "Too Many Requests",
		"10017": "Expiration for upload has passed",
		"10018": "Video already uploaded",
		"10019": "Invalid Percentage Range",
		"100013": "Conflict: Media has been modified since last request"
	},
	"html_id": "stream-videos",
	"object_definition": {
		"_formatter": {
			"jsonMediaType": {}
		},
		"all_props": {
			"allowedOrigins": {
				"type": "array",
				"example": "[\n  \"example.com\"\n]",
				"description": "Lists the origins allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty arrays allow the video to be viewed on any origin.",
				"items": {
					"type": "string"
				}
			},
			"created": {
				"type": "string",
				"example": "\"2014-01-02T02:20:00Z\"",
				"description": "The date and time the media item was created.",
				"format": "date-time",
				"readOnly": true
			},
			"duration": {
				"type": "integer",
				"example": "300",
				"description": "The duration of the video in seconds. A value of `-1` means the duration is unknown. The duration becomes available after the upload and before the video is ready.",
				"readOnly": true
			},
			"input": {
				"type": "object",
				"example": "{\n  \"height\": 1080,\n  \"width\": 1920\n}",
				"properties": {
					"height": {
						"type": "integer",
						"example": "1080",
						"description": "The video height in pixels. A value of `-1` means the height is unknown. The value becomes available after the upload and before the video is ready.",
						"readOnly": true
					},
					"width": {
						"type": "integer",
						"example": "1920",
						"description": "The video width in pixels. A value of `-1` means the width is unknown. The value becomes available after the upload and before the video is ready.",
						"readOnly": true
					}
				},
				"readOnly": true
			},
			"maxDurationSeconds": {
				"type": "integer",
				"example": "300",
				"description": "The maximum duration in seconds for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploads that exceed the specified duration will fail during processing. A value of `-1` means the value is unknown."
			},
			"meta": {
				"type": "object",
				"example": "{}",
				"description": "A user modifiable key-value store used to reference other systems of record for managing videos."
			},
			"modified": {
				"type": "string",
				"example": "\"2014-01-02T02:20:00Z\"",
				"description": "The date and time the media item was last modified.",
				"format": "date-time",
				"readOnly": true
			},
			"uploadExpiry": {
				"type": "string",
				"example": "\"2014-01-02T02:20:00Z\"",
				"description": "The date and time when the video upload URL is no longer valid for direct user uploads.",
				"format": "date-time"
			},
			"playback": {
				"type": "object",
				"example": "{\n  \"hls\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8\",\n  \"dash\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd\"\n}",
				"properties": {
					"hls": {
						"type": "string",
						"example": "\"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8\"",
						"readOnly": true,
						"description": "The HLS manifest for the video."
					},
					"dash": {
						"type": "string",
						"example": "\"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd\"",
						"readOnly": true,
						"description": "DASH Media Presentation Description for the video"
					}
				},
				"readOnly": true
			},
			"preview": {
				"type": "string",
				"example": "\"https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a\"",
				"description": "The video's preview page URI. This field is omitted until encoding is complete.",
				"format": "uri",
				"readOnly": true
			},
			"readyToStream": {
				"type": "boolean",
				"example": "true",
				"description": "Indicates whether the video is ready for viewing.",
				"readOnly": true
			},
			"requireSignedURLs": {
				"type": "boolean",
				"example": "true",
				"description": "Indicates whether the video can be a accessed using the UID. When set to `true`, a signed token must be generated with a signing key to view the video.",
				"readOnly": true,
				"default": false
			},
			"size": {
				"type": "number",
				"example": "4190963",
				"description": "The size of the media item in bytes.",
				"readOnly": true
			},
			"status": {
				"example": "{\n  \"state\": \"inprogress\",\n  \"pctComplete\": 51,\n  \"errorReasonCode\": \"ERR_NON_VIDEO\",\n  \"errorReasonText\": \"The file was not recognized as a valid video file.\"\n}",
				"properties": {
					"state": {
						"type": "string",
						"example": "\"inprogress\"",
						"description": "Specifies the processing status of the video.",
						"enum": [
							"pendingupload",
							"downloading",
							"queued",
							"inprogress",
							"ready",
							"error"
						],
						"readOnly": true
					},
					"pctComplete": {
						"type": "integer",
						"example": "51",
						"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
						"minimum": 0,
						"maximum": 100,
						"readOnly": true
					},
					"errorReasonCode": {
						"type": "string",
						"example": "\"ERR_NON_VIDEO\"",
						"description": "Specifies why the video failed to encode. This field is empty if the video is not in an `error` state. Preferred for programmatic use.",
						"readOnly": true
					},
					"errorReasonText": {
						"type": "string",
						"example": "\"The file was not recognized as a valid video file.\"",
						"description": "Specifies why the video failed to encode using a human readable error message in English. This field is empty if the video is not in an `error` state.",
						"readOnly": true
					}
				},
				"description": "Specifies a detailed status for a video. If the `state` is `inprogress` or `error`, the `step` field returns `encoding` or `manifest`. If the `state` is `inprogress`, `pctComplete` returns a number between 0 and 100 to indicate the approximate percent of completion. If the `state` is `error`, `errorReasonCode` and `errorReasonText` provide additional details.",
				"readOnly": true
			},
			"thumbnail": {
				"type": "string",
				"example": "\"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg\"",
				"description": "The media item's thumbnail URI. This field is omitted until encoding is complete.",
				"format": "uri",
				"readOnly": true
			},
			"thumbnailTimestampPct": {
				"type": "number",
				"example": "0.529241",
				"description": "The timestamp for a thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image is taken from 0s of the video.",
				"default": 0,
				"minimum": 0,
				"maximum": 1
			},
			"uid": {
				"type": "string",
				"example": "\"ea95132c15732412d22c1476fa83f27a\"",
				"description": "A Cloudflare-generated unique identifier for a media item.",
				"maxLength": 32,
				"readOnly": true
			},
			"creator": {
				"type": "string",
				"example": "\"creator-id_abcde12345\"",
				"description": "A user-defined identifier for the media creator.",
				"maxLength": 64
			},
			"liveInput": {
				"type": "string",
				"example": "\"fc0a8dc887b16759bfd9ad922230a014\"",
				"description": "The live input ID used to upload a video with Stream Live.",
				"maxLength": 32,
				"readOnly": true
			},
			"uploaded": {
				"type": "string",
				"example": "\"2014-01-02T02:20:00Z\"",
				"description": "The date and time the media item was uploaded.",
				"format": "date-time",
				"readOnly": true
			},
			"watermark": {
				"type": "object",
				"example": "{\n  \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n  \"size\": 29472,\n  \"height\": 600,\n  \"width\": 400,\n  \"created\": \"2014-01-02T02:20:00Z\",\n  \"downloadedFrom\": \"https://company.com/logo.png\",\n  \"name\": \"Marketing Videos\",\n  \"opacity\": 0.75,\n  \"padding\": 0.1,\n  \"scale\": 0.1,\n  \"position\": \"center\"\n}",
				"properties": {
					"uid": {
						"type": "string",
						"example": "\"ea95132c15732412d22c1476fa83f27a\"",
						"description": "The unique identifier for a watermark profile.",
						"maxLength": 32,
						"readOnly": true
					},
					"size": {
						"type": "number",
						"example": "29472",
						"description": "The size of the image in bytes.",
						"readOnly": true
					},
					"height": {
						"type": "integer",
						"example": "600",
						"description": "The height of the image in pixels.",
						"readOnly": true
					},
					"width": {
						"type": "integer",
						"example": "400",
						"description": "The width of the image in pixels.",
						"readOnly": true
					},
					"created": {
						"type": "string",
						"example": "\"2014-01-02T02:20:00Z\"",
						"description": "The date and a time a watermark profile was created.",
						"format": "date-time",
						"readOnly": true
					},
					"downloadedFrom": {
						"type": "string",
						"example": "\"https://company.com/logo.png\"",
						"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
						"readOnly": true
					},
					"name": {
						"type": "string",
						"example": "\"Marketing Videos\"",
						"description": "A short description of the watermark profile.",
						"default": "",
						"readOnly": true
					},
					"opacity": {
						"type": "number",
						"example": "0.75",
						"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
						"default": 1,
						"minimum": 0,
						"maximum": 1,
						"readOnly": true
					},
					"padding": {
						"type": "number",
						"example": "0.1",
						"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
						"default": 0.05,
						"minimum": 0,
						"maximum": 1,
						"readOnly": true
					},
					"scale": {
						"type": "number",
						"example": "0.1",
						"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
						"default": 0.15,
						"minimum": 0,
						"maximum": 1,
						"readOnly": true
					},
					"position": {
						"type": "string",
						"example": "\"center\"",
						"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter. ",
						"default": "upperRight",
						"readOnly": true
					}
				},
				"id": "https://api.cloudflare.com/schemas/v4/client/account/stream/watermarks.json",
				"$schema": "http://json-schema.org/draft-04/hyper-schema#",
				"title": "Stream Watermark Profile",
				"description": "You can create watermark profile for different videos.",
				"links": [
					{
						"title": "Create watermark profiles from a URL",
						"description": "Creates a watermark profile by specifying an image's URL.",
						"rel": "collection",
						"href": "accounts/{#/definitions/account_identifier}/stream/watermarks",
						"method": "POST",
						"cfOwnership": "stream",
						"schema": {
							"type": "object",
							"required": [
								"url"
							],
							"properties": {
								"url": {
									"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
									"example": "https://company.com/logo.png",
									"readOnly": true,
									"type": "string"
								},
								"name": {
									"description": "A short description of the watermark profile.",
									"default": "",
									"example": "Marketing Videos",
									"readOnly": true,
									"type": "string"
								},
								"opacity": {
									"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
									"default": 1,
									"example": 0.75,
									"minimum": 0,
									"maximum": 1,
									"readOnly": true,
									"type": "number"
								},
								"padding": {
									"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
									"default": 0.05,
									"example": 0.1,
									"minimum": 0,
									"maximum": 1,
									"readOnly": true,
									"type": "number"
								},
								"scale": {
									"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
									"default": 0.15,
									"example": 0.1,
									"minimum": 0,
									"maximum": 1,
									"readOnly": true,
									"type": "number"
								},
								"position": {
									"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter. ",
									"default": "upperRight",
									"example": "center",
									"readOnly": true,
									"type": "string"
								}
							}
						},
						"targetSchema": {
							"allOf": [
								{
									"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
									"$schema": "http://json-schema.org/draft-04/hyper-schema#",
									"description": "Schema for an API response from Cloudflare that contains a single result object",
									"type": "object",
									"allOf": [
										{
											"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
											"$schema": "http://json-schema.org/draft-04/hyper-schema#",
											"description": "Common schema for all Cloudflare v4 API responses",
											"type": "object",
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"oneOf": [
												{
													"$comment": "This subschema describes successful responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																true
															],
															"example": true
														},
														"errors": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"messages": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"result": {
															"type": [
																"object",
																"array",
																"string"
															]
														}
													}
												},
												{
													"$comment": "This subschema describes failure responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																false
															],
															"example": false
														},
														"errors": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"minLength": 1,
															"example": [
																{
																	"code": 7003,
																	"message": "No route for the URI"
																}
															]
														},
														"messages": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"example": []
														},
														"result": {
															"type": "null",
															"enum": [
																null
															],
															"example": null
														}
													}
												}
											],
											"definitions": {
												"messages": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											}
										},
										{
											"properties": {
												"result": {
													"type": [
														"object",
														"string",
														"null"
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"cfRecurse": "",
											"type": "object"
										}
									}
								}
							]
						}
					},
					{
						"title": "Create watermark profiles via basic upload",
						"description": "Creates watermark profiles using a single `HTTP POST multipart/form-data` request.",
						"rel": "collection",
						"href": "accounts/{#/definitions/account_identifier}/stream/watermarks",
						"method": "POST",
						"encType": "multipart/form-data",
						"cfOwnership": "stream",
						"cfRequestHeaders": {
							"required": [
								"X-Auth-Email",
								"X-Auth-Key"
							],
							"properties": {
								"X-Auth-Email": {
									"description": "Your Cloudflare email",
									"type": "string",
									"example": "user@example.com"
								},
								"X-Auth-Key": {
									"description": "Your Cloudflare API key",
									"type": "string",
									"minLength": 45,
									"maxLength": 45,
									"example": "c2547eb745079dac9320b638f5e225cf483cc5cfdda41"
								}
							}
						},
						"schema": {
							"type": "object",
							"required": [
								"file"
							],
							"properties": {
								"file": {
									"type": "string",
									"description": "The image file to upload.",
									"example": "@/Users/rchen/Downloads/watermark.png"
								},
								"name": {
									"description": "A short description of the watermark profile.",
									"default": "",
									"example": "Marketing Videos",
									"readOnly": true,
									"type": "string"
								},
								"opacity": {
									"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
									"default": 1,
									"example": 0.75,
									"minimum": 0,
									"maximum": 1,
									"readOnly": true,
									"type": "number"
								},
								"padding": {
									"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
									"default": 0.05,
									"example": 0.1,
									"minimum": 0,
									"maximum": 1,
									"readOnly": true,
									"type": "number"
								},
								"scale": {
									"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
									"default": 0.15,
									"example": 0.1,
									"minimum": 0,
									"maximum": 1,
									"readOnly": true,
									"type": "number"
								},
								"position": {
									"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter. ",
									"default": "upperRight",
									"example": "center",
									"readOnly": true,
									"type": "string"
								}
							}
						},
						"targetSchema": {
							"allOf": [
								{
									"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
									"$schema": "http://json-schema.org/draft-04/hyper-schema#",
									"description": "Schema for an API response from Cloudflare that contains a single result object",
									"type": "object",
									"allOf": [
										{
											"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
											"$schema": "http://json-schema.org/draft-04/hyper-schema#",
											"description": "Common schema for all Cloudflare v4 API responses",
											"type": "object",
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"oneOf": [
												{
													"$comment": "This subschema describes successful responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																true
															],
															"example": true
														},
														"errors": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"messages": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"result": {
															"type": [
																"object",
																"array",
																"string"
															]
														}
													}
												},
												{
													"$comment": "This subschema describes failure responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																false
															],
															"example": false
														},
														"errors": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"minLength": 1,
															"example": [
																{
																	"code": 7003,
																	"message": "No route for the URI"
																}
															]
														},
														"messages": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"example": []
														},
														"result": {
															"type": "null",
															"enum": [
																null
															],
															"example": null
														}
													}
												}
											],
											"definitions": {
												"messages": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											}
										},
										{
											"properties": {
												"result": {
													"type": [
														"object",
														"string",
														"null"
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"cfRecurse": "",
											"type": "object"
										}
									}
								}
							]
						}
					},
					{
						"title": "List watermark profiles",
						"description": "Lists all watermark profiles for an account.",
						"rel": "collection",
						"href": "accounts/{#/definitions/account_identifier}/stream/watermarks",
						"method": "GET",
						"cfOwnership": "stream",
						"targetSchema": {
							"allOf": [
								{
									"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
									"$schema": "http://json-schema.org/draft-04/hyper-schema#",
									"description": "Schema for an API response from Cloudflare that contains multiple result objects",
									"type": "object",
									"anyOf": [
										{
											"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
											"$schema": "http://json-schema.org/draft-04/hyper-schema#",
											"description": "Common schema for all Cloudflare v4 API responses",
											"type": "object",
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"oneOf": [
												{
													"$comment": "This subschema describes successful responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																true
															],
															"example": true
														},
														"errors": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"messages": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"result": {
															"type": [
																"object",
																"array",
																"string"
															]
														}
													}
												},
												{
													"$comment": "This subschema describes failure responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																false
															],
															"example": false
														},
														"errors": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"minLength": 1,
															"example": [
																{
																	"code": 7003,
																	"message": "No route for the URI"
																}
															]
														},
														"messages": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"example": []
														},
														"result": {
															"type": "null",
															"enum": [
																null
															],
															"example": null
														}
													}
												}
											],
											"definitions": {
												"messages": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											}
										},
										{
											"properties": {
												"result": {
													"type": [
														"array",
														"null"
													]
												},
												"result_info": {
													"type": "object",
													"properties": {
														"page": {
															"description": "Current page within paginated list of results",
															"type": "number",
															"example": 1
														},
														"per_page": {
															"description": "Number of results per page of results",
															"type": "number",
															"example": 20
														},
														"count": {
															"description": "Total results returned based on your search parameters",
															"type": "number",
															"example": 1
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"type": "number",
															"example": 2000
														}
													}
												}
											}
										}
									],
									"definitions": {
										"params": {
											"type": "object",
											"properties": {
												"page": {
													"description": "Requested page within paginated list of results",
													"type": "number",
													"example": 1
												},
												"per_page": {
													"description": "Maximum number of results requested",
													"type": "number",
													"example": 20
												}
											}
										},
										"result_info": {
											"type": "object",
											"properties": {
												"page": {
													"description": "Current page within paginated list of results",
													"type": "number",
													"example": 1
												},
												"per_page": {
													"description": "Number of results per page of results",
													"type": "number",
													"example": 20
												},
												"count": {
													"description": "Total results returned based on your search parameters",
													"type": "number",
													"example": 1
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"type": "number",
													"example": 2000
												}
											}
										}
									}
								},
								{
									"properties": {
										"result": {
											"items": {
												"cfRecurse": ""
											},
											"type": "array"
										}
									}
								}
							]
						}
					},
					{
						"title": "Watermark profile details",
						"description": "Retrieves details for a single watermark profile.",
						"rel": "self",
						"href": "accounts/{#/definitions/account_identifier}/stream/watermarks/{#/definitions/identifier}",
						"method": "GET",
						"cfOwnership": "stream",
						"targetSchema": {
							"allOf": [
								{
									"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
									"$schema": "http://json-schema.org/draft-04/hyper-schema#",
									"description": "Schema for an API response from Cloudflare that contains a single result object",
									"type": "object",
									"allOf": [
										{
											"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
											"$schema": "http://json-schema.org/draft-04/hyper-schema#",
											"description": "Common schema for all Cloudflare v4 API responses",
											"type": "object",
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"oneOf": [
												{
													"$comment": "This subschema describes successful responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																true
															],
															"example": true
														},
														"errors": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"messages": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"result": {
															"type": [
																"object",
																"array",
																"string"
															]
														}
													}
												},
												{
													"$comment": "This subschema describes failure responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																false
															],
															"example": false
														},
														"errors": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"minLength": 1,
															"example": [
																{
																	"code": 7003,
																	"message": "No route for the URI"
																}
															]
														},
														"messages": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"example": []
														},
														"result": {
															"type": "null",
															"enum": [
																null
															],
															"example": null
														}
													}
												}
											],
											"definitions": {
												"messages": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											}
										},
										{
											"properties": {
												"result": {
													"type": [
														"object",
														"string",
														"null"
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"cfRecurse": "",
											"type": "object"
										}
									}
								}
							]
						}
					},
					{
						"title": "Delete watermark profiles",
						"description": "Deletes a watermark profile.",
						"rel": "self",
						"href": "accounts/{#/definitions/account_identifier}/stream/watermarks/{#/definitions/identifier}",
						"cfOwnership": "stream",
						"method": "DELETE",
						"targetSchema": {
							"allOf": [
								{
									"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
									"$schema": "http://json-schema.org/draft-04/hyper-schema#",
									"description": "Schema for an API response from Cloudflare that contains a single result object",
									"type": "object",
									"allOf": [
										{
											"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
											"$schema": "http://json-schema.org/draft-04/hyper-schema#",
											"description": "Common schema for all Cloudflare v4 API responses",
											"type": "object",
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"oneOf": [
												{
													"$comment": "This subschema describes successful responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																true
															],
															"example": true
														},
														"errors": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"messages": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"result": {
															"type": [
																"object",
																"array",
																"string"
															]
														}
													}
												},
												{
													"$comment": "This subschema describes failure responses",
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																false
															],
															"example": false
														},
														"errors": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"minLength": 1,
															"example": [
																{
																	"code": 7003,
																	"message": "No route for the URI"
																}
															]
														},
														"messages": {
															"allOf": [
																{
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"code",
																			"message"
																		],
																		"properties": {
																			"code": {
																				"type": "integer",
																				"minimum": 1000
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"uniqueItems": true
																	},
																	"example": []
																}
															],
															"example": []
														},
														"result": {
															"type": "null",
															"enum": [
																null
															],
															"example": null
														}
													}
												}
											],
											"definitions": {
												"messages": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											}
										},
										{
											"properties": {
												"result": {
													"type": [
														"object",
														"string",
														"null"
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"type": "string",
											"example": ""
										}
									}
								}
							]
						}
					}
				],
				"cfLinkErrors": {
					"10020": "Invalid Percentage Range for Opacity",
					"10021": "Invalid Percentage Range for Padding",
					"10022": "Invalid Percentage Range for Scale",
					"10023": "Invalid Value for Position",
					"10024": "Forbidden: Allowed watermark count exceeded"
				},
				"definitions": {
					"watermark_basic_upload": {
						"type": "object",
						"required": [
							"file"
						],
						"properties": {
							"file": {
								"type": "string",
								"description": "The image file to upload.",
								"example": "@/Users/rchen/Downloads/watermark.png"
							},
							"name": {
								"description": "A short description of the watermark profile.",
								"default": "",
								"example": "Marketing Videos",
								"readOnly": true,
								"type": "string"
							},
							"opacity": {
								"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
								"default": 1,
								"example": 0.75,
								"minimum": 0,
								"maximum": 1,
								"readOnly": true,
								"type": "number"
							},
							"padding": {
								"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
								"default": 0.05,
								"example": 0.1,
								"minimum": 0,
								"maximum": 1,
								"readOnly": true,
								"type": "number"
							},
							"scale": {
								"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
								"default": 0.15,
								"example": 0.1,
								"minimum": 0,
								"maximum": 1,
								"readOnly": true,
								"type": "number"
							},
							"position": {
								"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter. ",
								"default": "upperRight",
								"example": "center",
								"readOnly": true,
								"type": "string"
							}
						}
					},
					"watermark_copy_upload": {
						"type": "object",
						"required": [
							"url"
						],
						"properties": {
							"url": {
								"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
								"example": "https://company.com/logo.png",
								"readOnly": true,
								"type": "string"
							},
							"name": {
								"description": "A short description of the watermark profile.",
								"default": "",
								"example": "Marketing Videos",
								"readOnly": true,
								"type": "string"
							},
							"opacity": {
								"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
								"default": 1,
								"example": 0.75,
								"minimum": 0,
								"maximum": 1,
								"readOnly": true,
								"type": "number"
							},
							"padding": {
								"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
								"default": 0.05,
								"example": 0.1,
								"minimum": 0,
								"maximum": 1,
								"readOnly": true,
								"type": "number"
							},
							"scale": {
								"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
								"default": 0.15,
								"example": 0.1,
								"minimum": 0,
								"maximum": 1,
								"readOnly": true,
								"type": "number"
							},
							"position": {
								"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter. ",
								"default": "upperRight",
								"example": "center",
								"readOnly": true,
								"type": "string"
							}
						}
					},
					"watermark_response_single": {
						"allOf": [
							{
								"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
								"$schema": "http://json-schema.org/draft-04/hyper-schema#",
								"description": "Schema for an API response from Cloudflare that contains a single result object",
								"type": "object",
								"allOf": [
									{
										"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
										"$schema": "http://json-schema.org/draft-04/hyper-schema#",
										"description": "Common schema for all Cloudflare v4 API responses",
										"type": "object",
										"required": [
											"success",
											"errors",
											"messages",
											"result"
										],
										"oneOf": [
											{
												"$comment": "This subschema describes successful responses",
												"properties": {
													"success": {
														"description": "Whether the API call was successful or not",
														"type": "boolean",
														"enum": [
															true
														],
														"example": true
													},
													"errors": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													},
													"messages": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													},
													"result": {
														"type": [
															"object",
															"array",
															"string"
														]
													}
												}
											},
											{
												"$comment": "This subschema describes failure responses",
												"properties": {
													"success": {
														"description": "Whether the API call was successful or not",
														"type": "boolean",
														"enum": [
															false
														],
														"example": false
													},
													"errors": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														],
														"minLength": 1,
														"example": [
															{
																"code": 7003,
																"message": "No route for the URI"
															}
														]
													},
													"messages": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														],
														"example": []
													},
													"result": {
														"type": "null",
														"enum": [
															null
														],
														"example": null
													}
												}
											}
										],
										"definitions": {
											"messages": {
												"type": "array",
												"items": {
													"type": "object",
													"required": [
														"code",
														"message"
													],
													"properties": {
														"code": {
															"type": "integer",
															"minimum": 1000
														},
														"message": {
															"type": "string"
														}
													},
													"uniqueItems": true
												},
												"example": []
											}
										}
									},
									{
										"properties": {
											"result": {
												"type": [
													"object",
													"string",
													"null"
												]
											}
										}
									}
								]
							},
							{
								"properties": {
									"result": {
										"cfRecurse": "",
										"type": "object"
									}
								}
							}
						]
					},
					"watermark_response_collection": {
						"allOf": [
							{
								"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
								"$schema": "http://json-schema.org/draft-04/hyper-schema#",
								"description": "Schema for an API response from Cloudflare that contains multiple result objects",
								"type": "object",
								"anyOf": [
									{
										"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
										"$schema": "http://json-schema.org/draft-04/hyper-schema#",
										"description": "Common schema for all Cloudflare v4 API responses",
										"type": "object",
										"required": [
											"success",
											"errors",
											"messages",
											"result"
										],
										"oneOf": [
											{
												"$comment": "This subschema describes successful responses",
												"properties": {
													"success": {
														"description": "Whether the API call was successful or not",
														"type": "boolean",
														"enum": [
															true
														],
														"example": true
													},
													"errors": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													},
													"messages": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													},
													"result": {
														"type": [
															"object",
															"array",
															"string"
														]
													}
												}
											},
											{
												"$comment": "This subschema describes failure responses",
												"properties": {
													"success": {
														"description": "Whether the API call was successful or not",
														"type": "boolean",
														"enum": [
															false
														],
														"example": false
													},
													"errors": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														],
														"minLength": 1,
														"example": [
															{
																"code": 7003,
																"message": "No route for the URI"
															}
														]
													},
													"messages": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														],
														"example": []
													},
													"result": {
														"type": "null",
														"enum": [
															null
														],
														"example": null
													}
												}
											}
										],
										"definitions": {
											"messages": {
												"type": "array",
												"items": {
													"type": "object",
													"required": [
														"code",
														"message"
													],
													"properties": {
														"code": {
															"type": "integer",
															"minimum": 1000
														},
														"message": {
															"type": "string"
														}
													},
													"uniqueItems": true
												},
												"example": []
											}
										}
									},
									{
										"properties": {
											"result": {
												"type": [
													"array",
													"null"
												]
											},
											"result_info": {
												"type": "object",
												"properties": {
													"page": {
														"description": "Current page within paginated list of results",
														"type": "number",
														"example": 1
													},
													"per_page": {
														"description": "Number of results per page of results",
														"type": "number",
														"example": 20
													},
													"count": {
														"description": "Total results returned based on your search parameters",
														"type": "number",
														"example": 1
													},
													"total_count": {
														"description": "Total results available without any search parameters",
														"type": "number",
														"example": 2000
													}
												}
											}
										}
									}
								],
								"definitions": {
									"params": {
										"type": "object",
										"properties": {
											"page": {
												"description": "Requested page within paginated list of results",
												"type": "number",
												"example": 1
											},
											"per_page": {
												"description": "Maximum number of results requested",
												"type": "number",
												"example": 20
											}
										}
									},
									"result_info": {
										"type": "object",
										"properties": {
											"page": {
												"description": "Current page within paginated list of results",
												"type": "number",
												"example": 1
											},
											"per_page": {
												"description": "Number of results per page of results",
												"type": "number",
												"example": 20
											},
											"count": {
												"description": "Total results returned based on your search parameters",
												"type": "number",
												"example": 1
											},
											"total_count": {
												"description": "Total results available without any search parameters",
												"type": "number",
												"example": 2000
											}
										}
									}
								}
							},
							{
								"properties": {
									"result": {
										"items": {
											"cfRecurse": ""
										},
										"type": "array"
									}
								}
							}
						]
					},
					"account_identifier": {
						"description": "The account identifier tag.",
						"example": "023e105f4ecef8ad9ca31a8372d0c353",
						"maxLength": 32,
						"readOnly": true,
						"type": "string"
					},
					"identifier": {
						"description": "The unique identifier for a watermark profile.",
						"example": "ea95132c15732412d22c1476fa83f27a",
						"maxLength": 32,
						"readOnly": true,
						"type": "string"
					},
					"size": {
						"description": "The size of the image in bytes.",
						"example": 29472,
						"readOnly": true,
						"type": "number"
					},
					"height": {
						"description": "The height of the image in pixels.",
						"type": "integer",
						"readOnly": true,
						"example": 600
					},
					"width": {
						"description": "The width of the image in pixels.",
						"type": "integer",
						"readOnly": true,
						"example": 400
					},
					"created": {
						"description": "The date and a time a watermark profile was created.",
						"example": "2014-01-02T02:20:00Z",
						"format": "date-time",
						"readOnly": true,
						"type": "string"
					},
					"downloadedFrom": {
						"description": "The source URL for a downloaded image. If the watermark profile was created via direct upload, this field is null.",
						"example": "https://company.com/logo.png",
						"readOnly": true,
						"type": "string"
					},
					"name": {
						"description": "A short description of the watermark profile.",
						"default": "",
						"example": "Marketing Videos",
						"readOnly": true,
						"type": "string"
					},
					"opacity": {
						"description": "The translucency of the image. A value of `0.0` makes the image completely transparent, and `1.0` makes the image completely opaque. Note that if the image is already semi-transparent, setting this to `1.0` will not make the image completely opaque.",
						"default": 1,
						"example": 0.75,
						"minimum": 0,
						"maximum": 1,
						"readOnly": true,
						"type": "number"
					},
					"padding": {
						"description": "The whitespace between the adjacent edges (determined by position) of the video and the image. `0.0` indicates no padding, and `1.0` indicates a fully padded video width or length, as determined by the algorithm.",
						"default": 0.05,
						"example": 0.1,
						"minimum": 0,
						"maximum": 1,
						"readOnly": true,
						"type": "number"
					},
					"scale": {
						"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. `0.0` indicates no scaling (use the size of the image as-is), and `1.0 `fills the entire video.",
						"default": 0.15,
						"example": 0.1,
						"minimum": 0,
						"maximum": 1,
						"readOnly": true,
						"type": "number"
					},
					"position": {
						"description": "The location of the image. Valid positions are: `upperRight`, `upperLeft`, `lowerLeft`, `lowerRight`, and `center`. Note that `center` ignores the `padding` parameter. ",
						"default": "upperRight",
						"example": "center",
						"readOnly": true,
						"type": "string"
					}
				}
			},
			"nft": {
				"type": "object",
				"example": "{\n  \"contract\": \"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\n  \"token\": 5\n}",
				"properties": {
					"contract": {
						"type": "string",
						"example": "\"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\"",
						"readOnly": true,
						"description": "The ERC-721 compatible contract address.",
						"maxLength": 42,
						"minLength": 42
					},
					"token": {
						"type": "integer",
						"example": "5",
						"readOnly": true,
						"description": "The token ID for the NFT."
					}
				},
				"readOnly": true
			}
		},
		"required_props": [],
		"optional_props": [
			"allowedOrigins",
			"created",
			"duration",
			"input",
			"maxDurationSeconds",
			"meta",
			"modified",
			"uploadExpiry",
			"playback",
			"preview",
			"readyToStream",
			"requireSignedURLs",
			"size",
			"status",
			"thumbnail",
			"thumbnailTimestampPct",
			"uid",
			"creator",
			"liveInput",
			"uploaded",
			"watermark",
			"nft"
		],
		"objects": [],
		"example": "{\n  \"allowedOrigins\": [\n    \"example.com\"\n  ],\n  \"created\": \"2014-01-02T02:20:00Z\",\n  \"duration\": 300,\n  \"input\": {\n    \"height\": 1080,\n    \"width\": 1920\n  },\n  \"maxDurationSeconds\": 300,\n  \"meta\": {},\n  \"modified\": \"2014-01-02T02:20:00Z\",\n  \"uploadExpiry\": \"2014-01-02T02:20:00Z\",\n  \"playback\": {\n    \"hls\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8\",\n    \"dash\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd\"\n  },\n  \"preview\": \"https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a\",\n  \"readyToStream\": true,\n  \"requireSignedURLs\": true,\n  \"size\": 4190963,\n  \"status\": {\n    \"state\": \"inprogress\",\n    \"pctComplete\": 51,\n    \"errorReasonCode\": \"ERR_NON_VIDEO\",\n    \"errorReasonText\": \"The file was not recognized as a valid video file.\"\n  },\n  \"thumbnail\": \"https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg\",\n  \"thumbnailTimestampPct\": 0.529241,\n  \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n  \"creator\": \"creator-id_abcde12345\",\n  \"liveInput\": \"fc0a8dc887b16759bfd9ad922230a014\",\n  \"uploaded\": \"2014-01-02T02:20:00Z\",\n  \"watermark\": {\n    \"uid\": \"ea95132c15732412d22c1476fa83f27a\",\n    \"size\": 29472,\n    \"height\": 600,\n    \"width\": 400,\n    \"created\": \"2014-01-02T02:20:00Z\",\n    \"downloadedFrom\": \"https://company.com/logo.png\",\n    \"name\": \"Marketing Videos\",\n    \"opacity\": 0.75,\n    \"padding\": 0.1,\n    \"scale\": 0.1,\n    \"position\": \"center\"\n  },\n  \"nft\": {\n    \"contract\": \"0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85\",\n    \"token\": 5\n  }\n}",
		"title": "Stream Videos",
		"description": "You can upload videos to Cloudflare Stream for fast video processing and delivery."
	}
}