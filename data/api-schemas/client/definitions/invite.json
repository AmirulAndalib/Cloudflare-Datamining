{
	"id": "https://api.cloudflare.com/schemas/v4/client/definitions/invite.json",
	"$schema": "http://json-schema.org/draft-04/hyper-schema#",
	"title": "Invite",
	"description": "An invitation to join an organization",
	"type": "object",
	"required": [
		"id",
		"invited_member_id",
		"invited_member_email",
		"roles",
		"status",
		"organization_id",
		"organization_name",
		"invited_by",
		"invited_on",
		"expires_on"
	],
	"anyOf": [
		{
			"allOf": [
				{
					"type": "object",
					"required": [
						"invited_member_id",
						"organization_id"
					],
					"properties": {
						"id": {
							"description": "Invite identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "4f5f0c14a2a41d5063dd301b2f829f04"
						},
						"invited_member_id": {
							"description": "Id of the user to be added to the Organization",
							"type": [
								"string",
								"null"
							],
							"maxLength": 32,
							"readOnly": true,
							"example": "5a7805061c76ada191ed06f989cc3dac"
						},
						"invited_member_email": {
							"description": "Email address of the user to be added to the Organization",
							"type": "string",
							"maxLength": 90,
							"example": "user@example.com"
						},
						"organization_id": {
							"description": "ID of the Organization the user will be added to",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "5a7805061c76ada191ed06f989cc3dac"
						},
						"organization_name": {
							"description": "Organization Name",
							"type": "string",
							"maxLength": 100,
							"readOnly": true,
							"example": "Cloudflare, Inc."
						},
						"roles": {
							"description": "Roles to be assigned to this Member",
							"type": "array",
							"items": {
								"id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
								"title": "Organization Roles",
								"$schema": "http://json-schema.org/draft-04/hyper-schema#",
								"description": "A role defines what permissions a Member of an Organization has.",
								"type": "object",
								"required": [
									"id",
									"name",
									"description",
									"permissions"
								],
								"properties": {
									"id": {
										"description": "Role identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "3536bcfad5faccb999b47003c79917fb"
									},
									"name": {
										"type": "string",
										"description": "Role Name",
										"maxLength": 120,
										"readOnly": true,
										"example": "Organization Admin"
									},
									"description": {
										"type": "string",
										"description": "Description of role's permissions",
										"readOnly": true,
										"example": "Administrative access to the entire Organization"
									},
									"permissions": {
										"type": "array",
										"description": "Access permissions for this User",
										"readOnly": true,
										"items": {
											"type": "string",
											"maxLength": 160,
											"example": "#zones:read"
										}
									}
								},
								"definitions": {
									"identifier": {
										"description": "Role identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "3536bcfad5faccb999b47003c79917fb"
									},
									"name": {
										"type": "string",
										"description": "Role Name",
										"maxLength": 120,
										"readOnly": true,
										"example": "Organization Admin"
									},
									"description": {
										"type": "string",
										"description": "Description of role's permissions",
										"readOnly": true,
										"example": "Administrative access to the entire Organization"
									},
									"permissions": {
										"type": "array",
										"description": "Access permissions for this User",
										"readOnly": true,
										"items": {
											"type": "string",
											"maxLength": 160,
											"example": "#zones:read"
										}
									},
									"organization_identifier": {
										"description": "Organization identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "01a7362d577a6c3019a474fd6f485823"
									},
									"single_role_response": {
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Schema for an API response from Cloudflare that contains a single result object",
												"type": "object",
												"allOf": [
													{
														"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
														"$schema": "http://json-schema.org/draft-04/hyper-schema#",
														"description": "Common schema for all Cloudflare v4 API responses",
														"type": "object",
														"required": [
															"success",
															"errors",
															"messages",
															"result"
														],
														"oneOf": [
															{
																"$comment": "This subschema describes successful responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			true
																		],
																		"example": true
																	},
																	"errors": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"messages": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"result": {
																		"type": [
																			"object",
																			"array",
																			"string"
																		]
																	}
																}
															},
															{
																"$comment": "This subschema describes failure responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			false
																		],
																		"example": false
																	},
																	"errors": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"minLength": 1,
																		"example": [
																			{
																				"code": 7003,
																				"message": "No route for the URI"
																			}
																		]
																	},
																	"messages": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"example": []
																	},
																	"result": {
																		"type": "null",
																		"enum": [
																			null
																		],
																		"example": null
																	}
																}
															}
														],
														"definitions": {
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														}
													},
													{
														"properties": {
															"result": {
																"type": [
																	"object",
																	"string",
																	"null"
																]
															}
														}
													}
												]
											},
											{
												"type": "object",
												"properties": {
													"result": {
														"type": "object",
														"cfRecurse": ""
													}
												}
											}
										]
									},
									"collection_role_response": {
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Schema for an API response from Cloudflare that contains multiple result objects",
												"type": "object",
												"anyOf": [
													{
														"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
														"$schema": "http://json-schema.org/draft-04/hyper-schema#",
														"description": "Common schema for all Cloudflare v4 API responses",
														"type": "object",
														"required": [
															"success",
															"errors",
															"messages",
															"result"
														],
														"oneOf": [
															{
																"$comment": "This subschema describes successful responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			true
																		],
																		"example": true
																	},
																	"errors": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"messages": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"result": {
																		"type": [
																			"object",
																			"array",
																			"string"
																		]
																	}
																}
															},
															{
																"$comment": "This subschema describes failure responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			false
																		],
																		"example": false
																	},
																	"errors": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"minLength": 1,
																		"example": [
																			{
																				"code": 7003,
																				"message": "No route for the URI"
																			}
																		]
																	},
																	"messages": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"example": []
																	},
																	"result": {
																		"type": "null",
																		"enum": [
																			null
																		],
																		"example": null
																	}
																}
															}
														],
														"definitions": {
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														}
													},
													{
														"properties": {
															"result": {
																"type": [
																	"array",
																	"null"
																]
															},
															"result_info": {
																"type": "object",
																"properties": {
																	"page": {
																		"description": "Current page within paginated list of results",
																		"type": "number",
																		"example": 1
																	},
																	"per_page": {
																		"description": "Number of results per page of results",
																		"type": "number",
																		"example": 20
																	},
																	"count": {
																		"description": "Total results returned based on your search parameters",
																		"type": "number",
																		"example": 1
																	},
																	"total_count": {
																		"description": "Total results available without any search parameters",
																		"type": "number",
																		"example": 2000
																	}
																}
															}
														}
													}
												],
												"definitions": {
													"params": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Requested page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Maximum number of results requested",
																"type": "number",
																"example": 20
															}
														}
													},
													"result_info": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Current page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Number of results per page of results",
																"type": "number",
																"example": 20
															},
															"count": {
																"description": "Total results returned based on your search parameters",
																"type": "number",
																"example": 1
															},
															"total_count": {
																"description": "Total results available without any search parameters",
																"type": "number",
																"example": 2000
															}
														}
													}
												}
											},
											{
												"type": "object",
												"properties": {
													"result": {
														"type": "array",
														"items": {
															"cfRecurse": ""
														}
													}
												}
											}
										]
									}
								}
							}
						},
						"invited_by": {
							"description": "The email address of the user who created the invite",
							"type": "string",
							"maxLength": 90,
							"example": "user@example.com"
						},
						"invited_on": {
							"description": "When the invite was sent",
							"type": "string",
							"format": "date-time",
							"readOnly": true,
							"example": "2014-01-01T05:20:00Z"
						},
						"expires_on": {
							"description": "When the invite is no longer active",
							"type": "string",
							"format": "date-time",
							"readOnly": true,
							"example": "2014-01-01T05:20:00Z"
						}
					}
				},
				{
					"properties": {
						"organization_is_enforcing_twofactor": {
							"description": "Current status of two factor enforcement on the organization",
							"type": "boolean",
							"example": true,
							"default": false
						},
						"status": {
							"description": "Current status of the invitation",
							"type": "string",
							"enum": [
								"pending",
								"accepted",
								"rejected",
								"canceled",
								"left",
								"expired"
							],
							"example": "accepted"
						}
					}
				}
			]
		},
		{
			"allOf": [
				{
					"type": "object",
					"required": [
						"invited_member_id",
						"organization_id"
					],
					"properties": {
						"id": {
							"description": "Invite identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "4f5f0c14a2a41d5063dd301b2f829f04"
						},
						"invited_member_id": {
							"description": "Id of the user to be added to the Organization",
							"type": [
								"string",
								"null"
							],
							"maxLength": 32,
							"readOnly": true,
							"example": "5a7805061c76ada191ed06f989cc3dac"
						},
						"invited_member_email": {
							"description": "Email address of the user to be added to the Organization",
							"type": "string",
							"maxLength": 90,
							"example": "user@example.com"
						},
						"organization_id": {
							"description": "ID of the Organization the user will be added to",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "5a7805061c76ada191ed06f989cc3dac"
						},
						"organization_name": {
							"description": "Organization Name",
							"type": "string",
							"maxLength": 100,
							"readOnly": true,
							"example": "Cloudflare, Inc."
						},
						"roles": {
							"description": "Roles to be assigned to this Member",
							"type": "array",
							"items": {
								"id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
								"title": "Organization Roles",
								"$schema": "http://json-schema.org/draft-04/hyper-schema#",
								"description": "A role defines what permissions a Member of an Organization has.",
								"type": "object",
								"required": [
									"id",
									"name",
									"description",
									"permissions"
								],
								"properties": {
									"id": {
										"description": "Role identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "3536bcfad5faccb999b47003c79917fb"
									},
									"name": {
										"type": "string",
										"description": "Role Name",
										"maxLength": 120,
										"readOnly": true,
										"example": "Organization Admin"
									},
									"description": {
										"type": "string",
										"description": "Description of role's permissions",
										"readOnly": true,
										"example": "Administrative access to the entire Organization"
									},
									"permissions": {
										"type": "array",
										"description": "Access permissions for this User",
										"readOnly": true,
										"items": {
											"type": "string",
											"maxLength": 160,
											"example": "#zones:read"
										}
									}
								},
								"definitions": {
									"identifier": {
										"description": "Role identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "3536bcfad5faccb999b47003c79917fb"
									},
									"name": {
										"type": "string",
										"description": "Role Name",
										"maxLength": 120,
										"readOnly": true,
										"example": "Organization Admin"
									},
									"description": {
										"type": "string",
										"description": "Description of role's permissions",
										"readOnly": true,
										"example": "Administrative access to the entire Organization"
									},
									"permissions": {
										"type": "array",
										"description": "Access permissions for this User",
										"readOnly": true,
										"items": {
											"type": "string",
											"maxLength": 160,
											"example": "#zones:read"
										}
									},
									"organization_identifier": {
										"description": "Organization identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "01a7362d577a6c3019a474fd6f485823"
									},
									"single_role_response": {
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Schema for an API response from Cloudflare that contains a single result object",
												"type": "object",
												"allOf": [
													{
														"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
														"$schema": "http://json-schema.org/draft-04/hyper-schema#",
														"description": "Common schema for all Cloudflare v4 API responses",
														"type": "object",
														"required": [
															"success",
															"errors",
															"messages",
															"result"
														],
														"oneOf": [
															{
																"$comment": "This subschema describes successful responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			true
																		],
																		"example": true
																	},
																	"errors": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"messages": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"result": {
																		"type": [
																			"object",
																			"array",
																			"string"
																		]
																	}
																}
															},
															{
																"$comment": "This subschema describes failure responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			false
																		],
																		"example": false
																	},
																	"errors": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"minLength": 1,
																		"example": [
																			{
																				"code": 7003,
																				"message": "No route for the URI"
																			}
																		]
																	},
																	"messages": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"example": []
																	},
																	"result": {
																		"type": "null",
																		"enum": [
																			null
																		],
																		"example": null
																	}
																}
															}
														],
														"definitions": {
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														}
													},
													{
														"properties": {
															"result": {
																"type": [
																	"object",
																	"string",
																	"null"
																]
															}
														}
													}
												]
											},
											{
												"type": "object",
												"properties": {
													"result": {
														"type": "object",
														"cfRecurse": ""
													}
												}
											}
										]
									},
									"collection_role_response": {
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Schema for an API response from Cloudflare that contains multiple result objects",
												"type": "object",
												"anyOf": [
													{
														"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
														"$schema": "http://json-schema.org/draft-04/hyper-schema#",
														"description": "Common schema for all Cloudflare v4 API responses",
														"type": "object",
														"required": [
															"success",
															"errors",
															"messages",
															"result"
														],
														"oneOf": [
															{
																"$comment": "This subschema describes successful responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			true
																		],
																		"example": true
																	},
																	"errors": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"messages": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"result": {
																		"type": [
																			"object",
																			"array",
																			"string"
																		]
																	}
																}
															},
															{
																"$comment": "This subschema describes failure responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			false
																		],
																		"example": false
																	},
																	"errors": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"minLength": 1,
																		"example": [
																			{
																				"code": 7003,
																				"message": "No route for the URI"
																			}
																		]
																	},
																	"messages": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"example": []
																	},
																	"result": {
																		"type": "null",
																		"enum": [
																			null
																		],
																		"example": null
																	}
																}
															}
														],
														"definitions": {
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														}
													},
													{
														"properties": {
															"result": {
																"type": [
																	"array",
																	"null"
																]
															},
															"result_info": {
																"type": "object",
																"properties": {
																	"page": {
																		"description": "Current page within paginated list of results",
																		"type": "number",
																		"example": 1
																	},
																	"per_page": {
																		"description": "Number of results per page of results",
																		"type": "number",
																		"example": 20
																	},
																	"count": {
																		"description": "Total results returned based on your search parameters",
																		"type": "number",
																		"example": 1
																	},
																	"total_count": {
																		"description": "Total results available without any search parameters",
																		"type": "number",
																		"example": 2000
																	}
																}
															}
														}
													}
												],
												"definitions": {
													"params": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Requested page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Maximum number of results requested",
																"type": "number",
																"example": 20
															}
														}
													},
													"result_info": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Current page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Number of results per page of results",
																"type": "number",
																"example": 20
															},
															"count": {
																"description": "Total results returned based on your search parameters",
																"type": "number",
																"example": 1
															},
															"total_count": {
																"description": "Total results available without any search parameters",
																"type": "number",
																"example": 2000
															}
														}
													}
												}
											},
											{
												"type": "object",
												"properties": {
													"result": {
														"type": "array",
														"items": {
															"cfRecurse": ""
														}
													}
												}
											}
										]
									}
								}
							}
						},
						"invited_by": {
							"description": "The email address of the user who created the invite",
							"type": "string",
							"maxLength": 90,
							"example": "user@example.com"
						},
						"invited_on": {
							"description": "When the invite was sent",
							"type": "string",
							"format": "date-time",
							"readOnly": true,
							"example": "2014-01-01T05:20:00Z"
						},
						"expires_on": {
							"description": "When the invite is no longer active",
							"type": "string",
							"format": "date-time",
							"readOnly": true,
							"example": "2014-01-01T05:20:00Z"
						}
					}
				},
				{
					"properties": {
						"status": {
							"description": "Current status of the invitation",
							"enum": [
								"pending",
								"accepted",
								"rejected",
								"expired"
							],
							"example": "accepted"
						}
					}
				}
			]
		}
	],
	"definitions": {
		"identifier": {
			"description": "Invite identifier tag",
			"type": "string",
			"maxLength": 32,
			"readOnly": true,
			"example": "4f5f0c14a2a41d5063dd301b2f829f04"
		},
		"invited_by": {
			"description": "The email address of the user who created the invite",
			"type": "string",
			"maxLength": 90,
			"example": "user@example.com"
		},
		"invited_on": {
			"description": "When the invite was sent",
			"type": "string",
			"format": "date-time",
			"readOnly": true,
			"example": "2014-01-01T05:20:00Z"
		},
		"expires_on": {
			"description": "When the invite is no longer active",
			"type": "string",
			"format": "date-time",
			"readOnly": true,
			"example": "2014-01-01T05:20:00Z"
		},
		"invited_member_email": {
			"description": "Email address of the user to be added to the Organization",
			"type": "string",
			"maxLength": 90,
			"example": "user@example.com"
		},
		"base": {
			"type": "object",
			"required": [
				"invited_member_id",
				"organization_id"
			],
			"properties": {
				"id": {
					"description": "Invite identifier tag",
					"type": "string",
					"maxLength": 32,
					"readOnly": true,
					"example": "4f5f0c14a2a41d5063dd301b2f829f04"
				},
				"invited_member_id": {
					"description": "Id of the user to be added to the Organization",
					"type": [
						"string",
						"null"
					],
					"maxLength": 32,
					"readOnly": true,
					"example": "5a7805061c76ada191ed06f989cc3dac"
				},
				"invited_member_email": {
					"description": "Email address of the user to be added to the Organization",
					"type": "string",
					"maxLength": 90,
					"example": "user@example.com"
				},
				"organization_id": {
					"description": "ID of the Organization the user will be added to",
					"type": "string",
					"maxLength": 32,
					"readOnly": true,
					"example": "5a7805061c76ada191ed06f989cc3dac"
				},
				"organization_name": {
					"description": "Organization Name",
					"type": "string",
					"maxLength": 100,
					"readOnly": true,
					"example": "Cloudflare, Inc."
				},
				"roles": {
					"description": "Roles to be assigned to this Member",
					"type": "array",
					"items": {
						"id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
						"title": "Organization Roles",
						"$schema": "http://json-schema.org/draft-04/hyper-schema#",
						"description": "A role defines what permissions a Member of an Organization has.",
						"type": "object",
						"required": [
							"id",
							"name",
							"description",
							"permissions"
						],
						"properties": {
							"id": {
								"description": "Role identifier tag",
								"type": "string",
								"maxLength": 32,
								"readOnly": true,
								"example": "3536bcfad5faccb999b47003c79917fb"
							},
							"name": {
								"type": "string",
								"description": "Role Name",
								"maxLength": 120,
								"readOnly": true,
								"example": "Organization Admin"
							},
							"description": {
								"type": "string",
								"description": "Description of role's permissions",
								"readOnly": true,
								"example": "Administrative access to the entire Organization"
							},
							"permissions": {
								"type": "array",
								"description": "Access permissions for this User",
								"readOnly": true,
								"items": {
									"type": "string",
									"maxLength": 160,
									"example": "#zones:read"
								}
							}
						},
						"definitions": {
							"identifier": {
								"description": "Role identifier tag",
								"type": "string",
								"maxLength": 32,
								"readOnly": true,
								"example": "3536bcfad5faccb999b47003c79917fb"
							},
							"name": {
								"type": "string",
								"description": "Role Name",
								"maxLength": 120,
								"readOnly": true,
								"example": "Organization Admin"
							},
							"description": {
								"type": "string",
								"description": "Description of role's permissions",
								"readOnly": true,
								"example": "Administrative access to the entire Organization"
							},
							"permissions": {
								"type": "array",
								"description": "Access permissions for this User",
								"readOnly": true,
								"items": {
									"type": "string",
									"maxLength": 160,
									"example": "#zones:read"
								}
							},
							"organization_identifier": {
								"description": "Organization identifier tag",
								"type": "string",
								"maxLength": 32,
								"readOnly": true,
								"example": "01a7362d577a6c3019a474fd6f485823"
							},
							"single_role_response": {
								"allOf": [
									{
										"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
										"$schema": "http://json-schema.org/draft-04/hyper-schema#",
										"description": "Schema for an API response from Cloudflare that contains a single result object",
										"type": "object",
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Common schema for all Cloudflare v4 API responses",
												"type": "object",
												"required": [
													"success",
													"errors",
													"messages",
													"result"
												],
												"oneOf": [
													{
														"$comment": "This subschema describes successful responses",
														"properties": {
															"success": {
																"description": "Whether the API call was successful or not",
																"type": "boolean",
																"enum": [
																	true
																],
																"example": true
															},
															"errors": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															},
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															},
															"result": {
																"type": [
																	"object",
																	"array",
																	"string"
																]
															}
														}
													},
													{
														"$comment": "This subschema describes failure responses",
														"properties": {
															"success": {
																"description": "Whether the API call was successful or not",
																"type": "boolean",
																"enum": [
																	false
																],
																"example": false
															},
															"errors": {
																"allOf": [
																	{
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	}
																],
																"minLength": 1,
																"example": [
																	{
																		"code": 7003,
																		"message": "No route for the URI"
																	}
																]
															},
															"messages": {
																"allOf": [
																	{
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	}
																],
																"example": []
															},
															"result": {
																"type": "null",
																"enum": [
																	null
																],
																"example": null
															}
														}
													}
												],
												"definitions": {
													"messages": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													}
												}
											},
											{
												"properties": {
													"result": {
														"type": [
															"object",
															"string",
															"null"
														]
													}
												}
											}
										]
									},
									{
										"type": "object",
										"properties": {
											"result": {
												"type": "object",
												"cfRecurse": ""
											}
										}
									}
								]
							},
							"collection_role_response": {
								"allOf": [
									{
										"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
										"$schema": "http://json-schema.org/draft-04/hyper-schema#",
										"description": "Schema for an API response from Cloudflare that contains multiple result objects",
										"type": "object",
										"anyOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Common schema for all Cloudflare v4 API responses",
												"type": "object",
												"required": [
													"success",
													"errors",
													"messages",
													"result"
												],
												"oneOf": [
													{
														"$comment": "This subschema describes successful responses",
														"properties": {
															"success": {
																"description": "Whether the API call was successful or not",
																"type": "boolean",
																"enum": [
																	true
																],
																"example": true
															},
															"errors": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															},
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															},
															"result": {
																"type": [
																	"object",
																	"array",
																	"string"
																]
															}
														}
													},
													{
														"$comment": "This subschema describes failure responses",
														"properties": {
															"success": {
																"description": "Whether the API call was successful or not",
																"type": "boolean",
																"enum": [
																	false
																],
																"example": false
															},
															"errors": {
																"allOf": [
																	{
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	}
																],
																"minLength": 1,
																"example": [
																	{
																		"code": 7003,
																		"message": "No route for the URI"
																	}
																]
															},
															"messages": {
																"allOf": [
																	{
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	}
																],
																"example": []
															},
															"result": {
																"type": "null",
																"enum": [
																	null
																],
																"example": null
															}
														}
													}
												],
												"definitions": {
													"messages": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													}
												}
											},
											{
												"properties": {
													"result": {
														"type": [
															"array",
															"null"
														]
													},
													"result_info": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Current page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Number of results per page of results",
																"type": "number",
																"example": 20
															},
															"count": {
																"description": "Total results returned based on your search parameters",
																"type": "number",
																"example": 1
															},
															"total_count": {
																"description": "Total results available without any search parameters",
																"type": "number",
																"example": 2000
															}
														}
													}
												}
											}
										],
										"definitions": {
											"params": {
												"type": "object",
												"properties": {
													"page": {
														"description": "Requested page within paginated list of results",
														"type": "number",
														"example": 1
													},
													"per_page": {
														"description": "Maximum number of results requested",
														"type": "number",
														"example": 20
													}
												}
											},
											"result_info": {
												"type": "object",
												"properties": {
													"page": {
														"description": "Current page within paginated list of results",
														"type": "number",
														"example": 1
													},
													"per_page": {
														"description": "Number of results per page of results",
														"type": "number",
														"example": 20
													},
													"count": {
														"description": "Total results returned based on your search parameters",
														"type": "number",
														"example": 1
													},
													"total_count": {
														"description": "Total results available without any search parameters",
														"type": "number",
														"example": 2000
													}
												}
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"result": {
												"type": "array",
												"items": {
													"cfRecurse": ""
												}
											}
										}
									}
								]
							}
						}
					}
				},
				"invited_by": {
					"description": "The email address of the user who created the invite",
					"type": "string",
					"maxLength": 90,
					"example": "user@example.com"
				},
				"invited_on": {
					"description": "When the invite was sent",
					"type": "string",
					"format": "date-time",
					"readOnly": true,
					"example": "2014-01-01T05:20:00Z"
				},
				"expires_on": {
					"description": "When the invite is no longer active",
					"type": "string",
					"format": "date-time",
					"readOnly": true,
					"example": "2014-01-01T05:20:00Z"
				}
			}
		},
		"organization_invite": {
			"allOf": [
				{
					"type": "object",
					"required": [
						"invited_member_id",
						"organization_id"
					],
					"properties": {
						"id": {
							"description": "Invite identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "4f5f0c14a2a41d5063dd301b2f829f04"
						},
						"invited_member_id": {
							"description": "Id of the user to be added to the Organization",
							"type": [
								"string",
								"null"
							],
							"maxLength": 32,
							"readOnly": true,
							"example": "5a7805061c76ada191ed06f989cc3dac"
						},
						"invited_member_email": {
							"description": "Email address of the user to be added to the Organization",
							"type": "string",
							"maxLength": 90,
							"example": "user@example.com"
						},
						"organization_id": {
							"description": "ID of the Organization the user will be added to",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "5a7805061c76ada191ed06f989cc3dac"
						},
						"organization_name": {
							"description": "Organization Name",
							"type": "string",
							"maxLength": 100,
							"readOnly": true,
							"example": "Cloudflare, Inc."
						},
						"roles": {
							"description": "Roles to be assigned to this Member",
							"type": "array",
							"items": {
								"id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
								"title": "Organization Roles",
								"$schema": "http://json-schema.org/draft-04/hyper-schema#",
								"description": "A role defines what permissions a Member of an Organization has.",
								"type": "object",
								"required": [
									"id",
									"name",
									"description",
									"permissions"
								],
								"properties": {
									"id": {
										"description": "Role identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "3536bcfad5faccb999b47003c79917fb"
									},
									"name": {
										"type": "string",
										"description": "Role Name",
										"maxLength": 120,
										"readOnly": true,
										"example": "Organization Admin"
									},
									"description": {
										"type": "string",
										"description": "Description of role's permissions",
										"readOnly": true,
										"example": "Administrative access to the entire Organization"
									},
									"permissions": {
										"type": "array",
										"description": "Access permissions for this User",
										"readOnly": true,
										"items": {
											"type": "string",
											"maxLength": 160,
											"example": "#zones:read"
										}
									}
								},
								"definitions": {
									"identifier": {
										"description": "Role identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "3536bcfad5faccb999b47003c79917fb"
									},
									"name": {
										"type": "string",
										"description": "Role Name",
										"maxLength": 120,
										"readOnly": true,
										"example": "Organization Admin"
									},
									"description": {
										"type": "string",
										"description": "Description of role's permissions",
										"readOnly": true,
										"example": "Administrative access to the entire Organization"
									},
									"permissions": {
										"type": "array",
										"description": "Access permissions for this User",
										"readOnly": true,
										"items": {
											"type": "string",
											"maxLength": 160,
											"example": "#zones:read"
										}
									},
									"organization_identifier": {
										"description": "Organization identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "01a7362d577a6c3019a474fd6f485823"
									},
									"single_role_response": {
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Schema for an API response from Cloudflare that contains a single result object",
												"type": "object",
												"allOf": [
													{
														"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
														"$schema": "http://json-schema.org/draft-04/hyper-schema#",
														"description": "Common schema for all Cloudflare v4 API responses",
														"type": "object",
														"required": [
															"success",
															"errors",
															"messages",
															"result"
														],
														"oneOf": [
															{
																"$comment": "This subschema describes successful responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			true
																		],
																		"example": true
																	},
																	"errors": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"messages": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"result": {
																		"type": [
																			"object",
																			"array",
																			"string"
																		]
																	}
																}
															},
															{
																"$comment": "This subschema describes failure responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			false
																		],
																		"example": false
																	},
																	"errors": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"minLength": 1,
																		"example": [
																			{
																				"code": 7003,
																				"message": "No route for the URI"
																			}
																		]
																	},
																	"messages": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"example": []
																	},
																	"result": {
																		"type": "null",
																		"enum": [
																			null
																		],
																		"example": null
																	}
																}
															}
														],
														"definitions": {
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														}
													},
													{
														"properties": {
															"result": {
																"type": [
																	"object",
																	"string",
																	"null"
																]
															}
														}
													}
												]
											},
											{
												"type": "object",
												"properties": {
													"result": {
														"type": "object",
														"cfRecurse": ""
													}
												}
											}
										]
									},
									"collection_role_response": {
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Schema for an API response from Cloudflare that contains multiple result objects",
												"type": "object",
												"anyOf": [
													{
														"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
														"$schema": "http://json-schema.org/draft-04/hyper-schema#",
														"description": "Common schema for all Cloudflare v4 API responses",
														"type": "object",
														"required": [
															"success",
															"errors",
															"messages",
															"result"
														],
														"oneOf": [
															{
																"$comment": "This subschema describes successful responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			true
																		],
																		"example": true
																	},
																	"errors": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"messages": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"result": {
																		"type": [
																			"object",
																			"array",
																			"string"
																		]
																	}
																}
															},
															{
																"$comment": "This subschema describes failure responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			false
																		],
																		"example": false
																	},
																	"errors": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"minLength": 1,
																		"example": [
																			{
																				"code": 7003,
																				"message": "No route for the URI"
																			}
																		]
																	},
																	"messages": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"example": []
																	},
																	"result": {
																		"type": "null",
																		"enum": [
																			null
																		],
																		"example": null
																	}
																}
															}
														],
														"definitions": {
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														}
													},
													{
														"properties": {
															"result": {
																"type": [
																	"array",
																	"null"
																]
															},
															"result_info": {
																"type": "object",
																"properties": {
																	"page": {
																		"description": "Current page within paginated list of results",
																		"type": "number",
																		"example": 1
																	},
																	"per_page": {
																		"description": "Number of results per page of results",
																		"type": "number",
																		"example": 20
																	},
																	"count": {
																		"description": "Total results returned based on your search parameters",
																		"type": "number",
																		"example": 1
																	},
																	"total_count": {
																		"description": "Total results available without any search parameters",
																		"type": "number",
																		"example": 2000
																	}
																}
															}
														}
													}
												],
												"definitions": {
													"params": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Requested page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Maximum number of results requested",
																"type": "number",
																"example": 20
															}
														}
													},
													"result_info": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Current page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Number of results per page of results",
																"type": "number",
																"example": 20
															},
															"count": {
																"description": "Total results returned based on your search parameters",
																"type": "number",
																"example": 1
															},
															"total_count": {
																"description": "Total results available without any search parameters",
																"type": "number",
																"example": 2000
															}
														}
													}
												}
											},
											{
												"type": "object",
												"properties": {
													"result": {
														"type": "array",
														"items": {
															"cfRecurse": ""
														}
													}
												}
											}
										]
									}
								}
							}
						},
						"invited_by": {
							"description": "The email address of the user who created the invite",
							"type": "string",
							"maxLength": 90,
							"example": "user@example.com"
						},
						"invited_on": {
							"description": "When the invite was sent",
							"type": "string",
							"format": "date-time",
							"readOnly": true,
							"example": "2014-01-01T05:20:00Z"
						},
						"expires_on": {
							"description": "When the invite is no longer active",
							"type": "string",
							"format": "date-time",
							"readOnly": true,
							"example": "2014-01-01T05:20:00Z"
						}
					}
				},
				{
					"properties": {
						"organization_is_enforcing_twofactor": {
							"description": "Current status of two factor enforcement on the organization",
							"type": "boolean",
							"example": true,
							"default": false
						},
						"status": {
							"description": "Current status of the invitation",
							"type": "string",
							"enum": [
								"pending",
								"accepted",
								"rejected",
								"canceled",
								"left",
								"expired"
							],
							"example": "accepted"
						}
					}
				}
			]
		},
		"user_invite": {
			"allOf": [
				{
					"type": "object",
					"required": [
						"invited_member_id",
						"organization_id"
					],
					"properties": {
						"id": {
							"description": "Invite identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "4f5f0c14a2a41d5063dd301b2f829f04"
						},
						"invited_member_id": {
							"description": "Id of the user to be added to the Organization",
							"type": [
								"string",
								"null"
							],
							"maxLength": 32,
							"readOnly": true,
							"example": "5a7805061c76ada191ed06f989cc3dac"
						},
						"invited_member_email": {
							"description": "Email address of the user to be added to the Organization",
							"type": "string",
							"maxLength": 90,
							"example": "user@example.com"
						},
						"organization_id": {
							"description": "ID of the Organization the user will be added to",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "5a7805061c76ada191ed06f989cc3dac"
						},
						"organization_name": {
							"description": "Organization Name",
							"type": "string",
							"maxLength": 100,
							"readOnly": true,
							"example": "Cloudflare, Inc."
						},
						"roles": {
							"description": "Roles to be assigned to this Member",
							"type": "array",
							"items": {
								"id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
								"title": "Organization Roles",
								"$schema": "http://json-schema.org/draft-04/hyper-schema#",
								"description": "A role defines what permissions a Member of an Organization has.",
								"type": "object",
								"required": [
									"id",
									"name",
									"description",
									"permissions"
								],
								"properties": {
									"id": {
										"description": "Role identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "3536bcfad5faccb999b47003c79917fb"
									},
									"name": {
										"type": "string",
										"description": "Role Name",
										"maxLength": 120,
										"readOnly": true,
										"example": "Organization Admin"
									},
									"description": {
										"type": "string",
										"description": "Description of role's permissions",
										"readOnly": true,
										"example": "Administrative access to the entire Organization"
									},
									"permissions": {
										"type": "array",
										"description": "Access permissions for this User",
										"readOnly": true,
										"items": {
											"type": "string",
											"maxLength": 160,
											"example": "#zones:read"
										}
									}
								},
								"definitions": {
									"identifier": {
										"description": "Role identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "3536bcfad5faccb999b47003c79917fb"
									},
									"name": {
										"type": "string",
										"description": "Role Name",
										"maxLength": 120,
										"readOnly": true,
										"example": "Organization Admin"
									},
									"description": {
										"type": "string",
										"description": "Description of role's permissions",
										"readOnly": true,
										"example": "Administrative access to the entire Organization"
									},
									"permissions": {
										"type": "array",
										"description": "Access permissions for this User",
										"readOnly": true,
										"items": {
											"type": "string",
											"maxLength": 160,
											"example": "#zones:read"
										}
									},
									"organization_identifier": {
										"description": "Organization identifier tag",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "01a7362d577a6c3019a474fd6f485823"
									},
									"single_role_response": {
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Schema for an API response from Cloudflare that contains a single result object",
												"type": "object",
												"allOf": [
													{
														"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
														"$schema": "http://json-schema.org/draft-04/hyper-schema#",
														"description": "Common schema for all Cloudflare v4 API responses",
														"type": "object",
														"required": [
															"success",
															"errors",
															"messages",
															"result"
														],
														"oneOf": [
															{
																"$comment": "This subschema describes successful responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			true
																		],
																		"example": true
																	},
																	"errors": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"messages": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"result": {
																		"type": [
																			"object",
																			"array",
																			"string"
																		]
																	}
																}
															},
															{
																"$comment": "This subschema describes failure responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			false
																		],
																		"example": false
																	},
																	"errors": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"minLength": 1,
																		"example": [
																			{
																				"code": 7003,
																				"message": "No route for the URI"
																			}
																		]
																	},
																	"messages": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"example": []
																	},
																	"result": {
																		"type": "null",
																		"enum": [
																			null
																		],
																		"example": null
																	}
																}
															}
														],
														"definitions": {
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														}
													},
													{
														"properties": {
															"result": {
																"type": [
																	"object",
																	"string",
																	"null"
																]
															}
														}
													}
												]
											},
											{
												"type": "object",
												"properties": {
													"result": {
														"type": "object",
														"cfRecurse": ""
													}
												}
											}
										]
									},
									"collection_role_response": {
										"allOf": [
											{
												"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
												"$schema": "http://json-schema.org/draft-04/hyper-schema#",
												"description": "Schema for an API response from Cloudflare that contains multiple result objects",
												"type": "object",
												"anyOf": [
													{
														"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
														"$schema": "http://json-schema.org/draft-04/hyper-schema#",
														"description": "Common schema for all Cloudflare v4 API responses",
														"type": "object",
														"required": [
															"success",
															"errors",
															"messages",
															"result"
														],
														"oneOf": [
															{
																"$comment": "This subschema describes successful responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			true
																		],
																		"example": true
																	},
																	"errors": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"messages": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"required": [
																				"code",
																				"message"
																			],
																			"properties": {
																				"code": {
																					"type": "integer",
																					"minimum": 1000
																				},
																				"message": {
																					"type": "string"
																				}
																			},
																			"uniqueItems": true
																		},
																		"example": []
																	},
																	"result": {
																		"type": [
																			"object",
																			"array",
																			"string"
																		]
																	}
																}
															},
															{
																"$comment": "This subschema describes failure responses",
																"properties": {
																	"success": {
																		"description": "Whether the API call was successful or not",
																		"type": "boolean",
																		"enum": [
																			false
																		],
																		"example": false
																	},
																	"errors": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"minLength": 1,
																		"example": [
																			{
																				"code": 7003,
																				"message": "No route for the URI"
																			}
																		]
																	},
																	"messages": {
																		"allOf": [
																			{
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"code",
																						"message"
																					],
																					"properties": {
																						"code": {
																							"type": "integer",
																							"minimum": 1000
																						},
																						"message": {
																							"type": "string"
																						}
																					},
																					"uniqueItems": true
																				},
																				"example": []
																			}
																		],
																		"example": []
																	},
																	"result": {
																		"type": "null",
																		"enum": [
																			null
																		],
																		"example": null
																	}
																}
															}
														],
														"definitions": {
															"messages": {
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														}
													},
													{
														"properties": {
															"result": {
																"type": [
																	"array",
																	"null"
																]
															},
															"result_info": {
																"type": "object",
																"properties": {
																	"page": {
																		"description": "Current page within paginated list of results",
																		"type": "number",
																		"example": 1
																	},
																	"per_page": {
																		"description": "Number of results per page of results",
																		"type": "number",
																		"example": 20
																	},
																	"count": {
																		"description": "Total results returned based on your search parameters",
																		"type": "number",
																		"example": 1
																	},
																	"total_count": {
																		"description": "Total results available without any search parameters",
																		"type": "number",
																		"example": 2000
																	}
																}
															}
														}
													}
												],
												"definitions": {
													"params": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Requested page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Maximum number of results requested",
																"type": "number",
																"example": 20
															}
														}
													},
													"result_info": {
														"type": "object",
														"properties": {
															"page": {
																"description": "Current page within paginated list of results",
																"type": "number",
																"example": 1
															},
															"per_page": {
																"description": "Number of results per page of results",
																"type": "number",
																"example": 20
															},
															"count": {
																"description": "Total results returned based on your search parameters",
																"type": "number",
																"example": 1
															},
															"total_count": {
																"description": "Total results available without any search parameters",
																"type": "number",
																"example": 2000
															}
														}
													}
												}
											},
											{
												"type": "object",
												"properties": {
													"result": {
														"type": "array",
														"items": {
															"cfRecurse": ""
														}
													}
												}
											}
										]
									}
								}
							}
						},
						"invited_by": {
							"description": "The email address of the user who created the invite",
							"type": "string",
							"maxLength": 90,
							"example": "user@example.com"
						},
						"invited_on": {
							"description": "When the invite was sent",
							"type": "string",
							"format": "date-time",
							"readOnly": true,
							"example": "2014-01-01T05:20:00Z"
						},
						"expires_on": {
							"description": "When the invite is no longer active",
							"type": "string",
							"format": "date-time",
							"readOnly": true,
							"example": "2014-01-01T05:20:00Z"
						}
					}
				},
				{
					"properties": {
						"status": {
							"description": "Current status of the invitation",
							"enum": [
								"pending",
								"accepted",
								"rejected",
								"expired"
							],
							"example": "accepted"
						}
					}
				}
			]
		}
	}
}