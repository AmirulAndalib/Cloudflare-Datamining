{
	"id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/member.json",
	"title": "Organization Members",
	"$schema": "http://json-schema.org/draft-04/hyper-schema#",
	"description": "A member is the association of a Cloudflare user with an Organization.",
	"type": "object",
	"required": [
		"id",
		"name",
		"email",
		"status",
		"roles"
	],
	"properties": {
		"id": {
			"description": "The unique identifier of the user.",
			"type": "string",
			"maxLength": 32,
			"readOnly": true,
			"example": "7c5dae5552338874e5053f2534d2767a"
		},
		"name": {
			"type": [
				"string",
				"null"
			],
			"description": "Member Name",
			"maxLength": 100,
			"example": "John Smith"
		},
		"email": {
			"description": "The contact email address of the user.",
			"type": "string",
			"maxLength": 90,
			"example": "user@example.com"
		},
		"status": {
			"enum": [
				"accepted",
				"invited"
			],
			"description": "A member's status in the organization.",
			"example": "accepted"
		},
		"roles": {
			"type": "array",
			"description": "Roles assigned to this Member",
			"items": {
				"id": "https://api.cloudflare.com/schemas/v4/client/definitions/organization/role.json",
				"title": "Organization Roles",
				"$schema": "http://json-schema.org/draft-04/hyper-schema#",
				"description": "A role defines what permissions a Member of an Organization has.",
				"type": "object",
				"required": [
					"id",
					"name",
					"description",
					"permissions"
				],
				"properties": {
					"id": {
						"description": "Role identifier tag",
						"type": "string",
						"maxLength": 32,
						"readOnly": true,
						"example": "3536bcfad5faccb999b47003c79917fb"
					},
					"name": {
						"type": "string",
						"description": "Role Name",
						"maxLength": 120,
						"readOnly": true,
						"example": "Organization Admin"
					},
					"description": {
						"type": "string",
						"description": "Description of role's permissions",
						"readOnly": true,
						"example": "Administrative access to the entire Organization"
					},
					"permissions": {
						"type": "array",
						"description": "Access permissions for this User",
						"readOnly": true,
						"items": {
							"type": "string",
							"maxLength": 160,
							"example": "#zones:read"
						}
					}
				},
				"definitions": {
					"identifier": {
						"description": "Role identifier tag",
						"type": "string",
						"maxLength": 32,
						"readOnly": true,
						"example": "3536bcfad5faccb999b47003c79917fb"
					},
					"name": {
						"type": "string",
						"description": "Role Name",
						"maxLength": 120,
						"readOnly": true,
						"example": "Organization Admin"
					},
					"description": {
						"type": "string",
						"description": "Description of role's permissions",
						"readOnly": true,
						"example": "Administrative access to the entire Organization"
					},
					"permissions": {
						"type": "array",
						"description": "Access permissions for this User",
						"readOnly": true,
						"items": {
							"type": "string",
							"maxLength": 160,
							"example": "#zones:read"
						}
					},
					"organization_identifier": {
						"description": "Organization identifier tag",
						"type": "string",
						"maxLength": 32,
						"readOnly": true,
						"example": "01a7362d577a6c3019a474fd6f485823"
					},
					"single_role_response": {
						"allOf": [
							{
								"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
								"$schema": "http://json-schema.org/draft-04/hyper-schema#",
								"description": "Schema for an API response from Cloudflare that contains a single result object",
								"type": "object",
								"allOf": [
									{
										"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
										"$schema": "http://json-schema.org/draft-04/hyper-schema#",
										"description": "Common schema for all Cloudflare v4 API responses",
										"type": "object",
										"required": [
											"success",
											"errors",
											"messages",
											"result"
										],
										"oneOf": [
											{
												"$comment": "This subschema describes successful responses",
												"properties": {
													"success": {
														"description": "Whether the API call was successful or not",
														"type": "boolean",
														"enum": [
															true
														],
														"example": true
													},
													"errors": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													},
													"messages": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													},
													"result": {
														"type": [
															"object",
															"array",
															"string"
														]
													}
												}
											},
											{
												"$comment": "This subschema describes failure responses",
												"properties": {
													"success": {
														"description": "Whether the API call was successful or not",
														"type": "boolean",
														"enum": [
															false
														],
														"example": false
													},
													"errors": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														],
														"minLength": 1,
														"example": [
															{
																"code": 7003,
																"message": "No route for the URI"
															}
														]
													},
													"messages": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														],
														"example": []
													},
													"result": {
														"type": "null",
														"enum": [
															null
														],
														"example": null
													}
												}
											}
										],
										"definitions": {
											"messages": {
												"type": "array",
												"items": {
													"type": "object",
													"required": [
														"code",
														"message"
													],
													"properties": {
														"code": {
															"type": "integer",
															"minimum": 1000
														},
														"message": {
															"type": "string"
														}
													},
													"uniqueItems": true
												},
												"example": []
											}
										}
									},
									{
										"properties": {
											"result": {
												"type": [
													"object",
													"string",
													"null"
												]
											}
										}
									}
								]
							},
							{
								"type": "object",
								"properties": {
									"result": {
										"type": "object",
										"cfRecurse": ""
									}
								}
							}
						]
					},
					"collection_role_response": {
						"allOf": [
							{
								"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
								"$schema": "http://json-schema.org/draft-04/hyper-schema#",
								"description": "Schema for an API response from Cloudflare that contains multiple result objects",
								"type": "object",
								"anyOf": [
									{
										"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
										"$schema": "http://json-schema.org/draft-04/hyper-schema#",
										"description": "Common schema for all Cloudflare v4 API responses",
										"type": "object",
										"required": [
											"success",
											"errors",
											"messages",
											"result"
										],
										"oneOf": [
											{
												"$comment": "This subschema describes successful responses",
												"properties": {
													"success": {
														"description": "Whether the API call was successful or not",
														"type": "boolean",
														"enum": [
															true
														],
														"example": true
													},
													"errors": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													},
													"messages": {
														"type": "array",
														"items": {
															"type": "object",
															"required": [
																"code",
																"message"
															],
															"properties": {
																"code": {
																	"type": "integer",
																	"minimum": 1000
																},
																"message": {
																	"type": "string"
																}
															},
															"uniqueItems": true
														},
														"example": []
													},
													"result": {
														"type": [
															"object",
															"array",
															"string"
														]
													}
												}
											},
											{
												"$comment": "This subschema describes failure responses",
												"properties": {
													"success": {
														"description": "Whether the API call was successful or not",
														"type": "boolean",
														"enum": [
															false
														],
														"example": false
													},
													"errors": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														],
														"minLength": 1,
														"example": [
															{
																"code": 7003,
																"message": "No route for the URI"
															}
														]
													},
													"messages": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"type": "object",
																	"required": [
																		"code",
																		"message"
																	],
																	"properties": {
																		"code": {
																			"type": "integer",
																			"minimum": 1000
																		},
																		"message": {
																			"type": "string"
																		}
																	},
																	"uniqueItems": true
																},
																"example": []
															}
														],
														"example": []
													},
													"result": {
														"type": "null",
														"enum": [
															null
														],
														"example": null
													}
												}
											}
										],
										"definitions": {
											"messages": {
												"type": "array",
												"items": {
													"type": "object",
													"required": [
														"code",
														"message"
													],
													"properties": {
														"code": {
															"type": "integer",
															"minimum": 1000
														},
														"message": {
															"type": "string"
														}
													},
													"uniqueItems": true
												},
												"example": []
											}
										}
									},
									{
										"properties": {
											"result": {
												"type": [
													"array",
													"null"
												]
											},
											"result_info": {
												"type": "object",
												"properties": {
													"page": {
														"description": "Current page within paginated list of results",
														"type": "number",
														"example": 1
													},
													"per_page": {
														"description": "Number of results per page of results",
														"type": "number",
														"example": 20
													},
													"count": {
														"description": "Total results returned based on your search parameters",
														"type": "number",
														"example": 1
													},
													"total_count": {
														"description": "Total results available without any search parameters",
														"type": "number",
														"example": 2000
													}
												}
											}
										}
									}
								],
								"definitions": {
									"params": {
										"type": "object",
										"properties": {
											"page": {
												"description": "Requested page within paginated list of results",
												"type": "number",
												"example": 1
											},
											"per_page": {
												"description": "Maximum number of results requested",
												"type": "number",
												"example": 20
											}
										}
									},
									"result_info": {
										"type": "object",
										"properties": {
											"page": {
												"description": "Current page within paginated list of results",
												"type": "number",
												"example": 1
											},
											"per_page": {
												"description": "Number of results per page of results",
												"type": "number",
												"example": 20
											},
											"count": {
												"description": "Total results returned based on your search parameters",
												"type": "number",
												"example": 1
											},
											"total_count": {
												"description": "Total results available without any search parameters",
												"type": "number",
												"example": 2000
											}
										}
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"result": {
										"type": "array",
										"items": {
											"cfRecurse": ""
										}
									}
								}
							}
						]
					}
				}
			}
		}
	},
	"definitions": {
		"name": {
			"type": [
				"string",
				"null"
			],
			"description": "Member Name",
			"maxLength": 100,
			"example": "John Smith"
		},
		"organization_identifier": {
			"description": "Organization identifier tag",
			"type": "string",
			"maxLength": 32,
			"readOnly": true,
			"example": "01a7362d577a6c3019a474fd6f485823"
		},
		"identifier": {
			"description": "The unique identifier of the user.",
			"type": "string",
			"maxLength": 32,
			"readOnly": true,
			"example": "7c5dae5552338874e5053f2534d2767a"
		},
		"single_member_response": {
			"allOf": [
				{
					"id": "https://api.cloudflare.com/schemas/v4/common/api-response-single.json",
					"$schema": "http://json-schema.org/draft-04/hyper-schema#",
					"description": "Schema for an API response from Cloudflare that contains a single result object",
					"type": "object",
					"allOf": [
						{
							"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
							"$schema": "http://json-schema.org/draft-04/hyper-schema#",
							"description": "Common schema for all Cloudflare v4 API responses",
							"type": "object",
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"oneOf": [
								{
									"$comment": "This subschema describes successful responses",
									"properties": {
										"success": {
											"description": "Whether the API call was successful or not",
											"type": "boolean",
											"enum": [
												true
											],
											"example": true
										},
										"errors": {
											"type": "array",
											"items": {
												"type": "object",
												"required": [
													"code",
													"message"
												],
												"properties": {
													"code": {
														"type": "integer",
														"minimum": 1000
													},
													"message": {
														"type": "string"
													}
												},
												"uniqueItems": true
											},
											"example": []
										},
										"messages": {
											"type": "array",
											"items": {
												"type": "object",
												"required": [
													"code",
													"message"
												],
												"properties": {
													"code": {
														"type": "integer",
														"minimum": 1000
													},
													"message": {
														"type": "string"
													}
												},
												"uniqueItems": true
											},
											"example": []
										},
										"result": {
											"type": [
												"object",
												"array",
												"string"
											]
										}
									}
								},
								{
									"$comment": "This subschema describes failure responses",
									"properties": {
										"success": {
											"description": "Whether the API call was successful or not",
											"type": "boolean",
											"enum": [
												false
											],
											"example": false
										},
										"errors": {
											"allOf": [
												{
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											],
											"minLength": 1,
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											]
										},
										"messages": {
											"allOf": [
												{
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											],
											"example": []
										},
										"result": {
											"type": "null",
											"enum": [
												null
											],
											"example": null
										}
									}
								}
							],
							"definitions": {
								"messages": {
									"type": "array",
									"items": {
										"type": "object",
										"required": [
											"code",
											"message"
										],
										"properties": {
											"code": {
												"type": "integer",
												"minimum": 1000
											},
											"message": {
												"type": "string"
											}
										},
										"uniqueItems": true
									},
									"example": []
								}
							}
						},
						{
							"properties": {
								"result": {
									"type": [
										"object",
										"string",
										"null"
									]
								}
							}
						}
					]
				},
				{
					"type": "object",
					"properties": {
						"result": {
							"type": "object",
							"cfRecurse": ""
						}
					}
				}
			]
		},
		"collection_member_response": {
			"allOf": [
				{
					"id": "https://api.cloudflare.com/schemas/v4/common/api-response-collection.json",
					"$schema": "http://json-schema.org/draft-04/hyper-schema#",
					"description": "Schema for an API response from Cloudflare that contains multiple result objects",
					"type": "object",
					"anyOf": [
						{
							"id": "https://api.cloudflare.com/schemas/v4/common/api-response-common.json",
							"$schema": "http://json-schema.org/draft-04/hyper-schema#",
							"description": "Common schema for all Cloudflare v4 API responses",
							"type": "object",
							"required": [
								"success",
								"errors",
								"messages",
								"result"
							],
							"oneOf": [
								{
									"$comment": "This subschema describes successful responses",
									"properties": {
										"success": {
											"description": "Whether the API call was successful or not",
											"type": "boolean",
											"enum": [
												true
											],
											"example": true
										},
										"errors": {
											"type": "array",
											"items": {
												"type": "object",
												"required": [
													"code",
													"message"
												],
												"properties": {
													"code": {
														"type": "integer",
														"minimum": 1000
													},
													"message": {
														"type": "string"
													}
												},
												"uniqueItems": true
											},
											"example": []
										},
										"messages": {
											"type": "array",
											"items": {
												"type": "object",
												"required": [
													"code",
													"message"
												],
												"properties": {
													"code": {
														"type": "integer",
														"minimum": 1000
													},
													"message": {
														"type": "string"
													}
												},
												"uniqueItems": true
											},
											"example": []
										},
										"result": {
											"type": [
												"object",
												"array",
												"string"
											]
										}
									}
								},
								{
									"$comment": "This subschema describes failure responses",
									"properties": {
										"success": {
											"description": "Whether the API call was successful or not",
											"type": "boolean",
											"enum": [
												false
											],
											"example": false
										},
										"errors": {
											"allOf": [
												{
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											],
											"minLength": 1,
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											]
										},
										"messages": {
											"allOf": [
												{
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"code",
															"message"
														],
														"properties": {
															"code": {
																"type": "integer",
																"minimum": 1000
															},
															"message": {
																"type": "string"
															}
														},
														"uniqueItems": true
													},
													"example": []
												}
											],
											"example": []
										},
										"result": {
											"type": "null",
											"enum": [
												null
											],
											"example": null
										}
									}
								}
							],
							"definitions": {
								"messages": {
									"type": "array",
									"items": {
										"type": "object",
										"required": [
											"code",
											"message"
										],
										"properties": {
											"code": {
												"type": "integer",
												"minimum": 1000
											},
											"message": {
												"type": "string"
											}
										},
										"uniqueItems": true
									},
									"example": []
								}
							}
						},
						{
							"properties": {
								"result": {
									"type": [
										"array",
										"null"
									]
								},
								"result_info": {
									"type": "object",
									"properties": {
										"page": {
											"description": "Current page within paginated list of results",
											"type": "number",
											"example": 1
										},
										"per_page": {
											"description": "Number of results per page of results",
											"type": "number",
											"example": 20
										},
										"count": {
											"description": "Total results returned based on your search parameters",
											"type": "number",
											"example": 1
										},
										"total_count": {
											"description": "Total results available without any search parameters",
											"type": "number",
											"example": 2000
										}
									}
								}
							}
						}
					],
					"definitions": {
						"params": {
							"type": "object",
							"properties": {
								"page": {
									"description": "Requested page within paginated list of results",
									"type": "number",
									"example": 1
								},
								"per_page": {
									"description": "Maximum number of results requested",
									"type": "number",
									"example": 20
								}
							}
						},
						"result_info": {
							"type": "object",
							"properties": {
								"page": {
									"description": "Current page within paginated list of results",
									"type": "number",
									"example": 1
								},
								"per_page": {
									"description": "Number of results per page of results",
									"type": "number",
									"example": 20
								},
								"count": {
									"description": "Total results returned based on your search parameters",
									"type": "number",
									"example": 1
								},
								"total_count": {
									"description": "Total results available without any search parameters",
									"type": "number",
									"example": 2000
								}
							}
						}
					}
				},
				{
					"type": "object",
					"properties": {
						"result": {
							"type": "array",
							"items": {
								"cfRecurse": ""
							}
						}
					}
				}
			]
		}
	}
}