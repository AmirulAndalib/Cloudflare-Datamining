{
	"id": "https://api.cloudflare.com/schemas/v4/client/zone/origin-rules.json",
	"title": "Origin Rules",
	"description": "Origin Rules.",
	"cfExtendedDescription": "",
	"type": "object",
	"links": [
		{
			"title": "List Origin Rules",
			"description": "Fetches all Origin Rules in a zone.",
			"rel": "collection",
			"href": "zones/{#/definitions/zone_id}/rulesets/phases/http_request_origin/entrypoint",
			"method": "GET",
			"cfOwnership": "firewall",
			"cfPlanAvailability": {
				"free": true,
				"pro": true,
				"business": true,
				"enterprise": true
			},
			"html_id": "origin-rules-list-origin-rules",
			"uri": "zones/:zone_id/rulesets/phases/http_request_origin/entrypoint",
			"curl": "curl -X GET \"https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/rulesets/phases/http_request_origin/entrypoint\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
			"response": "{\n  \"id\": \"2f2feab2026849078ba485f918791bdc\",\n  \"name\": \"default\",\n  \"description\": \"\",\n  \"kind\": \"zone\",\n  \"phase\": \"http_request_origin\",\n  \"rules\": [\n    {\n      \"id\": \"3a03d665bac047339bb530ecb439a90d\",\n      \"version\": \"1\",\n      \"action\": \"route\",\n      \"expression\": \"http.cookie contains \\\"something\\\"\",\n      \"description\": \"change the host header, origin, and SNI\",\n      \"action_parameters\": {\n        \"host_header\": \"foo.example.com\",\n        \"origin\": {\n          \"host\": \"foo.example.com\",\n          \"port\": 8080\n        },\n        \"sni\": {\n          \"value\": \"foo.example.com\"\n        }\n      }\n    }\n  ]\n}"
		},
		{
			"title": "Update Origin Rules",
			"description": "Updates the Origin Rules of a zone.",
			"rel": "collection",
			"href": "zones/{#/definitions/zone_id}/rulesets/phases/http_request_origin/entrypoint",
			"method": "PUT",
			"cfOwnership": "firewall",
			"cfPlanAvailability": {
				"free": true,
				"pro": true,
				"business": true,
				"enterprise": true
			},
			"html_id": "origin-rules-update-origin-rules",
			"uri": "zones/:zone_id/rulesets/phases/http_request_origin/entrypoint",
			"curl": "curl -X PUT \"https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/rulesets/phases/http_request_origin/entrypoint\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"description\":\"My ruleset to execute managed rulesets\",\"rules\":[{\"description\":\"Execute the OWASP ruleset when the IP address is not 1.1.1.1\",\"expression\":\"ip.src ne 1.1.1.1\",\"action\":\"execute\",\"action_parameters\":{\"id\":\"4814384a9e5d4991b9815dcfc25d2f1f\"},\"ref\":\"my_ref\",\"enabled\":\"true\",\"logging\":{\"enabled\":\"true\"}}]}'",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"description": {
						"type": "string",
						"example": "\"My ruleset to execute managed rulesets\"",
						"description": "An informative description of the ruleset.",
						"default": ""
					},
					"rules": {
						"type": "array",
						"example": "[\n  {\n    \"description\": \"Execute the OWASP ruleset when the IP address is not 1.1.1.1\",\n    \"expression\": \"ip.src ne 1.1.1.1\",\n    \"action\": \"execute\",\n    \"action_parameters\": {\n      \"id\": \"4814384a9e5d4991b9815dcfc25d2f1f\"\n    },\n    \"ref\": \"my_ref\",\n    \"enabled\": \"true\",\n    \"logging\": {\n      \"enabled\": \"true\"\n    }\n  }\n]",
						"description": "The list of rules in the ruleset.",
						"items": {
							"anyOf": [
								{
									"description": "A rule object.",
									"type": "object",
									"required": [
										"expression",
										"action"
									],
									"properties": {
										"description": {
											"description": "An informative description of the rule.",
											"type": "string",
											"default": "",
											"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
										},
										"expression": {
											"description": "The expression defining which traffic will match the rule.",
											"type": "string",
											"example": "ip.src ne 1.1.1.1"
										},
										"action": {
											"description": "The action to perform when the rule matches.",
											"type": "string",
											"pattern": "^[a-z_]+$",
											"example": "execute"
										},
										"action_parameters": {
											"description": "The parameters configuring the rule action.",
											"type": "object",
											"example": {
												"id": "4814384a9e5d4991b9815dcfc25d2f1f"
											}
										},
										"ref": {
											"description": "The reference of the rule (the rule ID by default).",
											"type": "string",
											"example": "my_ref"
										},
										"enabled": {
											"description": "Whether the rule should be executed.",
											"type": "boolean",
											"default": "true",
											"example": "true"
										},
										"logging": {
											"description": "An object configuring the rule's logging behavior.",
											"type": "object",
											"properties": {
												"enabled": {
													"description": "Whether to generate a log when the rule matches.",
													"type": "boolean",
													"example": "true"
												}
											},
											"example": {
												"enabled": true
											}
										}
									}
								},
								{
									"description": "The unique ID of a rule.",
									"type": "string",
									"example": "3a03d665bac047339bb530ecb439a90d"
								}
							]
						}
					}
				},
				"required_props": [
					"rules"
				],
				"optional_props": [
					"description"
				],
				"objects": [],
				"example": "{\n  \"description\": \"My ruleset to execute managed rulesets\",\n  \"rules\": [\n    {\n      \"description\": \"Execute the OWASP ruleset when the IP address is not 1.1.1.1\",\n      \"expression\": \"ip.src ne 1.1.1.1\",\n      \"action\": \"execute\",\n      \"action_parameters\": {\n        \"id\": \"4814384a9e5d4991b9815dcfc25d2f1f\"\n      },\n      \"ref\": \"my_ref\",\n      \"enabled\": \"true\",\n      \"logging\": {\n        \"enabled\": \"true\"\n      }\n    }\n  ]\n}",
				"description": "A ruleset object."
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": []\n}"
		}
	],
	"html_id": "origin-rules",
	"object_definition": {
		"_formatter": {
			"jsonMediaType": {}
		},
		"all_props": {
			"id": {
				"type": "string",
				"example": "\"2f2feab2026849078ba485f918791bdc\"",
				"description": "The ID of the ruleset.",
				"minLength": 32,
				"maxLength": 32
			},
			"name": {
				"type": "string",
				"example": "\"default\"",
				"description": "The human-readable name of the ruleset."
			},
			"description": {
				"type": "string",
				"example": "\"\"",
				"description": "The description of the ruleset."
			},
			"kind": {
				"type": "string",
				"example": "\"zone\"",
				"description": "The ruleset kind.",
				"enum": [
					"zone"
				]
			},
			"phase": {
				"type": "string",
				"example": "\"http_request_origin\"",
				"description": "The phase where the ruleset is executed.",
				"enum": [
					"http_request_origin"
				]
			},
			"rules": {
				"type": "array",
				"example": "[\n  {\n    \"id\": \"3a03d665bac047339bb530ecb439a90d\",\n    \"version\": \"1\",\n    \"action\": \"route\",\n    \"expression\": \"http.cookie contains \\\"something\\\"\",\n    \"description\": \"change the host header, origin, and SNI\",\n    \"action_parameters\": {\n      \"host_header\": \"foo.example.com\",\n      \"origin\": {\n        \"host\": \"foo.example.com\",\n        \"port\": 8080\n      },\n      \"sni\": {\n        \"value\": \"foo.example.com\"\n      }\n    }\n  }\n]",
				"description": "The rules in the ruleset.",
				"items": {
					"properties": {
						"id": {
							"example": "3a03d665bac047339bb530ecb439a90d",
							"description": "The ID of the ruleset.",
							"type": "string",
							"minLength": 32,
							"maxLength": 32
						},
						"version": {
							"example": "1",
							"description": "The version of the rule.",
							"type": "string"
						},
						"action": {
							"example": "route",
							"description": "The action to perform when the rule expression matches.",
							"type": "string",
							"enum": [
								"route"
							]
						},
						"expression": {
							"example": "http.cookie contains \"something\"",
							"description": "The rule expression.",
							"type": "string"
						},
						"description": {
							"example": "change the host header, origin, and SNI",
							"description": "The description of the ruleset.",
							"type": "string"
						},
						"action_parameters": {
							"description": "The parameters configuring the action.",
							"type": "object",
							"oneOf": [
								{
									"description": "The configuration parameters for the route action.",
									"properties": {
										"host_header": {
											"description": "The value of the Host header.",
											"type": "string",
											"example": "foo.example.com"
										},
										"origin": {
											"description": "The parameters that control where the origin is.",
											"type": "object",
											"properties": {
												"host": {
													"description": "The host to use for origin.",
													"type": "string",
													"example": "foo.example.com"
												},
												"port": {
													"description": "The port to use for origin.",
													"type": "integer",
													"example": 8080
												}
											}
										},
										"sni": {
											"description": "The parameters that control the SNI.",
											"type": "object",
											"properties": {
												"value": {
													"description": "The SNI used to connect to the origin.",
													"type": "string",
													"example": "foo.example.com"
												}
											}
										}
									}
								}
							]
						}
					}
				}
			}
		},
		"required_props": [],
		"optional_props": [
			"id",
			"name",
			"description",
			"kind",
			"phase",
			"rules"
		],
		"objects": [],
		"example": "{\n  \"id\": \"2f2feab2026849078ba485f918791bdc\",\n  \"name\": \"default\",\n  \"description\": \"\",\n  \"kind\": \"zone\",\n  \"phase\": \"http_request_origin\",\n  \"rules\": [\n    {\n      \"id\": \"3a03d665bac047339bb530ecb439a90d\",\n      \"version\": \"1\",\n      \"action\": \"route\",\n      \"expression\": \"http.cookie contains \\\"something\\\"\",\n      \"description\": \"change the host header, origin, and SNI\",\n      \"action_parameters\": {\n        \"host_header\": \"foo.example.com\",\n        \"origin\": {\n          \"host\": \"foo.example.com\",\n          \"port\": 8080\n        },\n        \"sni\": {\n          \"value\": \"foo.example.com\"\n        }\n      }\n    }\n  ]\n}",
		"title": "Origin Rules",
		"description": "Origin Rules."
	}
}