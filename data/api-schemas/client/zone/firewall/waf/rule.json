{
	"id": "https://api.cloudflare.com/schemas/v4/client/zone/firewall/waf/rule.json",
	"title": "WAF rules",
	"description": "Web Application Firewall (WAF) rules of a WAF package applied to a zone.",
	"type": "object",
	"links": [
		{
			"title": "Get WAF rules",
			"description": "Fetches WAF rules in a WAF package.",
			"rel": "collection",
			"href": "zones/{#/definitions/zone_id}/firewall/waf/packages/{#/definitions/package_id}/rules",
			"method": "GET",
			"cfOwnership": "managed-rules",
			"cfPlanAvailability": {
				"free": false,
				"pro": true,
				"business": true,
				"enterprise": true
			},
			"html_id": "waf-rules-get-waf-rules",
			"uri": "zones/:zone_id/firewall/waf/packages/:package_id/rules",
			"curl": "curl -X GET \"https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/firewall/waf/packages/a25a9a7e9c00afc1fb2e0245519d725b/rules?description=SQL injection prevention for SELECT statements&mode=CHL&priority=5&group_id=de677e5818985db1285d0e80225f06e5&page=1&per_page=50&order=status&direction=desc&match=all\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"description": {
						"type": "string",
						"example": "\"SQL injection prevention for SELECT statements\"",
						"description": "The public description of the WAF rule.",
						"readOnly": true
					},
					"mode": {
						"type": "string",
						"example": "\"CHL\"",
						"description": "The action/mode a rule has been overridden to perform.",
						"enum": [
							"DIS",
							"CHL",
							"BLK",
							"SIM"
						]
					},
					"priority": {
						"type": "string",
						"example": "5",
						"description": "The order in which the individual WAF rule is executed within its rule group.",
						"readOnly": true
					},
					"group_id": {
						"type": "string",
						"example": "\"de677e5818985db1285d0e80225f06e5\"",
						"description": "The unique identifier of the rule group.",
						"maxLength": 32,
						"readOnly": true
					},
					"page": {
						"type": "number",
						"example": "1",
						"minimum": 1,
						"default": 1,
						"description": "The page number of paginated results."
					},
					"per_page": {
						"type": "number",
						"example": "50",
						"minimum": 5,
						"maximum": 100,
						"default": 50,
						"description": "The number of rules per page."
					},
					"order": {
						"type": "string",
						"example": "\"status\"",
						"enum": [
							"priority",
							"group_id",
							"description"
						],
						"description": "The field used to sort returned rules."
					},
					"direction": {
						"type": "string",
						"example": "\"desc\"",
						"enum": [
							"asc",
							"desc"
						],
						"description": "The direction used to sort returned rules."
					},
					"match": {
						"type": "string",
						"example": "\"all\"",
						"enum": [
							"any",
							"all"
						],
						"default": "all",
						"description": "When set to `all`, all the search requirements must match. When set to `any`, only one of the search requirements has to match."
					}
				},
				"required_props": [],
				"optional_props": [
					"description",
					"mode",
					"priority",
					"group_id",
					"page",
					"per_page",
					"order",
					"direction",
					"match"
				],
				"objects": [],
				"example": "{\n  \"description\": \"SQL injection prevention for SELECT statements\",\n  \"mode\": \"CHL\",\n  \"priority\": 5,\n  \"group_id\": \"de677e5818985db1285d0e80225f06e5\",\n  \"page\": 1,\n  \"per_page\": 50,\n  \"order\": \"status\",\n  \"direction\": \"desc\",\n  \"match\": \"all\"\n}"
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": [\n    {\n      \"id\": \"f939de3be84e66e757adcdcb87908023\",\n      \"description\": \"SQL injection prevention for SELECT statements\",\n      \"priority\": 5,\n      \"group\": {\n        \"id\": \"de677e5818985db1285d0e80225f06e5\",\n        \"name\": \"Project Honey Pot\"\n      },\n      \"package_id\": \"a25a9a7e9c00afc1fb2e0245519d725b\",\n      \"allowed_modes\": [\n        \"on\",\n        \"off\"\n      ],\n      \"mode\": \"on\"\n    }\n  ]\n}"
		},
		{
			"title": "Get a WAF rule",
			"description": "Fetches the details of a WAF rule in a WAF package.",
			"rel": "self",
			"href": "zones/{#/definitions/zone_id}/firewall/waf/packages/{#/definitions/package_id}/rules/{#/definitions/identifier}",
			"method": "GET",
			"cfOwnership": "managed-rules",
			"cfPlanAvailability": {
				"free": false,
				"pro": true,
				"business": true,
				"enterprise": true
			},
			"html_id": "waf-rules-get-a-waf-rule",
			"uri": "zones/:zone_id/firewall/waf/packages/:package_id/rules/:identifier",
			"curl": "curl -X GET \"https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/firewall/waf/packages/a25a9a7e9c00afc1fb2e0245519d725b/rules/f939de3be84e66e757adcdcb87908023\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\"",
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"f939de3be84e66e757adcdcb87908023\",\n    \"description\": \"SQL injection prevention for SELECT statements\",\n    \"priority\": 5,\n    \"group\": {\n      \"id\": \"de677e5818985db1285d0e80225f06e5\",\n      \"name\": \"Project Honey Pot\"\n    },\n    \"package_id\": \"a25a9a7e9c00afc1fb2e0245519d725b\",\n    \"allowed_modes\": [\n      \"on\",\n      \"off\"\n    ],\n    \"mode\": \"on\"\n  }\n}"
		},
		{
			"title": "Update a WAF rule",
			"description": "Updates a WAF rule. You can only update the mode/action of the rule.",
			"rel": "self",
			"href": "zones/{#/definitions/zone_id}/firewall/waf/packages/{#/definitions/package_id}/rules/{#/definitions/identifier}",
			"method": "PATCH",
			"cfOwnership": "managed-rules",
			"cfPlanAvailability": {
				"free": false,
				"pro": true,
				"business": true,
				"enterprise": true
			},
			"html_id": "waf-rules-update-a-waf-rule",
			"uri": "zones/:zone_id/firewall/waf/packages/:package_id/rules/:identifier",
			"curl": "curl -X PATCH \"https://api.cloudflare.com/client/v4/zones/023e105f4ecef8ad9ca31a8372d0c353/firewall/waf/packages/a25a9a7e9c00afc1fb2e0245519d725b/rules/f939de3be84e66e757adcdcb87908023\" \\\n     -H \"X-Auth-Email: user@example.com\" \\\n     -H \"X-Auth-Key: c2547eb745079dac9320b638f5e225cf483cc5cfdda41\" \\\n     -H \"Content-Type: application/json\" \\\n     --data '{\"mode\":\"on\"}'",
			"parameters": {
				"_formatter": {
					"jsonMediaType": {}
				},
				"all_props": {
					"mode": {
						"example": "\"on\"",
						"enum": [
							"default",
							"disable",
							"simulate",
							"block",
							"challenge",
							"on",
							"off"
						],
						"description": "The mode/action of the rule when triggered. You must use a value from the `allowed_modes` array of the current rule."
					}
				},
				"required_props": [],
				"optional_props": [
					"mode"
				],
				"objects": [],
				"example": "{\n  \"mode\": \"on\"\n}"
			},
			"response": "{\n  \"success\": true,\n  \"errors\": [],\n  \"messages\": [],\n  \"result\": {\n    \"id\": \"f939de3be84e66e757adcdcb87908023\",\n    \"description\": \"SQL injection prevention for SELECT statements\",\n    \"priority\": 5,\n    \"group\": {\n      \"id\": \"de677e5818985db1285d0e80225f06e5\",\n      \"name\": \"Project Honey Pot\"\n    },\n    \"package_id\": \"a25a9a7e9c00afc1fb2e0245519d725b\",\n    \"allowed_modes\": [\n      \"on\",\n      \"off\"\n    ],\n    \"mode\": \"on\"\n  }\n}"
		}
	],
	"html_id": "waf-rules",
	"object_definition": {
		"_formatter": {
			"jsonMediaType": {}
		},
		"all_props": {},
		"required_props": [],
		"optional_props": [],
		"objects": [
			{
				"all_props": {
					"id": {
						"type": "string",
						"example": "\"f939de3be84e66e757adcdcb87908023\"",
						"description": "The unique identifier of the WAF rule.",
						"maxLength": 32,
						"readOnly": true
					},
					"description": {
						"type": "string",
						"example": "\"SQL injection prevention for SELECT statements\"",
						"description": "The public description of the WAF rule.",
						"readOnly": true
					},
					"priority": {
						"type": "string",
						"example": "5",
						"description": "The order in which the individual WAF rule is executed within its rule group.",
						"readOnly": true
					},
					"group": {
						"type": "object",
						"example": "{\n  \"id\": \"de677e5818985db1285d0e80225f06e5\",\n  \"name\": \"Project Honey Pot\"\n}",
						"properties": {
							"id": {
								"type": "string",
								"example": "\"de677e5818985db1285d0e80225f06e5\"",
								"description": "The unique identifier of the rule group.",
								"maxLength": 32,
								"readOnly": true
							},
							"name": {
								"type": "string",
								"example": "\"Project Honey Pot\"",
								"description": "The name of the rule group.",
								"readOnly": true
							}
						},
						"description": "The rule group to which the current WAF rule belongs.",
						"readOnly": true
					},
					"package_id": {
						"type": "string",
						"example": "\"a25a9a7e9c00afc1fb2e0245519d725b\"",
						"description": "The unique identifier of a WAF package.",
						"maxLength": 32,
						"readOnly": true
					},
					"allowed_modes": {
						"type": "array",
						"example": "[\n  \"on\",\n  \"off\"\n]",
						"description": "Defines the available modes for the current WAF rule. Applies to anomaly detection WAF rules.",
						"items": {
							"description": "When set to `on`, the current WAF rule will be used when evaluating the request. Applies to anomaly detection WAF rules.",
							"type": "string",
							"enum": [
								"on",
								"off"
							],
							"example": "on"
						},
						"readOnly": true
					},
					"mode": {
						"type": "string",
						"example": "\"on\"",
						"description": "When set to `on`, the current WAF rule will be used when evaluating the request. Applies to anomaly detection WAF rules.",
						"enum": [
							"on",
							"off"
						]
					}
				},
				"required_props": [
					"id",
					"description",
					"priority",
					"allowed_modes",
					"mode",
					"group",
					"package_id"
				],
				"optional_props": [],
				"objects": [],
				"example": "{\n  \"id\": \"f939de3be84e66e757adcdcb87908023\",\n  \"description\": \"SQL injection prevention for SELECT statements\",\n  \"priority\": 5,\n  \"group\": {\n    \"id\": \"de677e5818985db1285d0e80225f06e5\",\n    \"name\": \"Project Honey Pot\"\n  },\n  \"package_id\": \"a25a9a7e9c00afc1fb2e0245519d725b\",\n  \"allowed_modes\": [\n    \"on\",\n    \"off\"\n  ],\n  \"mode\": \"on\"\n}",
				"title": "Anomaly detection WAF rule",
				"description": "When triggered, anomaly detection WAF rules contribute to an overall threat score that will determine if a request is considered malicious. You can configure the total scoring threshold through the 'sensitivity' property of the WAF package."
			},
			{
				"all_props": {
					"id": {
						"type": "string",
						"example": "\"f939de3be84e66e757adcdcb87908023\"",
						"description": "The unique identifier of the WAF rule.",
						"maxLength": 32,
						"readOnly": true
					},
					"description": {
						"type": "string",
						"example": "\"SQL injection prevention for SELECT statements\"",
						"description": "The public description of the WAF rule.",
						"readOnly": true
					},
					"priority": {
						"type": "string",
						"example": "5",
						"description": "The order in which the individual WAF rule is executed within its rule group.",
						"readOnly": true
					},
					"group": {
						"type": "object",
						"example": "{\n  \"id\": \"de677e5818985db1285d0e80225f06e5\",\n  \"name\": \"Project Honey Pot\"\n}",
						"properties": {
							"id": {
								"type": "string",
								"example": "\"de677e5818985db1285d0e80225f06e5\"",
								"description": "The unique identifier of the rule group.",
								"maxLength": 32,
								"readOnly": true
							},
							"name": {
								"type": "string",
								"example": "\"Project Honey Pot\"",
								"description": "The name of the rule group.",
								"readOnly": true
							}
						},
						"description": "The rule group to which the current WAF rule belongs.",
						"readOnly": true
					},
					"package_id": {
						"type": "string",
						"example": "\"a25a9a7e9c00afc1fb2e0245519d725b\"",
						"description": "The unique identifier of a WAF package.",
						"maxLength": 32,
						"readOnly": true
					},
					"allowed_modes": {
						"type": "array",
						"example": "[\n  \"default\",\n  \"disable\",\n  \"simulate\",\n  \"block\",\n  \"challenge\"\n]",
						"description": "The list of possible actions of the WAF rule when it is triggered.",
						"items": {
							"description": "The action that the current WAF rule will perform when triggered. Applies to traditional (deny) WAF rules.",
							"type": "string",
							"enum": [
								"default",
								"disable",
								"simulate",
								"block",
								"challenge"
							],
							"example": "block"
						},
						"readOnly": true
					},
					"mode": {
						"type": "string",
						"example": "\"block\"",
						"description": "The action that the current WAF rule will perform when triggered. Applies to traditional (deny) WAF rules.",
						"enum": [
							"default",
							"disable",
							"simulate",
							"block",
							"challenge"
						]
					},
					"default_mode": {
						"example": "\"block\"",
						"enum": [
							"disable",
							"simulate",
							"block",
							"challenge"
						],
						"description": "The default action/mode of a rule.",
						"readOnly": true
					}
				},
				"required_props": [
					"id",
					"description",
					"priority",
					"allowed_modes",
					"default_mode",
					"mode",
					"group",
					"package_id"
				],
				"optional_props": [],
				"objects": [],
				"example": "{\n  \"id\": \"f939de3be84e66e757adcdcb87908023\",\n  \"description\": \"SQL injection prevention for SELECT statements\",\n  \"priority\": 5,\n  \"group\": {\n    \"id\": \"de677e5818985db1285d0e80225f06e5\",\n    \"name\": \"Project Honey Pot\"\n  },\n  \"package_id\": \"a25a9a7e9c00afc1fb2e0245519d725b\",\n  \"allowed_modes\": [\n    \"default\",\n    \"disable\",\n    \"simulate\",\n    \"block\",\n    \"challenge\"\n  ],\n  \"mode\": \"block\",\n  \"default_mode\": \"block\"\n}",
				"title": "Traditional (deny) WAF rule",
				"description": "When triggered, traditional WAF rules cause the firewall to immediately act upon the request based on the configuration of the rule. A 'deny' rule will immediately respond to the request based on the configured rule action/mode (for example, 'block') and no other rules will be processed."
			},
			{
				"all_props": {
					"id": {
						"type": "string",
						"example": "\"f939de3be84e66e757adcdcb87908023\"",
						"description": "The unique identifier of the WAF rule.",
						"maxLength": 32,
						"readOnly": true
					},
					"description": {
						"type": "string",
						"example": "\"SQL injection prevention for SELECT statements\"",
						"description": "The public description of the WAF rule.",
						"readOnly": true
					},
					"priority": {
						"type": "string",
						"example": "5",
						"description": "The order in which the individual WAF rule is executed within its rule group.",
						"readOnly": true
					},
					"group": {
						"type": "object",
						"example": "{\n  \"id\": \"de677e5818985db1285d0e80225f06e5\",\n  \"name\": \"Project Honey Pot\"\n}",
						"properties": {
							"id": {
								"type": "string",
								"example": "\"de677e5818985db1285d0e80225f06e5\"",
								"description": "The unique identifier of the rule group.",
								"maxLength": 32,
								"readOnly": true
							},
							"name": {
								"type": "string",
								"example": "\"Project Honey Pot\"",
								"description": "The name of the rule group.",
								"readOnly": true
							}
						},
						"description": "The rule group to which the current WAF rule belongs.",
						"readOnly": true
					},
					"package_id": {
						"type": "string",
						"example": "\"a25a9a7e9c00afc1fb2e0245519d725b\"",
						"description": "The unique identifier of a WAF package.",
						"maxLength": 32,
						"readOnly": true
					},
					"allowed_modes": {
						"type": "array",
						"example": "[\n  \"on\",\n  \"off\"\n]",
						"description": "Defines the available modes for the current WAF rule.",
						"items": {
							"description": "When set to `on`, the current rule will be used when evaluating the request. Applies to traditional (allow) WAF rules.",
							"type": "string",
							"enum": [
								"on",
								"off"
							],
							"example": "on"
						},
						"readOnly": true
					},
					"mode": {
						"type": "string",
						"example": "\"on\"",
						"description": "When set to `on`, the current rule will be used when evaluating the request. Applies to traditional (allow) WAF rules.",
						"enum": [
							"on",
							"off"
						]
					}
				},
				"required_props": [
					"id",
					"description",
					"priority",
					"allowed_modes",
					"default_mode",
					"mode",
					"group",
					"package_id"
				],
				"optional_props": [],
				"objects": [],
				"example": "{\n  \"id\": \"f939de3be84e66e757adcdcb87908023\",\n  \"description\": \"SQL injection prevention for SELECT statements\",\n  \"priority\": 5,\n  \"group\": {\n    \"id\": \"de677e5818985db1285d0e80225f06e5\",\n    \"name\": \"Project Honey Pot\"\n  },\n  \"package_id\": \"a25a9a7e9c00afc1fb2e0245519d725b\",\n  \"allowed_modes\": [\n    \"on\",\n    \"off\"\n  ],\n  \"mode\": \"on\"\n}",
				"title": "Traditional (allow) WAF rule",
				"description": "When triggered, traditional WAF rules cause the firewall to immediately act on the request based on the rule configuration. An 'allow' rule will immediately allow the request and no other rules will be processed."
			}
		],
		"example": "{\n  \"id\": \"f939de3be84e66e757adcdcb87908023\",\n  \"description\": \"SQL injection prevention for SELECT statements\",\n  \"priority\": 5,\n  \"group\": {\n    \"id\": \"de677e5818985db1285d0e80225f06e5\",\n    \"name\": \"Project Honey Pot\"\n  },\n  \"package_id\": \"a25a9a7e9c00afc1fb2e0245519d725b\",\n  \"allowed_modes\": [\n    \"on\",\n    \"off\"\n  ],\n  \"mode\": \"on\"\n}",
		"which_of": "oneOf",
		"title": "WAF rules",
		"description": "Web Application Firewall (WAF) rules of a WAF package applied to a zone."
	}
}