{
	"DELETE /accounts/{identifier}/access/apps/{uuid1}/policies/{uuid}": {
		"description": "Delete an Access policy.",
		"operationId": "access-policies-delete-an-access-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "uuid1",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-single-QvsTOTie"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/components/schemas/components-schemas-uuid"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete an Access policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-QvsTOTie"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/components/schemas/components-schemas-uuid"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete an Access policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete an Access policy",
		"tags": [
			"Access policies"
		]
	},
	"GET /accounts/{identifier}/access/apps/{uuid}/policies": {
		"description": "Lists Access policies configured for an application.",
		"operationId": "access-policies-list-access-policies",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/policies-L7Qxgeee"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Access policies response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/policies-L7Qxgeee"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Access policies response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Access policies",
		"tags": [
			"Access policies"
		]
	},
	"GET /accounts/{identifier}/access/apps/{uuid1}/policies/{uuid}": {
		"description": "Fetches a single Access policy.",
		"operationId": "access-policies-get-an-access-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "uuid1",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-single"
								},
								{
									"properties": {
										"result": {
											"$ref": "#/components/schemas/policies-L7Qxgeee"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get an Access policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/components/schemas/policies-L7Qxgeee"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get an Access policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get an Access policy",
		"tags": [
			"Access policies"
		]
	},
	"POST /accounts/{identifier}/access/apps/{uuid}/policies": {
		"description": "Create a new Access policy for an application.",
		"operationId": "access-policies-create-an-access-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"approval_groups": {
								"description": "Administrators who can approve a temporary authentication request.",
								"example": [
									{
										"approvals_needed": 1,
										"email_addresses": [
											"test1@cloudflare.com",
											"test2@cloudflare.com"
										]
									},
									{
										"approvals_needed": 3,
										"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34"
									}
								],
								"items": {
									"$ref": "#/components/schemas/approval_group"
								},
								"type": "array"
							},
							"approval_required": {
								"default": false,
								"description": "Requires the user to request access from an administrator at the start of each session.",
								"example": true,
								"type": "boolean"
							},
							"decision": {
								"description": "The action Access will take if a user matches this policy.",
								"enum": [
									"allow",
									"deny",
									"non_identity",
									"bypass"
								],
								"example": "allow",
								"type": "string"
							},
							"exclude": {
								"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
								"items": {
									"$ref": "#/components/schemas/rule"
								},
								"type": "array"
							},
							"include": {
								"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
								"items": {
									"$ref": "#/components/schemas/rule"
								},
								"type": "array"
							},
							"isolation_required": {
								"default": false,
								"description": "Require this application to be served in an isolated browser for users matching this policy.",
								"example": false,
								"type": "boolean"
							},
							"name": {
								"description": "The name of the Access policy.",
								"example": "Allow devs",
								"type": "string"
							},
							"precedence": {
								"description": "The order of execution for this policy. Must be unique for each policy.",
								"type": "integer"
							},
							"purpose_justification_prompt": {
								"description": "A custom message that will appear on the purpose justification screen.",
								"example": "Please enter a justification for entering this protected domain.",
								"type": "string"
							},
							"purpose_justification_required": {
								"default": false,
								"description": "Require users to enter a justification when they log in to the application.",
								"example": true,
								"type": "boolean"
							},
							"require": {
								"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
								"items": {
									"$ref": "#/components/schemas/rule"
								},
								"type": "array"
							}
						},
						"required": [
							"name",
							"decision",
							"include"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-single"
								},
								{
									"properties": {
										"result": {
											"$ref": "#/components/schemas/policies-L7Qxgeee"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create an Access policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/components/schemas/policies-L7Qxgeee"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create an Access policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create an Access policy",
		"tags": [
			"Access policies"
		]
	},
	"PUT /accounts/{identifier}/access/apps/{uuid1}/policies/{uuid}": {
		"description": "Update a configured Access policy.",
		"operationId": "access-policies-update-an-access-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "uuid1",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"approval_groups": {
								"description": "Administrators who can approve a temporary authentication request.",
								"example": [
									{
										"approvals_needed": 1,
										"email_addresses": [
											"test1@cloudflare.com",
											"test2@cloudflare.com"
										]
									},
									{
										"approvals_needed": 3,
										"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34"
									}
								],
								"items": {
									"$ref": "#/components/schemas/approval_group"
								},
								"type": "array"
							},
							"approval_required": {
								"default": false,
								"description": "Requires the user to request access from an administrator at the start of each session.",
								"example": true,
								"type": "boolean"
							},
							"decision": {
								"description": "The action Access will take if a user matches this policy.",
								"enum": [
									"allow",
									"deny",
									"non_identity",
									"bypass"
								],
								"example": "allow",
								"type": "string"
							},
							"exclude": {
								"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
								"items": {
									"$ref": "#/components/schemas/rule"
								},
								"type": "array"
							},
							"include": {
								"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
								"items": {
									"$ref": "#/components/schemas/rule"
								},
								"type": "array"
							},
							"isolation_required": {
								"default": false,
								"description": "Require this application to be served in an isolated browser for users matching this policy.",
								"example": false,
								"type": "boolean"
							},
							"name": {
								"description": "The name of the Access policy.",
								"example": "Allow devs",
								"type": "string"
							},
							"precedence": {
								"description": "The order of execution for this policy. Must be unique for each policy.",
								"type": "integer"
							},
							"purpose_justification_prompt": {
								"description": "A custom message that will appear on the purpose justification screen.",
								"example": "Please enter a justification for entering this protected domain.",
								"type": "string"
							},
							"purpose_justification_required": {
								"default": false,
								"description": "Require users to enter a justification when they log in to the application.",
								"example": true,
								"type": "boolean"
							},
							"require": {
								"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
								"items": {
									"$ref": "#/components/schemas/rule"
								},
								"type": "array"
							}
						},
						"required": [
							"name",
							"decision",
							"include"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-single"
								},
								{
									"properties": {
										"result": {
											"$ref": "#/components/schemas/policies-L7Qxgeee"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update an Access policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/components/schemas/policies-L7Qxgeee"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update an Access policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update an Access policy",
		"tags": [
			"Access policies"
		]
	}
}