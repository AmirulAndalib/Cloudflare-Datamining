{
	"DELETE /accounts/{account_id}/email-security/settings/allow_policies/{policy_id}": {
		"operationId": "email_security_delete_allow_policy",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": 2401,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"example": 2401,
													"format": "int32",
													"title": "identifier",
													"type": "integer"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete an email allow policy",
		"tags": [
			"Email Security Settings"
		]
	},
	"DELETE /accounts/{account_id}/email-security/settings/block_senders/{pattern_id}": {
		"operationId": "email_security_delete_blocked_sender",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "pattern_id",
				"required": true,
				"schema": {
					"example": 2402,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"example": 2402,
													"format": "int32",
													"title": "identifier",
													"type": "integer"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a blocked email sender",
		"tags": [
			"Email Security Settings"
		]
	},
	"DELETE /accounts/{account_id}/email-security/settings/domains": {
		"operationId": "email_security_delete_domains",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"id": {
									"description": "The unique identifier for the domain.",
									"example": 2400,
									"format": "int32",
									"type": "integer"
								}
							},
							"required": [
								"id"
							],
							"type": "object"
						},
						"minItems": 1,
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"id": {
														"description": "The unique identifier for the domain.",
														"example": 2400,
														"format": "int32",
														"type": "integer"
													}
												},
												"required": [
													"id"
												],
												"type": "object"
											},
											"minItems": 1,
											"type": "array"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Unprotect multiple email domains",
		"tags": [
			"Email Security Settings"
		]
	},
	"DELETE /accounts/{account_id}/email-security/settings/domains/{domain_id}": {
		"operationId": "email_security_delete_domain",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "domain_id",
				"required": true,
				"schema": {
					"description": "The unique identifier for the domain.",
					"example": 2400,
					"format": "int32",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "The unique identifier for the domain.",
													"example": 2400,
													"format": "int32",
													"type": "integer"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Deletes the domain with the provided id."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Unprotect an email domain",
		"tags": [
			"Email Security Settings"
		]
	},
	"DELETE /accounts/{account_id}/email-security/settings/impersonation_registry/{display_name_id}": {
		"operationId": "email_security_delete_display_name",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "display_name_id",
				"required": true,
				"schema": {
					"example": 2403,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"example": 2403,
													"format": "int32",
													"title": "identifier",
													"type": "integer"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete an entry from impersonation registry",
		"tags": [
			"Email Security Settings"
		]
	},
	"DELETE /accounts/{account_id}/email-security/settings/trusted_domains/{pattern_id}": {
		"operationId": "email_security_delete_trusted_domain",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "pattern_id",
				"required": true,
				"schema": {
					"example": 2401,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"example": 2401,
													"format": "int32",
													"title": "identifier",
													"type": "integer"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a trusted email domain",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/allow_policies": {
		"description": "Lists, searches, and sorts an account’s email allow policies.",
		"operationId": "email_security_list_allow_policies",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"description": "The page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The number of results per page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The field to sort by.",
				"in": "query",
				"name": "order",
				"schema": {
					"enum": [
						"pattern",
						"created_at"
					],
					"type": "string"
				}
			},
			{
				"description": "The sorting direction.",
				"in": "query",
				"name": "direction",
				"schema": {
					"allOf": [
						{
							"enum": [
								"asc",
								"desc"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"description": "Allows searching in multiple properties of a record simultaneously.\nThis parameter is intended for human users, not automation. Its exact\nbehavior is intentionally left unspecified and is subject to change\nin the future.",
				"in": "query",
				"name": "search",
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "is_sender",
				"schema": {
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "is_recipient",
				"schema": {
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "is_spoof",
				"schema": {
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "verify_sender",
				"schema": {
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "pattern_type",
				"schema": {
					"allOf": [
						{
							"enum": [
								"EMAIL",
								"DOMAIN",
								"IP",
								"UNKNOWN"
							],
							"type": "string"
						}
					]
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"additionalProperties": false,
														"example": {
															"comments": "Trust all messages send from test@example.com",
															"is_acceptable_sender": false,
															"is_exempt_recipient": false,
															"is_recipient": false,
															"is_regex": false,
															"is_sender": true,
															"is_spoof": false,
															"is_trusted_sender": true,
															"pattern": "test@example.com",
															"pattern_type": "EMAIL",
															"verify_sender": true
														},
														"properties": {
															"comments": {
																"maxLength": 1024,
																"nullable": true,
																"type": "string"
															},
															"is_acceptable_sender": {
																"description": "Messages from this sender will be exempted from Spam, Spoof and Bulk dispositions.\nNote: This will not exempt messages with Malicious or Suspicious dispositions.",
																"type": "boolean"
															},
															"is_exempt_recipient": {
																"description": "Messages to this recipient will bypass all detections.",
																"type": "boolean"
															},
															"is_recipient": {
																"deprecated": true,
																"type": "boolean"
															},
															"is_regex": {
																"type": "boolean"
															},
															"is_sender": {
																"deprecated": true,
																"type": "boolean"
															},
															"is_spoof": {
																"deprecated": true,
																"type": "boolean"
															},
															"is_trusted_sender": {
																"description": "Messages from this sender will bypass all detections and link following.",
																"type": "boolean"
															},
															"pattern": {
																"minLength": 1,
																"type": "string"
															},
															"pattern_type": {
																"enum": [
																	"EMAIL",
																	"DOMAIN",
																	"IP",
																	"UNKNOWN"
																],
																"type": "string"
															},
															"verify_sender": {
																"description": "Enforce DMARC, SPF or DKIM authentication.\nWhen on, Email Security only honors policies that pass authentication.",
																"type": "boolean"
															}
														},
														"required": [
															"is_exempt_recipient",
															"is_trusted_sender",
															"is_acceptable_sender",
															"pattern",
															"is_regex",
															"verify_sender",
															"pattern_type"
														],
														"type": "object"
													},
													{
														"properties": {
															"created_at": {
																"format": "date-time",
																"type": "string"
															},
															"id": {
																"example": 2401,
																"format": "int32",
																"title": "identifier",
																"type": "integer"
															},
															"last_modified": {
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"id",
															"created_at",
															"last_modified"
														],
														"type": "object"
													}
												],
												"example": {
													"comments": "Trust all messages send from test@example.com",
													"created_at": "2023-11-14T22:13:20Z",
													"id": 2401,
													"is_acceptable_sender": false,
													"is_exempt_recipient": false,
													"is_recipient": false,
													"is_regex": false,
													"is_sender": true,
													"is_spoof": false,
													"is_trusted_sender": true,
													"last_modified": "2023-11-14T22:13:20Z",
													"pattern": "test@example.com",
													"pattern_type": "EMAIL",
													"verify_sender": true
												}
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"format": "int32",
													"type": "integer"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"format": "int32",
													"type": "integer"
												}
											},
											"required": [
												"count",
												"page",
												"per_page",
												"total_count"
											],
											"type": "object"
										}
									},
									"required": [
										"result",
										"result_info"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains a list of allow policies for the account."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List email allow policies",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/allow_policies/{policy_id}": {
		"operationId": "email_security_get_allow_policy",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": 2401,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"additionalProperties": false,
													"example": {
														"comments": "Trust all messages send from test@example.com",
														"is_acceptable_sender": false,
														"is_exempt_recipient": false,
														"is_recipient": false,
														"is_regex": false,
														"is_sender": true,
														"is_spoof": false,
														"is_trusted_sender": true,
														"pattern": "test@example.com",
														"pattern_type": "EMAIL",
														"verify_sender": true
													},
													"properties": {
														"comments": {
															"maxLength": 1024,
															"nullable": true,
															"type": "string"
														},
														"is_acceptable_sender": {
															"description": "Messages from this sender will be exempted from Spam, Spoof and Bulk dispositions.\nNote: This will not exempt messages with Malicious or Suspicious dispositions.",
															"type": "boolean"
														},
														"is_exempt_recipient": {
															"description": "Messages to this recipient will bypass all detections.",
															"type": "boolean"
														},
														"is_recipient": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_regex": {
															"type": "boolean"
														},
														"is_sender": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_spoof": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_trusted_sender": {
															"description": "Messages from this sender will bypass all detections and link following.",
															"type": "boolean"
														},
														"pattern": {
															"minLength": 1,
															"type": "string"
														},
														"pattern_type": {
															"enum": [
																"EMAIL",
																"DOMAIN",
																"IP",
																"UNKNOWN"
															],
															"type": "string"
														},
														"verify_sender": {
															"description": "Enforce DMARC, SPF or DKIM authentication.\nWhen on, Email Security only honors policies that pass authentication.",
															"type": "boolean"
														}
													},
													"required": [
														"is_exempt_recipient",
														"is_trusted_sender",
														"is_acceptable_sender",
														"pattern",
														"is_regex",
														"verify_sender",
														"pattern_type"
													],
													"type": "object"
												},
												{
													"properties": {
														"created_at": {
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"example": 2401,
															"format": "int32",
															"title": "identifier",
															"type": "integer"
														},
														"last_modified": {
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"id",
														"created_at",
														"last_modified"
													],
													"type": "object"
												}
											],
											"example": {
												"comments": "Trust all messages send from test@example.com",
												"created_at": "2023-11-14T22:13:20Z",
												"id": 2401,
												"is_acceptable_sender": false,
												"is_exempt_recipient": false,
												"is_recipient": false,
												"is_regex": false,
												"is_sender": true,
												"is_spoof": false,
												"is_trusted_sender": true,
												"last_modified": "2023-11-14T22:13:20Z",
												"pattern": "test@example.com",
												"pattern_type": "EMAIL",
												"verify_sender": true
											}
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get an email allow policy",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/block_senders": {
		"operationId": "email_security_list_blocked_senders",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"description": "The page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The number of results per page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The field to sort by.",
				"in": "query",
				"name": "order",
				"schema": {
					"enum": [
						"pattern",
						"created_at"
					],
					"type": "string"
				}
			},
			{
				"description": "The sorting direction.",
				"in": "query",
				"name": "direction",
				"schema": {
					"allOf": [
						{
							"enum": [
								"asc",
								"desc"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"description": "Allows searching in multiple properties of a record simultaneously.\nThis parameter is intended for human users, not automation. Its exact\nbehavior is intentionally left unspecified and is subject to change\nin the future.",
				"in": "query",
				"name": "search",
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "pattern_type",
				"schema": {
					"allOf": [
						{
							"enum": [
								"EMAIL",
								"DOMAIN",
								"IP",
								"UNKNOWN"
							],
							"type": "string"
						}
					]
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"additionalProperties": false,
														"example": {
															"comments": "block sender with email test@example.com",
															"is_regex": false,
															"pattern": "test@example.com",
															"pattern_type": "EMAIL"
														},
														"properties": {
															"comments": {
																"nullable": true,
																"type": "string"
															},
															"is_regex": {
																"type": "boolean"
															},
															"pattern": {
																"minLength": 1,
																"type": "string"
															},
															"pattern_type": {
																"enum": [
																	"EMAIL",
																	"DOMAIN",
																	"IP",
																	"UNKNOWN"
																],
																"type": "string"
															}
														},
														"required": [
															"pattern",
															"is_regex",
															"pattern_type"
														],
														"type": "object"
													},
													{
														"properties": {
															"created_at": {
																"format": "date-time",
																"type": "string"
															},
															"id": {
																"example": 2402,
																"format": "int32",
																"title": "identifier",
																"type": "integer"
															},
															"last_modified": {
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"id",
															"created_at",
															"last_modified"
														],
														"type": "object"
													}
												],
												"example": {
													"comments": "block sender with email test@example.com",
													"created_at": "2023-11-14T22:13:20Z",
													"id": 2402,
													"is_regex": false,
													"last_modified": "2023-11-14T22:13:20Z",
													"pattern": "test@example.com",
													"pattern_type": "EMAIL"
												}
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"format": "int32",
													"type": "integer"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"format": "int32",
													"type": "integer"
												}
											},
											"required": [
												"count",
												"page",
												"per_page",
												"total_count"
											],
											"type": "object"
										}
									},
									"required": [
										"result",
										"result_info"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains a list of blocked senders for the account."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List blocked email senders",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/block_senders/{pattern_id}": {
		"operationId": "email_security_get_blocked_sender",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "pattern_id",
				"required": true,
				"schema": {
					"example": 2402,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"additionalProperties": false,
													"example": {
														"comments": "block sender with email test@example.com",
														"is_regex": false,
														"pattern": "test@example.com",
														"pattern_type": "EMAIL"
													},
													"properties": {
														"comments": {
															"nullable": true,
															"type": "string"
														},
														"is_regex": {
															"type": "boolean"
														},
														"pattern": {
															"minLength": 1,
															"type": "string"
														},
														"pattern_type": {
															"enum": [
																"EMAIL",
																"DOMAIN",
																"IP",
																"UNKNOWN"
															],
															"type": "string"
														}
													},
													"required": [
														"pattern",
														"is_regex",
														"pattern_type"
													],
													"type": "object"
												},
												{
													"properties": {
														"created_at": {
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"example": 2402,
															"format": "int32",
															"title": "identifier",
															"type": "integer"
														},
														"last_modified": {
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"id",
														"created_at",
														"last_modified"
													],
													"type": "object"
												}
											],
											"example": {
												"comments": "block sender with email test@example.com",
												"created_at": "2023-11-14T22:13:20Z",
												"id": 2402,
												"is_regex": false,
												"last_modified": "2023-11-14T22:13:20Z",
												"pattern": "test@example.com",
												"pattern_type": "EMAIL"
											}
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a blocked email sender",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/domains": {
		"description": "Lists, searches, and sorts an account’s email domains.",
		"operationId": "email_security_list_domains",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"description": "The page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The number of results per page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The field to sort by.",
				"in": "query",
				"name": "order",
				"schema": {
					"enum": [
						"domain",
						"created_at"
					],
					"type": "string"
				}
			},
			{
				"description": "The sorting direction.",
				"in": "query",
				"name": "direction",
				"schema": {
					"allOf": [
						{
							"enum": [
								"asc",
								"desc"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"description": "Allows searching in multiple properties of a record simultaneously.\nThis parameter is intended for human users, not automation. Its exact\nbehavior is intentionally left unspecified and is subject to change\nin the future.",
				"in": "query",
				"name": "search",
				"schema": {
					"type": "string"
				}
			},
			{
				"description": "Filters response to domains with the provided delivery mode.",
				"in": "query",
				"name": "allowed_delivery_mode",
				"schema": {
					"allOf": [
						{
							"enum": [
								"DIRECT",
								"BCC",
								"JOURNAL",
								"API",
								"RETRO_SCAN"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"description": "Filters results by the provided domains, allowing for multiple occurrences.",
				"example": "domain=example.com&domain=example.xyz",
				"in": "query",
				"name": "domain",
				"schema": {
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"example": {
													"allowed_delivery_modes": [
														"API"
													],
													"created_at": "2023-11-14T22:13:20Z",
													"domain": "example.com",
													"folder": "Inbox",
													"id": 2400,
													"inbox_provider": "Microsoft",
													"integration_id": "a5dbb180-60ea-4578-84bb-d01a5d4e50c3",
													"last_modified": "2023-11-14T22:13:20Z",
													"lookback_hops": 2,
													"o365_tenant_id": "c3c3239d-8858-47df-9618-0e2d9bdf6aa8"
												},
												"properties": {
													"allowed_delivery_modes": {
														"items": {
															"enum": [
																"DIRECT",
																"BCC",
																"JOURNAL",
																"API",
																"RETRO_SCAN"
															],
															"type": "string"
														},
														"type": "array"
													},
													"created_at": {
														"format": "date-time",
														"type": "string"
													},
													"domain": {
														"type": "string"
													},
													"folder": {
														"allOf": [
															{
																"enum": [
																	"AllItems",
																	"Inbox"
																],
																"type": "string"
															},
															{
																"nullable": true,
																"type": "string"
															}
														]
													},
													"id": {
														"description": "The unique identifier for the domain.",
														"example": 2400,
														"format": "int32",
														"type": "integer"
													},
													"inbox_provider": {
														"allOf": [
															{
																"enum": [
																	"Microsoft",
																	"Google"
																],
																"type": "string"
															},
															{
																"nullable": true,
																"type": "string"
															}
														]
													},
													"integration_id": {
														"format": "uuid",
														"nullable": true,
														"type": "string"
													},
													"last_modified": {
														"format": "date-time",
														"type": "string"
													},
													"lookback_hops": {
														"format": "int32",
														"type": "integer"
													},
													"o365_tenant_id": {
														"nullable": true,
														"type": "string"
													}
												},
												"required": [
													"id",
													"created_at",
													"last_modified",
													"domain",
													"allowed_delivery_modes",
													"lookback_hops"
												],
												"type": "object"
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"format": "int32",
													"type": "integer"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"format": "int32",
													"type": "integer"
												}
											},
											"required": [
												"count",
												"page",
												"per_page",
												"total_count"
											],
											"type": "object"
										}
									},
									"required": [
										"result",
										"result_info"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains a list of domains for the account."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List protected email domains",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/domains/{domain_id}": {
		"operationId": "email_security_get_domain",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "domain_id",
				"required": true,
				"schema": {
					"description": "The unique identifier for the domain.",
					"example": 2400,
					"format": "int32",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {
												"allowed_delivery_modes": [
													"API"
												],
												"created_at": "2023-11-14T22:13:20Z",
												"domain": "example.com",
												"folder": "Inbox",
												"id": 2400,
												"inbox_provider": "Microsoft",
												"integration_id": "a5dbb180-60ea-4578-84bb-d01a5d4e50c3",
												"last_modified": "2023-11-14T22:13:20Z",
												"lookback_hops": 2,
												"o365_tenant_id": "c3c3239d-8858-47df-9618-0e2d9bdf6aa8"
											},
											"properties": {
												"allowed_delivery_modes": {
													"items": {
														"enum": [
															"DIRECT",
															"BCC",
															"JOURNAL",
															"API",
															"RETRO_SCAN"
														],
														"type": "string"
													},
													"type": "array"
												},
												"created_at": {
													"format": "date-time",
													"type": "string"
												},
												"domain": {
													"type": "string"
												},
												"folder": {
													"allOf": [
														{
															"enum": [
																"AllItems",
																"Inbox"
															],
															"type": "string"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												},
												"id": {
													"description": "The unique identifier for the domain.",
													"example": 2400,
													"format": "int32",
													"type": "integer"
												},
												"inbox_provider": {
													"allOf": [
														{
															"enum": [
																"Microsoft",
																"Google"
															],
															"type": "string"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												},
												"integration_id": {
													"format": "uuid",
													"nullable": true,
													"type": "string"
												},
												"last_modified": {
													"format": "date-time",
													"type": "string"
												},
												"lookback_hops": {
													"format": "int32",
													"type": "integer"
												},
												"o365_tenant_id": {
													"nullable": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"created_at",
												"last_modified",
												"domain",
												"allowed_delivery_modes",
												"lookback_hops"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get an email domain",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/impersonation_registry": {
		"description": "Lists, searches, and sorts entries in the impersonation registry.",
		"operationId": "email_security_list_display_names",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"description": "The page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The number of results per page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The field to sort by.",
				"in": "query",
				"name": "order",
				"schema": {
					"enum": [
						"name",
						"email",
						"created_at"
					],
					"type": "string"
				}
			},
			{
				"description": "The sorting direction.",
				"in": "query",
				"name": "direction",
				"schema": {
					"allOf": [
						{
							"enum": [
								"asc",
								"desc"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"description": "Allows searching in multiple properties of a record simultaneously.\nThis parameter is intended for human users, not automation. Its exact\nbehavior is intentionally left unspecified and is subject to change\nin the future.",
				"in": "query",
				"name": "search",
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "provenance",
				"schema": {
					"allOf": [
						{
							"enum": [
								"A1S_INTERNAL",
								"SNOOPY-CASB_OFFICE_365",
								"SNOOPY-OFFICE_365",
								"SNOOPY-GOOGLE_DIRECTORY"
							],
							"type": "string"
						}
					]
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"comments": {
														"nullable": true,
														"type": "string"
													},
													"created_at": {
														"format": "date-time",
														"type": "string"
													},
													"directory_id": {
														"allOf": [
															{
																"format": "int64",
																"type": "integer"
															},
															{
																"nullable": true,
																"type": "integer"
															}
														]
													},
													"directory_node_id": {
														"allOf": [
															{
																"format": "int32",
																"type": "integer"
															},
															{
																"nullable": true,
																"type": "integer"
															}
														]
													},
													"email": {
														"nullable": true,
														"type": "string"
													},
													"external_directory_node_id": {
														"deprecated": true,
														"nullable": true,
														"type": "string"
													},
													"id": {
														"example": 2403,
														"format": "int32",
														"title": "identifier",
														"type": "integer"
													},
													"is_email_regex": {
														"type": "boolean"
													},
													"last_modified": {
														"format": "date-time",
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"provenance": {
														"nullable": true,
														"type": "string"
													}
												},
												"required": [
													"id",
													"created_at",
													"last_modified",
													"name",
													"is_email_regex"
												],
												"type": "object"
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"format": "int32",
													"type": "integer"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"format": "int32",
													"type": "integer"
												}
											},
											"required": [
												"count",
												"page",
												"per_page",
												"total_count"
											],
											"type": "object"
										}
									},
									"required": [
										"result",
										"result_info"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the list of impersonation registry entries for the account."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List entries in impersonation registry",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/impersonation_registry/{display_name_id}": {
		"operationId": "email_security_get_display_name",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "display_name_id",
				"required": true,
				"schema": {
					"example": 2403,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"comments": {
													"nullable": true,
													"type": "string"
												},
												"created_at": {
													"format": "date-time",
													"type": "string"
												},
												"directory_id": {
													"allOf": [
														{
															"format": "int64",
															"type": "integer"
														},
														{
															"nullable": true,
															"type": "integer"
														}
													]
												},
												"directory_node_id": {
													"allOf": [
														{
															"format": "int32",
															"type": "integer"
														},
														{
															"nullable": true,
															"type": "integer"
														}
													]
												},
												"email": {
													"nullable": true,
													"type": "string"
												},
												"external_directory_node_id": {
													"deprecated": true,
													"nullable": true,
													"type": "string"
												},
												"id": {
													"example": 2403,
													"format": "int32",
													"title": "identifier",
													"type": "integer"
												},
												"is_email_regex": {
													"type": "boolean"
												},
												"last_modified": {
													"format": "date-time",
													"type": "string"
												},
												"name": {
													"type": "string"
												},
												"provenance": {
													"nullable": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"created_at",
												"last_modified",
												"name",
												"is_email_regex"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get an entry in impersonation registry",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/trusted_domains": {
		"description": "Lists, searches, and sorts an account’s trusted email domains.",
		"operationId": "email_security_list_trusted_domains",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"description": "The page number of paginated results.",
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The number of results per page.",
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"format": "int32",
					"minimum": 1,
					"type": "integer"
				}
			},
			{
				"description": "The field to sort by.",
				"in": "query",
				"name": "order",
				"schema": {
					"enum": [
						"pattern",
						"created_at"
					],
					"type": "string"
				}
			},
			{
				"description": "The sorting direction.",
				"in": "query",
				"name": "direction",
				"schema": {
					"allOf": [
						{
							"enum": [
								"asc",
								"desc"
							],
							"type": "string"
						}
					]
				}
			},
			{
				"description": "Allows searching in multiple properties of a record simultaneously.\nThis parameter is intended for human users, not automation. Its exact\nbehavior is intentionally left unspecified and is subject to change\nin the future.",
				"in": "query",
				"name": "search",
				"schema": {
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "is_recent",
				"schema": {
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "is_similarity",
				"schema": {
					"type": "boolean"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"additionalProperties": false,
														"example": {
															"comments": null,
															"is_recent": true,
															"is_regex": false,
															"is_similarity": false,
															"pattern": "example.com"
														},
														"properties": {
															"comments": {
																"nullable": true,
																"type": "string"
															},
															"is_recent": {
																"type": "boolean"
															},
															"is_regex": {
																"type": "boolean"
															},
															"is_similarity": {
																"type": "boolean"
															},
															"pattern": {
																"minLength": 1,
																"type": "string"
															}
														},
														"required": [
															"is_recent",
															"is_similarity",
															"is_regex",
															"pattern"
														],
														"type": "object"
													},
													{
														"properties": {
															"created_at": {
																"format": "date-time",
																"type": "string"
															},
															"id": {
																"example": 2401,
																"format": "int32",
																"title": "identifier",
																"type": "integer"
															},
															"last_modified": {
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"id",
															"created_at",
															"last_modified"
														],
														"type": "object"
													}
												],
												"example": {
													"comments": null,
													"created_at": "2023-11-14T22:13:20Z",
													"id": 2401,
													"is_recent": true,
													"is_regex": false,
													"is_similarity": false,
													"last_modified": "2023-11-14T22:13:20Z",
													"pattern": "example.com"
												}
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"format": "int32",
													"type": "integer"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"format": "int32",
													"type": "integer"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"format": "int32",
													"type": "integer"
												}
											},
											"required": [
												"count",
												"page",
												"per_page",
												"total_count"
											],
											"type": "object"
										}
									},
									"required": [
										"result",
										"result_info"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the list of trusted domains for the account."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List trusted email domains",
		"tags": [
			"Email Security Settings"
		]
	},
	"GET /accounts/{account_id}/email-security/settings/trusted_domains/{pattern_id}": {
		"operationId": "email_security_get_trusted_domain",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "pattern_id",
				"required": true,
				"schema": {
					"example": 2401,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"additionalProperties": false,
													"example": {
														"comments": null,
														"is_recent": true,
														"is_regex": false,
														"is_similarity": false,
														"pattern": "example.com"
													},
													"properties": {
														"comments": {
															"nullable": true,
															"type": "string"
														},
														"is_recent": {
															"type": "boolean"
														},
														"is_regex": {
															"type": "boolean"
														},
														"is_similarity": {
															"type": "boolean"
														},
														"pattern": {
															"minLength": 1,
															"type": "string"
														}
													},
													"required": [
														"is_recent",
														"is_similarity",
														"is_regex",
														"pattern"
													],
													"type": "object"
												},
												{
													"properties": {
														"created_at": {
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"example": 2401,
															"format": "int32",
															"title": "identifier",
															"type": "integer"
														},
														"last_modified": {
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"id",
														"created_at",
														"last_modified"
													],
													"type": "object"
												}
											],
											"example": {
												"comments": null,
												"created_at": "2023-11-14T22:13:20Z",
												"id": 2401,
												"is_recent": true,
												"is_regex": false,
												"is_similarity": false,
												"last_modified": "2023-11-14T22:13:20Z",
												"pattern": "example.com"
											}
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a trusted email domain",
		"tags": [
			"Email Security Settings"
		]
	},
	"PATCH /accounts/{account_id}/email-security/settings/allow_policies/{policy_id}": {
		"operationId": "email_security_update_allow_policy",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"example": 2401,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"additionalProperties": false,
						"properties": {
							"comments": {
								"maxLength": 1024,
								"nullable": true,
								"type": "string"
							},
							"is_acceptable_sender": {
								"description": "Messages from this sender will be exempted from Spam, Spoof and Bulk dispositions.\nNote: This will not exempt messages with Malicious or Suspicious dispositions.",
								"nullable": true,
								"type": "boolean"
							},
							"is_exempt_recipient": {
								"description": "Messages to this recipient will bypass all detections.",
								"nullable": true,
								"type": "boolean"
							},
							"is_regex": {
								"nullable": true,
								"type": "boolean"
							},
							"is_trusted_sender": {
								"description": "Messages from this sender will bypass all detections and link following.",
								"nullable": true,
								"type": "boolean"
							},
							"pattern": {
								"minLength": 1,
								"nullable": true,
								"type": "string"
							},
							"pattern_type": {
								"allOf": [
									{
										"enum": [
											"EMAIL",
											"DOMAIN",
											"IP",
											"UNKNOWN"
										],
										"type": "string"
									},
									{
										"nullable": true,
										"type": "string"
									}
								]
							},
							"verify_sender": {
								"description": "Enforce DMARC, SPF or DKIM authentication.\nWhen on, Email Security only honors policies that pass authentication.",
								"nullable": true,
								"type": "boolean"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"additionalProperties": false,
													"example": {
														"comments": "Trust all messages send from test@example.com",
														"is_acceptable_sender": false,
														"is_exempt_recipient": false,
														"is_recipient": false,
														"is_regex": false,
														"is_sender": true,
														"is_spoof": false,
														"is_trusted_sender": true,
														"pattern": "test@example.com",
														"pattern_type": "EMAIL",
														"verify_sender": true
													},
													"properties": {
														"comments": {
															"maxLength": 1024,
															"nullable": true,
															"type": "string"
														},
														"is_acceptable_sender": {
															"description": "Messages from this sender will be exempted from Spam, Spoof and Bulk dispositions.\nNote: This will not exempt messages with Malicious or Suspicious dispositions.",
															"type": "boolean"
														},
														"is_exempt_recipient": {
															"description": "Messages to this recipient will bypass all detections.",
															"type": "boolean"
														},
														"is_recipient": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_regex": {
															"type": "boolean"
														},
														"is_sender": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_spoof": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_trusted_sender": {
															"description": "Messages from this sender will bypass all detections and link following.",
															"type": "boolean"
														},
														"pattern": {
															"minLength": 1,
															"type": "string"
														},
														"pattern_type": {
															"enum": [
																"EMAIL",
																"DOMAIN",
																"IP",
																"UNKNOWN"
															],
															"type": "string"
														},
														"verify_sender": {
															"description": "Enforce DMARC, SPF or DKIM authentication.\nWhen on, Email Security only honors policies that pass authentication.",
															"type": "boolean"
														}
													},
													"required": [
														"is_exempt_recipient",
														"is_trusted_sender",
														"is_acceptable_sender",
														"pattern",
														"is_regex",
														"verify_sender",
														"pattern_type"
													],
													"type": "object"
												},
												{
													"properties": {
														"created_at": {
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"example": 2401,
															"format": "int32",
															"title": "identifier",
															"type": "integer"
														},
														"last_modified": {
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"id",
														"created_at",
														"last_modified"
													],
													"type": "object"
												}
											],
											"example": {
												"comments": "Trust all messages send from test@example.com",
												"created_at": "2023-11-14T22:13:20Z",
												"id": 2401,
												"is_acceptable_sender": false,
												"is_exempt_recipient": false,
												"is_recipient": false,
												"is_regex": false,
												"is_sender": true,
												"is_spoof": false,
												"is_trusted_sender": true,
												"last_modified": "2023-11-14T22:13:20Z",
												"pattern": "test@example.com",
												"pattern_type": "EMAIL",
												"verify_sender": true
											}
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update an email allow policy",
		"tags": [
			"Email Security Settings"
		]
	},
	"PATCH /accounts/{account_id}/email-security/settings/block_senders/{pattern_id}": {
		"operationId": "email_security_update_blocked_sender",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "pattern_id",
				"required": true,
				"schema": {
					"example": 2402,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"additionalProperties": false,
						"properties": {
							"comments": {
								"nullable": true,
								"type": "string"
							},
							"is_regex": {
								"nullable": true,
								"type": "boolean"
							},
							"pattern": {
								"minLength": 1,
								"nullable": true,
								"type": "string"
							},
							"pattern_type": {
								"allOf": [
									{
										"enum": [
											"EMAIL",
											"DOMAIN",
											"IP",
											"UNKNOWN"
										],
										"type": "string"
									},
									{
										"nullable": true,
										"type": "string"
									}
								]
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"additionalProperties": false,
													"example": {
														"comments": "block sender with email test@example.com",
														"is_regex": false,
														"pattern": "test@example.com",
														"pattern_type": "EMAIL"
													},
													"properties": {
														"comments": {
															"nullable": true,
															"type": "string"
														},
														"is_regex": {
															"type": "boolean"
														},
														"pattern": {
															"minLength": 1,
															"type": "string"
														},
														"pattern_type": {
															"enum": [
																"EMAIL",
																"DOMAIN",
																"IP",
																"UNKNOWN"
															],
															"type": "string"
														}
													},
													"required": [
														"pattern",
														"is_regex",
														"pattern_type"
													],
													"type": "object"
												},
												{
													"properties": {
														"created_at": {
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"example": 2402,
															"format": "int32",
															"title": "identifier",
															"type": "integer"
														},
														"last_modified": {
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"id",
														"created_at",
														"last_modified"
													],
													"type": "object"
												}
											],
											"example": {
												"comments": "block sender with email test@example.com",
												"created_at": "2023-11-14T22:13:20Z",
												"id": 2402,
												"is_regex": false,
												"last_modified": "2023-11-14T22:13:20Z",
												"pattern": "test@example.com",
												"pattern_type": "EMAIL"
											}
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a blocked email sender",
		"tags": [
			"Email Security Settings"
		]
	},
	"PATCH /accounts/{account_id}/email-security/settings/domains/{domain_id}": {
		"operationId": "email_security_update_domain",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "domain_id",
				"required": true,
				"schema": {
					"description": "The unique identifier for the domain.",
					"example": 2400,
					"format": "int32",
					"type": "integer"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"additionalProperties": false,
						"properties": {
							"domain": {
								"nullable": true,
								"type": "string"
							},
							"folder": {
								"allOf": [
									{
										"enum": [
											"AllItems",
											"Inbox"
										],
										"type": "string"
									}
								]
							},
							"integration_id": {
								"format": "uuid",
								"nullable": true,
								"type": "string"
							},
							"lookback_hops": {
								"format": "int32",
								"maximum": 20,
								"minimum": 1,
								"nullable": true,
								"type": "integer"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {
												"allowed_delivery_modes": [
													"API"
												],
												"created_at": "2023-11-14T22:13:20Z",
												"domain": "example.com",
												"folder": "Inbox",
												"id": 2400,
												"inbox_provider": "Microsoft",
												"integration_id": "a5dbb180-60ea-4578-84bb-d01a5d4e50c3",
												"last_modified": "2023-11-14T22:13:20Z",
												"lookback_hops": 2,
												"o365_tenant_id": "c3c3239d-8858-47df-9618-0e2d9bdf6aa8"
											},
											"properties": {
												"allowed_delivery_modes": {
													"items": {
														"enum": [
															"DIRECT",
															"BCC",
															"JOURNAL",
															"API",
															"RETRO_SCAN"
														],
														"type": "string"
													},
													"type": "array"
												},
												"created_at": {
													"format": "date-time",
													"type": "string"
												},
												"domain": {
													"type": "string"
												},
												"folder": {
													"allOf": [
														{
															"enum": [
																"AllItems",
																"Inbox"
															],
															"type": "string"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												},
												"id": {
													"description": "The unique identifier for the domain.",
													"example": 2400,
													"format": "int32",
													"type": "integer"
												},
												"inbox_provider": {
													"allOf": [
														{
															"enum": [
																"Microsoft",
																"Google"
															],
															"type": "string"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												},
												"integration_id": {
													"format": "uuid",
													"nullable": true,
													"type": "string"
												},
												"last_modified": {
													"format": "date-time",
													"type": "string"
												},
												"lookback_hops": {
													"format": "int32",
													"type": "integer"
												},
												"o365_tenant_id": {
													"nullable": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"created_at",
												"last_modified",
												"domain",
												"allowed_delivery_modes",
												"lookback_hops"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update an email domain",
		"tags": [
			"Email Security Settings"
		]
	},
	"PATCH /accounts/{account_id}/email-security/settings/impersonation_registry/{display_name_id}": {
		"operationId": "email_security_update_display_name",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "display_name_id",
				"required": true,
				"schema": {
					"example": 2403,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"additionalProperties": false,
						"properties": {
							"email": {
								"nullable": true,
								"type": "string"
							},
							"is_email_regex": {
								"nullable": true,
								"type": "boolean"
							},
							"name": {
								"nullable": true,
								"type": "string"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"comments": {
													"nullable": true,
													"type": "string"
												},
												"created_at": {
													"format": "date-time",
													"type": "string"
												},
												"directory_id": {
													"allOf": [
														{
															"format": "int64",
															"type": "integer"
														},
														{
															"nullable": true,
															"type": "integer"
														}
													]
												},
												"directory_node_id": {
													"allOf": [
														{
															"format": "int32",
															"type": "integer"
														},
														{
															"nullable": true,
															"type": "integer"
														}
													]
												},
												"email": {
													"nullable": true,
													"type": "string"
												},
												"external_directory_node_id": {
													"deprecated": true,
													"nullable": true,
													"type": "string"
												},
												"id": {
													"example": 2403,
													"format": "int32",
													"title": "identifier",
													"type": "integer"
												},
												"is_email_regex": {
													"type": "boolean"
												},
												"last_modified": {
													"format": "date-time",
													"type": "string"
												},
												"name": {
													"type": "string"
												},
												"provenance": {
													"nullable": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"created_at",
												"last_modified",
												"name",
												"is_email_regex"
											],
											"type": "object"
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update an entry in impersonation registry",
		"tags": [
			"Email Security Settings"
		]
	},
	"PATCH /accounts/{account_id}/email-security/settings/trusted_domains/{pattern_id}": {
		"operationId": "email_security_update_trusted_domain",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "pattern_id",
				"required": true,
				"schema": {
					"example": 2401,
					"format": "int32",
					"title": "identifier",
					"type": "integer"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"additionalProperties": false,
						"properties": {
							"comments": {
								"nullable": true,
								"type": "string"
							},
							"is_recent": {
								"nullable": true,
								"type": "boolean"
							},
							"is_regex": {
								"nullable": true,
								"type": "boolean"
							},
							"is_similarity": {
								"nullable": true,
								"type": "boolean"
							},
							"pattern": {
								"minLength": 1,
								"nullable": true,
								"type": "string"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"additionalProperties": false,
													"example": {
														"comments": null,
														"is_recent": true,
														"is_regex": false,
														"is_similarity": false,
														"pattern": "example.com"
													},
													"properties": {
														"comments": {
															"nullable": true,
															"type": "string"
														},
														"is_recent": {
															"type": "boolean"
														},
														"is_regex": {
															"type": "boolean"
														},
														"is_similarity": {
															"type": "boolean"
														},
														"pattern": {
															"minLength": 1,
															"type": "string"
														}
													},
													"required": [
														"is_recent",
														"is_similarity",
														"is_regex",
														"pattern"
													],
													"type": "object"
												},
												{
													"properties": {
														"created_at": {
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"example": 2401,
															"format": "int32",
															"title": "identifier",
															"type": "integer"
														},
														"last_modified": {
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"id",
														"created_at",
														"last_modified"
													],
													"type": "object"
												}
											],
											"example": {
												"comments": null,
												"created_at": "2023-11-14T22:13:20Z",
												"id": 2401,
												"is_recent": true,
												"is_regex": false,
												"is_similarity": false,
												"last_modified": "2023-11-14T22:13:20Z",
												"pattern": "example.com"
											}
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": ""
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a trusted email domain",
		"tags": [
			"Email Security Settings"
		]
	},
	"POST /accounts/{account_id}/email-security/settings/allow_policies": {
		"operationId": "email_security_create_allow_policy",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"additionalProperties": false,
						"example": {
							"comments": "Trust all messages send from test@example.com",
							"is_acceptable_sender": false,
							"is_exempt_recipient": false,
							"is_recipient": false,
							"is_regex": false,
							"is_sender": true,
							"is_spoof": false,
							"is_trusted_sender": true,
							"pattern": "test@example.com",
							"pattern_type": "EMAIL",
							"verify_sender": true
						},
						"properties": {
							"comments": {
								"maxLength": 1024,
								"nullable": true,
								"type": "string"
							},
							"is_acceptable_sender": {
								"description": "Messages from this sender will be exempted from Spam, Spoof and Bulk dispositions.\nNote: This will not exempt messages with Malicious or Suspicious dispositions.",
								"type": "boolean"
							},
							"is_exempt_recipient": {
								"description": "Messages to this recipient will bypass all detections.",
								"type": "boolean"
							},
							"is_recipient": {
								"deprecated": true,
								"type": "boolean"
							},
							"is_regex": {
								"type": "boolean"
							},
							"is_sender": {
								"deprecated": true,
								"type": "boolean"
							},
							"is_spoof": {
								"deprecated": true,
								"type": "boolean"
							},
							"is_trusted_sender": {
								"description": "Messages from this sender will bypass all detections and link following.",
								"type": "boolean"
							},
							"pattern": {
								"minLength": 1,
								"type": "string"
							},
							"pattern_type": {
								"enum": [
									"EMAIL",
									"DOMAIN",
									"IP",
									"UNKNOWN"
								],
								"type": "string"
							},
							"verify_sender": {
								"description": "Enforce DMARC, SPF or DKIM authentication.\nWhen on, Email Security only honors policies that pass authentication.",
								"type": "boolean"
							}
						},
						"required": [
							"is_exempt_recipient",
							"is_trusted_sender",
							"is_acceptable_sender",
							"pattern",
							"is_regex",
							"verify_sender",
							"pattern_type"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"201": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"additionalProperties": false,
													"example": {
														"comments": "Trust all messages send from test@example.com",
														"is_acceptable_sender": false,
														"is_exempt_recipient": false,
														"is_recipient": false,
														"is_regex": false,
														"is_sender": true,
														"is_spoof": false,
														"is_trusted_sender": true,
														"pattern": "test@example.com",
														"pattern_type": "EMAIL",
														"verify_sender": true
													},
													"properties": {
														"comments": {
															"maxLength": 1024,
															"nullable": true,
															"type": "string"
														},
														"is_acceptable_sender": {
															"description": "Messages from this sender will be exempted from Spam, Spoof and Bulk dispositions.\nNote: This will not exempt messages with Malicious or Suspicious dispositions.",
															"type": "boolean"
														},
														"is_exempt_recipient": {
															"description": "Messages to this recipient will bypass all detections.",
															"type": "boolean"
														},
														"is_recipient": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_regex": {
															"type": "boolean"
														},
														"is_sender": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_spoof": {
															"deprecated": true,
															"type": "boolean"
														},
														"is_trusted_sender": {
															"description": "Messages from this sender will bypass all detections and link following.",
															"type": "boolean"
														},
														"pattern": {
															"minLength": 1,
															"type": "string"
														},
														"pattern_type": {
															"enum": [
																"EMAIL",
																"DOMAIN",
																"IP",
																"UNKNOWN"
															],
															"type": "string"
														},
														"verify_sender": {
															"description": "Enforce DMARC, SPF or DKIM authentication.\nWhen on, Email Security only honors policies that pass authentication.",
															"type": "boolean"
														}
													},
													"required": [
														"is_exempt_recipient",
														"is_trusted_sender",
														"is_acceptable_sender",
														"pattern",
														"is_regex",
														"verify_sender",
														"pattern_type"
													],
													"type": "object"
												},
												{
													"properties": {
														"created_at": {
															"format": "date-time",
															"type": "string"
														},
														"id": {
															"example": 2401,
															"format": "int32",
															"title": "identifier",
															"type": "integer"
														},
														"last_modified": {
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"id",
														"created_at",
														"last_modified"
													],
													"type": "object"
												}
											],
											"example": {
												"comments": "Trust all messages send from test@example.com",
												"created_at": "2023-11-14T22:13:20Z",
												"id": 2401,
												"is_acceptable_sender": false,
												"is_exempt_recipient": false,
												"is_recipient": false,
												"is_regex": false,
												"is_sender": true,
												"is_spoof": false,
												"is_trusted_sender": true,
												"last_modified": "2023-11-14T22:13:20Z",
												"pattern": "test@example.com",
												"pattern_type": "EMAIL",
												"verify_sender": true
											}
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the newly created policy."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create an email allow policy",
		"tags": [
			"Email Security Settings"
		]
	},
	"POST /accounts/{account_id}/email-security/settings/block_senders": {
		"operationId": "email_security_create_blocked_sender",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"oneOf": [
							{
								"additionalProperties": false,
								"example": {
									"comments": "block sender with email test@example.com",
									"is_regex": false,
									"pattern": "test@example.com",
									"pattern_type": "EMAIL"
								},
								"properties": {
									"comments": {
										"nullable": true,
										"type": "string"
									},
									"is_regex": {
										"type": "boolean"
									},
									"pattern": {
										"minLength": 1,
										"type": "string"
									},
									"pattern_type": {
										"enum": [
											"EMAIL",
											"DOMAIN",
											"IP",
											"UNKNOWN"
										],
										"type": "string"
									}
								},
								"required": [
									"pattern",
									"is_regex",
									"pattern_type"
								],
								"type": "object"
							},
							{
								"items": {
									"additionalProperties": false,
									"example": {
										"comments": "block sender with email test@example.com",
										"is_regex": false,
										"pattern": "test@example.com",
										"pattern_type": "EMAIL"
									},
									"properties": {
										"comments": {
											"nullable": true,
											"type": "string"
										},
										"is_regex": {
											"type": "boolean"
										},
										"pattern": {
											"minLength": 1,
											"type": "string"
										},
										"pattern_type": {
											"enum": [
												"EMAIL",
												"DOMAIN",
												"IP",
												"UNKNOWN"
											],
											"type": "string"
										}
									},
									"required": [
										"pattern",
										"is_regex",
										"pattern_type"
									],
									"type": "object"
								},
								"type": "array"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"201": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"allOf": [
														{
															"additionalProperties": false,
															"example": {
																"comments": "block sender with email test@example.com",
																"is_regex": false,
																"pattern": "test@example.com",
																"pattern_type": "EMAIL"
															},
															"properties": {
																"comments": {
																	"nullable": true,
																	"type": "string"
																},
																"is_regex": {
																	"type": "boolean"
																},
																"pattern": {
																	"minLength": 1,
																	"type": "string"
																},
																"pattern_type": {
																	"enum": [
																		"EMAIL",
																		"DOMAIN",
																		"IP",
																		"UNKNOWN"
																	],
																	"type": "string"
																}
															},
															"required": [
																"pattern",
																"is_regex",
																"pattern_type"
															],
															"type": "object"
														},
														{
															"properties": {
																"created_at": {
																	"format": "date-time",
																	"type": "string"
																},
																"id": {
																	"example": 2402,
																	"format": "int32",
																	"title": "identifier",
																	"type": "integer"
																},
																"last_modified": {
																	"format": "date-time",
																	"type": "string"
																}
															},
															"required": [
																"id",
																"created_at",
																"last_modified"
															],
															"type": "object"
														}
													],
													"example": {
														"comments": "block sender with email test@example.com",
														"created_at": "2023-11-14T22:13:20Z",
														"id": 2402,
														"is_regex": false,
														"last_modified": "2023-11-14T22:13:20Z",
														"pattern": "test@example.com",
														"pattern_type": "EMAIL"
													}
												},
												{
													"items": {
														"allOf": [
															{
																"additionalProperties": false,
																"example": {
																	"comments": "block sender with email test@example.com",
																	"is_regex": false,
																	"pattern": "test@example.com",
																	"pattern_type": "EMAIL"
																},
																"properties": {
																	"comments": {
																		"nullable": true,
																		"type": "string"
																	},
																	"is_regex": {
																		"type": "boolean"
																	},
																	"pattern": {
																		"minLength": 1,
																		"type": "string"
																	},
																	"pattern_type": {
																		"enum": [
																			"EMAIL",
																			"DOMAIN",
																			"IP",
																			"UNKNOWN"
																		],
																		"type": "string"
																	}
																},
																"required": [
																	"pattern",
																	"is_regex",
																	"pattern_type"
																],
																"type": "object"
															},
															{
																"properties": {
																	"created_at": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"id": {
																		"example": 2402,
																		"format": "int32",
																		"title": "identifier",
																		"type": "integer"
																	},
																	"last_modified": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"id",
																	"created_at",
																	"last_modified"
																],
																"type": "object"
															}
														],
														"example": {
															"comments": "block sender with email test@example.com",
															"created_at": "2023-11-14T22:13:20Z",
															"id": 2402,
															"is_regex": false,
															"last_modified": "2023-11-14T22:13:20Z",
															"pattern": "test@example.com",
															"pattern_type": "EMAIL"
														}
													},
													"type": "array"
												}
											]
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the newly created patterns in the shape of the request body."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a blocked email sender",
		"tags": [
			"Email Security Settings"
		]
	},
	"POST /accounts/{account_id}/email-security/settings/impersonation_registry": {
		"operationId": "email_security_create_display_name",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"oneOf": [
							{
								"properties": {
									"email": {
										"type": "string"
									},
									"is_email_regex": {
										"type": "boolean"
									},
									"name": {
										"type": "string"
									}
								},
								"required": [
									"name",
									"email",
									"is_email_regex"
								],
								"type": "object"
							},
							{
								"items": {
									"properties": {
										"email": {
											"type": "string"
										},
										"is_email_regex": {
											"type": "boolean"
										},
										"name": {
											"type": "string"
										}
									},
									"required": [
										"name",
										"email",
										"is_email_regex"
									],
									"type": "object"
								},
								"type": "array"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"201": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"properties": {
														"comments": {
															"nullable": true,
															"type": "string"
														},
														"created_at": {
															"format": "date-time",
															"type": "string"
														},
														"directory_id": {
															"allOf": [
																{
																	"format": "int64",
																	"type": "integer"
																},
																{
																	"nullable": true,
																	"type": "integer"
																}
															]
														},
														"directory_node_id": {
															"allOf": [
																{
																	"format": "int32",
																	"type": "integer"
																},
																{
																	"nullable": true,
																	"type": "integer"
																}
															]
														},
														"email": {
															"nullable": true,
															"type": "string"
														},
														"external_directory_node_id": {
															"deprecated": true,
															"nullable": true,
															"type": "string"
														},
														"id": {
															"example": 2403,
															"format": "int32",
															"title": "identifier",
															"type": "integer"
														},
														"is_email_regex": {
															"type": "boolean"
														},
														"last_modified": {
															"format": "date-time",
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"provenance": {
															"nullable": true,
															"type": "string"
														}
													},
													"required": [
														"id",
														"created_at",
														"last_modified",
														"name",
														"is_email_regex"
													],
													"type": "object"
												},
												{
													"items": {
														"properties": {
															"comments": {
																"nullable": true,
																"type": "string"
															},
															"created_at": {
																"format": "date-time",
																"type": "string"
															},
															"directory_id": {
																"allOf": [
																	{
																		"format": "int64",
																		"type": "integer"
																	},
																	{
																		"nullable": true,
																		"type": "integer"
																	}
																]
															},
															"directory_node_id": {
																"allOf": [
																	{
																		"format": "int32",
																		"type": "integer"
																	},
																	{
																		"nullable": true,
																		"type": "integer"
																	}
																]
															},
															"email": {
																"nullable": true,
																"type": "string"
															},
															"external_directory_node_id": {
																"deprecated": true,
																"nullable": true,
																"type": "string"
															},
															"id": {
																"example": 2403,
																"format": "int32",
																"title": "identifier",
																"type": "integer"
															},
															"is_email_regex": {
																"type": "boolean"
															},
															"last_modified": {
																"format": "date-time",
																"type": "string"
															},
															"name": {
																"type": "string"
															},
															"provenance": {
																"nullable": true,
																"type": "string"
															}
														},
														"required": [
															"id",
															"created_at",
															"last_modified",
															"name",
															"is_email_regex"
														],
														"type": "object"
													},
													"type": "array"
												}
											]
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the new entry in the shape of the request body."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create an entry in impersonation registry",
		"tags": [
			"Email Security Settings"
		]
	},
	"POST /accounts/{account_id}/email-security/settings/trusted_domains": {
		"operationId": "email_security_create_trusted_domain",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Account Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"title": "account_id",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"oneOf": [
							{
								"additionalProperties": false,
								"example": {
									"comments": null,
									"is_recent": true,
									"is_regex": false,
									"is_similarity": false,
									"pattern": "example.com"
								},
								"properties": {
									"comments": {
										"nullable": true,
										"type": "string"
									},
									"is_recent": {
										"type": "boolean"
									},
									"is_regex": {
										"type": "boolean"
									},
									"is_similarity": {
										"type": "boolean"
									},
									"pattern": {
										"minLength": 1,
										"type": "string"
									}
								},
								"required": [
									"is_recent",
									"is_similarity",
									"is_regex",
									"pattern"
								],
								"type": "object"
							},
							{
								"items": {
									"additionalProperties": false,
									"example": {
										"comments": null,
										"is_recent": true,
										"is_regex": false,
										"is_similarity": false,
										"pattern": "example.com"
									},
									"properties": {
										"comments": {
											"nullable": true,
											"type": "string"
										},
										"is_recent": {
											"type": "boolean"
										},
										"is_regex": {
											"type": "boolean"
										},
										"is_similarity": {
											"type": "boolean"
										},
										"pattern": {
											"minLength": 1,
											"type": "string"
										}
									},
									"required": [
										"is_recent",
										"is_similarity",
										"is_regex",
										"pattern"
									],
									"type": "object"
								},
								"type": "array"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"201": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"format": "int32",
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object"
											},
											"type": "array"
										},
										"success": {
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"oneOf": [
												{
													"allOf": [
														{
															"additionalProperties": false,
															"example": {
																"comments": null,
																"is_recent": true,
																"is_regex": false,
																"is_similarity": false,
																"pattern": "example.com"
															},
															"properties": {
																"comments": {
																	"nullable": true,
																	"type": "string"
																},
																"is_recent": {
																	"type": "boolean"
																},
																"is_regex": {
																	"type": "boolean"
																},
																"is_similarity": {
																	"type": "boolean"
																},
																"pattern": {
																	"minLength": 1,
																	"type": "string"
																}
															},
															"required": [
																"is_recent",
																"is_similarity",
																"is_regex",
																"pattern"
															],
															"type": "object"
														},
														{
															"properties": {
																"created_at": {
																	"format": "date-time",
																	"type": "string"
																},
																"id": {
																	"example": 2401,
																	"format": "int32",
																	"title": "identifier",
																	"type": "integer"
																},
																"last_modified": {
																	"format": "date-time",
																	"type": "string"
																}
															},
															"required": [
																"id",
																"created_at",
																"last_modified"
															],
															"type": "object"
														}
													],
													"example": {
														"comments": null,
														"created_at": "2023-11-14T22:13:20Z",
														"id": 2401,
														"is_recent": true,
														"is_regex": false,
														"is_similarity": false,
														"last_modified": "2023-11-14T22:13:20Z",
														"pattern": "example.com"
													}
												},
												{
													"items": {
														"allOf": [
															{
																"additionalProperties": false,
																"example": {
																	"comments": null,
																	"is_recent": true,
																	"is_regex": false,
																	"is_similarity": false,
																	"pattern": "example.com"
																},
																"properties": {
																	"comments": {
																		"nullable": true,
																		"type": "string"
																	},
																	"is_recent": {
																		"type": "boolean"
																	},
																	"is_regex": {
																		"type": "boolean"
																	},
																	"is_similarity": {
																		"type": "boolean"
																	},
																	"pattern": {
																		"minLength": 1,
																		"type": "string"
																	}
																},
																"required": [
																	"is_recent",
																	"is_similarity",
																	"is_regex",
																	"pattern"
																],
																"type": "object"
															},
															{
																"properties": {
																	"created_at": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"id": {
																		"example": 2401,
																		"format": "int32",
																		"title": "identifier",
																		"type": "integer"
																	},
																	"last_modified": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"id",
																	"created_at",
																	"last_modified"
																],
																"type": "object"
															}
														],
														"example": {
															"comments": null,
															"created_at": "2023-11-14T22:13:20Z",
															"id": 2401,
															"is_recent": true,
															"is_regex": false,
															"is_similarity": false,
															"last_modified": "2023-11-14T22:13:20Z",
															"pattern": "example.com"
														}
													},
													"type": "array"
												}
											]
										}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Contains the new trusted domain in the shape of the request body."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"example": [
										{
											"code": 7003,
											"message": "No route for the URI"
										}
									],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"messages": {
									"example": [],
									"items": {
										"properties": {
											"code": {
												"format": "int32",
												"minimum": 1000,
												"type": "integer"
											},
											"message": {
												"type": "string"
											}
										},
										"required": [
											"code",
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"nullable": true,
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"type": "object"
						}
					}
				},
				"description": "Client Error"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a trusted email domain",
		"tags": [
			"Email Security Settings"
		]
	}
}