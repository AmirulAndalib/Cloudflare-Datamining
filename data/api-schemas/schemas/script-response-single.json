{
	"allOf": [
		{
			"allOf": [
				{
					"properties": {
						"errors": {
							"example": [],
							"items": {
								"properties": {
									"code": {
										"minimum": 1000,
										"type": "integer"
									},
									"message": {
										"type": "string"
									}
								},
								"required": [
									"code",
									"message"
								],
								"type": "object",
								"uniqueItems": true
							},
							"type": "array"
						},
						"messages": {
							"example": [],
							"items": {
								"properties": {
									"code": {
										"minimum": 1000,
										"type": "integer"
									},
									"message": {
										"type": "string"
									}
								},
								"required": [
									"code",
									"message"
								],
								"type": "object",
								"uniqueItems": true
							},
							"type": "array"
						},
						"result": {
							"anyOf": [
								{
									"type": "object"
								},
								{
									"items": {},
									"type": "array"
								},
								{
									"type": "string"
								}
							]
						},
						"success": {
							"description": "Whether the API call was successful",
							"enum": [
								true
							],
							"example": true,
							"type": "boolean"
						}
					},
					"required": [
						"success",
						"errors",
						"messages",
						"result"
					],
					"type": "object"
				},
				{
					"properties": {
						"result": {
							"anyOf": [
								{
									"type": "object"
								},
								{
									"type": "string"
								}
							]
						}
					}
				}
			],
			"type": "object"
		},
		{
			"properties": {
				"result": {
					"properties": {
						"created_on": {
							"description": "When the script was created.",
							"example": "2017-01-01T00:00:00Z",
							"format": "date-time",
							"readOnly": true,
							"type": "string"
						},
						"etag": {
							"description": "Hashed script content, can be used in a If-None-Match header when updating.",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"readOnly": true,
							"type": "string"
						},
						"id": {
							"description": "The id of the script in the Workers system. Usually the script name.",
							"example": "my-workers-script",
							"readOnly": true,
							"type": "string"
						},
						"logpush": {
							"description": "Whether Logpush is turned on for the Worker.",
							"example": false,
							"type": "boolean"
						},
						"modified_on": {
							"description": "When the script was last modified.",
							"example": "2017-01-01T00:00:00Z",
							"format": "date-time",
							"readOnly": true,
							"type": "string"
						},
						"placement_mode": {
							"description": "Specifies the placement mode for the Worker (e.g. 'smart').",
							"example": "smart",
							"type": "string"
						},
						"usage_model": {
							"description": "Specifies the usage model for the Worker (e.g. 'bundled' or 'unbound').",
							"example": "unbound",
							"pattern": "^(bundled|unbound)$",
							"type": "string"
						}
					}
				}
			},
			"x-cfLinkErrors": {
				"10001": "Unsupported or unexpected Content Type",
				"10002": "Unexpected internal server error",
				"10003": "Missing required URL parameter",
				"10004": "Malformed URL parameter",
				"10006": "Unparseable script body",
				"10007": "Resource not found (similar to HTTP 404)",
				"10014": "Internal error while attempting authorization checks",
				"10015": "The current account is not authorized to use workers",
				"10018": "Attempted to update a script where the e-tag does not match",
				"10021": "Script content failed validation checks, but was otherwise parseable",
				"10023": "Unauthorized access attempt",
				"10027": "Script body was too large",
				"10075": "Requires a Workers Paid plan"
			}
		}
	]
}