{
	"DELETE /accounts/{identifier}/devices/dex_tests/{uuid}": {
		"description": "Delete a Device DEX test. Returns the remaining device dex tests for the account.",
		"operationId": "device-dex-test-delete-device-dex-test",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			},
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "API uuid tag.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"data": {
														"description": "The configuration object which contains the details for the WARP client to conduct the test.",
														"example": {
															"host": "https://dash.cloudflare.com",
															"kind": "http",
															"method": "GET"
														},
														"properties": {
															"host": {
																"description": "The desired endpoint to test.",
																"example": "https://dash.cloudflare.com",
																"type": "string"
															},
															"kind": {
																"description": "The type of test.",
																"example": "http",
																"type": "string"
															},
															"method": {
																"description": "The HTTP request method type.",
																"example": "GET",
																"type": "string"
															}
														},
														"type": "object"
													},
													"description": {
														"description": "Additional details about the test.",
														"example": "Checks the dash endpoint every 30 minutes",
														"type": "string"
													},
													"enabled": {
														"description": "Determines whether or not the test is active.",
														"example": true,
														"type": "boolean"
													},
													"interval": {
														"description": "How often the test will run.",
														"example": "30m",
														"type": "string"
													},
													"name": {
														"description": "The name of the DEX test. Must be unique.",
														"example": "HTTP dash health check",
														"type": "string"
													}
												},
												"required": [
													"name",
													"interval",
													"enabled",
													"data"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete Device DEX test response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"data": {
																"description": "The configuration object which contains the details for the WARP client to conduct the test.",
																"example": {
																	"host": "https://dash.cloudflare.com",
																	"kind": "http",
																	"method": "GET"
																},
																"properties": {
																	"host": {
																		"description": "The desired endpoint to test.",
																		"example": "https://dash.cloudflare.com",
																		"type": "string"
																	},
																	"kind": {
																		"description": "The type of test.",
																		"example": "http",
																		"type": "string"
																	},
																	"method": {
																		"description": "The HTTP request method type.",
																		"example": "GET",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"description": {
																"description": "Additional details about the test.",
																"example": "Checks the dash endpoint every 30 minutes",
																"type": "string"
															},
															"enabled": {
																"description": "Determines whether or not the test is active.",
																"example": true,
																"type": "boolean"
															},
															"interval": {
																"description": "How often the test will run.",
																"example": "30m",
																"type": "string"
															},
															"name": {
																"description": "The name of the DEX test. Must be unique.",
																"example": "HTTP dash health check",
																"type": "string"
															}
														},
														"required": [
															"name",
															"interval",
															"enabled",
															"data"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete DEX test response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Device DEX test",
		"tags": [
			"Device DEX Tests"
		]
	},
	"GET /accounts/{identifier}/devices/dex_tests": {
		"description": "Fetch all DEX tests.",
		"operationId": "device-dex-test-details",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"data": {
														"description": "The configuration object which contains the details for the WARP client to conduct the test.",
														"example": {
															"host": "https://dash.cloudflare.com",
															"kind": "http",
															"method": "GET"
														},
														"properties": {
															"host": {
																"description": "The desired endpoint to test.",
																"example": "https://dash.cloudflare.com",
																"type": "string"
															},
															"kind": {
																"description": "The type of test.",
																"example": "http",
																"type": "string"
															},
															"method": {
																"description": "The HTTP request method type.",
																"example": "GET",
																"type": "string"
															}
														},
														"type": "object"
													},
													"description": {
														"description": "Additional details about the test.",
														"example": "Checks the dash endpoint every 30 minutes",
														"type": "string"
													},
													"enabled": {
														"description": "Determines whether or not the test is active.",
														"example": true,
														"type": "boolean"
													},
													"interval": {
														"description": "How often the test will run.",
														"example": "30m",
														"type": "string"
													},
													"name": {
														"description": "The name of the DEX test. Must be unique.",
														"example": "HTTP dash health check",
														"type": "string"
													}
												},
												"required": [
													"name",
													"interval",
													"enabled",
													"data"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Device DEX test details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"data": {
															"description": "The configuration object which contains the details for the WARP client to conduct the test.",
															"example": {
																"host": "https://dash.cloudflare.com",
																"kind": "http",
																"method": "GET"
															},
															"properties": {
																"host": {
																	"description": "The desired endpoint to test.",
																	"example": "https://dash.cloudflare.com",
																	"type": "string"
																},
																"kind": {
																	"description": "The type of test.",
																	"example": "http",
																	"type": "string"
																},
																"method": {
																	"description": "The HTTP request method type.",
																	"example": "GET",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"description": {
															"description": "Additional details about the test.",
															"example": "Checks the dash endpoint every 30 minutes",
															"type": "string"
														},
														"enabled": {
															"description": "Determines whether or not the test is active.",
															"example": true,
															"type": "boolean"
														},
														"interval": {
															"description": "How often the test will run.",
															"example": "30m",
															"type": "string"
														},
														"name": {
															"description": "The name of the DEX test. Must be unique.",
															"example": "HTTP dash health check",
															"type": "string"
														}
													},
													"required": [
														"name",
														"interval",
														"enabled",
														"data"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Device DEX test response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Device DEX tests",
		"tags": [
			"Device DEX Tests"
		]
	},
	"GET /accounts/{identifier}/devices/dex_tests/{uuid}": {
		"description": "Fetch a single DEX test.",
		"operationId": "device-dex-test-get-device-dex-test",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			},
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "API uuid tag.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"data": {
													"description": "The configuration object which contains the details for the WARP client to conduct the test.",
													"example": {
														"host": "https://dash.cloudflare.com",
														"kind": "http",
														"method": "GET"
													},
													"properties": {
														"host": {
															"description": "The desired endpoint to test.",
															"example": "https://dash.cloudflare.com",
															"type": "string"
														},
														"kind": {
															"description": "The type of test.",
															"example": "http",
															"type": "string"
														},
														"method": {
															"description": "The HTTP request method type.",
															"example": "GET",
															"type": "string"
														}
													},
													"type": "object"
												},
												"description": {
													"description": "Additional details about the test.",
													"example": "Checks the dash endpoint every 30 minutes",
													"type": "string"
												},
												"enabled": {
													"description": "Determines whether or not the test is active.",
													"example": true,
													"type": "boolean"
												},
												"interval": {
													"description": "How often the test will run.",
													"example": "30m",
													"type": "string"
												},
												"name": {
													"description": "The name of the DEX test. Must be unique.",
													"example": "HTTP dash health check",
													"type": "string"
												}
											},
											"required": [
												"name",
												"interval",
												"enabled",
												"data"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Device DEX test details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"data": {
															"description": "The configuration object which contains the details for the WARP client to conduct the test.",
															"example": {
																"host": "https://dash.cloudflare.com",
																"kind": "http",
																"method": "GET"
															},
															"properties": {
																"host": {
																	"description": "The desired endpoint to test.",
																	"example": "https://dash.cloudflare.com",
																	"type": "string"
																},
																"kind": {
																	"description": "The type of test.",
																	"example": "http",
																	"type": "string"
																},
																"method": {
																	"description": "The HTTP request method type.",
																	"example": "GET",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"description": {
															"description": "Additional details about the test.",
															"example": "Checks the dash endpoint every 30 minutes",
															"type": "string"
														},
														"enabled": {
															"description": "Determines whether or not the test is active.",
															"example": true,
															"type": "boolean"
														},
														"interval": {
															"description": "How often the test will run.",
															"example": "30m",
															"type": "string"
														},
														"name": {
															"description": "The name of the DEX test. Must be unique.",
															"example": "HTTP dash health check",
															"type": "string"
														}
													},
													"required": [
														"name",
														"interval",
														"enabled",
														"data"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Device DEX test response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Device DEX test",
		"tags": [
			"Device DEX Tests"
		]
	},
	"POST /accounts/{identifier}/devices/dex_tests": {
		"description": "Create a DEX test.",
		"operationId": "device-dex-test-create-device-dex-test",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"data": {
								"description": "The configuration object which contains the details for the WARP client to conduct the test.",
								"example": {
									"host": "https://dash.cloudflare.com",
									"kind": "http",
									"method": "GET"
								},
								"properties": {
									"host": {
										"description": "The desired endpoint to test.",
										"example": "https://dash.cloudflare.com",
										"type": "string"
									},
									"kind": {
										"description": "The type of test.",
										"example": "http",
										"type": "string"
									},
									"method": {
										"description": "The HTTP request method type.",
										"example": "GET",
										"type": "string"
									}
								},
								"type": "object"
							},
							"description": {
								"description": "Additional details about the test.",
								"example": "Checks the dash endpoint every 30 minutes",
								"type": "string"
							},
							"enabled": {
								"description": "Determines whether or not the test is active.",
								"example": true,
								"type": "boolean"
							},
							"interval": {
								"description": "How often the test will run.",
								"example": "30m",
								"type": "string"
							},
							"name": {
								"description": "The name of the DEX test. Must be unique.",
								"example": "HTTP dash health check",
								"type": "string"
							}
						},
						"required": [
							"name",
							"interval",
							"enabled",
							"data"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"data": {
													"description": "The configuration object which contains the details for the WARP client to conduct the test.",
													"example": {
														"host": "https://dash.cloudflare.com",
														"kind": "http",
														"method": "GET"
													},
													"properties": {
														"host": {
															"description": "The desired endpoint to test.",
															"example": "https://dash.cloudflare.com",
															"type": "string"
														},
														"kind": {
															"description": "The type of test.",
															"example": "http",
															"type": "string"
														},
														"method": {
															"description": "The HTTP request method type.",
															"example": "GET",
															"type": "string"
														}
													},
													"type": "object"
												},
												"description": {
													"description": "Additional details about the test.",
													"example": "Checks the dash endpoint every 30 minutes",
													"type": "string"
												},
												"enabled": {
													"description": "Determines whether or not the test is active.",
													"example": true,
													"type": "boolean"
												},
												"interval": {
													"description": "How often the test will run.",
													"example": "30m",
													"type": "string"
												},
												"name": {
													"description": "The name of the DEX test. Must be unique.",
													"example": "HTTP dash health check",
													"type": "string"
												}
											},
											"required": [
												"name",
												"interval",
												"enabled",
												"data"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Dex test response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"data": {
															"description": "The configuration object which contains the details for the WARP client to conduct the test.",
															"example": {
																"host": "https://dash.cloudflare.com",
																"kind": "http",
																"method": "GET"
															},
															"properties": {
																"host": {
																	"description": "The desired endpoint to test.",
																	"example": "https://dash.cloudflare.com",
																	"type": "string"
																},
																"kind": {
																	"description": "The type of test.",
																	"example": "http",
																	"type": "string"
																},
																"method": {
																	"description": "The HTTP request method type.",
																	"example": "GET",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"description": {
															"description": "Additional details about the test.",
															"example": "Checks the dash endpoint every 30 minutes",
															"type": "string"
														},
														"enabled": {
															"description": "Determines whether or not the test is active.",
															"example": true,
															"type": "boolean"
														},
														"interval": {
															"description": "How often the test will run.",
															"example": "30m",
															"type": "string"
														},
														"name": {
															"description": "The name of the DEX test. Must be unique.",
															"example": "HTTP dash health check",
															"type": "string"
														}
													},
													"required": [
														"name",
														"interval",
														"enabled",
														"data"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Dex test response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Device DEX test",
		"tags": [
			"Device DEX Tests"
		]
	},
	"PUT /accounts/{identifier}/devices/dex_tests/{uuid}": {
		"description": "Update a DEX test.",
		"operationId": "device-dex-test-update-device-dex-test",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			},
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "API uuid tag.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"data": {
								"description": "The configuration object which contains the details for the WARP client to conduct the test.",
								"example": {
									"host": "https://dash.cloudflare.com",
									"kind": "http",
									"method": "GET"
								},
								"properties": {
									"host": {
										"description": "The desired endpoint to test.",
										"example": "https://dash.cloudflare.com",
										"type": "string"
									},
									"kind": {
										"description": "The type of test.",
										"example": "http",
										"type": "string"
									},
									"method": {
										"description": "The HTTP request method type.",
										"example": "GET",
										"type": "string"
									}
								},
								"type": "object"
							},
							"description": {
								"description": "Additional details about the test.",
								"example": "Checks the dash endpoint every 30 minutes",
								"type": "string"
							},
							"enabled": {
								"description": "Determines whether or not the test is active.",
								"example": true,
								"type": "boolean"
							},
							"interval": {
								"description": "How often the test will run.",
								"example": "30m",
								"type": "string"
							},
							"name": {
								"description": "The name of the DEX test. Must be unique.",
								"example": "HTTP dash health check",
								"type": "string"
							}
						},
						"required": [
							"name",
							"interval",
							"enabled",
							"data"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"data": {
													"description": "The configuration object which contains the details for the WARP client to conduct the test.",
													"example": {
														"host": "https://dash.cloudflare.com",
														"kind": "http",
														"method": "GET"
													},
													"properties": {
														"host": {
															"description": "The desired endpoint to test.",
															"example": "https://dash.cloudflare.com",
															"type": "string"
														},
														"kind": {
															"description": "The type of test.",
															"example": "http",
															"type": "string"
														},
														"method": {
															"description": "The HTTP request method type.",
															"example": "GET",
															"type": "string"
														}
													},
													"type": "object"
												},
												"description": {
													"description": "Additional details about the test.",
													"example": "Checks the dash endpoint every 30 minutes",
													"type": "string"
												},
												"enabled": {
													"description": "Determines whether or not the test is active.",
													"example": true,
													"type": "boolean"
												},
												"interval": {
													"description": "How often the test will run.",
													"example": "30m",
													"type": "string"
												},
												"name": {
													"description": "The name of the DEX test. Must be unique.",
													"example": "HTTP dash health check",
													"type": "string"
												}
											},
											"required": [
												"name",
												"interval",
												"enabled",
												"data"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Dex test response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"data": {
															"description": "The configuration object which contains the details for the WARP client to conduct the test.",
															"example": {
																"host": "https://dash.cloudflare.com",
																"kind": "http",
																"method": "GET"
															},
															"properties": {
																"host": {
																	"description": "The desired endpoint to test.",
																	"example": "https://dash.cloudflare.com",
																	"type": "string"
																},
																"kind": {
																	"description": "The type of test.",
																	"example": "http",
																	"type": "string"
																},
																"method": {
																	"description": "The HTTP request method type.",
																	"example": "GET",
																	"type": "string"
																}
															},
															"type": "object"
														},
														"description": {
															"description": "Additional details about the test.",
															"example": "Checks the dash endpoint every 30 minutes",
															"type": "string"
														},
														"enabled": {
															"description": "Determines whether or not the test is active.",
															"example": true,
															"type": "boolean"
														},
														"interval": {
															"description": "How often the test will run.",
															"example": "30m",
															"type": "string"
														},
														"name": {
															"description": "The name of the DEX test. Must be unique.",
															"example": "HTTP dash health check",
															"type": "string"
														}
													},
													"required": [
														"name",
														"interval",
														"enabled",
														"data"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Dex test response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Device DEX test",
		"tags": [
			"Device DEX Tests"
		]
	}
}