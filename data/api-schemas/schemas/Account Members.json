{
	"DELETE /accounts/{account_identifier}/members/{identifier}": {
		"description": "Remove a member from an account.",
		"operationId": "account-members-remove-member",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Membership identifier tag.",
					"example": "4536bcfad5faccb111b47003c79917fa",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id"
											],
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Remove Member response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"properties": {
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														}
													},
													"required": [
														"id"
													],
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Remove Member response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Remove Member",
		"tags": [
			"Account Members"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_identifier}/members": {
		"description": "List all members of an account.",
		"operationId": "account-members-list-members",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {}
			},
			{
				"in": "query",
				"name": "order",
				"schema": {
					"description": "Field to order results by.",
					"enum": [
						"user.first_name",
						"user.last_name",
						"user.email",
						"status"
					],
					"example": "status"
				}
			},
			{
				"in": "query",
				"name": "status",
				"schema": {
					"description": "A member's status in the account.",
					"enum": [
						"accepted",
						"pending",
						"rejected"
					],
					"example": "accepted",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Maximum number of results per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "Direction to order results.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "desc",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"email": {
														"description": "The contact email address of the user.",
														"example": "user@example.com",
														"maxLength": 90,
														"type": "string"
													},
													"id": {
														"description": "Identifier",
														"example": "023e105f4ecef8ad9ca31a8372d0c353",
														"maxLength": 32,
														"readOnly": true,
														"type": "string"
													},
													"name": {
														"description": "Member Name.",
														"example": "John Smith",
														"maxLength": 100,
														"nullable": true,
														"type": "string"
													},
													"roles": {
														"description": "Roles assigned to this Member.",
														"items": {
															"properties": {
																"description": {
																	"description": "Description of role's permissions.",
																	"example": "Administrative access to the entire Organization",
																	"readOnly": true,
																	"type": "string"
																},
																"id": {
																	"description": "Role identifier tag.",
																	"example": "3536bcfad5faccb999b47003c79917fb",
																	"maxLength": 32,
																	"type": "string"
																},
																"name": {
																	"description": "Role Name.",
																	"example": "Organization Admin",
																	"maxLength": 120,
																	"readOnly": true,
																	"type": "string"
																},
																"permissions": {
																	"description": "Access permissions for this User.",
																	"items": {
																		"example": "#zones:read",
																		"maxLength": 160,
																		"type": "string"
																	},
																	"readOnly": true,
																	"type": "array"
																}
															},
															"required": [
																"id",
																"name",
																"description",
																"permissions"
															],
															"type": "object"
														},
														"type": "array"
													},
													"status": {
														"description": "A member's status in the organization.",
														"enum": [
															"accepted",
															"invited"
														],
														"example": "accepted"
													}
												},
												"required": [
													"id",
													"name",
													"email",
													"status",
													"roles"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Members response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Members response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Members",
		"tags": [
			"Account Members"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_identifier}/members/{identifier}": {
		"description": "Get information about a specific member of an account.",
		"operationId": "account-members-member-details",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Membership identifier tag.",
					"example": "4536bcfad5faccb111b47003c79917fa",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "Membership identifier tag.",
													"example": "4536bcfad5faccb111b47003c79917fa",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												},
												"roles": {
													"description": "Roles assigned to this member.",
													"items": {
														"properties": {
															"description": {
																"description": "Description of role's permissions.",
																"example": "Administrative access to the entire Account",
																"readOnly": true,
																"type": "string"
															},
															"id": {
																"description": "Role identifier tag.",
																"example": "3536bcfad5faccb999b47003c79917fb",
																"maxLength": 32,
																"type": "string"
															},
															"name": {
																"description": "Role name.",
																"example": "Account Administrator",
																"maxLength": 120,
																"readOnly": true,
																"type": "string"
															},
															"permissions": {
																"allOf": [
																	{
																		"example": {
																			"analytics": {
																				"read": true,
																				"write": false
																			},
																			"zones": {
																				"read": true,
																				"write": true
																			}
																		},
																		"properties": {
																			"analytics": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"billing": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"cache_purge": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"dns": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"dns_records": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"lb": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"logs": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"organization": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"ssl": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"waf": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"zone_settings": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"zones": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			}
																		},
																		"type": "object"
																	},
																	{
																		"readOnly": true
																	}
																]
															}
														},
														"required": [
															"id",
															"name",
															"description",
															"permissions"
														],
														"type": "object"
													},
													"type": "array"
												},
												"status": {
													"readOnly": true
												},
												"user": {
													"properties": {
														"email": {
															"description": "The contact email address of the user.",
															"example": "user@example.com",
															"maxLength": 90,
															"type": "string"
														},
														"first_name": {
															"description": "User's first name",
															"example": "John",
															"maxLength": 60,
															"nullable": true,
															"type": "string"
														},
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"last_name": {
															"description": "User's last name",
															"example": "Appleseed",
															"maxLength": 60,
															"nullable": true,
															"type": "string"
														},
														"two_factor_authentication_enabled": {
															"default": false,
															"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
															"readOnly": true,
															"type": "boolean"
														}
													},
													"readOnly": true,
													"required": [
														"email"
													],
													"type": "object"
												}
											},
											"required": [
												"id",
												"user",
												"status",
												"roles"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Member Details response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Member Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Member Details",
		"tags": [
			"Account Members"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_identifier}/members": {
		"description": "Add a user to the list of members for this account.",
		"operationId": "account-members-add-member",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"email": {
								"description": "The contact email address of the user.",
								"example": "user@example.com",
								"maxLength": 90,
								"type": "string"
							},
							"roles": {
								"description": "Array of roles associated with this member.",
								"items": {
									"description": "Role identifier tag.",
									"example": "3536bcfad5faccb999b47003c79917fb",
									"maxLength": 32,
									"type": "string"
								},
								"type": "array"
							},
							"status": {
								"default": "pending",
								"enum": [
									"accepted",
									"pending"
								]
							}
						},
						"required": [
							"email",
							"roles"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"id": {
															"description": "Membership identifier tag.",
															"example": "4536bcfad5faccb111b47003c79917fa",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"roles": {
															"description": "Roles assigned to this member.",
															"items": {
																"properties": {
																	"description": {
																		"description": "Description of role's permissions.",
																		"example": "Administrative access to the entire Account",
																		"readOnly": true,
																		"type": "string"
																	},
																	"id": {
																		"description": "Role identifier tag.",
																		"example": "3536bcfad5faccb999b47003c79917fb",
																		"maxLength": 32,
																		"type": "string"
																	},
																	"name": {
																		"description": "Role name.",
																		"example": "Account Administrator",
																		"maxLength": 120,
																		"readOnly": true,
																		"type": "string"
																	},
																	"permissions": {
																		"allOf": [
																			{
																				"example": {
																					"analytics": {
																						"read": true,
																						"write": false
																					},
																					"zones": {
																						"read": true,
																						"write": true
																					}
																				},
																				"properties": {
																					"analytics": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"billing": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"cache_purge": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"dns": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"dns_records": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"lb": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"logs": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"organization": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"ssl": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"waf": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"zone_settings": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					},
																					"zones": {
																						"example": {
																							"read": true,
																							"write": false
																						},
																						"properties": {
																							"read": {
																								"example": true,
																								"type": "boolean"
																							},
																							"write": {
																								"example": true,
																								"type": "boolean"
																							}
																						},
																						"type": "object"
																					}
																				},
																				"type": "object"
																			},
																			{
																				"readOnly": true
																			}
																		]
																	}
																},
																"required": [
																	"id",
																	"name",
																	"description",
																	"permissions"
																],
																"type": "object"
															},
															"type": "array"
														},
														"status": {
															"readOnly": true
														},
														"user": {
															"properties": {
																"email": {
																	"description": "The contact email address of the user.",
																	"example": "user@example.com",
																	"maxLength": 90,
																	"type": "string"
																},
																"first_name": {
																	"description": "User's first name",
																	"example": "John",
																	"maxLength": 60,
																	"nullable": true,
																	"type": "string"
																},
																"id": {
																	"description": "Identifier",
																	"example": "023e105f4ecef8ad9ca31a8372d0c353",
																	"maxLength": 32,
																	"readOnly": true,
																	"type": "string"
																},
																"last_name": {
																	"description": "User's last name",
																	"example": "Appleseed",
																	"maxLength": 60,
																	"nullable": true,
																	"type": "string"
																},
																"two_factor_authentication_enabled": {
																	"default": false,
																	"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
																	"readOnly": true,
																	"type": "boolean"
																}
															},
															"readOnly": true,
															"required": [
																"email"
															],
															"type": "object"
														}
													},
													"required": [
														"id",
														"user",
														"status",
														"roles"
													],
													"type": "object"
												},
												{
													"properties": {
														"code": {
															"description": "The unique activation code for the account membership.",
															"example": "05dd05cce12bbed97c0d87cd78e89bc2fd41a6cee72f27f6fc84af2e45c0fac0",
															"maxLength": 64,
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											]
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Add Member response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Add Member response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Add Member",
		"tags": [
			"Account Members"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /accounts/{account_identifier}/members/{identifier}": {
		"description": "Modify an account member.",
		"operationId": "account-members-update-member",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Membership identifier tag.",
					"example": "4536bcfad5faccb111b47003c79917fa",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"code": {
										"description": "The unique activation code for the account membership.",
										"example": "05dd05cce12bbed97c0d87cd78e89bc2fd41a6cee72f27f6fc84af2e45c0fac0",
										"maxLength": 64,
										"readOnly": true,
										"type": "string"
									},
									"id": {
										"description": "Membership identifier tag.",
										"example": "4536bcfad5faccb111b47003c79917fa",
										"maxLength": 32,
										"readOnly": true,
										"type": "string"
									},
									"roles": {
										"description": "Roles assigned to this member.",
										"items": {
											"properties": {
												"description": {
													"description": "Description of role's permissions.",
													"example": "Administrative access to the entire Account",
													"readOnly": true,
													"type": "string"
												},
												"id": {
													"description": "Role identifier tag.",
													"example": "3536bcfad5faccb999b47003c79917fb",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												},
												"name": {
													"description": "Role name.",
													"example": "Account Administrator",
													"maxLength": 120,
													"readOnly": true,
													"type": "string"
												},
												"permissions": {
													"example": {
														"analytics": {
															"read": true,
															"write": false
														},
														"zones": {
															"read": true,
															"write": true
														}
													},
													"properties": {
														"analytics": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"billing": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"cache_purge": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"dns": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"dns_records": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"lb": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"logs": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"organization": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"ssl": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"waf": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"zone_settings": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														},
														"zones": {
															"example": {
																"read": true,
																"write": false
															},
															"properties": {
																"read": {
																	"example": true,
																	"type": "boolean"
																},
																"write": {
																	"example": true,
																	"type": "boolean"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"required": [
												"id",
												"name",
												"description",
												"permissions"
											],
											"type": "object"
										},
										"type": "array"
									},
									"status": {
										"readOnly": true
									},
									"user": {
										"properties": {
											"email": {
												"description": "The contact email address of the user.",
												"example": "user@example.com",
												"maxLength": 90,
												"type": "string"
											},
											"first_name": {
												"description": "User's first name",
												"example": "John",
												"maxLength": 60,
												"nullable": true,
												"type": "string"
											},
											"id": {
												"description": "Identifier",
												"example": "023e105f4ecef8ad9ca31a8372d0c353",
												"maxLength": 32,
												"readOnly": true,
												"type": "string"
											},
											"last_name": {
												"description": "User's last name",
												"example": "Appleseed",
												"maxLength": 60,
												"nullable": true,
												"type": "string"
											},
											"two_factor_authentication_enabled": {
												"default": false,
												"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
												"readOnly": true,
												"type": "boolean"
											}
										},
										"readOnly": true,
										"required": [
											"email"
										],
										"type": "object"
									}
								},
								"required": [
									"id",
									"user",
									"status",
									"roles"
								],
								"type": "object"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "Membership identifier tag.",
													"example": "4536bcfad5faccb111b47003c79917fa",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												},
												"roles": {
													"description": "Roles assigned to this member.",
													"items": {
														"properties": {
															"description": {
																"description": "Description of role's permissions.",
																"example": "Administrative access to the entire Account",
																"readOnly": true,
																"type": "string"
															},
															"id": {
																"description": "Role identifier tag.",
																"example": "3536bcfad5faccb999b47003c79917fb",
																"maxLength": 32,
																"type": "string"
															},
															"name": {
																"description": "Role name.",
																"example": "Account Administrator",
																"maxLength": 120,
																"readOnly": true,
																"type": "string"
															},
															"permissions": {
																"allOf": [
																	{
																		"example": {
																			"analytics": {
																				"read": true,
																				"write": false
																			},
																			"zones": {
																				"read": true,
																				"write": true
																			}
																		},
																		"properties": {
																			"analytics": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"billing": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"cache_purge": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"dns": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"dns_records": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"lb": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"logs": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"organization": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"ssl": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"waf": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"zone_settings": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			},
																			"zones": {
																				"example": {
																					"read": true,
																					"write": false
																				},
																				"properties": {
																					"read": {
																						"example": true,
																						"type": "boolean"
																					},
																					"write": {
																						"example": true,
																						"type": "boolean"
																					}
																				},
																				"type": "object"
																			}
																		},
																		"type": "object"
																	},
																	{
																		"readOnly": true
																	}
																]
															}
														},
														"required": [
															"id",
															"name",
															"description",
															"permissions"
														],
														"type": "object"
													},
													"type": "array"
												},
												"status": {
													"readOnly": true
												},
												"user": {
													"properties": {
														"email": {
															"description": "The contact email address of the user.",
															"example": "user@example.com",
															"maxLength": 90,
															"type": "string"
														},
														"first_name": {
															"description": "User's first name",
															"example": "John",
															"maxLength": 60,
															"nullable": true,
															"type": "string"
														},
														"id": {
															"description": "Identifier",
															"example": "023e105f4ecef8ad9ca31a8372d0c353",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"last_name": {
															"description": "User's last name",
															"example": "Appleseed",
															"maxLength": 60,
															"nullable": true,
															"type": "string"
														},
														"two_factor_authentication_enabled": {
															"default": false,
															"description": "Indicates whether two-factor authentication is enabled for the user account. Does not apply to API authentication.",
															"readOnly": true,
															"type": "boolean"
														}
													},
													"readOnly": true,
													"required": [
														"email"
													],
													"type": "object"
												}
											},
											"required": [
												"id",
												"user",
												"status",
												"roles"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Member response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Member response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Member",
		"tags": [
			"Account Members"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}