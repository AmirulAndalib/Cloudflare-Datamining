{
	"DELETE /accounts/{account_identifier}/railguns/{identifier}": {
		"deprecated": true,
		"description": "Disable and delete a Railgun. This will immediately disable the Railgun for any connected zones.",
		"operationId": "account-railguns-delete-a-railgun",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Railgun identifier tag.",
					"example": "e928d310693a83094309acf9ead50448",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "Railgun identifier tag.",
													"example": "e928d310693a83094309acf9ead50448",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete a Railgun response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"allOf": [
														{
															"properties": {
																"errors": {
																	"example": [],
																	"items": {
																		"properties": {
																			"code": {
																				"minimum": 1000,
																				"type": "integer"
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"required": [
																			"code",
																			"message"
																		],
																		"type": "object",
																		"uniqueItems": true
																	},
																	"type": "array"
																},
																"messages": {
																	"example": [],
																	"items": {
																		"properties": {
																			"code": {
																				"minimum": 1000,
																				"type": "integer"
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"required": [
																			"code",
																			"message"
																		],
																		"type": "object",
																		"uniqueItems": true
																	},
																	"type": "array"
																},
																"result": {
																	"anyOf": [
																		{
																			"type": "object"
																		},
																		{
																			"items": {},
																			"type": "array"
																		},
																		{
																			"type": "string"
																		}
																	]
																},
																"success": {
																	"description": "Whether the API call was successful",
																	"enum": [
																		true
																	],
																	"example": true,
																	"type": "boolean"
																}
															},
															"required": [
																"success",
																"errors",
																"messages",
																"result"
															],
															"type": "object"
														},
														{
															"properties": {
																"result": {
																	"anyOf": [
																		{
																			"type": "object"
																		},
																		{
																			"type": "string"
																		}
																	],
																	"nullable": true
																}
															}
														}
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "Railgun identifier tag.",
															"example": "e928d310693a83094309acf9ead50448",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a Railgun response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Delete a Railgun",
		"tags": [
			"Account Railguns"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/railguns": {
		"deprecated": true,
		"description": "List, search, sort and filter your Railguns.",
		"operationId": "account-railguns-list-railguns",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"default": 1,
					"description": "Page number of paginated results.",
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"default": 20,
					"description": "Number of items per page.",
					"maximum": 50,
					"minimum": 5,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "Sort Railguns in ascending or descending order.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "desc"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"activated_on": {
														"description": "When the Railgun was activated.",
														"example": "2014-01-02T02:20:00Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string"
													},
													"activation_key": {
														"example": "e4edc00281cb56ebac22c81be9bac8f3",
														"maxLength": 32,
														"readOnly": true,
														"type": "string"
													},
													"build": {
														"description": "The build identifier for the Railgun receiver.",
														"example": "b1234",
														"readOnly": true,
														"type": "string"
													},
													"created_on": {
														"description": "When the Railgun was created.",
														"example": "2014-01-01T05:20:00Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string"
													},
													"enabled": {
														"default": false,
														"description": "Flag to determine if the Railgun is accepting connections.",
														"example": true,
														"type": "boolean"
													},
													"id": {
														"description": "Railgun identifier tag.",
														"example": "e928d310693a83094309acf9ead50448",
														"maxLength": 32,
														"readOnly": true,
														"type": "string"
													},
													"modified_on": {
														"description": "When the Railgun was last modified.",
														"example": "2014-01-01T05:20:00Z",
														"format": "date-time",
														"readOnly": true,
														"type": "string"
													},
													"name": {
														"description": "Readable identifier of the Railgun.",
														"example": "My Railgun.",
														"maxLength": 160,
														"type": "string"
													},
													"revision": {
														"description": "The revision of the Railgun receiver.",
														"example": "123",
														"readOnly": true,
														"type": "string"
													},
													"status": {
														"description": "Status of the Railgun.",
														"enum": [
															"initializing",
															"active"
														],
														"example": "active",
														"readOnly": true,
														"type": "string"
													},
													"upgrade_info": {
														"description": "Defined when the Railgun version is out of date from the latest release from Cloudflare.",
														"properties": {
															"download_link": {
																"description": "An HTTP link to download the latest Railgun binary.",
																"example": "https://www.cloudflare.com/downloads/railgun",
																"type": "string"
															},
															"latest_version": {
																"description": "Latest version of the Railgun receiver available to install.",
																"example": "1.0.0",
																"type": "string"
															}
														},
														"type": "object"
													},
													"version": {
														"description": "The version of the Railgun receiver.",
														"example": "2.1",
														"readOnly": true,
														"type": "string"
													},
													"zones_connected": {
														"description": "The number of zones using this Railgun.",
														"example": 2,
														"readOnly": true,
														"type": "number"
													}
												},
												"required": [
													"id",
													"name",
													"status",
													"enabled",
													"zones_connected",
													"build",
													"version",
													"revision",
													"activation_key",
													"activated_on",
													"created_on",
													"modified_on"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Railguns response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"activated_on": {
																"description": "When the Railgun was activated.",
																"example": "2014-01-02T02:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"activation_key": {
																"example": "e4edc00281cb56ebac22c81be9bac8f3",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"build": {
																"description": "The build identifier for the Railgun receiver.",
																"example": "b1234",
																"readOnly": true,
																"type": "string"
															},
															"created_on": {
																"description": "When the Railgun was created.",
																"example": "2014-01-01T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"enabled": {
																"default": false,
																"description": "Flag to determine if the Railgun is accepting connections.",
																"example": true,
																"type": "boolean"
															},
															"id": {
																"description": "Railgun identifier tag.",
																"example": "e928d310693a83094309acf9ead50448",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"modified_on": {
																"description": "When the Railgun was last modified.",
																"example": "2014-01-01T05:20:00Z",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"name": {
																"description": "Readable identifier of the Railgun.",
																"example": "My Railgun.",
																"maxLength": 160,
																"type": "string"
															},
															"revision": {
																"description": "The revision of the Railgun receiver.",
																"example": "123",
																"readOnly": true,
																"type": "string"
															},
															"status": {
																"description": "Status of the Railgun.",
																"enum": [
																	"initializing",
																	"active"
																],
																"example": "active",
																"readOnly": true,
																"type": "string"
															},
															"upgrade_info": {
																"description": "Defined when the Railgun version is out of date from the latest release from Cloudflare.",
																"properties": {
																	"download_link": {
																		"description": "An HTTP link to download the latest Railgun binary.",
																		"example": "https://www.cloudflare.com/downloads/railgun",
																		"type": "string"
																	},
																	"latest_version": {
																		"description": "Latest version of the Railgun receiver available to install.",
																		"example": "1.0.0",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"version": {
																"description": "The version of the Railgun receiver.",
																"example": "2.1",
																"readOnly": true,
																"type": "string"
															},
															"zones_connected": {
																"description": "The number of zones using this Railgun.",
																"example": 2,
																"readOnly": true,
																"type": "number"
															}
														},
														"required": [
															"id",
															"name",
															"status",
															"enabled",
															"zones_connected",
															"build",
															"version",
															"revision",
															"activation_key",
															"activated_on",
															"created_on",
															"modified_on"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Railguns response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "List Railguns",
		"tags": [
			"Account Railguns"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/railguns/{identifier}": {
		"deprecated": true,
		"operationId": "account-railguns-railgun-details",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Railgun identifier tag.",
					"example": "e928d310693a83094309acf9ead50448",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Railgun details response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Railgun details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Railgun details",
		"tags": [
			"Account Railguns"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /accounts/{account_identifier}/railguns": {
		"deprecated": true,
		"operationId": "account-railguns-create-railgun",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"name": {
								"description": "Readable identifier of the Railgun.",
								"example": "My Railgun.",
								"maxLength": 160,
								"type": "string"
							}
						},
						"required": [
							"name"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create Railgun response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Railgun response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Create Railgun",
		"tags": [
			"Account Railguns"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_identifier}/railguns/{identifier}": {
		"deprecated": true,
		"description": "Update a Railgun.",
		"operationId": "account-railguns-update-railgun",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Railgun identifier tag.",
					"example": "e928d310693a83094309acf9ead50448",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"activation": {
								"properties": {
									"activated_on": {
										"description": "When the Railgun was activated.",
										"example": "2014-01-02T02:20:00Z",
										"format": "date-time",
										"readOnly": true,
										"type": "string"
									},
									"key": {
										"example": "e4edc00281cb56ebac22c81be9bac8f3",
										"maxLength": 32,
										"readOnly": true,
										"type": "string"
									},
									"version": {
										"properties": {
											"build": {
												"description": "The build identifier for the Railgun receiver.",
												"example": "b1234",
												"readOnly": true,
												"type": "string"
											},
											"number": {
												"description": "The version of the Railgun receiver.",
												"example": "2.1",
												"readOnly": true,
												"type": "string"
											},
											"revision": {
												"description": "The revision of the Railgun receiver.",
												"example": "123",
												"readOnly": true,
												"type": "string"
											}
										},
										"required": [
											"number"
										],
										"type": "object"
									}
								},
								"readOnly": true,
								"required": [
									"key"
								],
								"type": "object"
							},
							"created_on": {
								"description": "When the Railgun was created.",
								"example": "2014-01-01T05:20:00Z",
								"format": "date-time",
								"readOnly": true,
								"type": "string"
							},
							"enabled": {
								"default": false,
								"description": "Flag to determine if the Railgun is accepting connections.",
								"example": true,
								"type": "boolean"
							},
							"id": {
								"description": "Railgun identifier tag.",
								"example": "e928d310693a83094309acf9ead50448",
								"maxLength": 32,
								"readOnly": true,
								"type": "string"
							},
							"modified_on": {
								"description": "When the Railgun was last modified.",
								"example": "2014-01-01T05:20:00Z",
								"format": "date-time",
								"readOnly": true,
								"type": "string"
							},
							"name": {
								"description": "Readable identifier of the Railgun.",
								"example": "My Railgun.",
								"maxLength": 160,
								"type": "string"
							},
							"status": {
								"description": "Status of the Railgun.",
								"enum": [
									"initializing",
									"active"
								],
								"example": "active",
								"readOnly": true,
								"type": "string"
							},
							"upgrade_info": {
								"description": "Defined when the Railgun version is out of date from the latest release from Cloudflare.",
								"properties": {
									"download_link": {
										"description": "An HTTP link to download the latest Railgun binary.",
										"example": "https://www.cloudflare.com/downloads/railgun",
										"type": "string"
									},
									"latest_version": {
										"description": "Latest version of the Railgun receiver available to install.",
										"example": "1.0.0",
										"type": "string"
									}
								},
								"type": "object"
							},
							"zones_connected": {
								"description": "The number of zones using this Railgun.",
								"example": 2,
								"readOnly": true,
								"type": "number"
							}
						},
						"required": [
							"id",
							"name",
							"status",
							"enabled",
							"zones_connected",
							"activation"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Railgun response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Railgun response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Update Railgun",
		"tags": [
			"Account Railguns"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}