{
	"GET /radar/verified_bots/top/bots": {
		"description": "Get top verified bots by HTTP requests, with owner and category.",
		"operationId": "radar-get-verified-bots-top-by-http-requests",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"botCategory": {
														"example": "Search Engine Crawler",
														"type": "string"
													},
													"botName": {
														"example": "GoogleBot",
														"type": "string"
													},
													"botOwner": {
														"example": "Google",
														"type": "string"
													},
													"value": {
														"example": "29.034407",
														"type": "string"
													}
												},
												"required": [
													"botName",
													"botCategory",
													"botOwner",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Top Verified Bots By HTTP Requests",
		"tags": [
			"Radar Verified Bots"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/verified_bots/top/categories": {
		"description": "Get top verified bot categories by HTTP requests, along with their corresponding percentage, over the total verified bot HTTP requests.",
		"operationId": "radar-get-verified-bots-top-categories-by-http-requests",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"example": "7d",
					"items": {
						"example": "7d",
						"pattern": "^((([1-9]|[1-9][0-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-4])[d](control)?)|(([1-9]|[1-4][0-9]|5[0-2])[w](control)?))$",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "End of the date range (inclusive).",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
				"in": "query",
				"name": "continent",
				"schema": {
					"description": "Array of comma separated list of continents (alpha-2 continent codes). Start with `-` to exclude from results. For example, `-EU,NA` excludes results from Europe, but includes results from North America.",
					"example": "EU,NA",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"example": true,
																		"type": "boolean"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"required": [
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"botCategory": {
														"example": "Search",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"botCategory",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Top Verified Bot Categories By HTTP Requests",
		"tags": [
			"Radar Verified Bots"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}