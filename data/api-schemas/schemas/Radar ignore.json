{
	"GET /radar/as112/timeseries/dnssec": {
		"deprecated": true,
		"description": "Percentage distribution of dns AS112 requests classified per DNSSEC over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-dnssec-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOT_SUPPORTED": {
													"items": {
														"example": "16",
														"type": "string"
													},
													"type": "array"
												},
												"SUPPORTED": {
													"items": {
														"example": "84",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"SUPPORTED",
												"NOT_SUPPORTED"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of AS112 DNSSEC",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries/edns": {
		"deprecated": true,
		"description": "Percentage distribution of AS112 dns requests classified per EDNS over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-edns-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOT_SUPPORTED": {
													"items": {
														"example": "6",
														"type": "string"
													},
													"type": "array"
												},
												"SUPPORTED": {
													"items": {
														"example": "94",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"SUPPORTED",
												"NOT_SUPPORTED"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of AS112 EDNS",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries/ip_version": {
		"deprecated": true,
		"description": "Percentage distribution of AS112 dns requests classified per IP Version over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-ip-version-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"IPv4": {
													"items": {
														"example": "80",
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"example": "20",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of AS112 IP Version",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries/protocol": {
		"deprecated": true,
		"description": "Percentage distribution of AS112 dns requests classified per Protocol over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-protocol-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"tcp": {
													"items": {
														"example": "1",
														"type": "string"
													},
													"type": "array"
												},
												"udp": {
													"items": {
														"example": "99",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"udp",
												"tcp"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of AS112 Protocol",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries/query_type": {
		"deprecated": true,
		"description": "Percentage distribution of AS112 dns requests classified per Query Type over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-query-type-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"A": {
													"items": {
														"example": "19",
														"type": "string"
													},
													"type": "array"
												},
												"AAAA": {
													"items": {
														"example": "1",
														"type": "string"
													},
													"type": "array"
												},
												"PTR": {
													"items": {
														"example": "74",
														"type": "string"
													},
													"type": "array"
												},
												"SOA": {
													"items": {
														"example": "5",
														"type": "string"
													},
													"type": "array"
												},
												"SRV": {
													"items": {
														"example": "1",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"PTR",
												"A",
												"SOA",
												"AAAA",
												"SRV"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of AS112 Query Type",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/as112/timeseries/response_codes": {
		"deprecated": true,
		"description": "Percentage distribution of AS112 dns requests classified per Response Codes over time.",
		"operationId": "radar-get-dns-as112-timeseries-group-by-response-codes-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOERROR": {
													"items": {
														"example": "6",
														"type": "string"
													},
													"type": "array"
												},
												"NXDOMAIN": {
													"items": {
														"example": "94",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NXDOMAIN",
												"NOERROR"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of AS112 Response Codes",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries/arc": {
		"deprecated": true,
		"description": "Percentage distribution of emails classified per Arc validation over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-arc-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dkim.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dmarc.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for spf.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of ARC validations",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries/dkim": {
		"deprecated": true,
		"description": "Percentage distribution of emails classified per DKIM validation over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-dkim-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for arc (Authenticated Received Chain).",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dmarc.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for spf.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of DKIM validations validations",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries/dmarc": {
		"deprecated": true,
		"description": "Percentage distribution of emails classified per DMARC validation over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-dmarc-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for arc (Authenticated Received Chain).",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dkim.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for spf.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of DMARC validations",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries/malicious": {
		"deprecated": true,
		"description": "Percentage distribution of emails classified as MALICIOUS over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-malicious-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for arc (Authenticated Received Chain).",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dkim.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dmarc.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for spf.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"MALICIOUS": {
													"items": {
														"example": "65",
														"type": "string"
													},
													"type": "array"
												},
												"NOT_MALICIOUS": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"MALICIOUS",
												"NOT_MALICIOUS"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of MALICIOUS validations",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries/spam": {
		"deprecated": true,
		"description": "Percentage distribution of emails classified as SPAM over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-spam-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for arc (Authenticated Received Chain).",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dkim.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dmarc.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for spf.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"NOT_SPAM": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												},
												"SPAM": {
													"items": {
														"example": "65",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"SPAM",
												"NOT_SPAM"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of SPAM validations",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries/spf": {
		"deprecated": true,
		"description": "Percentage distribution of emails classified per SPF validation over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-spf-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for arc (Authenticated Received Chain).",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dkim.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dmarc.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of SPF validations",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/security/timeseries/threat_category": {
		"deprecated": true,
		"description": "Percentage distribution of emails classified in Threat Categories over time.",
		"operationId": "radar-get-email-security-timeseries-group-by-threat-category-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for arc (Authenticated Received Chain).",
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dkim.",
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for dmarc.",
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for spf.",
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"BrandImpersonation": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												},
												"CredentialHarvester": {
													"items": {
														"example": "32",
														"type": "string"
													},
													"type": "array"
												},
												"IdentityDeception": {
													"items": {
														"example": "47",
														"type": "string"
													},
													"type": "array"
												},
												"Link": {
													"items": {
														"example": "43",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"IdentityDeception",
												"Link",
												"BrandImpersonation",
												"CredentialHarvester"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a time series of Threat Categories",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/bot_class": {
		"deprecated": true,
		"description": "Percentage distribution of traffic classified as automated or human over time.",
		"operationId": "radar-get-http-timeseries-group-by-bot-class-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"description": "Filter for device type.",
					"example": "DESKTOP",
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"description": "Filter for http protocol.",
					"example": "HTTPS",
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"description": "Filter for os name.",
					"example": "WINDOWS",
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filter for tls version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"bot": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"human": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"human",
												"bot"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of bot classes",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/browser": {
		"deprecated": true,
		"description": "Percentage distribution of traffic of the top user agents in the selected time range, over time.",
		"operationId": "radar-get-http-timeseries-group-by-browsers-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
					"example": "LIKELY_AUTOMATED",
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"description": "Filter for device type.",
					"example": "DESKTOP",
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"description": "Filter for http protocol.",
					"example": "HTTPS",
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"description": "Filter for os name.",
					"example": "WINDOWS",
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filter for tls version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Limit the number of objects (eg browsers, verticals, etc) to the top items over the time range.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (eg browsers, verticals, etc) to the top items over the time range.",
					"example": 4,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"<browser name>": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"<browser name>"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of user agents",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/browser_family": {
		"deprecated": true,
		"description": "Percentage distribution of traffic of the top user agents aggregated in families in the selected time range, over time.",
		"operationId": "radar-get-http-timeseries-group-by-browser-families-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
					"example": "LIKELY_AUTOMATED",
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"description": "Filter for device type.",
					"example": "DESKTOP",
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"description": "Filter for http protocol.",
					"example": "HTTPS",
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"description": "Filter for os name.",
					"example": "WINDOWS",
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filter for tls version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"<browser name>": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"<browser name>"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of user agents aggregated in families",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/device_type": {
		"deprecated": true,
		"description": "Percentage distribution of traffic per device type over time.",
		"operationId": "radar-get-http-timeseries-group-by-device-type-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
					"example": "LIKELY_AUTOMATED",
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"description": "Filter for http protocol.",
					"example": "HTTPS",
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"description": "Filter for os name.",
					"example": "WINDOWS",
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filter for tls version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"desktop": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"mobile": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"other": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"desktop",
												"mobile",
												"other"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of device types",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/http_protocol": {
		"deprecated": true,
		"description": "Percentage distribution of traffic per HTTP protocol over time.",
		"operationId": "radar-get-http-timeseries-group-by-http-protocol-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
					"example": "LIKELY_AUTOMATED",
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"description": "Filter for device type.",
					"example": "DESKTOP",
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"description": "Filter for os name.",
					"example": "WINDOWS",
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filter for tls version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"http": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"https": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"http",
												"https"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of HTTP protocols",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/http_version": {
		"deprecated": true,
		"description": "Percentage distribution of traffic per HTTP protocol version over time.",
		"operationId": "radar-get-http-timeseries-group-by-http-version-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
					"example": "LIKELY_AUTOMATED",
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"description": "Filter for device type.",
					"example": "DESKTOP",
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"description": "Filter for http protocol.",
					"example": "HTTPS",
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"description": "Filter for os name.",
					"example": "WINDOWS",
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filter for tls version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"HTTP/1.x": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"HTTP/2": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"HTTP/3": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"HTTP/1.x",
												"HTTP/2",
												"HTTP/3"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of HTTP versions",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/ip_version": {
		"deprecated": true,
		"description": "Percentage distribution of traffic per IP protocol version over time.",
		"operationId": "radar-get-http-timeseries-group-by-ip-version-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
					"example": "LIKELY_AUTOMATED",
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"description": "Filter for device type.",
					"example": "DESKTOP",
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"description": "Filter for http protocol.",
					"example": "HTTPS",
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"description": "Filter for os name.",
					"example": "WINDOWS",
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filter for tls version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"IPv4": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of IP versions",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/os": {
		"deprecated": true,
		"description": "Percentage distribution of traffic of the top operating systems in the selected time range, over time.",
		"operationId": "radar-get-http-timeseries-group-by-operating-system-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
					"example": "LIKELY_AUTOMATED",
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"description": "Filter for device type.",
					"example": "DESKTOP",
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"description": "Filter for http protocol.",
					"example": "HTTPS",
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"description": "Filter for tls version.",
					"example": "TLSv1_2",
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"<OS name>": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"<OS name>"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of operating systems",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/tls_version": {
		"deprecated": true,
		"description": "Percentage distribution of traffic per TLS protocol version over time.",
		"operationId": "radar-get-http-timeseries-group-by-tls-version-deprecated",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
					"example": "US,CA",
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
					"example": "LIKELY_AUTOMATED",
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"description": "Filter for device type.",
					"example": "DESKTOP",
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"description": "Filter for http protocol.",
					"example": "HTTPS",
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"description": "Filter for http version.",
					"example": "HTTPv1",
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"description": "Filter for os name.",
					"example": "WINDOWS",
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"TLS 1.0": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.1": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.2": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.3": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TLS QUIC": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"TLS 1.0",
												"TLS 1.1",
												"TLS 1.2",
												"TLS 1.3",
												"TLS QUIC"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of TLS versions",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/ranking/timeseries": {
		"deprecated": true,
		"description": "Gets Domains Rank updates change over time. Raw values are returned.",
		"operationId": "radar-get-ranking-domain-timeseries-deprecated",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "The ranking type.",
				"in": "query",
				"name": "rankingType",
				"schema": {
					"default": "POPULAR",
					"enum": [
						"POPULAR",
						"TRENDING_RISE",
						"TRENDING_STEADY"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of locations (alpha-2 country codes).",
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Array of locations (alpha-2 country codes).",
					"example": "US",
					"items": {
						"description": "Array of locations (alpha-2 country codes).",
						"example": "US",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of domains names.",
				"in": "query",
				"name": "domains",
				"schema": {
					"description": "Array of comma separated list of domains names.",
					"example": "google.com,facebook.com",
					"items": {
						"description": "Array of comma separated list of domains names.",
						"example": "google.com,facebook.com",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"dateRange": {
													"properties": {
														"endTime": {
															"description": "Adjusted end of date range.",
															"example": "2022-09-17T10:22:57.555Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"description": "Adjusted start of date range.",
															"example": "2022-09-16T10:22:57.555Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"dateRange"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"<domain name>": {
													"items": {
														"example": 2,
														"type": "integer"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"example": "2022-09-02",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"<domain name>"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Domains Rank time series",
		"tags": [
			"Radar ignore"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}