{
	"allOf": [
		{
			"allOf": [
				{
					"properties": {
						"errors": {
							"example": [],
							"items": {
								"properties": {
									"code": {
										"minimum": 1000,
										"type": "integer"
									},
									"message": {
										"type": "string"
									}
								},
								"required": [
									"code",
									"message"
								],
								"type": "object",
								"uniqueItems": true
							},
							"type": "array"
						},
						"messages": {
							"example": [],
							"items": {
								"properties": {
									"code": {
										"minimum": 1000,
										"type": "integer"
									},
									"message": {
										"type": "string"
									}
								},
								"required": [
									"code",
									"message"
								],
								"type": "object",
								"uniqueItems": true
							},
							"type": "array"
						},
						"result": {
							"anyOf": [
								{
									"type": "object"
								},
								{
									"items": {},
									"type": "array"
								},
								{
									"type": "string"
								}
							]
						},
						"success": {
							"description": "Whether the API call was successful",
							"enum": [
								true
							],
							"example": true,
							"type": "boolean"
						}
					},
					"required": [
						"success",
						"errors",
						"messages",
						"result"
					],
					"type": "object"
				},
				{
					"properties": {
						"result": {
							"items": {},
							"nullable": true,
							"type": "array"
						},
						"result_info": {
							"properties": {
								"count": {
									"description": "Total number of results for the requested service",
									"example": 1,
									"type": "number"
								},
								"page": {
									"description": "Current page within paginated list of results",
									"example": 1,
									"type": "number"
								},
								"per_page": {
									"description": "Number of results per page of results",
									"example": 20,
									"type": "number"
								},
								"total_count": {
									"description": "Total results available without any search parameters",
									"example": 2000,
									"type": "number"
								}
							},
							"type": "object"
						}
					}
				}
			],
			"type": "object"
		},
		{
			"properties": {
				"result": {
					"items": {
						"properties": {
							"beta": {
								"description": "Whether the category is in beta and subject to change.",
								"example": false,
								"type": "boolean"
							},
							"class": {
								"description": "Which account types are allowed to create policies based on this categories. `blocked` categories are blocked unconditionally for all accounts. `removalPending` categories can be removed from policies but not added. `noBlock` categories cannot be blocked.",
								"enum": [
									"free",
									"premium",
									"blocked",
									"removalPending",
									"noBlock"
								],
								"example": "premium",
								"type": "string"
							},
							"description": {
								"description": "A short summary of domains in the category.",
								"example": "Sites related to educational content that are not included in other categories like Science, Technology or Educational institutions.",
								"type": "string"
							},
							"id": {
								"description": "The identifier for this category. There is only one category per id.",
								"type": "integer"
							},
							"name": {
								"description": "The name of the category.",
								"example": "Education",
								"type": "string"
							},
							"subcategories": {
								"description": "All subcategories for this category.",
								"items": {
									"properties": {
										"beta": {
											"description": "Whether the category is in beta and subject to change.",
											"example": false,
											"type": "boolean"
										},
										"class": {
											"description": "Which account types are allowed to create policies based on this categories. `blocked` categories are blocked unconditionally for all accounts. `removalPending` categories can be removed from policies but not added. `noBlock` categories cannot be blocked.",
											"enum": [
												"free",
												"premium",
												"blocked",
												"removalPending",
												"noBlock"
											],
											"example": "premium",
											"type": "string"
										},
										"description": {
											"description": "A short summary of domains in the category.",
											"example": "Sites related to educational content that are not included in other categories like Science, Technology or Educational institutions.",
											"type": "string"
										},
										"id": {
											"description": "The identifier for this category. There is only one category per id.",
											"type": "integer"
										},
										"name": {
											"description": "The name of the category.",
											"example": "Education",
											"type": "string"
										}
									},
									"type": "object"
								},
								"type": "array"
							}
						},
						"readOnly": true,
						"type": "object"
					},
					"type": "array"
				}
			}
		}
	]
}