{
	"DELETE /zones/{zone_id}/page_shield/policies/{policy_id}": {
		"description": "Delete a Page Shield policy by ID.",
		"operationId": "page-shield-delete-a-page-shield-policy",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"description": "The ID of the policy.",
					"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
					"maxLength": 32,
					"minLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"204": {
				"description": "Delete a Page Shield policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"action": {
													"description": "The action to take if the expression matches",
													"enum": [
														"allow",
														"log"
													],
													"example": "allow",
													"type": "string"
												},
												"description": {
													"description": "A description for the policy",
													"example": "Checkout page CSP policy",
													"type": "string"
												},
												"enabled": {
													"description": "Whether the policy is enabled",
													"example": true,
													"type": "boolean"
												},
												"expression": {
													"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
													"example": "ends_with(http.request.uri.path, \"/checkout\")",
													"type": "string"
												},
												"id": {
													"description": "The ID of the policy",
													"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
													"type": "string"
												},
												"value": {
													"description": "The policy which will be applied",
													"example": "script-src 'none';",
													"type": "string"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a Page Shield policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a Page Shield policy",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/page_shield": {
		"description": "Fetches the Page Shield settings.",
		"operationId": "page-shield-get-page-shield-settings",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"properties": {
												"enabled": {
													"description": "When true, indicates that Page Shield is enabled.",
													"example": true,
													"type": "boolean"
												},
												"updated_at": {
													"description": "The timestamp of when Page Shield was last updated.",
													"example": "2022-10-12T17:56:52.083582+01:00",
													"type": "string"
												},
												"use_cloudflare_reporting_endpoint": {
													"description": "When true, CSP reports will be sent to https://csp-reporting.cloudflare.com/cdn-cgi/script_monitor/report",
													"example": true,
													"type": "boolean"
												},
												"use_connection_url_path": {
													"description": "When true, the paths associated with connections URLs will also be analyzed.",
													"example": true,
													"type": "boolean"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Page Shield settings response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"allOf": [
														{
															"properties": {
																"errors": {
																	"example": [],
																	"items": {
																		"properties": {
																			"code": {
																				"minimum": 1000,
																				"type": "integer"
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"required": [
																			"code",
																			"message"
																		],
																		"type": "object",
																		"uniqueItems": true
																	},
																	"type": "array"
																},
																"messages": {
																	"example": [],
																	"items": {
																		"properties": {
																			"code": {
																				"minimum": 1000,
																				"type": "integer"
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"required": [
																			"code",
																			"message"
																		],
																		"type": "object",
																		"uniqueItems": true
																	},
																	"type": "array"
																},
																"result": {
																	"anyOf": [
																		{
																			"type": "object"
																		},
																		{
																			"items": {},
																			"type": "array"
																		},
																		{
																			"type": "string"
																		}
																	]
																},
																"success": {
																	"description": "Whether the API call was successful",
																	"enum": [
																		true
																	],
																	"example": true,
																	"type": "boolean"
																}
															},
															"required": [
																"success",
																"errors",
																"messages",
																"result"
															],
															"type": "object"
														},
														{
															"properties": {
																"result": {
																	"anyOf": [
																		{
																			"type": "object"
																		},
																		{
																			"items": {},
																			"type": "array"
																		},
																		{
																			"type": "string"
																		}
																	]
																}
															}
														}
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"properties": {
														"enabled": {
															"description": "When true, indicates that Page Shield is enabled.",
															"example": true,
															"type": "boolean"
														},
														"updated_at": {
															"description": "The timestamp of when Page Shield was last updated.",
															"example": "2022-10-12T17:56:52.083582+01:00",
															"type": "string"
														},
														"use_cloudflare_reporting_endpoint": {
															"description": "When true, CSP reports will be sent to https://csp-reporting.cloudflare.com/cdn-cgi/script_monitor/report",
															"example": true,
															"type": "boolean"
														},
														"use_connection_url_path": {
															"description": "When true, the paths associated with connections URLs will also be analyzed.",
															"example": true,
															"type": "boolean"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Page Shield settings response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Page Shield settings",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/page_shield/connections": {
		"description": "Lists all connections detected by Page Shield.",
		"operationId": "page-shield-list-page-shield-connections",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "exclude_urls",
				"schema": {
					"description": "Excludes connections whose URL contains one the URL-encoded URL substrings (separated by commas) from the returned connections.",
					"example": "blog.cloudflare.com,www.example",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "urls",
				"schema": {
					"description": "Filters the returned connections by one or more URL-encoded URL substrings separated by commas.",
					"example": "blog.cloudflare.com,www.example",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "hosts",
				"schema": {
					"description": "Filters the returned connections by one or more URL-encoded hostname substrings separated by commas.",
					"example": "blog.cloudflare.com,www.example",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"description": "The current page number of the paginated results.",
					"example": 2,
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"description": "The number of results per page.",
					"example": 100,
					"maximum": 100,
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "order_by",
				"schema": {
					"description": "The field used to sort returned connections.",
					"enum": [
						"first_seen_at",
						"last_seen_at"
					],
					"example": "first_seen_at",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "The direction used to sort returned connections.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "asc",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "prioritize_malicious",
				"schema": {
					"description": "When true, malicious connections appear first in the returned connections.",
					"example": true,
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "exclude_cdn_cgi",
				"schema": {
					"description": "When true, excludes connections seen in a `/cdn-cgi` path from the returned connections. The default value is true.",
					"example": true,
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "status",
				"schema": {
					"description": "Filters the returned connections using a comma-separated list of connection statuses. Accepted values: `active`, `infrequent`, and `inactive`. The default value is `active`.",
					"example": "active,inactive",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page_url",
				"schema": {
					"description": "Filters the returned connections by the page URL where they were last seen.",
					"example": "example.com/page",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "export",
				"schema": {
					"description": "Export the list of connections as a file. Cannot be used with per_page or page options.",
					"enum": [
						"csv"
					],
					"example": "csv",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"added_at": {
														"example": "2021-08-18T10:51:10.09615Z"
													},
													"domain_reported_malicious": {
														"example": false
													},
													"first_page_url": {
														"example": "blog.cloudflare.com/page"
													},
													"first_seen_at": {
														"example": "2021-08-18T10:51:08Z"
													},
													"host": {
														"example": "blog.cloudflare.com"
													},
													"id": {
														"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
													},
													"last_seen_at": {
														"example": "2021-09-02T09:57:54Z"
													},
													"page_urls": {
														"example": [
															"blog.cloudflare.com/page1",
															"blog.cloudflare.com/page2"
														]
													},
													"url": {
														"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
													},
													"url_contains_cdn_cgi_path": {
														"example": false
													}
												}
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"type": "number"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"type": "number"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"type": "number"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"type": "number"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Page Shield connections response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"added_at": {
																"example": "2021-08-18T10:51:10.09615Z"
															},
															"domain_reported_malicious": {
																"example": false
															},
															"first_page_url": {
																"example": "blog.cloudflare.com/page"
															},
															"first_seen_at": {
																"example": "2021-08-18T10:51:08Z"
															},
															"host": {
																"example": "blog.cloudflare.com"
															},
															"id": {
																"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
															},
															"last_seen_at": {
																"example": "2021-09-02T09:57:54Z"
															},
															"page_urls": {
																"example": [
																	"blog.cloudflare.com/page1",
																	"blog.cloudflare.com/page2"
																]
															},
															"url": {
																"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
															},
															"url_contains_cdn_cgi_path": {
																"example": false
															}
														}
													},
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Page Shield connections response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Page Shield connections",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/page_shield/connections/{connection_id}": {
		"description": "Fetches a connection detected by Page Shield by connection ID.",
		"operationId": "page-shield-get-a-page-shield-connection",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "connection_id",
				"required": true,
				"schema": {
					"description": "The ID of the resource.",
					"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
					"maxLength": 32,
					"minLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"added_at": {
											"example": "2021-08-18T10:51:10.09615Z"
										},
										"domain_reported_malicious": {
											"example": false
										},
										"first_page_url": {
											"example": "blog.cloudflare.com/page"
										},
										"first_seen_at": {
											"example": "2021-08-18T10:51:08Z"
										},
										"host": {
											"example": "blog.cloudflare.com"
										},
										"id": {
											"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
										},
										"last_seen_at": {
											"example": "2021-09-02T09:57:54Z"
										},
										"page_urls": {
											"example": [
												"blog.cloudflare.com/page1",
												"blog.cloudflare.com/page2"
											]
										},
										"url": {
											"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
										},
										"url_contains_cdn_cgi_path": {
											"example": false
										}
									}
								}
							]
						}
					}
				},
				"description": "Get a Page Shield connection response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"added_at": {
													"example": "2021-08-18T10:51:10.09615Z"
												},
												"domain_reported_malicious": {
													"example": false
												},
												"first_page_url": {
													"example": "blog.cloudflare.com/page"
												},
												"first_seen_at": {
													"example": "2021-08-18T10:51:08Z"
												},
												"host": {
													"example": "blog.cloudflare.com"
												},
												"id": {
													"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
												},
												"last_seen_at": {
													"example": "2021-09-02T09:57:54Z"
												},
												"page_urls": {
													"example": [
														"blog.cloudflare.com/page1",
														"blog.cloudflare.com/page2"
													]
												},
												"url": {
													"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
												},
												"url_contains_cdn_cgi_path": {
													"example": false
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a Page Shield connection response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a Page Shield connection",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_id}/page_shield/policies": {
		"description": "Lists all Page Shield policies.",
		"operationId": "page-shield-list-page-shield-policies",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"action": {
														"description": "The action to take if the expression matches",
														"enum": [
															"allow",
															"log"
														],
														"example": "allow",
														"type": "string"
													},
													"description": {
														"description": "A description for the policy",
														"example": "Checkout page CSP policy",
														"type": "string"
													},
													"enabled": {
														"description": "Whether the policy is enabled",
														"example": true,
														"type": "boolean"
													},
													"expression": {
														"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
														"example": "ends_with(http.request.uri.path, \"/checkout\")",
														"type": "string"
													},
													"id": {
														"description": "The ID of the policy",
														"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
														"type": "string"
													},
													"value": {
														"description": "The policy which will be applied",
														"example": "script-src 'none';",
														"type": "string"
													}
												}
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Page Shield policies response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"action": {
																"description": "The action to take if the expression matches",
																"enum": [
																	"allow",
																	"log"
																],
																"example": "allow",
																"type": "string"
															},
															"description": {
																"description": "A description for the policy",
																"example": "Checkout page CSP policy",
																"type": "string"
															},
															"enabled": {
																"description": "Whether the policy is enabled",
																"example": true,
																"type": "boolean"
															},
															"expression": {
																"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
																"example": "ends_with(http.request.uri.path, \"/checkout\")",
																"type": "string"
															},
															"id": {
																"description": "The ID of the policy",
																"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
																"type": "string"
															},
															"value": {
																"description": "The policy which will be applied",
																"example": "script-src 'none';",
																"type": "string"
															}
														}
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Page Shield policies response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Page Shield policies",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/page_shield/policies/{policy_id}": {
		"description": "Fetches a Page Shield policy by ID.",
		"operationId": "page-shield-get-a-page-shield-policy",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"description": "The ID of the policy.",
					"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
					"maxLength": 32,
					"minLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"action": {
											"description": "The action to take if the expression matches",
											"enum": [
												"allow",
												"log"
											],
											"example": "allow",
											"type": "string"
										},
										"description": {
											"description": "A description for the policy",
											"example": "Checkout page CSP policy",
											"type": "string"
										},
										"enabled": {
											"description": "Whether the policy is enabled",
											"example": true,
											"type": "boolean"
										},
										"expression": {
											"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
											"example": "ends_with(http.request.uri.path, \"/checkout\")",
											"type": "string"
										},
										"id": {
											"description": "The ID of the policy",
											"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
											"type": "string"
										},
										"value": {
											"description": "The policy which will be applied",
											"example": "script-src 'none';",
											"type": "string"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get a Page Shield policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"action": {
													"description": "The action to take if the expression matches",
													"enum": [
														"allow",
														"log"
													],
													"example": "allow",
													"type": "string"
												},
												"description": {
													"description": "A description for the policy",
													"example": "Checkout page CSP policy",
													"type": "string"
												},
												"enabled": {
													"description": "Whether the policy is enabled",
													"example": true,
													"type": "boolean"
												},
												"expression": {
													"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
													"example": "ends_with(http.request.uri.path, \"/checkout\")",
													"type": "string"
												},
												"id": {
													"description": "The ID of the policy",
													"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
													"type": "string"
												},
												"value": {
													"description": "The policy which will be applied",
													"example": "script-src 'none';",
													"type": "string"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a Page Shield policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a Page Shield policy",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/page_shield/scripts": {
		"description": "Lists all scripts detected by Page Shield.",
		"operationId": "page-shield-list-page-shield-scripts",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "exclude_urls",
				"schema": {
					"description": "Excludes scripts whose URL contains one the URL-encoded URL substrings (separated by commas) from the returned scripts.",
					"example": "blog.cloudflare.com,www.example",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "urls",
				"schema": {
					"description": "Filters the returned scripts by one or more URL-encoded URL substrings separated by commas.",
					"example": "blog.cloudflare.com,www.example",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "hosts",
				"schema": {
					"description": "Filters the returned scripts by one or more URL-encoded hostname substrings separated by commas.",
					"example": "blog.cloudflare.com,www.example",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page",
				"schema": {
					"description": "The current page number of the paginated results.",
					"example": 2,
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"description": "The number of results per page.",
					"example": 100,
					"maximum": 100,
					"minimum": 1,
					"type": "number"
				}
			},
			{
				"in": "query",
				"name": "order_by",
				"schema": {
					"description": "The field used to sort returned scripts.",
					"enum": [
						"first_seen_at",
						"last_seen_at"
					],
					"example": "first_seen_at",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "direction",
				"schema": {
					"description": "The direction used to sort returned scripts.",
					"enum": [
						"asc",
						"desc"
					],
					"example": "asc",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "prioritize_malicious",
				"schema": {
					"description": "When true, malicious scripts appear first in the returned scripts.",
					"example": true,
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "exclude_cdn_cgi",
				"schema": {
					"description": "When true, excludes scripts seen in a `/cdn-cgi` path from the returned scripts. The default value is true.",
					"example": true,
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "status",
				"schema": {
					"description": "Filters the returned scripts using a comma-separated list of scripts statuses. Accepted values: `active`, `infrequent`, and `inactive`. The default value is `active`.",
					"example": "active,inactive",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "page_url",
				"schema": {
					"description": "Filters the returned scripts by the page URL where they were last seen.",
					"example": "example.com/page",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "export",
				"schema": {
					"description": "Export the list of scripts as a file. Cannot be used with per_page or page options.",
					"enum": [
						"csv"
					],
					"example": "csv",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"added_at": {
														"example": "2021-08-18T10:51:10.09615Z"
													},
													"domain_reported_malicious": {
														"example": false
													},
													"fetched_at": {
														"example": "2021-09-02T10:17:54Z"
													},
													"first_page_url": {
														"example": "blog.cloudflare.com/page"
													},
													"first_seen_at": {
														"example": "2021-08-18T10:51:08Z"
													},
													"hash": {
														"example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
													},
													"host": {
														"example": "blog.cloudflare.com"
													},
													"id": {
														"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
													},
													"js_integrity_score": {
														"example": 10
													},
													"last_seen_at": {
														"example": "2021-09-02T09:57:54Z"
													},
													"page_urls": {
														"example": [
															"blog.cloudflare.com/page1",
															"blog.cloudflare.com/page2"
														]
													},
													"url": {
														"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
													},
													"url_contains_cdn_cgi_path": {
														"example": false
													}
												}
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"count": {
													"description": "Total number of results for the requested service",
													"example": 1,
													"type": "number"
												},
												"page": {
													"description": "Current page within paginated list of results",
													"example": 1,
													"type": "number"
												},
												"per_page": {
													"description": "Number of results per page of results",
													"example": 20,
													"type": "number"
												},
												"total_count": {
													"description": "Total results available without any search parameters",
													"example": 2000,
													"type": "number"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Page Shield scripts response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"added_at": {
																"example": "2021-08-18T10:51:10.09615Z"
															},
															"domain_reported_malicious": {
																"example": false
															},
															"fetched_at": {
																"example": "2021-09-02T10:17:54Z"
															},
															"first_page_url": {
																"example": "blog.cloudflare.com/page"
															},
															"first_seen_at": {
																"example": "2021-08-18T10:51:08Z"
															},
															"hash": {
																"example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
															},
															"host": {
																"example": "blog.cloudflare.com"
															},
															"id": {
																"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
															},
															"js_integrity_score": {
																"example": 10
															},
															"last_seen_at": {
																"example": "2021-09-02T09:57:54Z"
															},
															"page_urls": {
																"example": [
																	"blog.cloudflare.com/page1",
																	"blog.cloudflare.com/page2"
																]
															},
															"url": {
																"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
															},
															"url_contains_cdn_cgi_path": {
																"example": false
															}
														}
													},
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Page Shield scripts response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Page Shield scripts",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/page_shield/scripts/{script_id}": {
		"description": "Fetches a script detected by Page Shield by script ID.",
		"operationId": "page-shield-get-a-page-shield-script",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "script_id",
				"required": true,
				"schema": {
					"description": "The ID of the resource.",
					"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
					"maxLength": 32,
					"minLength": 32,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"added_at": {
											"example": "2021-08-18T10:51:10.09615Z"
										},
										"domain_reported_malicious": {
											"example": false
										},
										"fetched_at": {
											"example": "2021-09-02T10:17:54Z"
										},
										"first_page_url": {
											"example": "blog.cloudflare.com/page"
										},
										"first_seen_at": {
											"example": "2021-08-18T10:51:08Z"
										},
										"hash": {
											"example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
										},
										"host": {
											"example": "blog.cloudflare.com"
										},
										"id": {
											"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
										},
										"js_integrity_score": {
											"example": 10
										},
										"last_seen_at": {
											"example": "2021-09-02T09:57:54Z"
										},
										"page_urls": {
											"example": [
												"blog.cloudflare.com/page1",
												"blog.cloudflare.com/page2"
											]
										},
										"url": {
											"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
										},
										"url_contains_cdn_cgi_path": {
											"example": false
										}
									}
								},
								{
									"properties": {
										"versions": {
											"example": [
												{
													"fetched_at": "2021-08-18T10:51:08Z",
													"hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b423",
													"js_integrity_score": 2
												}
											],
											"items": {
												"description": "The version of the analyzed script.",
												"properties": {
													"fetched_at": {
														"description": "The timestamp of when the script was last fetched.",
														"nullable": true,
														"type": "string"
													},
													"hash": {
														"description": "The computed hash of the analyzed script.",
														"maxLength": 64,
														"minLength": 64,
														"nullable": true,
														"type": "string"
													},
													"js_integrity_score": {
														"description": "The integrity score of the JavaScript content.",
														"maximum": 99,
														"minimum": 1,
														"nullable": true,
														"type": "integer"
													}
												},
												"type": "object"
											},
											"nullable": true,
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get a Page Shield script response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"added_at": {
													"example": "2021-08-18T10:51:10.09615Z"
												},
												"domain_reported_malicious": {
													"example": false
												},
												"fetched_at": {
													"example": "2021-09-02T10:17:54Z"
												},
												"first_page_url": {
													"example": "blog.cloudflare.com/page"
												},
												"first_seen_at": {
													"example": "2021-08-18T10:51:08Z"
												},
												"hash": {
													"example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
												},
												"host": {
													"example": "blog.cloudflare.com"
												},
												"id": {
													"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
												},
												"js_integrity_score": {
													"example": 10
												},
												"last_seen_at": {
													"example": "2021-09-02T09:57:54Z"
												},
												"page_urls": {
													"example": [
														"blog.cloudflare.com/page1",
														"blog.cloudflare.com/page2"
													]
												},
												"url": {
													"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
												},
												"url_contains_cdn_cgi_path": {
													"example": false
												}
											}
										},
										{
											"properties": {
												"versions": {
													"example": [
														{
															"fetched_at": "2021-08-18T10:51:08Z",
															"hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b423",
															"js_integrity_score": 2
														}
													],
													"items": {
														"description": "The version of the analyzed script.",
														"properties": {
															"fetched_at": {
																"description": "The timestamp of when the script was last fetched.",
																"nullable": true,
																"type": "string"
															},
															"hash": {
																"description": "The computed hash of the analyzed script.",
																"maxLength": 64,
																"minLength": 64,
																"nullable": true,
																"type": "string"
															},
															"js_integrity_score": {
																"description": "The integrity score of the JavaScript content.",
																"maximum": 99,
																"minimum": 1,
																"nullable": true,
																"type": "integer"
															}
														},
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a Page Shield script response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a Page Shield script",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/page_shield/policies": {
		"description": "Create a Page Shield policy.",
		"operationId": "page-shield-create-a-page-shield-policy",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"action": {
								"description": "The action to take if the expression matches",
								"enum": [
									"allow",
									"log"
								],
								"example": "allow",
								"type": "string"
							},
							"description": {
								"description": "A description for the policy",
								"example": "Checkout page CSP policy",
								"type": "string"
							},
							"enabled": {
								"description": "Whether the policy is enabled",
								"example": true,
								"type": "boolean"
							},
							"expression": {
								"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
								"example": "ends_with(http.request.uri.path, \"/checkout\")",
								"type": "string"
							},
							"value": {
								"description": "The policy which will be applied",
								"example": "script-src 'none';",
								"type": "string"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"action": {
											"description": "The action to take if the expression matches",
											"enum": [
												"allow",
												"log"
											],
											"example": "allow",
											"type": "string"
										},
										"description": {
											"description": "A description for the policy",
											"example": "Checkout page CSP policy",
											"type": "string"
										},
										"enabled": {
											"description": "Whether the policy is enabled",
											"example": true,
											"type": "boolean"
										},
										"expression": {
											"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
											"example": "ends_with(http.request.uri.path, \"/checkout\")",
											"type": "string"
										},
										"id": {
											"description": "The ID of the policy",
											"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
											"type": "string"
										},
										"value": {
											"description": "The policy which will be applied",
											"example": "script-src 'none';",
											"type": "string"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create a Page Shield policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"action": {
													"description": "The action to take if the expression matches",
													"enum": [
														"allow",
														"log"
													],
													"example": "allow",
													"type": "string"
												},
												"description": {
													"description": "A description for the policy",
													"example": "Checkout page CSP policy",
													"type": "string"
												},
												"enabled": {
													"description": "Whether the policy is enabled",
													"example": true,
													"type": "boolean"
												},
												"expression": {
													"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
													"example": "ends_with(http.request.uri.path, \"/checkout\")",
													"type": "string"
												},
												"id": {
													"description": "The ID of the policy",
													"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
													"type": "string"
												},
												"value": {
													"description": "The policy which will be applied",
													"example": "script-src 'none';",
													"type": "string"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a Page Shield policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a Page Shield policy",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/page_shield": {
		"description": "Updates Page Shield settings.",
		"operationId": "page-shield-update-page-shield-settings",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"enabled": {
								"description": "When true, indicates that Page Shield is enabled.",
								"example": true,
								"type": "boolean"
							},
							"use_cloudflare_reporting_endpoint": {
								"description": "When true, CSP reports will be sent to https://csp-reporting.cloudflare.com/cdn-cgi/script_monitor/report",
								"example": true,
								"type": "boolean"
							},
							"use_connection_url_path": {
								"description": "When true, the paths associated with connections URLs will also be analyzed.",
								"example": true,
								"type": "boolean"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"properties": {
												"enabled": {
													"description": "When true, indicates that Page Shield is enabled.",
													"example": true,
													"type": "boolean"
												},
												"updated_at": {
													"description": "The timestamp of when Page Shield was last updated.",
													"example": "2022-10-12T17:56:52.083582+01:00",
													"type": "string"
												},
												"use_cloudflare_reporting_endpoint": {
													"description": "When true, CSP reports will be sent to https://csp-reporting.cloudflare.com/cdn-cgi/script_monitor/report",
													"example": true,
													"type": "boolean"
												},
												"use_connection_url_path": {
													"description": "When true, the paths associated with connections URLs will also be analyzed.",
													"example": true,
													"type": "boolean"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Page Shield settings response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"allOf": [
														{
															"properties": {
																"errors": {
																	"example": [],
																	"items": {
																		"properties": {
																			"code": {
																				"minimum": 1000,
																				"type": "integer"
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"required": [
																			"code",
																			"message"
																		],
																		"type": "object",
																		"uniqueItems": true
																	},
																	"type": "array"
																},
																"messages": {
																	"example": [],
																	"items": {
																		"properties": {
																			"code": {
																				"minimum": 1000,
																				"type": "integer"
																			},
																			"message": {
																				"type": "string"
																			}
																		},
																		"required": [
																			"code",
																			"message"
																		],
																		"type": "object",
																		"uniqueItems": true
																	},
																	"type": "array"
																},
																"result": {
																	"anyOf": [
																		{
																			"type": "object"
																		},
																		{
																			"items": {},
																			"type": "array"
																		},
																		{
																			"type": "string"
																		}
																	]
																},
																"success": {
																	"description": "Whether the API call was successful",
																	"enum": [
																		true
																	],
																	"example": true,
																	"type": "boolean"
																}
															},
															"required": [
																"success",
																"errors",
																"messages",
																"result"
															],
															"type": "object"
														},
														{
															"properties": {
																"result": {
																	"anyOf": [
																		{
																			"type": "object"
																		},
																		{
																			"items": {},
																			"type": "array"
																		},
																		{
																			"type": "string"
																		}
																	]
																}
															}
														}
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"properties": {
														"enabled": {
															"description": "When true, indicates that Page Shield is enabled.",
															"example": true,
															"type": "boolean"
														},
														"updated_at": {
															"description": "The timestamp of when Page Shield was last updated.",
															"example": "2022-10-12T17:56:52.083582+01:00",
															"type": "string"
														},
														"use_cloudflare_reporting_endpoint": {
															"description": "When true, CSP reports will be sent to https://csp-reporting.cloudflare.com/cdn-cgi/script_monitor/report",
															"example": true,
															"type": "boolean"
														},
														"use_connection_url_path": {
															"description": "When true, the paths associated with connections URLs will also be analyzed.",
															"example": true,
															"type": "boolean"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Page Shield settings response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Page Shield settings",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/page_shield/policies/{policy_id}": {
		"description": "Update a Page Shield policy by ID.",
		"operationId": "page-shield-update-a-page-shield-policy",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "policy_id",
				"required": true,
				"schema": {
					"description": "The ID of the policy.",
					"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
					"maxLength": 32,
					"minLength": 32,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"action": {
								"description": "The action to take if the expression matches",
								"enum": [
									"allow",
									"log"
								],
								"example": "allow",
								"type": "string"
							},
							"description": {
								"description": "A description for the policy",
								"example": "Checkout page CSP policy",
								"type": "string"
							},
							"enabled": {
								"description": "Whether the policy is enabled",
								"example": true,
								"type": "boolean"
							},
							"expression": {
								"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
								"example": "ends_with(http.request.uri.path, \"/checkout\")",
								"type": "string"
							},
							"value": {
								"description": "The policy which will be applied",
								"example": "script-src 'none';",
								"type": "string"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"action": {
											"description": "The action to take if the expression matches",
											"enum": [
												"allow",
												"log"
											],
											"example": "allow",
											"type": "string"
										},
										"description": {
											"description": "A description for the policy",
											"example": "Checkout page CSP policy",
											"type": "string"
										},
										"enabled": {
											"description": "Whether the policy is enabled",
											"example": true,
											"type": "boolean"
										},
										"expression": {
											"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
											"example": "ends_with(http.request.uri.path, \"/checkout\")",
											"type": "string"
										},
										"id": {
											"description": "The ID of the policy",
											"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
											"type": "string"
										},
										"value": {
											"description": "The policy which will be applied",
											"example": "script-src 'none';",
											"type": "string"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update a Page Shield policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"action": {
													"description": "The action to take if the expression matches",
													"enum": [
														"allow",
														"log"
													],
													"example": "allow",
													"type": "string"
												},
												"description": {
													"description": "A description for the policy",
													"example": "Checkout page CSP policy",
													"type": "string"
												},
												"enabled": {
													"description": "Whether the policy is enabled",
													"example": true,
													"type": "boolean"
												},
												"expression": {
													"description": "The expression which must match for the policy to be applied, using the Cloudflare Firewall rule expression syntax",
													"example": "ends_with(http.request.uri.path, \"/checkout\")",
													"type": "string"
												},
												"id": {
													"description": "The ID of the policy",
													"example": "c9ef84a6bf5e47138c75d95e2f933e8f",
													"type": "string"
												},
												"value": {
													"description": "The policy which will be applied",
													"example": "script-src 'none';",
													"type": "string"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a Page Shield policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a Page Shield policy",
		"tags": [
			"Page Shield"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	}
}