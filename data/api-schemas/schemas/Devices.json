{
	"DELETE /accounts/{identifier}/devices/policy/{uuid}": {
		"description": "Delete a device settings policy. Returns the remaining policies for the account.",
		"operationId": "devices-delete-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"allow_mode_switch": {
														"description": "Whether to allow the user to switch WARP between modes.",
														"example": true,
														"type": "boolean"
													},
													"allow_updates": {
														"description": "Whether to receive update notifications when a new version of the client is available.",
														"example": true,
														"type": "boolean"
													},
													"allowed_to_leave": {
														"description": "Whether to allow devices to leave the organization.",
														"example": true,
														"type": "boolean"
													},
													"auto_connect": {
														"description": "The amount of time in minutes to reconnect after having been disabled.",
														"example": 0,
														"type": "number"
													},
													"captive_portal": {
														"description": "Turn on the captive portal after the specified amount of time.",
														"example": 180,
														"type": "number"
													},
													"default": {
														"description": "Whether the policy is the default policy for an account.",
														"example": false,
														"type": "boolean"
													},
													"description": {
														"description": "A description of the policy.",
														"example": "Policy for test teams.",
														"maxLength": 500,
														"type": "string"
													},
													"disable_auto_fallback": {
														"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
														"example": true,
														"type": "boolean"
													},
													"enabled": {
														"description": "Whether the policy will be applied to matching devices.",
														"example": true,
														"type": "boolean"
													},
													"exclude": {
														"items": {
															"properties": {
																"address": {
																	"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																	"example": "192.0.2.0/24",
																	"type": "string"
																},
																"description": {
																	"description": "A description of the split tunnel item, displayed in the client UI.",
																	"example": "Exclude testing domains from the tunnel",
																	"maxLength": 100,
																	"type": "string"
																},
																"host": {
																	"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																	"example": "*.example.com",
																	"type": "string"
																}
															},
															"required": [
																"address",
																"description"
															],
															"type": "object"
														},
														"type": "array"
													},
													"exclude_office_ips": {
														"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
														"example": true,
														"type": "boolean"
													},
													"fallback_domains": {
														"items": {
															"properties": {
																"description": {
																	"description": "A description of the fallback domain, displayed in the client UI.",
																	"example": "Domain bypass for local development",
																	"maxLength": 100,
																	"type": "string"
																},
																"dns_server": {
																	"description": "A list of IP addresses to handle domain resolution.",
																	"items": {},
																	"type": "array"
																},
																"suffix": {
																	"description": "The domain suffix to match when resolving locally.",
																	"example": "example.com",
																	"type": "string"
																}
															},
															"required": [
																"suffix"
															],
															"type": "object"
														},
														"type": "array"
													},
													"gateway_unique_id": {
														"example": "699d98642c564d2e855e9661899b7252",
														"type": "string"
													},
													"include": {
														"items": {
															"properties": {
																"address": {
																	"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																	"example": "192.0.2.0/24",
																	"type": "string"
																},
																"description": {
																	"description": "A description of the split tunnel item, displayed in the client UI.",
																	"example": "Include testing domains from the tunnel",
																	"maxLength": 100,
																	"type": "string"
																},
																"host": {
																	"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																	"example": "*.example.com",
																	"type": "string"
																}
															},
															"required": [
																"address",
																"description"
															],
															"type": "object"
														},
														"type": "array"
													},
													"match": {
														"description": "The wirefilter expression to match devices.",
														"example": "user.identity == \"test@cloudflare.com\"",
														"maxLength": 500,
														"type": "string"
													},
													"name": {
														"description": "The name of the device settings policy.",
														"example": "Allow Developers",
														"maxLength": 100,
														"type": "string"
													},
													"policy_id": {
														"description": "Device ID.",
														"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
														"maxLength": 36,
														"type": "string"
													},
													"precedence": {
														"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
														"example": 100,
														"type": "number"
													},
													"service_mode_v2": {
														"properties": {
															"mode": {
																"description": "The mode to run the WARP client under.",
																"example": "proxy",
																"type": "string"
															},
															"port": {
																"description": "The port number when used with proxy mode.",
																"example": 3000,
																"type": "number"
															}
														},
														"type": "object"
													},
													"support_url": {
														"description": "The URL to launch when the Send Feedback button is clicked.",
														"example": "https://1.1.1.1/help",
														"type": "string"
													},
													"switch_locked": {
														"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
														"example": true,
														"type": "boolean"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"allow_mode_switch": {
																"description": "Whether to allow the user to switch WARP between modes.",
																"example": true,
																"type": "boolean"
															},
															"allow_updates": {
																"description": "Whether to receive update notifications when a new version of the client is available.",
																"example": true,
																"type": "boolean"
															},
															"allowed_to_leave": {
																"description": "Whether to allow devices to leave the organization.",
																"example": true,
																"type": "boolean"
															},
															"auto_connect": {
																"description": "The amount of time in minutes to reconnect after having been disabled.",
																"example": 0,
																"type": "number"
															},
															"captive_portal": {
																"description": "Turn on the captive portal after the specified amount of time.",
																"example": 180,
																"type": "number"
															},
															"default": {
																"description": "Whether the policy is the default policy for an account.",
																"example": false,
																"type": "boolean"
															},
															"description": {
																"description": "A description of the policy.",
																"example": "Policy for test teams.",
																"maxLength": 500,
																"type": "string"
															},
															"disable_auto_fallback": {
																"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
																"example": true,
																"type": "boolean"
															},
															"enabled": {
																"description": "Whether the policy will be applied to matching devices.",
																"example": true,
																"type": "boolean"
															},
															"exclude": {
																"items": {
																	"properties": {
																		"address": {
																			"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																			"example": "192.0.2.0/24",
																			"type": "string"
																		},
																		"description": {
																			"description": "A description of the split tunnel item, displayed in the client UI.",
																			"example": "Exclude testing domains from the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"host": {
																			"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																			"example": "*.example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"address",
																		"description"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"exclude_office_ips": {
																"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
																"example": true,
																"type": "boolean"
															},
															"fallback_domains": {
																"items": {
																	"properties": {
																		"description": {
																			"description": "A description of the fallback domain, displayed in the client UI.",
																			"example": "Domain bypass for local development",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"dns_server": {
																			"description": "A list of IP addresses to handle domain resolution.",
																			"items": {},
																			"type": "array"
																		},
																		"suffix": {
																			"description": "The domain suffix to match when resolving locally.",
																			"example": "example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"suffix"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"gateway_unique_id": {
																"example": "699d98642c564d2e855e9661899b7252",
																"type": "string"
															},
															"include": {
																"items": {
																	"properties": {
																		"address": {
																			"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																			"example": "192.0.2.0/24",
																			"type": "string"
																		},
																		"description": {
																			"description": "A description of the split tunnel item, displayed in the client UI.",
																			"example": "Include testing domains from the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"host": {
																			"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																			"example": "*.example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"address",
																		"description"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"match": {
																"description": "The wirefilter expression to match devices.",
																"example": "user.identity == \"test@cloudflare.com\"",
																"maxLength": 500,
																"type": "string"
															},
															"name": {
																"description": "The name of the device settings policy.",
																"example": "Allow Developers",
																"maxLength": 100,
																"type": "string"
															},
															"policy_id": {
																"description": "Device ID.",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"type": "string"
															},
															"precedence": {
																"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
																"example": 100,
																"type": "number"
															},
															"service_mode_v2": {
																"properties": {
																	"mode": {
																		"description": "The mode to run the WARP client under.",
																		"example": "proxy",
																		"type": "string"
																	},
																	"port": {
																		"description": "The port number when used with proxy mode.",
																		"example": 3000,
																		"type": "number"
																	}
																},
																"type": "object"
															},
															"support_url": {
																"description": "The URL to launch when the Send Feedback button is clicked.",
																"example": "https://1.1.1.1/help",
																"type": "string"
															},
															"switch_locked": {
																"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
																"example": true,
																"type": "boolean"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices": {
		"description": "List Enrolled Devices.",
		"operationId": "devices-list-devices",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"created": {
														"description": "When the device was created.",
														"example": "2017-06-14T00:00:00Z",
														"format": "date-time",
														"type": "string"
													},
													"deleted": {
														"description": "True if the device was deleted.",
														"example": true,
														"type": "boolean"
													},
													"device_type": {
														"enum": [
															"windows",
															"mac",
															"linux",
															"android",
															"ios"
														],
														"example": "windows",
														"type": "string"
													},
													"id": {
														"description": "Device ID.",
														"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
														"maxLength": 36,
														"type": "string"
													},
													"ip": {
														"description": "IPv4 or IPv6 address.",
														"example": "1.1.1.1",
														"type": "string"
													},
													"key": {
														"description": "The device's public key.",
														"example": "yek0SUYoOQ10vMGsIYAevozXUQpQtNFJFfFGqER/BGc=",
														"type": "string"
													},
													"last_seen": {
														"description": "When the device last connected to Cloudflare services.",
														"example": "2017-06-14T00:00:00Z",
														"format": "date-time",
														"type": "string"
													},
													"mac_address": {
														"description": "The device mac address.",
														"example": "00-00-5E-00-53-00",
														"type": "string"
													},
													"manufacturer": {
														"description": "The device manufacturer name.",
														"example": "My phone corp",
														"type": "string"
													},
													"model": {
														"description": "The device model name.",
														"example": "MyPhone(pro-X)",
														"type": "string"
													},
													"name": {
														"description": "The device name.",
														"example": "My mobile device",
														"type": "string"
													},
													"os_distro_name": {
														"description": "The Linux distro name.",
														"example": "ubuntu",
														"type": "string"
													},
													"os_distro_revision": {
														"description": "The Linux distro revision.",
														"example": "1.0.0",
														"type": "string"
													},
													"os_version": {
														"description": "The operating system version.",
														"example": "10.0.0",
														"type": "string"
													},
													"os_version_extra": {
														"description": "The operating system version extra parameter.",
														"example": "(a)",
														"type": "string"
													},
													"revoked_at": {
														"description": "When the device was revoked.",
														"example": "2017-06-14T00:00:00Z",
														"format": "date-time",
														"type": "string"
													},
													"serial_number": {
														"description": "The device serial number.",
														"example": "EXAMPLEHMD6R",
														"type": "string"
													},
													"updated": {
														"description": "When the device was updated.",
														"example": "2017-06-14T00:00:00Z",
														"format": "date-time",
														"type": "string"
													},
													"user": {
														"properties": {
															"email": {
																"description": "The contact email address of the user.",
																"example": "user@example.com",
																"maxLength": 90,
																"type": "string"
															},
															"id": {
																"description": "UUID",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"readOnly": true,
																"type": "string"
															},
															"name": {
																"description": "The enrolled device user's name.",
																"example": "John Appleseed",
																"type": "string"
															}
														},
														"type": "object"
													},
													"version": {
														"description": "The WARP client version.",
														"example": "1.0.0",
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Devices response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"created": {
																"description": "When the device was created.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"type": "string"
															},
															"deleted": {
																"description": "True if the device was deleted.",
																"example": true,
																"type": "boolean"
															},
															"device_type": {
																"enum": [
																	"windows",
																	"mac",
																	"linux",
																	"android",
																	"ios"
																],
																"example": "windows",
																"type": "string"
															},
															"id": {
																"description": "Device ID.",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"type": "string"
															},
															"ip": {
																"description": "IPv4 or IPv6 address.",
																"example": "1.1.1.1",
																"type": "string"
															},
															"key": {
																"description": "The device's public key.",
																"example": "yek0SUYoOQ10vMGsIYAevozXUQpQtNFJFfFGqER/BGc=",
																"type": "string"
															},
															"last_seen": {
																"description": "When the device last connected to Cloudflare services.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"type": "string"
															},
															"mac_address": {
																"description": "The device mac address.",
																"example": "00-00-5E-00-53-00",
																"type": "string"
															},
															"manufacturer": {
																"description": "The device manufacturer name.",
																"example": "My phone corp",
																"type": "string"
															},
															"model": {
																"description": "The device model name.",
																"example": "MyPhone(pro-X)",
																"type": "string"
															},
															"name": {
																"description": "The device name.",
																"example": "My mobile device",
																"type": "string"
															},
															"os_distro_name": {
																"description": "The Linux distro name.",
																"example": "ubuntu",
																"type": "string"
															},
															"os_distro_revision": {
																"description": "The Linux distro revision.",
																"example": "1.0.0",
																"type": "string"
															},
															"os_version": {
																"description": "The operating system version.",
																"example": "10.0.0",
																"type": "string"
															},
															"os_version_extra": {
																"description": "The operating system version extra parameter.",
																"example": "(a)",
																"type": "string"
															},
															"revoked_at": {
																"description": "When the device was revoked.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"type": "string"
															},
															"serial_number": {
																"description": "The device serial number.",
																"example": "EXAMPLEHMD6R",
																"type": "string"
															},
															"updated": {
																"description": "When the device was updated.",
																"example": "2017-06-14T00:00:00Z",
																"format": "date-time",
																"type": "string"
															},
															"user": {
																"properties": {
																	"email": {
																		"description": "The contact email address of the user.",
																		"example": "user@example.com",
																		"maxLength": 90,
																		"type": "string"
																	},
																	"id": {
																		"description": "UUID",
																		"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																		"maxLength": 36,
																		"readOnly": true,
																		"type": "string"
																	},
																	"name": {
																		"description": "The enrolled device user's name.",
																		"example": "John Appleseed",
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"version": {
																"description": "The WARP client version.",
																"example": "1.0.0",
																"type": "string"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Devices response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Devices",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/{uuid}": {
		"description": "Fetch a single Device.",
		"operationId": "devices-device-details",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Device Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Device Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Device Details",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/{uuid}/override_codes": {
		"description": "Fetch one-time use admin override code for a device. This relies on the Admin Override setting being enabled in your device configuration.",
		"operationId": "devices-list-admin-override-code-for-device",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"properties": {
														"1": {
															"description": "Override code that is valid for 1 hour.",
															"example": "9106681"
														},
														"3": {
															"description": "Override code that is valid for 3 hours.",
															"example": "5356247"
														},
														"6": {
															"description": "Override code that is valid for 6 hours.",
															"example": "9478972"
														},
														"12": {
															"description": "Override code that is valid for 12 hour2.",
															"example": "3424359"
														},
														"24": {
															"description": "Override code that is valid for 24 hour.2.",
															"example": "2887634"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Admin Override code for device response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"properties": {
																"1": {
																	"description": "Override code that is valid for 1 hour.",
																	"example": "9106681"
																},
																"3": {
																	"description": "Override code that is valid for 3 hours.",
																	"example": "5356247"
																},
																"6": {
																	"description": "Override code that is valid for 6 hours.",
																	"example": "9478972"
																},
																"12": {
																	"description": "Override code that is valid for 12 hour2.",
																	"example": "3424359"
																},
																"24": {
																	"description": "Override code that is valid for 24 hour.2.",
																	"example": "2887634"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Admin Override code for device response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Admin Override code for device",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policies": {
		"description": "Lists the device settings policies for an account.",
		"operationId": "devices-list-device-settings-policies",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"allow_mode_switch": {
														"description": "Whether to allow the user to switch WARP between modes.",
														"example": true,
														"type": "boolean"
													},
													"allow_updates": {
														"description": "Whether to receive update notifications when a new version of the client is available.",
														"example": true,
														"type": "boolean"
													},
													"allowed_to_leave": {
														"description": "Whether to allow devices to leave the organization.",
														"example": true,
														"type": "boolean"
													},
													"auto_connect": {
														"description": "The amount of time in minutes to reconnect after having been disabled.",
														"example": 0,
														"type": "number"
													},
													"captive_portal": {
														"description": "Turn on the captive portal after the specified amount of time.",
														"example": 180,
														"type": "number"
													},
													"default": {
														"description": "Whether the policy is the default policy for an account.",
														"example": false,
														"type": "boolean"
													},
													"description": {
														"description": "A description of the policy.",
														"example": "Policy for test teams.",
														"maxLength": 500,
														"type": "string"
													},
													"disable_auto_fallback": {
														"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
														"example": true,
														"type": "boolean"
													},
													"enabled": {
														"description": "Whether the policy will be applied to matching devices.",
														"example": true,
														"type": "boolean"
													},
													"exclude": {
														"items": {
															"properties": {
																"address": {
																	"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																	"example": "192.0.2.0/24",
																	"type": "string"
																},
																"description": {
																	"description": "A description of the split tunnel item, displayed in the client UI.",
																	"example": "Exclude testing domains from the tunnel",
																	"maxLength": 100,
																	"type": "string"
																},
																"host": {
																	"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																	"example": "*.example.com",
																	"type": "string"
																}
															},
															"required": [
																"address",
																"description"
															],
															"type": "object"
														},
														"type": "array"
													},
													"exclude_office_ips": {
														"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
														"example": true,
														"type": "boolean"
													},
													"fallback_domains": {
														"items": {
															"properties": {
																"description": {
																	"description": "A description of the fallback domain, displayed in the client UI.",
																	"example": "Domain bypass for local development",
																	"maxLength": 100,
																	"type": "string"
																},
																"dns_server": {
																	"description": "A list of IP addresses to handle domain resolution.",
																	"items": {},
																	"type": "array"
																},
																"suffix": {
																	"description": "The domain suffix to match when resolving locally.",
																	"example": "example.com",
																	"type": "string"
																}
															},
															"required": [
																"suffix"
															],
															"type": "object"
														},
														"type": "array"
													},
													"gateway_unique_id": {
														"example": "699d98642c564d2e855e9661899b7252",
														"type": "string"
													},
													"include": {
														"items": {
															"properties": {
																"address": {
																	"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																	"example": "192.0.2.0/24",
																	"type": "string"
																},
																"description": {
																	"description": "A description of the split tunnel item, displayed in the client UI.",
																	"example": "Include testing domains from the tunnel",
																	"maxLength": 100,
																	"type": "string"
																},
																"host": {
																	"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																	"example": "*.example.com",
																	"type": "string"
																}
															},
															"required": [
																"address",
																"description"
															],
															"type": "object"
														},
														"type": "array"
													},
													"match": {
														"description": "The wirefilter expression to match devices.",
														"example": "user.identity == \"test@cloudflare.com\"",
														"maxLength": 500,
														"type": "string"
													},
													"name": {
														"description": "The name of the device settings policy.",
														"example": "Allow Developers",
														"maxLength": 100,
														"type": "string"
													},
													"policy_id": {
														"description": "Device ID.",
														"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
														"maxLength": 36,
														"type": "string"
													},
													"precedence": {
														"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
														"example": 100,
														"type": "number"
													},
													"service_mode_v2": {
														"properties": {
															"mode": {
																"description": "The mode to run the WARP client under.",
																"example": "proxy",
																"type": "string"
															},
															"port": {
																"description": "The port number when used with proxy mode.",
																"example": 3000,
																"type": "number"
															}
														},
														"type": "object"
													},
													"support_url": {
														"description": "The URL to launch when the Send Feedback button is clicked.",
														"example": "https://1.1.1.1/help",
														"type": "string"
													},
													"switch_locked": {
														"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
														"example": true,
														"type": "boolean"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Device Settings Policies response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"allow_mode_switch": {
																"description": "Whether to allow the user to switch WARP between modes.",
																"example": true,
																"type": "boolean"
															},
															"allow_updates": {
																"description": "Whether to receive update notifications when a new version of the client is available.",
																"example": true,
																"type": "boolean"
															},
															"allowed_to_leave": {
																"description": "Whether to allow devices to leave the organization.",
																"example": true,
																"type": "boolean"
															},
															"auto_connect": {
																"description": "The amount of time in minutes to reconnect after having been disabled.",
																"example": 0,
																"type": "number"
															},
															"captive_portal": {
																"description": "Turn on the captive portal after the specified amount of time.",
																"example": 180,
																"type": "number"
															},
															"default": {
																"description": "Whether the policy is the default policy for an account.",
																"example": false,
																"type": "boolean"
															},
															"description": {
																"description": "A description of the policy.",
																"example": "Policy for test teams.",
																"maxLength": 500,
																"type": "string"
															},
															"disable_auto_fallback": {
																"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
																"example": true,
																"type": "boolean"
															},
															"enabled": {
																"description": "Whether the policy will be applied to matching devices.",
																"example": true,
																"type": "boolean"
															},
															"exclude": {
																"items": {
																	"properties": {
																		"address": {
																			"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																			"example": "192.0.2.0/24",
																			"type": "string"
																		},
																		"description": {
																			"description": "A description of the split tunnel item, displayed in the client UI.",
																			"example": "Exclude testing domains from the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"host": {
																			"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																			"example": "*.example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"address",
																		"description"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"exclude_office_ips": {
																"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
																"example": true,
																"type": "boolean"
															},
															"fallback_domains": {
																"items": {
																	"properties": {
																		"description": {
																			"description": "A description of the fallback domain, displayed in the client UI.",
																			"example": "Domain bypass for local development",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"dns_server": {
																			"description": "A list of IP addresses to handle domain resolution.",
																			"items": {},
																			"type": "array"
																		},
																		"suffix": {
																			"description": "The domain suffix to match when resolving locally.",
																			"example": "example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"suffix"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"gateway_unique_id": {
																"example": "699d98642c564d2e855e9661899b7252",
																"type": "string"
															},
															"include": {
																"items": {
																	"properties": {
																		"address": {
																			"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																			"example": "192.0.2.0/24",
																			"type": "string"
																		},
																		"description": {
																			"description": "A description of the split tunnel item, displayed in the client UI.",
																			"example": "Include testing domains from the tunnel",
																			"maxLength": 100,
																			"type": "string"
																		},
																		"host": {
																			"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																			"example": "*.example.com",
																			"type": "string"
																		}
																	},
																	"required": [
																		"address",
																		"description"
																	],
																	"type": "object"
																},
																"type": "array"
															},
															"match": {
																"description": "The wirefilter expression to match devices.",
																"example": "user.identity == \"test@cloudflare.com\"",
																"maxLength": 500,
																"type": "string"
															},
															"name": {
																"description": "The name of the device settings policy.",
																"example": "Allow Developers",
																"maxLength": 100,
																"type": "string"
															},
															"policy_id": {
																"description": "Device ID.",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
																"maxLength": 36,
																"type": "string"
															},
															"precedence": {
																"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
																"example": 100,
																"type": "number"
															},
															"service_mode_v2": {
																"properties": {
																	"mode": {
																		"description": "The mode to run the WARP client under.",
																		"example": "proxy",
																		"type": "string"
																	},
																	"port": {
																		"description": "The port number when used with proxy mode.",
																		"example": 3000,
																		"type": "number"
																	}
																},
																"type": "object"
															},
															"support_url": {
																"description": "The URL to launch when the Send Feedback button is clicked.",
																"example": "https://1.1.1.1/help",
																"type": "string"
															},
															"switch_locked": {
																"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
																"example": true,
																"type": "boolean"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Device Settings Policies response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Device Settings Policies",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy": {
		"description": "Get the default device settings policy for an account.",
		"operationId": "devices-get-default-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in minutes to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"disable_auto_fallback": {
													"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
													"example": true,
													"type": "boolean"
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string"
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number"
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Default Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in minutes to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"disable_auto_fallback": {
															"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
															"example": true,
															"type": "boolean"
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Include testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string"
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number"
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Default Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Default Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/{uuid}": {
		"description": "Get the device settings policy by ID.",
		"operationId": "devices-get-device-settings-policy-by-id",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in minutes to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy is the default policy for an account.",
													"example": false,
													"type": "boolean"
												},
												"description": {
													"description": "A description of the policy.",
													"example": "Policy for test teams.",
													"maxLength": 500,
													"type": "string"
												},
												"disable_auto_fallback": {
													"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
													"example": true,
													"type": "boolean"
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"match": {
													"description": "The wirefilter expression to match devices.",
													"example": "user.identity == \"test@cloudflare.com\"",
													"maxLength": 500,
													"type": "string"
												},
												"name": {
													"description": "The name of the device settings policy.",
													"example": "Allow Developers",
													"maxLength": 100,
													"type": "string"
												},
												"policy_id": {
													"description": "Device ID.",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string"
												},
												"precedence": {
													"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
													"example": 100,
													"type": "number"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string"
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number"
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Device Settings Policy by ID response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in minutes to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy is the default policy for an account.",
															"example": false,
															"type": "boolean"
														},
														"description": {
															"description": "A description of the policy.",
															"example": "Policy for test teams.",
															"maxLength": 500,
															"type": "string"
														},
														"disable_auto_fallback": {
															"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
															"example": true,
															"type": "boolean"
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Include testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"match": {
															"description": "The wirefilter expression to match devices.",
															"example": "user.identity == \"test@cloudflare.com\"",
															"maxLength": 500,
															"type": "string"
														},
														"name": {
															"description": "The name of the device settings policy.",
															"example": "Allow Developers",
															"maxLength": 100,
															"type": "string"
														},
														"policy_id": {
															"description": "Device ID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string"
														},
														"precedence": {
															"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
															"example": 100,
															"type": "number"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string"
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number"
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Device Settings Policy by ID response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Device Settings Policy by ID",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/{uuid}/exclude": {
		"description": "Get the list of routes excluded from the WARP client's tunnel for one specific device settings policy.",
		"operationId": "devices-get-split-tunnel-exclude-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"address": {
														"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
														"example": "192.0.2.0/24",
														"type": "string"
													},
													"description": {
														"description": "A description of the split tunnel item, displayed in the client UI.",
														"example": "Exclude testing domains from the tunnel",
														"maxLength": 100,
														"type": "string"
													},
													"host": {
														"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
														"example": "*.example.com",
														"type": "string"
													}
												},
												"required": [
													"address",
													"description"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Exclude List for a Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Exclude List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Split Tunnel Exclude List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/{uuid}/fallback_domains": {
		"description": "Get the list of domains to bypass Gateway for DNS resolution and instead use the specified server.",
		"operationId": "devices-get-local-domain-fallback-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"description": {
														"description": "A description of the fallback domain, displayed in the client UI.",
														"example": "Domain bypass for local development",
														"maxLength": 100,
														"type": "string"
													},
													"dns_server": {
														"description": "A list of IP addresses to handle domain resolution.",
														"items": {},
														"type": "array"
													},
													"suffix": {
														"description": "The domain suffix to match when resolving locally.",
														"example": "example.com",
														"type": "string"
													}
												},
												"required": [
													"suffix"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Local Domain Fallback List for a Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Local Domain Fallback List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Local Domain Fallback List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/{uuid}/include": {
		"description": "Get the list of routes included in the WARP client's tunnel for one specific device settings policy.",
		"operationId": "devices-get-split-tunnel-include-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"address": {
														"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
														"example": "192.0.2.0/24",
														"type": "string"
													},
													"description": {
														"description": "A description of the split tunnel item, displayed in the client UI.",
														"example": "Include testing domains from the tunnel",
														"maxLength": 100,
														"type": "string"
													},
													"host": {
														"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
														"example": "*.example.com",
														"type": "string"
													}
												},
												"required": [
													"address",
													"description"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Include List for a Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Include List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Split Tunnel Include List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/exclude": {
		"description": "Get the list of routes excluded from the WARP client's tunnel.",
		"operationId": "devices-get-split-tunnel-exclude-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"address": {
														"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
														"example": "192.0.2.0/24",
														"type": "string"
													},
													"description": {
														"description": "A description of the split tunnel item, displayed in the client UI.",
														"example": "Exclude testing domains from the tunnel",
														"maxLength": 100,
														"type": "string"
													},
													"host": {
														"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
														"example": "*.example.com",
														"type": "string"
													}
												},
												"required": [
													"address",
													"description"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Exclude List response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Exclude List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Split Tunnel Exclude List",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/fallback_domains": {
		"description": "Get the list of domains to bypass Gateway for DNS resolution and instead use the specified server.",
		"operationId": "devices-get-local-domain-fallback-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"description": {
														"description": "A description of the fallback domain, displayed in the client UI.",
														"example": "Domain bypass for local development",
														"maxLength": 100,
														"type": "string"
													},
													"dns_server": {
														"description": "A list of IP addresses to handle domain resolution.",
														"items": {},
														"type": "array"
													},
													"suffix": {
														"description": "The domain suffix to match when resolving locally.",
														"example": "example.com",
														"type": "string"
													}
												},
												"required": [
													"suffix"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Local Domain Fallback List response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Local Domain Fallback List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Local Domain Fallback List",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/include": {
		"description": "Get the list of routes included in the WARP client's tunnel.",
		"operationId": "devices-get-split-tunnel-include-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"address": {
														"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
														"example": "192.0.2.0/24",
														"type": "string"
													},
													"description": {
														"description": "A description of the split tunnel item, displayed in the client UI.",
														"example": "Include testing domains from the tunnel",
														"maxLength": 100,
														"type": "string"
													},
													"host": {
														"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
														"example": "*.example.com",
														"type": "string"
													}
												},
												"required": [
													"address",
													"description"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Include List response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Include List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Split Tunnel Include List",
		"tags": [
			"Devices"
		]
	},
	"PATCH /accounts/{identifier}/devices/policy": {
		"description": "Update the default device settings policy for an account.",
		"operationId": "devices-update-default-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in minutes to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"disable_auto_fallback": {
								"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
								"example": true,
								"type": "boolean"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string"
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number"
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in minutes to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"disable_auto_fallback": {
													"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
													"example": true,
													"type": "boolean"
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string"
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number"
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Default Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in minutes to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"disable_auto_fallback": {
															"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
															"example": true,
															"type": "boolean"
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Include testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string"
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number"
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Default Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Default Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"PATCH /accounts/{identifier}/devices/policy/{uuid}": {
		"description": "Update a device settings policy.",
		"operationId": "devices-update-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in minutes to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"description": {
								"description": "A description of the policy.",
								"example": "Policy for test teams.",
								"maxLength": 500,
								"type": "string"
							},
							"disable_auto_fallback": {
								"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
								"example": true,
								"type": "boolean"
							},
							"enabled": {
								"description": "Whether the policy will be applied to matching devices.",
								"example": true,
								"type": "boolean"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"match": {
								"description": "The wirefilter expression to match devices.",
								"example": "user.identity == \"test@cloudflare.com\"",
								"maxLength": 500,
								"type": "string"
							},
							"name": {
								"description": "The name of the device settings policy.",
								"example": "Allow Developers",
								"maxLength": 100,
								"type": "string"
							},
							"precedence": {
								"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
								"example": 100,
								"type": "number"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string"
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number"
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in minutes to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy is the default policy for an account.",
													"example": false,
													"type": "boolean"
												},
												"description": {
													"description": "A description of the policy.",
													"example": "Policy for test teams.",
													"maxLength": 500,
													"type": "string"
												},
												"disable_auto_fallback": {
													"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
													"example": true,
													"type": "boolean"
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"match": {
													"description": "The wirefilter expression to match devices.",
													"example": "user.identity == \"test@cloudflare.com\"",
													"maxLength": 500,
													"type": "string"
												},
												"name": {
													"description": "The name of the device settings policy.",
													"example": "Allow Developers",
													"maxLength": 100,
													"type": "string"
												},
												"policy_id": {
													"description": "Device ID.",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string"
												},
												"precedence": {
													"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
													"example": 100,
													"type": "number"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string"
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number"
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in minutes to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy is the default policy for an account.",
															"example": false,
															"type": "boolean"
														},
														"description": {
															"description": "A description of the policy.",
															"example": "Policy for test teams.",
															"maxLength": 500,
															"type": "string"
														},
														"disable_auto_fallback": {
															"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
															"example": true,
															"type": "boolean"
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Include testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"match": {
															"description": "The wirefilter expression to match devices.",
															"example": "user.identity == \"test@cloudflare.com\"",
															"maxLength": 500,
															"type": "string"
														},
														"name": {
															"description": "The name of the device settings policy.",
															"example": "Allow Developers",
															"maxLength": 100,
															"type": "string"
														},
														"policy_id": {
															"description": "Device ID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string"
														},
														"precedence": {
															"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
															"example": 100,
															"type": "number"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string"
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number"
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"POST /accounts/{identifier}/devices/policy": {
		"description": "Create a device settings policy to be applied to certain devices matching the criteria.",
		"operationId": "devices-create-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in minutes to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"description": {
								"description": "A description of the policy.",
								"example": "Policy for test teams.",
								"maxLength": 500,
								"type": "string"
							},
							"disable_auto_fallback": {
								"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
								"example": true,
								"type": "boolean"
							},
							"enabled": {
								"description": "Whether the policy will be applied to matching devices.",
								"example": true,
								"type": "boolean"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"match": {
								"description": "The wirefilter expression to match devices.",
								"example": "user.identity == \"test@cloudflare.com\"",
								"maxLength": 500,
								"type": "string"
							},
							"name": {
								"description": "The name of the device settings policy.",
								"example": "Allow Developers",
								"maxLength": 100,
								"type": "string"
							},
							"precedence": {
								"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
								"example": 100,
								"type": "number"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string"
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number"
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							}
						},
						"required": [
							"name",
							"precedence",
							"match"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"allow_mode_switch": {
													"description": "Whether to allow the user to switch WARP between modes.",
													"example": true,
													"type": "boolean"
												},
												"allow_updates": {
													"description": "Whether to receive update notifications when a new version of the client is available.",
													"example": true,
													"type": "boolean"
												},
												"allowed_to_leave": {
													"description": "Whether to allow devices to leave the organization.",
													"example": true,
													"type": "boolean"
												},
												"auto_connect": {
													"description": "The amount of time in minutes to reconnect after having been disabled.",
													"example": 0,
													"type": "number"
												},
												"captive_portal": {
													"description": "Turn on the captive portal after the specified amount of time.",
													"example": 180,
													"type": "number"
												},
												"default": {
													"description": "Whether the policy is the default policy for an account.",
													"example": false,
													"type": "boolean"
												},
												"description": {
													"description": "A description of the policy.",
													"example": "Policy for test teams.",
													"maxLength": 500,
													"type": "string"
												},
												"disable_auto_fallback": {
													"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
													"example": true,
													"type": "boolean"
												},
												"enabled": {
													"description": "Whether the policy will be applied to matching devices.",
													"example": true,
													"type": "boolean"
												},
												"exclude": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"exclude_office_ips": {
													"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
													"example": true,
													"type": "boolean"
												},
												"fallback_domains": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												},
												"gateway_unique_id": {
													"example": "699d98642c564d2e855e9661899b7252",
													"type": "string"
												},
												"include": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												},
												"match": {
													"description": "The wirefilter expression to match devices.",
													"example": "user.identity == \"test@cloudflare.com\"",
													"maxLength": 500,
													"type": "string"
												},
												"name": {
													"description": "The name of the device settings policy.",
													"example": "Allow Developers",
													"maxLength": 100,
													"type": "string"
												},
												"policy_id": {
													"description": "Device ID.",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string"
												},
												"precedence": {
													"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
													"example": 100,
													"type": "number"
												},
												"service_mode_v2": {
													"properties": {
														"mode": {
															"description": "The mode to run the WARP client under.",
															"example": "proxy",
															"type": "string"
														},
														"port": {
															"description": "The port number when used with proxy mode.",
															"example": 3000,
															"type": "number"
														}
													},
													"type": "object"
												},
												"support_url": {
													"description": "The URL to launch when the Send Feedback button is clicked.",
													"example": "https://1.1.1.1/help",
													"type": "string"
												},
												"switch_locked": {
													"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
													"example": true,
													"type": "boolean"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"allow_mode_switch": {
															"description": "Whether to allow the user to switch WARP between modes.",
															"example": true,
															"type": "boolean"
														},
														"allow_updates": {
															"description": "Whether to receive update notifications when a new version of the client is available.",
															"example": true,
															"type": "boolean"
														},
														"allowed_to_leave": {
															"description": "Whether to allow devices to leave the organization.",
															"example": true,
															"type": "boolean"
														},
														"auto_connect": {
															"description": "The amount of time in minutes to reconnect after having been disabled.",
															"example": 0,
															"type": "number"
														},
														"captive_portal": {
															"description": "Turn on the captive portal after the specified amount of time.",
															"example": 180,
															"type": "number"
														},
														"default": {
															"description": "Whether the policy is the default policy for an account.",
															"example": false,
															"type": "boolean"
														},
														"description": {
															"description": "A description of the policy.",
															"example": "Policy for test teams.",
															"maxLength": 500,
															"type": "string"
														},
														"disable_auto_fallback": {
															"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
															"example": true,
															"type": "boolean"
														},
														"enabled": {
															"description": "Whether the policy will be applied to matching devices.",
															"example": true,
															"type": "boolean"
														},
														"exclude": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Exclude testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"exclude_office_ips": {
															"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
															"example": true,
															"type": "boolean"
														},
														"fallback_domains": {
															"items": {
																"properties": {
																	"description": {
																		"description": "A description of the fallback domain, displayed in the client UI.",
																		"example": "Domain bypass for local development",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"dns_server": {
																		"description": "A list of IP addresses to handle domain resolution.",
																		"items": {},
																		"type": "array"
																	},
																	"suffix": {
																		"description": "The domain suffix to match when resolving locally.",
																		"example": "example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"suffix"
																],
																"type": "object"
															},
															"type": "array"
														},
														"gateway_unique_id": {
															"example": "699d98642c564d2e855e9661899b7252",
															"type": "string"
														},
														"include": {
															"items": {
																"properties": {
																	"address": {
																		"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																		"example": "192.0.2.0/24",
																		"type": "string"
																	},
																	"description": {
																		"description": "A description of the split tunnel item, displayed in the client UI.",
																		"example": "Include testing domains from the tunnel",
																		"maxLength": 100,
																		"type": "string"
																	},
																	"host": {
																		"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																		"example": "*.example.com",
																		"type": "string"
																	}
																},
																"required": [
																	"address",
																	"description"
																],
																"type": "object"
															},
															"type": "array"
														},
														"match": {
															"description": "The wirefilter expression to match devices.",
															"example": "user.identity == \"test@cloudflare.com\"",
															"maxLength": 500,
															"type": "string"
														},
														"name": {
															"description": "The name of the device settings policy.",
															"example": "Allow Developers",
															"maxLength": 100,
															"type": "string"
														},
														"policy_id": {
															"description": "Device ID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string"
														},
														"precedence": {
															"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
															"example": 100,
															"type": "number"
														},
														"service_mode_v2": {
															"properties": {
																"mode": {
																	"description": "The mode to run the WARP client under.",
																	"example": "proxy",
																	"type": "string"
																},
																"port": {
																	"description": "The port number when used with proxy mode.",
																	"example": 3000,
																	"type": "number"
																}
															},
															"type": "object"
														},
														"support_url": {
															"description": "The URL to launch when the Send Feedback button is clicked.",
															"example": "https://1.1.1.1/help",
															"type": "string"
														},
														"switch_locked": {
															"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
															"example": true,
															"type": "boolean"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"POST /accounts/{identifier}/devices/revoke": {
		"description": "Revoke a list of devices.",
		"operationId": "devices-revoke-devices",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "A list of device ids to revoke.",
						"items": {
							"description": "Device ID.",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
							"maxLength": 36,
							"type": "string"
						},
						"maxLength": 200,
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											],
											"nullable": true,
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Revoke Devices response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Revoke Devices response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Revoke Devices",
		"tags": [
			"Devices"
		]
	},
	"POST /accounts/{identifier}/devices/unrevoke": {
		"description": "Unrevoke a list of devices.",
		"operationId": "devices-unrevoke-devices",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "A list of device ids to unrevoke.",
						"items": {
							"description": "Device ID.",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
							"maxLength": 36,
							"type": "string"
						},
						"maxLength": 200,
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											],
											"nullable": true,
											"type": "object"
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unrevoke Devices response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Unrevoke Devices response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Unrevoke Devices",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/{uuid}/exclude": {
		"description": "Set the list of routes excluded from the WARP client's tunnel for one specific device settings policy.",
		"operationId": "devices-set-split-tunnel-exclude-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"address": {
									"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
									"example": "192.0.2.0/24",
									"type": "string"
								},
								"description": {
									"description": "A description of the split tunnel item, displayed in the client UI.",
									"example": "Exclude testing domains from the tunnel",
									"maxLength": 100,
									"type": "string"
								},
								"host": {
									"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
									"example": "*.example.com",
									"type": "string"
								}
							},
							"required": [
								"address",
								"description"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"address": {
														"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
														"example": "192.0.2.0/24",
														"type": "string"
													},
													"description": {
														"description": "A description of the split tunnel item, displayed in the client UI.",
														"example": "Exclude testing domains from the tunnel",
														"maxLength": 100,
														"type": "string"
													},
													"host": {
														"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
														"example": "*.example.com",
														"type": "string"
													}
												},
												"required": [
													"address",
													"description"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Exclude List for a Device Settings Policy response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Exclude List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Split Tunnel Exclude List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/{uuid}/fallback_domains": {
		"description": "Set the list of domains to bypass Gateway for DNS resolution and instead use the specified server.",
		"operationId": "devices-set-local-domain-fallback-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"description": {
									"description": "A description of the fallback domain, displayed in the client UI.",
									"example": "Domain bypass for local development",
									"maxLength": 100,
									"type": "string"
								},
								"dns_server": {
									"description": "A list of IP addresses to handle domain resolution.",
									"items": {},
									"type": "array"
								},
								"suffix": {
									"description": "The domain suffix to match when resolving locally.",
									"example": "example.com",
									"type": "string"
								}
							},
							"required": [
								"suffix"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"description": {
														"description": "A description of the fallback domain, displayed in the client UI.",
														"example": "Domain bypass for local development",
														"maxLength": 100,
														"type": "string"
													},
													"dns_server": {
														"description": "A list of IP addresses to handle domain resolution.",
														"items": {},
														"type": "array"
													},
													"suffix": {
														"description": "The domain suffix to match when resolving locally.",
														"example": "example.com",
														"type": "string"
													}
												},
												"required": [
													"suffix"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Local Domain Fallback List for a Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Local Domain Fallback List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Local Domain Fallback List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/{uuid}/include": {
		"description": "Set the list of routes included in the WARP client's tunnel for one specific device settings policy.",
		"operationId": "devices-set-split-tunnel-include-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"address": {
									"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
									"example": "192.0.2.0/24",
									"type": "string"
								},
								"description": {
									"description": "A description of the split tunnel item, displayed in the client UI.",
									"example": "Include testing domains from the tunnel",
									"maxLength": 100,
									"type": "string"
								},
								"host": {
									"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
									"example": "*.example.com",
									"type": "string"
								}
							},
							"required": [
								"address",
								"description"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"address": {
														"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
														"example": "192.0.2.0/24",
														"type": "string"
													},
													"description": {
														"description": "A description of the split tunnel item, displayed in the client UI.",
														"example": "Include testing domains from the tunnel",
														"maxLength": 100,
														"type": "string"
													},
													"host": {
														"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
														"example": "*.example.com",
														"type": "string"
													}
												},
												"required": [
													"address",
													"description"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Include List for a Device Settings Policy response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Include List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Split Tunnel Include List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/exclude": {
		"description": "Set the list of routes excluded from the WARP client's tunnel.",
		"operationId": "devices-set-split-tunnel-exclude-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"address": {
									"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
									"example": "192.0.2.0/24",
									"type": "string"
								},
								"description": {
									"description": "A description of the split tunnel item, displayed in the client UI.",
									"example": "Exclude testing domains from the tunnel",
									"maxLength": 100,
									"type": "string"
								},
								"host": {
									"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
									"example": "*.example.com",
									"type": "string"
								}
							},
							"required": [
								"address",
								"description"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"address": {
														"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
														"example": "192.0.2.0/24",
														"type": "string"
													},
													"description": {
														"description": "A description of the split tunnel item, displayed in the client UI.",
														"example": "Exclude testing domains from the tunnel",
														"maxLength": 100,
														"type": "string"
													},
													"host": {
														"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
														"example": "*.example.com",
														"type": "string"
													}
												},
												"required": [
													"address",
													"description"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Exclude List response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Exclude testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Exclude List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Split Tunnel Exclude List",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/fallback_domains": {
		"description": "Set the list of domains to bypass Gateway for DNS resolution and instead use the specified server.",
		"operationId": "devices-set-local-domain-fallback-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"description": {
									"description": "A description of the fallback domain, displayed in the client UI.",
									"example": "Domain bypass for local development",
									"maxLength": 100,
									"type": "string"
								},
								"dns_server": {
									"description": "A list of IP addresses to handle domain resolution.",
									"items": {},
									"type": "array"
								},
								"suffix": {
									"description": "The domain suffix to match when resolving locally.",
									"example": "example.com",
									"type": "string"
								}
							},
							"required": [
								"suffix"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"description": {
														"description": "A description of the fallback domain, displayed in the client UI.",
														"example": "Domain bypass for local development",
														"maxLength": 100,
														"type": "string"
													},
													"dns_server": {
														"description": "A list of IP addresses to handle domain resolution.",
														"items": {},
														"type": "array"
													},
													"suffix": {
														"description": "The domain suffix to match when resolving locally.",
														"example": "example.com",
														"type": "string"
													}
												},
												"required": [
													"suffix"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Local Domain Fallback List response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"description": {
																"description": "A description of the fallback domain, displayed in the client UI.",
																"example": "Domain bypass for local development",
																"maxLength": 100,
																"type": "string"
															},
															"dns_server": {
																"description": "A list of IP addresses to handle domain resolution.",
																"items": {},
																"type": "array"
															},
															"suffix": {
																"description": "The domain suffix to match when resolving locally.",
																"example": "example.com",
																"type": "string"
															}
														},
														"required": [
															"suffix"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Local Domain Fallback List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Local Domain Fallback List",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/include": {
		"description": "Set the list of routes included in the WARP client's tunnel.",
		"operationId": "devices-set-split-tunnel-include-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"address": {
									"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
									"example": "192.0.2.0/24",
									"type": "string"
								},
								"description": {
									"description": "A description of the split tunnel item, displayed in the client UI.",
									"example": "Include testing domains from the tunnel",
									"maxLength": 100,
									"type": "string"
								},
								"host": {
									"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
									"example": "*.example.com",
									"type": "string"
								}
							},
							"required": [
								"address",
								"description"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"address": {
														"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
														"example": "192.0.2.0/24",
														"type": "string"
													},
													"description": {
														"description": "A description of the split tunnel item, displayed in the client UI.",
														"example": "Include testing domains from the tunnel",
														"maxLength": 100,
														"type": "string"
													},
													"host": {
														"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
														"example": "*.example.com",
														"type": "string"
													}
												},
												"required": [
													"address",
													"description"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Include List response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"address": {
																"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
																"example": "192.0.2.0/24",
																"type": "string"
															},
															"description": {
																"description": "A description of the split tunnel item, displayed in the client UI.",
																"example": "Include testing domains from the tunnel",
																"maxLength": 100,
																"type": "string"
															},
															"host": {
																"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
																"example": "*.example.com",
																"type": "string"
															}
														},
														"required": [
															"address",
															"description"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Include List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Split Tunnel Include List",
		"tags": [
			"Devices"
		]
	}
}