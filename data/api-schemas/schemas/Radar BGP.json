{
	"GET /radar/bgp/hijacks/events": {
		"description": "Get the BGP hijack events. (Beta)",
		"operationId": "radar-get-bgp-hijacks-events",
		"parameters": [
			{
				"in": "query",
				"name": "page",
				"schema": {
					"description": "Current page number, starting from 1",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"description": "Number of entries per page",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "eventId",
				"schema": {
					"description": "The unique identifier of a event",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "hijackerAsn",
				"schema": {
					"description": "The potential hijacker AS of a BGP hijack event",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "victimAsn",
				"schema": {
					"description": "The potential victim AS of a BGP hijack event",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "involvedAsn",
				"schema": {
					"description": "The potential hijacker or victim AS of a BGP hijack event",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "involvedCountry",
				"schema": {
					"description": "The country code of the potential hijacker or victim AS of a BGP hijack event",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "prefix",
				"schema": {
					"description": "The prefix hijacked during a BGP hijack event",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "minConfidence",
				"schema": {
					"description": "The minimum confidence score to filter events (1-4 low, 5-7 mid, 8+ high)",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "maxConfidence",
				"schema": {
					"description": "The maximum confidence score to filter events (1-4 low, 5-7 mid, 8+ high)",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Shorthand date ranges for the last X days - use when you don't need specific start and end dates.",
					"enum": [
						"1d",
						"2d",
						"7d",
						"14d",
						"28d",
						"12w",
						"24w",
						"52w",
						"1dControl",
						"2dControl",
						"7dControl",
						"14dControl",
						"28dControl",
						"12wControl",
						"24wControl"
					],
					"example": "7d",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range (inclusive).",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "sortBy",
				"schema": {
					"description": "Sort events by field",
					"enum": [
						"ID",
						"TIME",
						"CONFIDENCE"
					],
					"example": "TIME",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "sortOrder",
				"schema": {
					"description": "Sort order",
					"enum": [
						"ASC",
						"DESC"
					],
					"example": "DESC",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"asn_info": {
											"items": {
												"properties": {
													"asn": {
														"type": "integer"
													},
													"country_code": {
														"type": "string"
													},
													"org_name": {
														"type": "string"
													}
												},
												"required": [
													"asn",
													"org_name",
													"country_code"
												],
												"type": "object"
											},
											"type": "array"
										},
										"events": {
											"items": {
												"properties": {
													"confidence_score": {
														"type": "integer"
													},
													"duration": {
														"type": "integer"
													},
													"event_type": {
														"type": "integer"
													},
													"hijack_msgs_count": {
														"type": "integer"
													},
													"hijacker_asn": {
														"type": "integer"
													},
													"hijacker_country": {
														"type": "string"
													},
													"id": {
														"type": "integer"
													},
													"is_stale": {
														"type": "boolean"
													},
													"max_hijack_ts": {
														"type": "string"
													},
													"max_msg_ts": {
														"type": "string"
													},
													"min_hijack_ts": {
														"type": "string"
													},
													"on_going_count": {
														"type": "integer"
													},
													"peer_asns": {
														"items": {
															"type": "integer"
														},
														"type": "array"
													},
													"peer_ip_count": {
														"type": "integer"
													},
													"prefixes": {
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													"tags": {
														"items": {
															"properties": {
																"name": {
																	"type": "string"
																},
																"score": {
																	"type": "integer"
																}
															},
															"required": [
																"name",
																"score"
															],
															"type": "object"
														},
														"type": "array"
													},
													"victim_asns": {
														"items": {
															"type": "integer"
														},
														"type": "array"
													},
													"victim_countries": {
														"items": {
															"type": "string"
														},
														"type": "array"
													}
												},
												"required": [
													"duration",
													"event_type",
													"hijack_msgs_count",
													"hijacker_asn",
													"hijacker_country",
													"victim_asns",
													"victim_countries",
													"id",
													"is_stale",
													"max_hijack_ts",
													"min_hijack_ts",
													"max_msg_ts",
													"on_going_count",
													"peer_asns",
													"peer_ip_count",
													"prefixes",
													"confidence_score",
													"tags"
												],
												"type": "object"
											},
											"type": "array"
										},
										"total_monitors": {
											"type": "integer"
										}
									},
									"required": [
										"asn_info",
										"events",
										"total_monitors"
									],
									"type": "object"
								},
								"result_info": {
									"properties": {
										"count": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"per_page": {
											"type": "integer"
										},
										"total_count": {
											"type": "integer"
										}
									},
									"required": [
										"count",
										"total_count",
										"page",
										"per_page"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"result_info",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get BGP hijack events",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/bgp/leaks/events": {
		"description": "Get the BGP route leak events (Beta).",
		"operationId": "radar-get-bgp-route-leak-events",
		"parameters": [
			{
				"in": "query",
				"name": "page",
				"schema": {
					"description": "Current page number, starting from 1",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "per_page",
				"schema": {
					"description": "Number of entries per page",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "eventId",
				"schema": {
					"description": "The unique identifier of a event",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "leakAsn",
				"schema": {
					"description": "The leaking AS of a route leak event",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "involvedAsn",
				"schema": {
					"description": "ASN that is causing or affected by a route leak event",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "involvedCountry",
				"schema": {
					"description": "Country code of a involved ASN in a route leak event",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "Shorthand date ranges for the last X days - use when you don't need specific start and end dates.",
					"enum": [
						"1d",
						"2d",
						"7d",
						"14d",
						"28d",
						"12w",
						"24w",
						"52w",
						"1dControl",
						"2dControl",
						"7dControl",
						"14dControl",
						"28dControl",
						"12wControl",
						"24wControl"
					],
					"example": "7d",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Start of the date range (inclusive).",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "sortBy",
				"schema": {
					"description": "Sort events by field",
					"enum": [
						"ID",
						"LEAKS",
						"PEERS",
						"PREFIXES",
						"ORIGINS",
						"TIME"
					],
					"example": "TIME",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "sortOrder",
				"schema": {
					"description": "Sort order",
					"enum": [
						"ASC",
						"DESC"
					],
					"example": "DESC",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"asn_info": {
											"items": {
												"properties": {
													"asn": {
														"type": "integer"
													},
													"country_code": {
														"type": "string"
													},
													"org_name": {
														"type": "string"
													}
												},
												"required": [
													"asn",
													"org_name",
													"country_code"
												],
												"type": "object"
											},
											"type": "array"
										},
										"events": {
											"items": {
												"properties": {
													"countries": {
														"items": {
															"type": "string"
														},
														"type": "array"
													},
													"detected_ts": {
														"type": "string"
													},
													"finished": {
														"type": "boolean"
													},
													"id": {
														"type": "integer"
													},
													"leak_asn": {
														"type": "integer"
													},
													"leak_count": {
														"type": "integer"
													},
													"leak_seg": {
														"items": {
															"type": "integer"
														},
														"type": "array"
													},
													"leak_type": {
														"type": "integer"
													},
													"max_ts": {
														"type": "string"
													},
													"min_ts": {
														"type": "string"
													},
													"origin_count": {
														"type": "integer"
													},
													"peer_count": {
														"type": "integer"
													},
													"prefix_count": {
														"type": "integer"
													}
												},
												"required": [
													"detected_ts",
													"finished",
													"id",
													"leak_asn",
													"leak_count",
													"leak_seg",
													"leak_type",
													"max_ts",
													"min_ts",
													"origin_count",
													"peer_count",
													"prefix_count",
													"countries"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"asn_info",
										"events"
									],
									"type": "object"
								},
								"result_info": {
									"properties": {
										"count": {
											"type": "integer"
										},
										"page": {
											"type": "integer"
										},
										"per_page": {
											"type": "integer"
										},
										"total_count": {
											"type": "integer"
										}
									},
									"required": [
										"count",
										"total_count",
										"page",
										"per_page"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"result_info",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get BGP route leak events",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/bgp/routes/moas": {
		"description": "List all Multi-origin AS (MOAS) prefixes on the global routing tables.",
		"operationId": "radar-get-bgp-pfx2as-moas",
		"parameters": [
			{
				"in": "query",
				"name": "origin",
				"schema": {
					"description": "Lookup MOASes originated by the given ASN",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "prefix",
				"schema": {
					"description": "Lookup MOASes by prefix",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "invalid_only",
				"schema": {
					"description": "Lookup only RPKI invalid MOASes",
					"type": "boolean"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"data_time": {
													"type": "string"
												},
												"query_time": {
													"type": "string"
												},
												"total_peers": {
													"type": "integer"
												}
											},
											"required": [
												"data_time",
												"query_time",
												"total_peers"
											],
											"type": "object"
										},
										"moas": {
											"items": {
												"properties": {
													"origins": {
														"items": {
															"properties": {
																"origin": {
																	"type": "integer"
																},
																"peer_count": {
																	"type": "integer"
																},
																"rpki_validation": {
																	"type": "string"
																}
															},
															"required": [
																"origin",
																"peer_count",
																"rpki_validation"
															],
															"type": "object"
														},
														"type": "array"
													},
													"prefix": {
														"type": "string"
													}
												},
												"required": [
													"prefix",
													"origins"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"moas",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get MOASes",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/bgp/routes/pfx2as": {
		"description": "Lookup prefix-to-origin mapping on global routing tables.",
		"operationId": "radar-get-bgp-pfx2as",
		"parameters": [
			{
				"in": "query",
				"name": "origin",
				"schema": {
					"description": "Lookup prefixes originated by the given ASN",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "prefix",
				"schema": {
					"description": "Lookup origins of the given prefix",
					"example": "1.1.1.0/24",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "rpkiStatus",
				"schema": {
					"description": "Return only results with matching rpki status: valid, invalid or unknown",
					"enum": [
						"VALID",
						"INVALID",
						"UNKNOWN"
					],
					"example": "INVALID",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"data_time": {
													"type": "string"
												},
												"query_time": {
													"type": "string"
												},
												"total_peers": {
													"type": "integer"
												}
											},
											"required": [
												"data_time",
												"query_time",
												"total_peers"
											],
											"type": "object"
										},
										"prefix_origins": {
											"items": {
												"properties": {
													"origin": {
														"type": "integer"
													},
													"peer_count": {
														"type": "integer"
													},
													"prefix": {
														"type": "string"
													},
													"rpki_validation": {
														"type": "string"
													}
												},
												"required": [
													"origin",
													"peer_count",
													"prefix",
													"rpki_validation"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"prefix_origins",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get prefix-to-origin mapping",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/bgp/routes/stats": {
		"description": "Get the BGP routing table stats (Beta).",
		"operationId": "radar-get-bgp-routes-stats",
		"parameters": [
			{
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Single ASN as integer.",
					"example": "174",
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "location",
				"schema": {
					"description": "Location Alpha2 code.",
					"example": "US",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"data_time": {
													"type": "string"
												},
												"query_time": {
													"type": "string"
												},
												"total_peers": {
													"type": "integer"
												}
											},
											"required": [
												"data_time",
												"query_time",
												"total_peers"
											],
											"type": "object"
										},
										"stats": {
											"properties": {
												"distinct_origins": {
													"type": "integer"
												},
												"distinct_origins_ipv4": {
													"type": "integer"
												},
												"distinct_origins_ipv6": {
													"type": "integer"
												},
												"distinct_prefixes": {
													"type": "integer"
												},
												"distinct_prefixes_ipv4": {
													"type": "integer"
												},
												"distinct_prefixes_ipv6": {
													"type": "integer"
												},
												"routes_invalid": {
													"type": "integer"
												},
												"routes_invalid_ipv4": {
													"type": "integer"
												},
												"routes_invalid_ipv6": {
													"type": "integer"
												},
												"routes_total": {
													"type": "integer"
												},
												"routes_total_ipv4": {
													"type": "integer"
												},
												"routes_total_ipv6": {
													"type": "integer"
												},
												"routes_unknown": {
													"type": "integer"
												},
												"routes_unknown_ipv4": {
													"type": "integer"
												},
												"routes_unknown_ipv6": {
													"type": "integer"
												},
												"routes_valid": {
													"type": "integer"
												},
												"routes_valid_ipv4": {
													"type": "integer"
												},
												"routes_valid_ipv6": {
													"type": "integer"
												}
											},
											"required": [
												"distinct_origins",
												"distinct_origins_ipv4",
												"distinct_origins_ipv6",
												"distinct_prefixes",
												"distinct_prefixes_ipv4",
												"distinct_prefixes_ipv6",
												"routes_invalid",
												"routes_invalid_ipv4",
												"routes_invalid_ipv6",
												"routes_total",
												"routes_total_ipv4",
												"routes_total_ipv6",
												"routes_unknown",
												"routes_unknown_ipv4",
												"routes_unknown_ipv6",
												"routes_valid",
												"routes_valid_ipv4",
												"routes_valid_ipv6"
											],
											"type": "object"
										}
									},
									"required": [
										"stats",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get BGP routing table stats ",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/bgp/timeseries": {
		"description": "Gets BGP updates change over time. Raw values are returned. When requesting updates of an autonomous system (AS), only BGP updates of type announcement are returned.",
		"operationId": "radar-get-bgp-timeseries",
		"parameters": [
			{
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "prefix",
				"schema": {
					"description": "Array of BGP network prefixes.",
					"example": "1.1.1.0/24",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "updateType",
				"schema": {
					"description": "Array of BGP update types.",
					"example": "ANNOUNCEMENT",
					"items": {
						"enum": [
							"ANNOUNCEMENT",
							"WITHDRAWAL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"aggInterval": {
													"example": "1h",
													"type": "string"
												},
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"type": "object"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"description": "Adjusted end of date range.",
															"example": "2022-09-17T10:22:57.555Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"description": "Adjusted start of date range.",
															"example": "2022-09-16T10:22:57.555Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												},
												"lastUpdated": {
													"format": "date-time",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"aggInterval",
												"lastUpdated"
											],
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"timestamps": {
													"items": {
														"format": "date-time",
														"type": "string"
													},
													"type": "array"
												},
												"values": {
													"items": {
														"example": 0.56,
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"values"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get BGP time series",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/bgp/top/ases": {
		"description": "Get the top autonomous systems (AS) by BGP updates (announcements only). Values are a percentage out of the total updates.",
		"operationId": "radar-get-bgp-top-ases",
		"parameters": [
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "prefix",
				"schema": {
					"description": "Array of BGP network prefixes.",
					"example": "1.1.1.0/24",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "updateType",
				"schema": {
					"description": "Array of BGP update types.",
					"example": "ANNOUNCEMENT",
					"items": {
						"enum": [
							"ANNOUNCEMENT",
							"WITHDRAWAL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"dateRange": {
													"properties": {
														"endTime": {
															"description": "Adjusted end of date range.",
															"example": "2022-09-17T10:22:57.555Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"description": "Adjusted start of date range.",
															"example": "2022-09-16T10:22:57.555Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"ASName": {
														"example": "Apple-Engineering",
														"type": "string"
													},
													"asn": {
														"example": 714,
														"type": "integer"
													},
													"value": {
														"description": "Percentage of updates by this AS out of the total updates by all autonomous systems.",
														"example": "0.73996",
														"type": "string"
													}
												},
												"required": [
													"asn",
													"ASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/bgp/top/ases/prefixes": {
		"description": "Get the full list of autonomous systems on the global routing table ordered by announced prefixes count. The data comes from public BGP MRT data archives and updates every 2 hours.",
		"operationId": "radar-get-bgp-top-asns-by-prefixes",
		"parameters": [
			{
				"in": "query",
				"name": "country",
				"schema": {
					"description": "Alpha-2 country code.",
					"example": "NZ",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Maximum number of ASes to return",
					"example": 10,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"asns": {
											"items": {
												"properties": {
													"asn": {
														"type": "integer"
													},
													"country": {
														"type": "string"
													},
													"name": {
														"type": "string"
													},
													"pfxs_count": {
														"type": "integer"
													}
												},
												"required": [
													"asn",
													"country",
													"name",
													"pfxs_count"
												],
												"type": "object"
											},
											"type": "array"
										},
										"meta": {
											"properties": {
												"data_time": {
													"type": "string"
												},
												"query_time": {
													"type": "string"
												},
												"total_peers": {
													"type": "integer"
												}
											},
											"required": [
												"data_time",
												"query_time",
												"total_peers"
											],
											"type": "object"
										}
									},
									"required": [
										"asns",
										"meta"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get list of ASNs ordered by prefix count",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/bgp/top/prefixes": {
		"description": "Get the top network prefixes by BGP updates. Values are a percentage out of the total BGP updates.",
		"operationId": "radar-get-bgp-top-prefixes",
		"parameters": [
			{
				"in": "query",
				"name": "limit",
				"schema": {
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "Array of datetimes to filter the end of a series.",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "asn",
				"schema": {
					"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
					"example": "15169",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "updateType",
				"schema": {
					"description": "Array of BGP update types.",
					"example": "ANNOUNCEMENT",
					"items": {
						"enum": [
							"ANNOUNCEMENT",
							"WITHDRAWAL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"dateRange": {
													"properties": {
														"endTime": {
															"description": "Adjusted end of date range.",
															"example": "2022-09-17T10:22:57.555Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"description": "Adjusted start of date range.",
															"example": "2022-09-16T10:22:57.555Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"prefix": {
														"example": "2804:77cc:8000::/33",
														"type": "string"
													},
													"value": {
														"example": "0.73996",
														"type": "string"
													}
												},
												"required": [
													"prefix",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top prefixes",
		"tags": [
			"Radar BGP"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}