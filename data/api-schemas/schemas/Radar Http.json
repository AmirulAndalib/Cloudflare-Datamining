{
	"GET /radar/http/summary/bot_class": {
		"description": "Percentage distribution of bot-generated traffic to genuine human traffic, as classified by Cloudflare",
		"operationId": "radar_get__summary_bot_class",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"bot": {
													"example": "35",
													"type": "string"
												},
												"human": {
													"example": "65",
													"type": "string"
												}
											},
											"required": [
												"human",
												"bot"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Internet traffic distribution by Bots vs Humans",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/summary/device_type": {
		"description": "Percentage of Internet traffic generated by mobile, desktop, and other types of devices.",
		"operationId": "radar_get__summary_device_type",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"desktop": {
													"example": "65",
													"type": "string"
												},
												"mobile": {
													"example": "30",
													"type": "string"
												},
												"other": {
													"example": "5",
													"type": "string"
												}
											},
											"required": [
												"desktop",
												"mobile",
												"other"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Internet traffic distribution by device type",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/summary/http_protocol": {
		"description": "Percentage distribution of traffic per HTTP protocol.",
		"operationId": "radar_get__summary_http_protocol",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"http": {
													"example": "99",
													"type": "string"
												},
												"https": {
													"example": "1",
													"type": "string"
												}
											},
											"required": [
												"http",
												"https"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a summary of HTTP protocols",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/summary/http_version": {
		"description": "Percentage distribution of traffic per HTTP protocol version.",
		"operationId": "radar_get__summary_http_version",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"HTTP/1.x": {
													"example": "1",
													"type": "string"
												},
												"HTTP/2": {
													"example": "39",
													"type": "string"
												},
												"HTTP/3": {
													"example": "60",
													"type": "string"
												}
											},
											"required": [
												"HTTP/1.x",
												"HTTP/2",
												"HTTP/3"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a summary of HTTP versions",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/summary/ip_version": {
		"description": "Percentage distribution of Internet traffic based on IP protocol versions, such as IPv4 and IPv6.",
		"operationId": "radar_get__summary_ip_version",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"IPv4": {
													"example": "65",
													"type": "string"
												},
												"IPv6": {
													"example": "35",
													"type": "string"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Internet Traffic Distribution by IP Version",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/summary/os": {
		"description": "Percentage distribution of Internet traffic generated by different operating systems like Windows, macOS, Android, iOS, and others.",
		"operationId": "radar_get__summary_os",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"ANDROID": {
													"example": "65",
													"type": "string"
												},
												"IOS": {
													"example": "35",
													"type": "string"
												}
											},
											"required": [
												"ANDROID",
												"IOS"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Internet traffic distribution by operating system",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/summary/tls_version": {
		"description": "Percentage distribution of traffic per TLS protocol version.",
		"operationId": "radar_get__summary_tls_version",
		"parameters": [
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"TLS 1.0": {
													"example": "0.5",
													"type": "string"
												},
												"TLS 1.1": {
													"example": "0.5",
													"type": "string"
												},
												"TLS 1.2": {
													"example": "60",
													"type": "string"
												},
												"TLS 1.3": {
													"example": "10",
													"type": "string"
												},
												"TLS QUIC": {
													"example": "29",
													"type": "string"
												}
											},
											"required": [
												"TLS 1.0",
												"TLS 1.1",
												"TLS 1.2",
												"TLS 1.3",
												"TLS QUIC"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a summary of TLS versions",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/bot_class": {
		"description": "Percentage distribution of traffic classified as automated or human over time.",
		"operationId": "radar_get__timeseries_bot_class",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"bot": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"human": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"human",
												"bot"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of bot classes",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/browser": {
		"description": "Percentage distribution of traffic of the top user agents in the selected time range, over time.",
		"operationId": "radar_get__timeseries_browser",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Limit the number of objects (eg browsers, verticals, etc) to the top items over the time range.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (eg browsers, verticals, etc) to the top items over the time range.",
					"example": 4,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"<browser name>": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"<browser name>"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of user agents",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/browser_family": {
		"description": "Percentage distribution of traffic of the top user agents aggregated in families in the selected time range, over time.",
		"operationId": "radar_get__timeseries_browser_family",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"<browser name>": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"<browser name>"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of user agents aggregated in families",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/device_type": {
		"description": "Percentage distribution of traffic per device type over time.",
		"operationId": "radar_get__timeseries_device_type",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"desktop": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"mobile": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"other": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"desktop",
												"mobile",
												"other"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of device types",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/http_protocol": {
		"description": "Percentage distribution of traffic per HTTP protocol over time.",
		"operationId": "radar_get__timeseries_http_protocol",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"http": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"https": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"http",
												"https"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of HTTP protocols",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/http_version": {
		"description": "Percentage distribution of traffic per HTTP protocol version over time.",
		"operationId": "radar_get__timeseries_http_version",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"HTTP/1.x": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"HTTP/2": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"HTTP/3": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"HTTP/1.x",
												"HTTP/2",
												"HTTP/3"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of HTTP versions",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/ip_version": {
		"description": "Percentage distribution of traffic per IP protocol version over time.",
		"operationId": "radar_get__timeseries_ip_version",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"IPv4": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of IP versions",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/os": {
		"description": "Percentage distribution of traffic of the top operating systems in the selected time range, over time.",
		"operationId": "radar_get__timeseries_os",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Limit the number of objects (eg browsers, verticals, etc) to the top items over the time range.",
				"in": "query",
				"name": "limitPerGroup",
				"schema": {
					"description": "Limit the number of objects (eg browsers, verticals, etc) to the top items over the time range.",
					"example": 4,
					"type": "integer"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"<OS name>": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"<OS name>"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of operating systems",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/timeseries/tls_version": {
		"description": "Percentage distribution of traffic per TLS protocol version over time.",
		"operationId": "radar_get__timeseries_tls_version",
		"parameters": [
			{
				"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"type": "string"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"TLS 1.0": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.1": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.2": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TLS 1.3": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"TLS QUIC": {
													"items": {
														"type": "string"
													},
													"type": "array"
												},
												"timestamps": {
													"items": {
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"timestamps",
												"TLS 1.0",
												"TLS 1.1",
												"TLS 1.2",
												"TLS 1.3",
												"TLS QUIC"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get time series of TLS versions",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/ases": {
		"description": "Get the top autonomous systems (AS) by HTTP traffic. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_ases",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 3243,
														"type": "integer"
													},
													"clientASName": {
														"example": "MEO",
														"type": "string"
													},
													"value": {
														"example": "3",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by HTTP requests",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/ases/bot_class/{bot_class}": {
		"description": "Get the top autonomous systems (AS), by HTTP traffic, of the requested bot class. These two categories use Cloudflare's bot score - refer to [Bot Scores](https://developers.cloudflare.com/bots/concepts/bot-score) for more information. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_ases_bot_class_:bot_class",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Bot class.",
				"in": "path",
				"name": "bot_class",
				"required": true,
				"schema": {
					"enum": [
						"LIKELY_AUTOMATED",
						"LIKELY_HUMAN"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 3243,
														"type": "integer"
													},
													"clientASName": {
														"example": "MEO",
														"type": "string"
													},
													"value": {
														"example": "3",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by bot class",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/ases/device_type/{device_type}": {
		"description": "Get the top autonomous systems (AS), by HTTP traffic, of the requested device type. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_ases_device_type_:device_type",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Device type.",
				"in": "path",
				"name": "device_type",
				"required": true,
				"schema": {
					"enum": [
						"DESKTOP",
						"MOBILE",
						"OTHER"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 3243,
														"type": "integer"
													},
													"clientASName": {
														"example": "MEO",
														"type": "string"
													},
													"value": {
														"example": "3",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by device type",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/ases/http_protocol/{http_protocol}": {
		"description": "Get the top autonomous systems (AS), by HTTP traffic, of the requested HTTP protocol. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_ases_http_protocol_:http_protocol",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "HTTP Protocol.",
				"in": "path",
				"name": "http_protocol",
				"required": true,
				"schema": {
					"enum": [
						"HTTP",
						"HTTPS"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 3243,
														"type": "integer"
													},
													"clientASName": {
														"example": "MEO",
														"type": "string"
													},
													"value": {
														"example": "3",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by HTTP protocol",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/ases/http_version/{http_version}": {
		"description": "Get the top autonomous systems (AS), by HTTP traffic, of the requested HTTP protocol version. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_ases_http_version_:http_version",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "HTTP version.",
				"in": "path",
				"name": "http_version",
				"required": true,
				"schema": {
					"enum": [
						"HTTPv1",
						"HTTPv2",
						"HTTPv3"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 3243,
														"type": "integer"
													},
													"clientASName": {
														"example": "MEO",
														"type": "string"
													},
													"value": {
														"example": "3",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by HTTP version",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/ases/ip_version/{ip_version}": {
		"description": "Get the top autonomous systems, by HTTP traffic, of the requested IP protocol version. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_ases_ip_version_:ip_version",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "IP version.",
				"in": "path",
				"name": "ip_version",
				"required": true,
				"schema": {
					"enum": [
						"IPv4",
						"IPv6"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 3243,
														"type": "integer"
													},
													"clientASName": {
														"example": "MEO",
														"type": "string"
													},
													"value": {
														"example": "3",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by IP version",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/ases/os/{os}": {
		"description": "Get the top autonomous systems, by HTTP traffic, of the requested operating systems. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_ases_os_:os",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "IP version.",
				"in": "path",
				"name": "os",
				"required": true,
				"schema": {
					"enum": [
						"WINDOWS",
						"MACOSX",
						"IOS",
						"ANDROID",
						"CHROMEOS",
						"LINUX",
						"SMART_TV"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 3243,
														"type": "integer"
													},
													"clientASName": {
														"example": "MEO",
														"type": "string"
													},
													"value": {
														"example": "3",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by operating system",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/ases/tls_version/{tls_version}": {
		"description": "Get the top autonomous systems (AS), by HTTP traffic, of the requested TLS protocol version. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_ases_tls_version_:tls_version",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "TLS version.",
				"in": "path",
				"name": "tls_version",
				"required": true,
				"schema": {
					"enum": [
						"TLSv1_0",
						"TLSv1_1",
						"TLSv1_2",
						"TLSv1_3",
						"TLSvQUIC"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientASN": {
														"example": 3243,
														"type": "integer"
													},
													"clientASName": {
														"example": "MEO",
														"type": "string"
													},
													"value": {
														"example": "3",
														"type": "string"
													}
												},
												"required": [
													"clientASN",
													"clientASName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by TLS version",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/browser_families": {
		"description": "Get the top user agents aggregated in families by HTTP traffic. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_browser_families",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"<browser name>": {
														"type": "string"
													},
													"value": {
														"type": "string"
													}
												},
												"required": [
													"<browser name>",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top user agents aggregated in families by HTTP requests",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/browsers": {
		"description": "Get the top user agents by HTTP traffic. Values are a percentage out of the total traffic.",
		"operationId": "radar_get_ca",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"<browser name>": {
														"type": "string"
													},
													"value": {
														"type": "string"
													}
												},
												"required": [
													"<browser name>",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top user agents by HTTP requests",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/locations": {
		"description": "Get the top locations by HTTP traffic. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_locations",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top autonomous systems by HTTP requests",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/locations/bot_class/{bot_class}": {
		"description": "Get the top locations, by HTTP traffic, of the requested bot class. These two categories use Cloudflare's bot score - refer to [Bot scores])https://developers.cloudflare.com/bots/concepts/bot-score). Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_locations_bot_class_:bot_class",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Bot class.",
				"in": "path",
				"name": "bot_class",
				"required": true,
				"schema": {
					"enum": [
						"LIKELY_AUTOMATED",
						"LIKELY_HUMAN"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top locations by bot class",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/locations/device_type/{device_type}": {
		"description": "Get the top locations, by HTTP traffic, of the requested device type. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_locations_device_type_:device_type",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Device type.",
				"in": "path",
				"name": "device_type",
				"required": true,
				"schema": {
					"enum": [
						"DESKTOP",
						"MOBILE",
						"OTHER"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top locations by device type",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/locations/http_protocol/{http_protocol}": {
		"description": "Get the top locations, by HTTP traffic, of the requested HTTP protocol. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_locations_http_protocol_:http_protocol",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "HTTP Protocol.",
				"in": "path",
				"name": "http_protocol",
				"required": true,
				"schema": {
					"enum": [
						"HTTP",
						"HTTPS"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top locations by HTTP protocol",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/locations/http_version/{http_version}": {
		"description": "Get the top locations, by HTTP traffic, of the requested HTTP protocol. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_locations_http_version_:http_version",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "HTTP version.",
				"in": "path",
				"name": "http_version",
				"required": true,
				"schema": {
					"enum": [
						"HTTPv1",
						"HTTPv2",
						"HTTPv3"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top locations by HTTP version",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/locations/ip_version/{ip_version}": {
		"description": "Get the top locations, by HTTP traffic, of the requested IP protocol version. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_locations_ip_version_:ip_version",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "IP version.",
				"in": "path",
				"name": "ip_version",
				"required": true,
				"schema": {
					"enum": [
						"IPv4",
						"IPv6"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top locations by IP version",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/locations/os/{os}": {
		"description": "Get the top locations, by HTTP traffic, of the requested operating systems. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_locations_os_:os",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for tls version.",
				"in": "query",
				"name": "tlsVersion",
				"schema": {
					"items": {
						"enum": [
							"TLSv1_0",
							"TLSv1_1",
							"TLSv1_2",
							"TLSv1_3",
							"TLSvQUIC"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "IP version.",
				"in": "path",
				"name": "os",
				"required": true,
				"schema": {
					"enum": [
						"WINDOWS",
						"MACOSX",
						"IOS",
						"ANDROID",
						"CHROMEOS",
						"LINUX",
						"SMART_TV"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top locations by operating system",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/http/top/locations/tls_version/{tls_version}": {
		"description": "Get the top locations, by HTTP traffic, of the requested TLS protocol version. Values are a percentage out of the total traffic.",
		"operationId": "radar_get__top_locations_tls_version_:tls_version",
		"parameters": [
			{
				"description": "Limit the number of objects in the response.",
				"in": "query",
				"name": "limit",
				"schema": {
					"default": 5,
					"description": "Limit the number of objects in the response.",
					"example": 5,
					"type": "integer"
				}
			},
			{
				"description": "Array of names that will be used to name the series in responses.",
				"in": "query",
				"name": "name",
				"schema": {
					"items": {
						"description": "Array of names that will be used to name the series in responses.",
						"example": "main_series",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
				"in": "query",
				"name": "dateRange",
				"schema": {
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the start of a series.",
				"in": "query",
				"name": "dateStart",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of datetimes to filter the end of a series.",
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"items": {
						"example": "2022-09-15T00:00:00Z",
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
				"in": "query",
				"name": "asn",
				"schema": {
					"items": {
						"description": "Array of comma separated list of ASNs, start with `-` to exclude from results. For example, `-174, 3356` excludes results from AS174, but includes results from AS3356.",
						"example": "15169",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
				"in": "query",
				"name": "location",
				"schema": {
					"items": {
						"description": "Array of comma separated list of locations (alpha-2 country codes). Start with `-` to exclude from results. For example, `-US,PT` excludes results from the US, but includes results from PT.",
						"example": "US,CA",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for bot class. Refer to [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).",
				"in": "query",
				"name": "botClass",
				"schema": {
					"items": {
						"enum": [
							"LIKELY_AUTOMATED",
							"LIKELY_HUMAN"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for device type.",
				"in": "query",
				"name": "deviceType",
				"schema": {
					"items": {
						"enum": [
							"DESKTOP",
							"MOBILE",
							"OTHER"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http protocol.",
				"in": "query",
				"name": "httpProtocol",
				"schema": {
					"items": {
						"enum": [
							"HTTP",
							"HTTPS"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for http version.",
				"in": "query",
				"name": "httpVersion",
				"schema": {
					"items": {
						"enum": [
							"HTTPv1",
							"HTTPv2",
							"HTTPv3"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for ip version.",
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "Filter for os name.",
				"in": "query",
				"name": "os",
				"schema": {
					"items": {
						"enum": [
							"WINDOWS",
							"MACOSX",
							"IOS",
							"ANDROID",
							"CHROMEOS",
							"LINUX",
							"SMART_TV"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"description": "TLS version.",
				"in": "path",
				"name": "tls_version",
				"required": true,
				"schema": {
					"enum": [
						"TLSv1_0",
						"TLSv1_1",
						"TLSv1_2",
						"TLSv1_3",
						"TLSvQUIC"
					],
					"type": "string"
				}
			},
			{
				"description": "Format results are returned in.",
				"in": "query",
				"name": "format",
				"schema": {
					"enum": [
						"JSON",
						"CSV"
					],
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"type": "string"
																	},
																	"description": {
																		"type": "string"
																	},
																	"endTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"type": "string"
																	},
																	"startTime": {
																		"example": "2022-09-15T00:00:00Z",
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"startTime",
																	"endTime"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"required": [
														"level",
														"annotations"
													],
													"type": "object"
												},
												"dateRange": {
													"properties": {
														"endTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														},
														"startTime": {
															"example": "2022-09-15T00:00:00Z",
															"format": "date-time",
															"type": "string"
														}
													},
													"required": [
														"startTime",
														"endTime"
													],
													"type": "object"
												}
											},
											"required": [
												"confidenceInfo",
												"dateRange"
											],
											"type": "object"
										},
										"top_0": {
											"items": {
												"properties": {
													"clientCountryAlpha2": {
														"example": "US",
														"type": "string"
													},
													"clientCountryName": {
														"example": "United States",
														"type": "string"
													},
													"value": {
														"example": "65",
														"type": "string"
													}
												},
												"required": [
													"clientCountryAlpha2",
													"clientCountryName",
													"value"
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"required": [
										"meta",
										"top_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"404": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"error": {
									"example": "Not Found",
									"type": "string"
								}
							},
							"required": [
								"error"
							],
							"type": "object"
						}
					}
				},
				"description": "Not found"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get top locations by TLS version",
		"tags": [
			"Radar Http"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}