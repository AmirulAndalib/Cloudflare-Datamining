{
	"allOf": [
		{
			"allOf": [
				{
					"properties": {
						"errors": {
							"example": [],
							"items": {
								"properties": {
									"code": {
										"minimum": 1000,
										"type": "integer"
									},
									"message": {
										"type": "string"
									}
								},
								"required": [
									"code",
									"message"
								],
								"type": "object",
								"uniqueItems": true
							},
							"type": "array"
						},
						"messages": {
							"example": [],
							"items": {
								"properties": {
									"code": {
										"minimum": 1000,
										"type": "integer"
									},
									"message": {
										"type": "string"
									}
								},
								"required": [
									"code",
									"message"
								],
								"type": "object",
								"uniqueItems": true
							},
							"type": "array"
						},
						"result": {
							"anyOf": [
								{
									"type": "object"
								},
								{
									"items": {},
									"type": "array"
								},
								{
									"type": "string"
								}
							]
						},
						"success": {
							"description": "Whether the API call was successful",
							"enum": [
								true
							],
							"example": true,
							"type": "boolean"
						}
					},
					"required": [
						"success",
						"errors",
						"messages",
						"result"
					],
					"type": "object"
				},
				{
					"properties": {
						"result": {
							"items": {},
							"nullable": true,
							"type": "array"
						},
						"result_info": {
							"properties": {
								"count": {
									"description": "Total number of results for the requested service",
									"example": 1,
									"type": "number"
								},
								"page": {
									"description": "Current page within paginated list of results",
									"example": 1,
									"type": "number"
								},
								"per_page": {
									"description": "Number of results per page of results",
									"example": 20,
									"type": "number"
								},
								"total_count": {
									"description": "Total results available without any search parameters",
									"example": 2000,
									"type": "number"
								}
							},
							"type": "object"
						}
					}
				}
			],
			"type": "object"
		},
		{
			"properties": {
				"result": {
					"items": {
						"description": "A Cloudflare Tunnel that connects your origin to Cloudflare's edge.",
						"properties": {
							"account_tag": {
								"description": "Cloudflare account ID",
								"example": "699d98642c564d2e855e9661899b7252",
								"maxLength": 32,
								"type": "string"
							},
							"connections": {
								"description": "The Cloudflare Tunnel connections between your origin and Cloudflare's edge.",
								"items": {
									"properties": {
										"client_id": {
											"description": "UUID of the cloudflared instance."
										},
										"client_version": {
											"$ref": "#/components/schemas/version-QfSuvscP"
										},
										"colo_name": {
											"$ref": "#/components/schemas/colo_name-YtsWnDd3"
										},
										"id": {
											"$ref": "#/components/schemas/connection_id"
										},
										"is_pending_reconnect": {
											"$ref": "#/components/schemas/is_pending_reconnect"
										},
										"opened_at": {
											"description": "Timestamp of when the connection was established.",
											"example": "2021-01-25T18:22:34.317854Z",
											"format": "date-time",
											"type": "string"
										},
										"origin_ip": {
											"description": "The public IP address of the host running cloudflared.",
											"example": "85.12.78.6",
											"type": "string"
										},
										"uuid": {
											"$ref": "#/components/schemas/connection_id"
										}
									}
								},
								"type": "array"
							},
							"conns_active_at": {
								"description": "Timestamp of when the tunnel established at least one connection to Cloudflare's edge. If `null`, the tunnel is inactive.",
								"example": "2009-11-10T23:00:00Z",
								"format": "date-time",
								"nullable": true,
								"type": "string"
							},
							"conns_inactive_at": {
								"description": "Timestamp of when the tunnel became inactive (no connections to Cloudflare's edge). If `null`, the tunnel is active.",
								"example": "2009-11-10T23:00:00Z",
								"format": "date-time",
								"nullable": true,
								"type": "string"
							},
							"created_at": {
								"description": "Timestamp of when the tunnel was created.",
								"example": "2021-01-25T18:22:34.317854Z",
								"format": "date-time",
								"type": "string"
							},
							"deleted_at": {
								"description": "Timestamp of when the tunnel was deleted. If `null`, the tunnel has not been deleted.",
								"example": "2009-11-10T23:00:00Z",
								"format": "date-time",
								"nullable": true,
								"type": "string"
							},
							"id": {
								"description": "UUID of the tunnel.",
								"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
								"maxLength": 36,
								"readOnly": true,
								"type": "string"
							},
							"metadata": {
								"description": "Metadata associated with the tunnel.",
								"example": {},
								"type": "object"
							},
							"name": {
								"description": "A user-friendly name for the tunnel.",
								"example": "blog",
								"type": "string"
							},
							"remote_config": {
								"description": "If `true`, the tunnel can be configured remotely from the Zero Trust dashboard. If `false`, the tunnel must be configured locally on the origin machine.",
								"example": true,
								"type": "boolean"
							},
							"status": {
								"description": "The status of the tunnel. Valid values are `inactive` (tunnel has never been run), `degraded` (tunnel is active and able to serve traffic but in an unhealthy state), `healthy` (tunnel is active and able to serve traffic), or `down` (tunnel can not serve traffic as it has no connections to the Cloudflare Edge).",
								"example": "healthy",
								"type": "string"
							},
							"tun_type": {
								"description": "The type of tunnel.",
								"enum": [
									"cfd_tunnel"
								],
								"example": "cfd_tunnel",
								"type": "string"
							}
						},
						"type": "object"
					},
					"type": "array"
				}
			},
			"type": "object"
		}
	]
}