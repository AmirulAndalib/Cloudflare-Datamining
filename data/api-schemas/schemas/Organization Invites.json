{
	"DELETE /organizations/{organization_id}/invites/{invite_id}": {
		"deprecated": true,
		"description": "Cancel an existing invitation.",
		"operationId": "organization-invites-cancel-invitation",
		"parameters": [
			{
				"in": "path",
				"name": "invite_id",
				"required": true,
				"schema": {
					"description": "Invite identifier tag.",
					"example": "4f5f0c14a2a41d5063dd301b2f829f04",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"id": {
									"description": "Invite identifier tag.",
									"example": "4f5f0c14a2a41d5063dd301b2f829f04",
									"maxLength": 32,
									"readOnly": true,
									"type": "string"
								}
							}
						}
					}
				},
				"description": "Cancel Invitation response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"id": {
											"description": "Invite identifier tag.",
											"example": "4f5f0c14a2a41d5063dd301b2f829f04",
											"maxLength": 32,
											"readOnly": true,
											"type": "string"
										}
									}
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Cancel Invitation response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Cancel Invitation",
		"tags": [
			"Organization Invites"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /organizations/{organization_id}/invites": {
		"deprecated": true,
		"description": "List all invitations associated with an organization.",
		"operationId": "organization-invites-list-invitations",
		"parameters": [
			{
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total number of results for the requested service",
															"example": 1,
															"type": "number"
														},
														"page": {
															"description": "Current page within paginated list of results",
															"example": 1,
															"type": "number"
														},
														"per_page": {
															"description": "Number of results per page of results",
															"example": 20,
															"type": "number"
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"example": 2000,
															"type": "number"
														}
													},
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"allOf": [
															{
																"properties": {
																	"expires_on": {
																		"description": "When the invite is no longer active.",
																		"example": "2014-01-01T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string"
																	},
																	"id": {
																		"description": "Invite identifier tag.",
																		"example": "4f5f0c14a2a41d5063dd301b2f829f04",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string"
																	},
																	"invited_by": {
																		"description": "The email address of the user who created the invite.",
																		"example": "user@example.com",
																		"maxLength": 90,
																		"type": "string"
																	},
																	"invited_member_email": {
																		"description": "Email address of the user to add to the organization.",
																		"example": "user@example.com",
																		"maxLength": 90,
																		"type": "string"
																	},
																	"invited_member_id": {
																		"description": "ID of the user to add to the organization.",
																		"example": "5a7805061c76ada191ed06f989cc3dac",
																		"maxLength": 32,
																		"nullable": true,
																		"readOnly": true,
																		"type": "string"
																	},
																	"invited_on": {
																		"description": "When the invite was sent.",
																		"example": "2014-01-01T05:20:00Z",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string"
																	},
																	"organization_id": {
																		"description": "ID of the organization the user will be added to.",
																		"example": "5a7805061c76ada191ed06f989cc3dac",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string"
																	},
																	"organization_name": {
																		"description": "Organization name.",
																		"example": "Cloudflare, Inc.",
																		"maxLength": 100,
																		"readOnly": true,
																		"type": "string"
																	},
																	"roles": {
																		"description": "Roles to be assigned to this user.",
																		"items": {
																			"properties": {
																				"description": {
																					"description": "Description of role's permissions.",
																					"example": "Administrative access to the entire Organization",
																					"readOnly": true,
																					"type": "string"
																				},
																				"id": {
																					"description": "Role identifier tag.",
																					"example": "3536bcfad5faccb999b47003c79917fb",
																					"maxLength": 32,
																					"type": "string"
																				},
																				"name": {
																					"description": "Role Name.",
																					"example": "Organization Admin",
																					"maxLength": 120,
																					"readOnly": true,
																					"type": "string"
																				},
																				"permissions": {
																					"description": "Access permissions for this User.",
																					"items": {
																						"example": "#zones:read",
																						"maxLength": 160,
																						"type": "string"
																					},
																					"readOnly": true,
																					"type": "array"
																				}
																			},
																			"required": [
																				"id",
																				"name",
																				"description",
																				"permissions"
																			],
																			"type": "object"
																		},
																		"type": "array"
																	}
																},
																"required": [
																	"invited_member_id",
																	"organization_id"
																],
																"type": "object"
															},
															{
																"properties": {
																	"organization_is_enforcing_twofactor": {
																		"default": false,
																		"description": "Current status of two-factor enforcement on the organization.",
																		"example": true,
																		"type": "boolean"
																	},
																	"status": {
																		"description": "Current status of the invitation.",
																		"enum": [
																			"pending",
																			"accepted",
																			"rejected",
																			"canceled",
																			"left",
																			"expired"
																		],
																		"example": "accepted",
																		"type": "string"
																	}
																}
															}
														]
													}
												],
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Invitations response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"properties": {
																"count": {
																	"description": "Total number of results for the requested service",
																	"example": 1,
																	"type": "number"
																},
																"page": {
																	"description": "Current page within paginated list of results",
																	"example": 1,
																	"type": "number"
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"example": 20,
																	"type": "number"
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"example": 2000,
																	"type": "number"
																}
															},
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"allOf": [
																	{
																		"properties": {
																			"expires_on": {
																				"description": "When the invite is no longer active.",
																				"example": "2014-01-01T05:20:00Z",
																				"format": "date-time",
																				"readOnly": true,
																				"type": "string"
																			},
																			"id": {
																				"description": "Invite identifier tag.",
																				"example": "4f5f0c14a2a41d5063dd301b2f829f04",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string"
																			},
																			"invited_by": {
																				"description": "The email address of the user who created the invite.",
																				"example": "user@example.com",
																				"maxLength": 90,
																				"type": "string"
																			},
																			"invited_member_email": {
																				"description": "Email address of the user to add to the organization.",
																				"example": "user@example.com",
																				"maxLength": 90,
																				"type": "string"
																			},
																			"invited_member_id": {
																				"description": "ID of the user to add to the organization.",
																				"example": "5a7805061c76ada191ed06f989cc3dac",
																				"maxLength": 32,
																				"nullable": true,
																				"readOnly": true,
																				"type": "string"
																			},
																			"invited_on": {
																				"description": "When the invite was sent.",
																				"example": "2014-01-01T05:20:00Z",
																				"format": "date-time",
																				"readOnly": true,
																				"type": "string"
																			},
																			"organization_id": {
																				"description": "ID of the organization the user will be added to.",
																				"example": "5a7805061c76ada191ed06f989cc3dac",
																				"maxLength": 32,
																				"readOnly": true,
																				"type": "string"
																			},
																			"organization_name": {
																				"description": "Organization name.",
																				"example": "Cloudflare, Inc.",
																				"maxLength": 100,
																				"readOnly": true,
																				"type": "string"
																			},
																			"roles": {
																				"description": "Roles to be assigned to this user.",
																				"items": {
																					"properties": {
																						"description": {
																							"description": "Description of role's permissions.",
																							"example": "Administrative access to the entire Organization",
																							"readOnly": true,
																							"type": "string"
																						},
																						"id": {
																							"description": "Role identifier tag.",
																							"example": "3536bcfad5faccb999b47003c79917fb",
																							"maxLength": 32,
																							"type": "string"
																						},
																						"name": {
																							"description": "Role Name.",
																							"example": "Organization Admin",
																							"maxLength": 120,
																							"readOnly": true,
																							"type": "string"
																						},
																						"permissions": {
																							"description": "Access permissions for this User.",
																							"items": {
																								"example": "#zones:read",
																								"maxLength": 160,
																								"type": "string"
																							},
																							"readOnly": true,
																							"type": "array"
																						}
																					},
																					"required": [
																						"id",
																						"name",
																						"description",
																						"permissions"
																					],
																					"type": "object"
																				},
																				"type": "array"
																			}
																		},
																		"required": [
																			"invited_member_id",
																			"organization_id"
																		],
																		"type": "object"
																	},
																	{
																		"properties": {
																			"organization_is_enforcing_twofactor": {
																				"default": false,
																				"description": "Current status of two-factor enforcement on the organization.",
																				"example": true,
																				"type": "boolean"
																			},
																			"status": {
																				"description": "Current status of the invitation.",
																				"enum": [
																					"pending",
																					"accepted",
																					"rejected",
																					"canceled",
																					"left",
																					"expired"
																				],
																				"example": "accepted",
																				"type": "string"
																			}
																		}
																	}
																]
															}
														],
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Invitations response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Invitations",
		"tags": [
			"Organization Invites"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /organizations/{organization_id}/invites/{invite_id}": {
		"deprecated": true,
		"description": "Get the details of an invitation.",
		"operationId": "organization-invites-invitation-details",
		"parameters": [
			{
				"in": "path",
				"name": "invite_id",
				"required": true,
				"schema": {
					"description": "Invite identifier tag.",
					"example": "4f5f0c14a2a41d5063dd301b2f829f04",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Invitation Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Invitation Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Invitation Details",
		"tags": [
			"Organization Invites"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /organizations/{organization_id}/invites/{invite_id}": {
		"deprecated": true,
		"description": "Change the Roles of a Pending Invite.",
		"operationId": "organization-invites-edit-invitation-roles",
		"parameters": [
			{
				"in": "path",
				"name": "invite_id",
				"required": true,
				"schema": {
					"description": "Invite identifier tag.",
					"example": "4f5f0c14a2a41d5063dd301b2f829f04",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"roles": {
								"description": "Array of Roles associated with the invited user.",
								"items": {
									"description": "Role identifier tag.",
									"example": "3536bcfad5faccb999b47003c79917fb",
									"maxLength": 32,
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Edit Invitation Roles response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Edit Invitation Roles response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Edit Invitation Roles",
		"tags": [
			"Organization Invites"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /organizations/{organization_id}/invites": {
		"deprecated": true,
		"description": "Invite a User to become a Member of an Organization.",
		"operationId": "organization-invites-create-invitation",
		"parameters": [
			{
				"in": "path",
				"name": "organization_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"auto_accept": {
								"default": false,
								"description": "When present and set to true, allows for the invited user to be automatically accepted to the organization. No invitation is sent.",
								"example": true,
								"type": "boolean"
							},
							"invited_member_email": {
								"description": "Email address of the user to add to the organization.",
								"example": "user@example.com",
								"maxLength": 90,
								"type": "string"
							},
							"roles": {
								"description": "Array of Roles associated with the invited user.",
								"example": [
									{
										"id": "5a7805061c76ada191ed06f989cc3dac"
									},
									{
										"id": "9a7806061c88ada191ed06f989cc3dac"
									}
								],
								"items": {
									"properties": {
										"description": {
											"description": "Description of role's permissions.",
											"example": "Administrative access to the entire Organization",
											"readOnly": true,
											"type": "string"
										},
										"id": {
											"description": "Role identifier tag.",
											"example": "3536bcfad5faccb999b47003c79917fb",
											"maxLength": 32,
											"type": "string"
										},
										"name": {
											"description": "Role Name.",
											"example": "Organization Admin",
											"maxLength": 120,
											"readOnly": true,
											"type": "string"
										},
										"permissions": {
											"description": "Access permissions for this User.",
											"items": {
												"example": "#zones:read",
												"maxLength": 160,
												"type": "string"
											},
											"readOnly": true,
											"type": "array"
										}
									},
									"required": [
										"id"
									],
									"type": "object"
								},
								"type": "array"
							}
						},
						"required": [
							"invited_member_email",
							"roles"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"nullable": true,
															"type": "object"
														},
														{
															"nullable": true,
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Invitation response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"nullable": true,
																	"type": "object"
																},
																{
																	"nullable": true,
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Invitation response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Invitation",
		"tags": [
			"Organization Invites"
		],
		"x-cfDeprecation": {
			"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
			"display": true,
			"eol": "2020-02-04",
			"id": "org_deprecation"
		},
		"x-cfPermissionsRequired": {
			"enum": [
				"#organization:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}