{
	"DELETE /accounts/{account_id}/hyperdrive/configs/{hyperdrive_id}": {
		"description": "Deletes the specified Hyperdrive.",
		"operationId": "delete-hyperdrive",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "hyperdrive_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"nullable": true,
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete Hyperdrive Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete Hyperdrive Failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Hyperdrive",
		"tags": [
			"Hyperdrive"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.hyperdrive.database.delete"
			]
		}
	},
	"GET /accounts/{account_id}/hyperdrive/configs": {
		"description": "Returns a list of Hyperdrives",
		"operationId": "list-hyperdrive",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"properties": {
															"caching": {
																"properties": {
																	"disabled": {
																		"description": "When set to true, disables the caching of SQL responses. (Default: false)",
																		"example": false,
																		"type": "boolean"
																	},
																	"max_age": {
																		"description": "When present, specifies max duration for which items should persist in the cache. (Default: 60)",
																		"example": 60,
																		"type": "integer"
																	},
																	"stale_while_revalidate": {
																		"description": "When present, indicates the number of seconds cache may serve the response after it becomes stale. (Default: 15)",
																		"example": 15,
																		"type": "integer"
																	}
																},
																"type": "object"
															},
															"name": {
																"example": "example-hyperdrive",
																"type": "string"
															},
															"origin": {
																"properties": {
																	"database": {
																		"description": "The name of your origin database.",
																		"example": "postgres",
																		"type": "string"
																	},
																	"host": {
																		"description": "The host (hostname or IP) of your origin database.",
																		"example": "database.example.com",
																		"type": "string"
																	},
																	"port": {
																		"description": "The port (default: 5432 for Postgres) of your origin database.",
																		"example": "5432",
																		"type": "integer"
																	},
																	"scheme": {
																		"default": "postgres",
																		"description": "Specifies the URL scheme used to connect to your origin database.",
																		"enum": [
																			"postgres",
																			"postgresql"
																		],
																		"type": "string"
																	},
																	"user": {
																		"description": "The user of your origin database.",
																		"example": "postgres",
																		"type": "string"
																	}
																},
																"required": [
																	"host",
																	"port",
																	"scheme",
																	"database",
																	"user"
																],
																"type": "object"
															}
														},
														"type": "object"
													}
												],
												"properties": {
													"id": {
														"description": "Identifier",
														"example": "023e105f4ecef8ad9ca31a8372d0c353",
														"maxLength": 32,
														"readOnly": true,
														"type": "string"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Hyperdrives Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Hyperdrives Failure Response"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Hyperdrives",
		"tags": [
			"Hyperdrive"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.hyperdrive.database.list"
			]
		}
	},
	"GET /accounts/{account_id}/hyperdrive/configs/{hyperdrive_id}": {
		"description": "Returns the specified Hyperdrive configuration.",
		"operationId": "get-hyperdrive",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "hyperdrive_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"caching": {
															"properties": {
																"disabled": {
																	"description": "When set to true, disables the caching of SQL responses. (Default: false)",
																	"example": false,
																	"type": "boolean"
																},
																"max_age": {
																	"description": "When present, specifies max duration for which items should persist in the cache. (Default: 60)",
																	"example": 60,
																	"type": "integer"
																},
																"stale_while_revalidate": {
																	"description": "When present, indicates the number of seconds cache may serve the response after it becomes stale. (Default: 15)",
																	"example": 15,
																	"type": "integer"
																}
															},
															"type": "object"
														},
														"name": {
															"example": "example-hyperdrive",
															"type": "string"
														},
														"origin": {
															"properties": {
																"database": {
																	"description": "The name of your origin database.",
																	"example": "postgres",
																	"type": "string"
																},
																"host": {
																	"description": "The host (hostname or IP) of your origin database.",
																	"example": "database.example.com",
																	"type": "string"
																},
																"port": {
																	"description": "The port (default: 5432 for Postgres) of your origin database.",
																	"example": "5432",
																	"type": "integer"
																},
																"scheme": {
																	"default": "postgres",
																	"description": "Specifies the URL scheme used to connect to your origin database.",
																	"enum": [
																		"postgres",
																		"postgresql"
																	],
																	"type": "string"
																},
																"user": {
																	"description": "The user of your origin database.",
																	"example": "postgres",
																	"type": "string"
																}
															},
															"required": [
																"host",
																"port",
																"scheme",
																"database",
																"user"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Hyperdrive Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Hyperdrive Failure"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Hyperdrive",
		"tags": [
			"Hyperdrive"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.hyperdrive.database.read"
			]
		}
	},
	"PATCH /accounts/{account_id}/hyperdrive/configs/{hyperdrive_id}": {
		"description": "Patches and returns the specified Hyperdrive configuration. Updates to the origin and caching settings are applied with an all-or-nothing approach.",
		"operationId": "patch-hyperdrive",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "hyperdrive_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"caching": {
										"properties": {
											"disabled": {
												"description": "When set to true, disables the caching of SQL responses. (Default: false)",
												"example": false,
												"type": "boolean"
											},
											"max_age": {
												"description": "When present, specifies max duration for which items should persist in the cache. (Default: 60)",
												"example": 60,
												"type": "integer"
											},
											"stale_while_revalidate": {
												"description": "When present, indicates the number of seconds cache may serve the response after it becomes stale. (Default: 15)",
												"example": 15,
												"type": "integer"
											}
										},
										"type": "object"
									},
									"name": {
										"example": "example-hyperdrive",
										"type": "string"
									},
									"origin": {
										"properties": {
											"database": {
												"description": "The name of your origin database.",
												"example": "postgres",
												"type": "string"
											},
											"host": {
												"description": "The host (hostname or IP) of your origin database.",
												"example": "database.example.com",
												"type": "string"
											},
											"port": {
												"description": "The port (default: 5432 for Postgres) of your origin database.",
												"example": "5432",
												"type": "integer"
											},
											"scheme": {
												"default": "postgres",
												"description": "Specifies the URL scheme used to connect to your origin database.",
												"enum": [
													"postgres",
													"postgresql"
												],
												"type": "string"
											},
											"user": {
												"description": "The user of your origin database.",
												"example": "postgres",
												"type": "string"
											}
										},
										"required": [
											"host",
											"port",
											"scheme",
											"database",
											"user"
										],
										"type": "object"
									}
								},
								"type": "object"
							}
						],
						"properties": {
							"origin": {
								"allOf": [
									{
										"properties": {
											"database": {
												"description": "The name of your origin database.",
												"example": "postgres",
												"type": "string"
											},
											"host": {
												"description": "The host (hostname or IP) of your origin database.",
												"example": "database.example.com",
												"type": "string"
											},
											"port": {
												"description": "The port (default: 5432 for Postgres) of your origin database.",
												"example": "5432",
												"type": "integer"
											},
											"scheme": {
												"default": "postgres",
												"description": "Specifies the URL scheme used to connect to your origin database.",
												"enum": [
													"postgres",
													"postgresql"
												],
												"type": "string"
											},
											"user": {
												"description": "The user of your origin database.",
												"example": "postgres",
												"type": "string"
											}
										},
										"required": [
											"host",
											"port",
											"scheme",
											"database",
											"user"
										],
										"type": "object"
									}
								],
								"properties": {
									"password": {
										"description": "The password required to access your origin database. This value is write-only and never returned by the API.",
										"example": "password1234!",
										"type": "string"
									}
								},
								"required": [
									"password"
								],
								"type": "object"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"caching": {
															"properties": {
																"disabled": {
																	"description": "When set to true, disables the caching of SQL responses. (Default: false)",
																	"example": false,
																	"type": "boolean"
																},
																"max_age": {
																	"description": "When present, specifies max duration for which items should persist in the cache. (Default: 60)",
																	"example": 60,
																	"type": "integer"
																},
																"stale_while_revalidate": {
																	"description": "When present, indicates the number of seconds cache may serve the response after it becomes stale. (Default: 15)",
																	"example": 15,
																	"type": "integer"
																}
															},
															"type": "object"
														},
														"name": {
															"example": "example-hyperdrive",
															"type": "string"
														},
														"origin": {
															"properties": {
																"database": {
																	"description": "The name of your origin database.",
																	"example": "postgres",
																	"type": "string"
																},
																"host": {
																	"description": "The host (hostname or IP) of your origin database.",
																	"example": "database.example.com",
																	"type": "string"
																},
																"port": {
																	"description": "The port (default: 5432 for Postgres) of your origin database.",
																	"example": "5432",
																	"type": "integer"
																},
																"scheme": {
																	"default": "postgres",
																	"description": "Specifies the URL scheme used to connect to your origin database.",
																	"enum": [
																		"postgres",
																		"postgresql"
																	],
																	"type": "string"
																},
																"user": {
																	"description": "The user of your origin database.",
																	"example": "postgres",
																	"type": "string"
																}
															},
															"required": [
																"host",
																"port",
																"scheme",
																"database",
																"user"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Patch Hyperdrive Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Patch Hyperdrive Failure Response"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Patch Hyperdrive",
		"tags": [
			"Hyperdrive"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.hyperdrive.database.update"
			]
		}
	},
	"POST /accounts/{account_id}/hyperdrive/configs": {
		"description": "Creates and returns a new Hyperdrive configuration.",
		"operationId": "create-hyperdrive",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"caching": {
										"properties": {
											"disabled": {
												"description": "When set to true, disables the caching of SQL responses. (Default: false)",
												"example": false,
												"type": "boolean"
											},
											"max_age": {
												"description": "When present, specifies max duration for which items should persist in the cache. (Default: 60)",
												"example": 60,
												"type": "integer"
											},
											"stale_while_revalidate": {
												"description": "When present, indicates the number of seconds cache may serve the response after it becomes stale. (Default: 15)",
												"example": 15,
												"type": "integer"
											}
										},
										"type": "object"
									},
									"name": {
										"example": "example-hyperdrive",
										"type": "string"
									},
									"origin": {
										"properties": {
											"database": {
												"description": "The name of your origin database.",
												"example": "postgres",
												"type": "string"
											},
											"host": {
												"description": "The host (hostname or IP) of your origin database.",
												"example": "database.example.com",
												"type": "string"
											},
											"port": {
												"description": "The port (default: 5432 for Postgres) of your origin database.",
												"example": "5432",
												"type": "integer"
											},
											"scheme": {
												"default": "postgres",
												"description": "Specifies the URL scheme used to connect to your origin database.",
												"enum": [
													"postgres",
													"postgresql"
												],
												"type": "string"
											},
											"user": {
												"description": "The user of your origin database.",
												"example": "postgres",
												"type": "string"
											}
										},
										"required": [
											"host",
											"port",
											"scheme",
											"database",
											"user"
										],
										"type": "object"
									}
								},
								"type": "object"
							}
						],
						"properties": {
							"origin": {
								"allOf": [
									{
										"properties": {
											"database": {
												"description": "The name of your origin database.",
												"example": "postgres",
												"type": "string"
											},
											"host": {
												"description": "The host (hostname or IP) of your origin database.",
												"example": "database.example.com",
												"type": "string"
											},
											"port": {
												"description": "The port (default: 5432 for Postgres) of your origin database.",
												"example": "5432",
												"type": "integer"
											},
											"scheme": {
												"default": "postgres",
												"description": "Specifies the URL scheme used to connect to your origin database.",
												"enum": [
													"postgres",
													"postgresql"
												],
												"type": "string"
											},
											"user": {
												"description": "The user of your origin database.",
												"example": "postgres",
												"type": "string"
											}
										},
										"required": [
											"host",
											"port",
											"scheme",
											"database",
											"user"
										],
										"type": "object"
									}
								],
								"properties": {
									"password": {
										"description": "The password required to access your origin database. This value is write-only and never returned by the API.",
										"example": "password1234!",
										"type": "string"
									}
								},
								"required": [
									"password"
								],
								"type": "object"
							}
						},
						"required": [
							"name",
							"origin"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"caching": {
															"properties": {
																"disabled": {
																	"description": "When set to true, disables the caching of SQL responses. (Default: false)",
																	"example": false,
																	"type": "boolean"
																},
																"max_age": {
																	"description": "When present, specifies max duration for which items should persist in the cache. (Default: 60)",
																	"example": 60,
																	"type": "integer"
																},
																"stale_while_revalidate": {
																	"description": "When present, indicates the number of seconds cache may serve the response after it becomes stale. (Default: 15)",
																	"example": 15,
																	"type": "integer"
																}
															},
															"type": "object"
														},
														"name": {
															"example": "example-hyperdrive",
															"type": "string"
														},
														"origin": {
															"properties": {
																"database": {
																	"description": "The name of your origin database.",
																	"example": "postgres",
																	"type": "string"
																},
																"host": {
																	"description": "The host (hostname or IP) of your origin database.",
																	"example": "database.example.com",
																	"type": "string"
																},
																"port": {
																	"description": "The port (default: 5432 for Postgres) of your origin database.",
																	"example": "5432",
																	"type": "integer"
																},
																"scheme": {
																	"default": "postgres",
																	"description": "Specifies the URL scheme used to connect to your origin database.",
																	"enum": [
																		"postgres",
																		"postgresql"
																	],
																	"type": "string"
																},
																"user": {
																	"description": "The user of your origin database.",
																	"example": "postgres",
																	"type": "string"
																}
															},
															"required": [
																"host",
																"port",
																"scheme",
																"database",
																"user"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create Hyperdrive Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Hyperdrive Failure Response"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Hyperdrive",
		"tags": [
			"Hyperdrive"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.hyperdrive.database.create"
			]
		}
	},
	"PUT /accounts/{account_id}/hyperdrive/configs/{hyperdrive_id}": {
		"description": "Updates and returns the specified Hyperdrive configuration.",
		"operationId": "update-hyperdrive",
		"parameters": [
			{
				"in": "path",
				"name": "account_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "hyperdrive_id",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"caching": {
										"properties": {
											"disabled": {
												"description": "When set to true, disables the caching of SQL responses. (Default: false)",
												"example": false,
												"type": "boolean"
											},
											"max_age": {
												"description": "When present, specifies max duration for which items should persist in the cache. (Default: 60)",
												"example": 60,
												"type": "integer"
											},
											"stale_while_revalidate": {
												"description": "When present, indicates the number of seconds cache may serve the response after it becomes stale. (Default: 15)",
												"example": 15,
												"type": "integer"
											}
										},
										"type": "object"
									},
									"name": {
										"example": "example-hyperdrive",
										"type": "string"
									},
									"origin": {
										"properties": {
											"database": {
												"description": "The name of your origin database.",
												"example": "postgres",
												"type": "string"
											},
											"host": {
												"description": "The host (hostname or IP) of your origin database.",
												"example": "database.example.com",
												"type": "string"
											},
											"port": {
												"description": "The port (default: 5432 for Postgres) of your origin database.",
												"example": "5432",
												"type": "integer"
											},
											"scheme": {
												"default": "postgres",
												"description": "Specifies the URL scheme used to connect to your origin database.",
												"enum": [
													"postgres",
													"postgresql"
												],
												"type": "string"
											},
											"user": {
												"description": "The user of your origin database.",
												"example": "postgres",
												"type": "string"
											}
										},
										"required": [
											"host",
											"port",
											"scheme",
											"database",
											"user"
										],
										"type": "object"
									}
								},
								"type": "object"
							}
						],
						"properties": {
							"origin": {
								"allOf": [
									{
										"properties": {
											"database": {
												"description": "The name of your origin database.",
												"example": "postgres",
												"type": "string"
											},
											"host": {
												"description": "The host (hostname or IP) of your origin database.",
												"example": "database.example.com",
												"type": "string"
											},
											"port": {
												"description": "The port (default: 5432 for Postgres) of your origin database.",
												"example": "5432",
												"type": "integer"
											},
											"scheme": {
												"default": "postgres",
												"description": "Specifies the URL scheme used to connect to your origin database.",
												"enum": [
													"postgres",
													"postgresql"
												],
												"type": "string"
											},
											"user": {
												"description": "The user of your origin database.",
												"example": "postgres",
												"type": "string"
											}
										},
										"required": [
											"host",
											"port",
											"scheme",
											"database",
											"user"
										],
										"type": "object"
									}
								],
								"properties": {
									"password": {
										"description": "The password required to access your origin database. This value is write-only and never returned by the API.",
										"example": "password1234!",
										"type": "string"
									}
								},
								"required": [
									"password"
								],
								"type": "object"
							}
						},
						"required": [
							"name",
							"origin"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true,
													"type": "object"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"properties": {
														"caching": {
															"properties": {
																"disabled": {
																	"description": "When set to true, disables the caching of SQL responses. (Default: false)",
																	"example": false,
																	"type": "boolean"
																},
																"max_age": {
																	"description": "When present, specifies max duration for which items should persist in the cache. (Default: 60)",
																	"example": 60,
																	"type": "integer"
																},
																"stale_while_revalidate": {
																	"description": "When present, indicates the number of seconds cache may serve the response after it becomes stale. (Default: 15)",
																	"example": 15,
																	"type": "integer"
																}
															},
															"type": "object"
														},
														"name": {
															"example": "example-hyperdrive",
															"type": "string"
														},
														"origin": {
															"properties": {
																"database": {
																	"description": "The name of your origin database.",
																	"example": "postgres",
																	"type": "string"
																},
																"host": {
																	"description": "The host (hostname or IP) of your origin database.",
																	"example": "database.example.com",
																	"type": "string"
																},
																"port": {
																	"description": "The port (default: 5432 for Postgres) of your origin database.",
																	"example": "5432",
																	"type": "integer"
																},
																"scheme": {
																	"default": "postgres",
																	"description": "Specifies the URL scheme used to connect to your origin database.",
																	"enum": [
																		"postgres",
																		"postgresql"
																	],
																	"type": "string"
																},
																"user": {
																	"description": "The user of your origin database.",
																	"example": "postgres",
																	"type": "string"
																}
															},
															"required": [
																"host",
																"port",
																"scheme",
																"database",
																"user"
															],
															"type": "object"
														}
													},
													"type": "object"
												}
											],
											"properties": {
												"id": {
													"description": "Identifier",
													"example": "023e105f4ecef8ad9ca31a8372d0c353",
													"maxLength": 32,
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Hyperdrive Response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"properties": {
														"errors": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"messages": {
															"example": [],
															"items": {
																"properties": {
																	"code": {
																		"minimum": 1000,
																		"type": "integer"
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"required": [
																	"code",
																	"message"
																],
																"type": "object",
																"uniqueItems": true
															},
															"type": "array"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"items": {},
																	"type": "array"
																},
																{
																	"type": "string"
																}
															]
														},
														"success": {
															"description": "Whether the API call was successful",
															"enum": [
																true
															],
															"example": true,
															"type": "boolean"
														}
													},
													"required": [
														"success",
														"errors",
														"messages",
														"result"
													],
													"type": "object"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true,
															"type": "object"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"nullable": true,
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Hyperdrive Failure Response"
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Hyperdrive",
		"tags": [
			"Hyperdrive"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.hyperdrive.database.update"
			]
		}
	}
}