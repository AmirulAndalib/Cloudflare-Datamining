{
	"DELETE /zones/{zone_id}/rulesets/{ruleset_id}": {
		"description": "Deletes all versions of an existing zone ruleset.",
		"operationId": "deleteZoneRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"204": {
				"description": "An empty response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a zone ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}": {
		"description": "Deletes an existing rule from a zone ruleset.",
		"operationId": "deleteZoneRulesetRule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the rule.",
					"example": "3a03d665bac047339bb530ecb439a90d",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a zone ruleset rule",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /zones/{zone_id}/rulesets/{ruleset_id}/versions/{ruleset_version}": {
		"description": "Deletes an existing version of a zone ruleset.",
		"operationId": "deleteZoneRulesetVersion",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_version",
				"required": true,
				"schema": {
					"description": "The version of the ruleset.",
					"example": "1",
					"pattern": "^[0-9]+$",
					"readOnly": true,
					"title": "Version",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"204": {
				"description": "An empty response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete a zone ruleset version",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets": {
		"description": "Fetches all rulesets at the zone level.",
		"operationId": "listZoneRulesets",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"description": "A list of rulesets. The returned information will not include the rules in each ruleset.",
											"items": {
												"allOf": [
													{
														"description": "A ruleset object.",
														"properties": {
															"description": {
																"default": "",
																"description": "An informative description of the ruleset.",
																"example": "My ruleset to execute managed rulesets",
																"title": "Description",
																"type": "string"
															},
															"id": {
																"allOf": [
																	{
																		"description": "The unique ID of the ruleset.",
																		"example": "2f2feab2026849078ba485f918791bdc",
																		"pattern": "^[0-9a-f]{32}$",
																		"title": "ID",
																		"type": "string"
																	},
																	{
																		"readOnly": true
																	}
																]
															},
															"kind": {
																"description": "The kind of the ruleset.",
																"enum": [
																	"managed",
																	"custom",
																	"root",
																	"zone"
																],
																"example": "root",
																"title": "Kind",
																"type": "string"
															},
															"last_updated": {
																"description": "The timestamp of when the ruleset was last modified.",
																"example": "2000-01-01T00:00:00.000000Z",
																"format": "date-time",
																"readOnly": true,
																"title": "Last updated",
																"type": "string"
															},
															"name": {
																"description": "The human-readable name of the ruleset.",
																"example": "My ruleset",
																"minLength": 1,
																"title": "Name",
																"type": "string"
															},
															"phase": {
																"description": "The phase of the ruleset.",
																"enum": [
																	"ddos_l4",
																	"ddos_l7",
																	"http_config_settings",
																	"http_custom_errors",
																	"http_log_custom_fields",
																	"http_ratelimit",
																	"http_request_cache_settings",
																	"http_request_dynamic_redirect",
																	"http_request_firewall_custom",
																	"http_request_firewall_managed",
																	"http_request_late_transform",
																	"http_request_origin",
																	"http_request_redirect",
																	"http_request_sanitize",
																	"http_request_sbfm",
																	"http_request_select_configuration",
																	"http_request_transform",
																	"http_response_compression",
																	"http_response_firewall_managed",
																	"http_response_headers_transform",
																	"magic_transit",
																	"magic_transit_ids_managed",
																	"magic_transit_managed"
																],
																"example": "http_request_firewall_custom",
																"title": "Phase",
																"type": "string"
															},
															"version": {
																"description": "The version of the ruleset.",
																"example": "1",
																"pattern": "^[0-9]+$",
																"readOnly": true,
																"title": "Version",
																"type": "string"
															}
														},
														"required": [
															"id",
															"version",
															"last_updated"
														],
														"title": "Ruleset",
														"type": "object"
													},
													{
														"required": [
															"name",
															"kind",
															"phase"
														]
													}
												]
											},
											"title": "Rulesets",
											"type": "array"
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A rulesets response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List zone rulesets",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/{ruleset_id}": {
		"description": "Fetches the latest version of a zone ruleset.",
		"operationId": "getZoneRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a zone ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/{ruleset_id}/versions": {
		"description": "Fetches the versions of a zone ruleset.",
		"operationId": "listZoneRulesetVersions",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"description": "A list of rulesets. The returned information will not include the rules in each ruleset.",
											"items": {
												"allOf": [
													{
														"description": "A ruleset object.",
														"properties": {
															"description": {
																"default": "",
																"description": "An informative description of the ruleset.",
																"example": "My ruleset to execute managed rulesets",
																"title": "Description",
																"type": "string"
															},
															"id": {
																"allOf": [
																	{
																		"description": "The unique ID of the ruleset.",
																		"example": "2f2feab2026849078ba485f918791bdc",
																		"pattern": "^[0-9a-f]{32}$",
																		"title": "ID",
																		"type": "string"
																	},
																	{
																		"readOnly": true
																	}
																]
															},
															"kind": {
																"description": "The kind of the ruleset.",
																"enum": [
																	"managed",
																	"custom",
																	"root",
																	"zone"
																],
																"example": "root",
																"title": "Kind",
																"type": "string"
															},
															"last_updated": {
																"description": "The timestamp of when the ruleset was last modified.",
																"example": "2000-01-01T00:00:00.000000Z",
																"format": "date-time",
																"readOnly": true,
																"title": "Last updated",
																"type": "string"
															},
															"name": {
																"description": "The human-readable name of the ruleset.",
																"example": "My ruleset",
																"minLength": 1,
																"title": "Name",
																"type": "string"
															},
															"phase": {
																"description": "The phase of the ruleset.",
																"enum": [
																	"ddos_l4",
																	"ddos_l7",
																	"http_config_settings",
																	"http_custom_errors",
																	"http_log_custom_fields",
																	"http_ratelimit",
																	"http_request_cache_settings",
																	"http_request_dynamic_redirect",
																	"http_request_firewall_custom",
																	"http_request_firewall_managed",
																	"http_request_late_transform",
																	"http_request_origin",
																	"http_request_redirect",
																	"http_request_sanitize",
																	"http_request_sbfm",
																	"http_request_select_configuration",
																	"http_request_transform",
																	"http_response_compression",
																	"http_response_firewall_managed",
																	"http_response_headers_transform",
																	"magic_transit",
																	"magic_transit_ids_managed",
																	"magic_transit_managed"
																],
																"example": "http_request_firewall_custom",
																"title": "Phase",
																"type": "string"
															},
															"version": {
																"description": "The version of the ruleset.",
																"example": "1",
																"pattern": "^[0-9]+$",
																"readOnly": true,
																"title": "Version",
																"type": "string"
															}
														},
														"required": [
															"id",
															"version",
															"last_updated"
														],
														"title": "Ruleset",
														"type": "object"
													},
													{
														"required": [
															"name",
															"kind",
															"phase"
														]
													}
												]
											},
											"title": "Rulesets",
											"type": "array"
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A rulesets response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List a zone ruleset's versions",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/{ruleset_id}/versions/{ruleset_version}": {
		"description": "Fetches a specific version of a zone ruleset.",
		"operationId": "getZoneRulesetVersion",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_version",
				"required": true,
				"schema": {
					"description": "The version of the ruleset.",
					"example": "1",
					"pattern": "^[0-9]+$",
					"readOnly": true,
					"title": "Version",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a zone ruleset version",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint": {
		"description": "Fetches the latest version of the zone entry point ruleset for a given phase.",
		"operationId": "getZoneEntrypointRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_phase",
				"required": true,
				"schema": {
					"description": "The phase of the ruleset.",
					"enum": [
						"ddos_l4",
						"ddos_l7",
						"http_config_settings",
						"http_custom_errors",
						"http_log_custom_fields",
						"http_ratelimit",
						"http_request_cache_settings",
						"http_request_dynamic_redirect",
						"http_request_firewall_custom",
						"http_request_firewall_managed",
						"http_request_late_transform",
						"http_request_origin",
						"http_request_redirect",
						"http_request_sanitize",
						"http_request_sbfm",
						"http_request_select_configuration",
						"http_request_transform",
						"http_response_compression",
						"http_response_firewall_managed",
						"http_response_headers_transform",
						"magic_transit",
						"magic_transit_ids_managed",
						"magic_transit_managed"
					],
					"example": "http_request_firewall_custom",
					"title": "Phase",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a zone entry point ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions": {
		"description": "Fetches the versions of a zone entry point ruleset.",
		"operationId": "listZoneEntrypointRulesetVersions",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_phase",
				"required": true,
				"schema": {
					"description": "The phase of the ruleset.",
					"enum": [
						"ddos_l4",
						"ddos_l7",
						"http_config_settings",
						"http_custom_errors",
						"http_log_custom_fields",
						"http_ratelimit",
						"http_request_cache_settings",
						"http_request_dynamic_redirect",
						"http_request_firewall_custom",
						"http_request_firewall_managed",
						"http_request_late_transform",
						"http_request_origin",
						"http_request_redirect",
						"http_request_sanitize",
						"http_request_sbfm",
						"http_request_select_configuration",
						"http_request_transform",
						"http_response_compression",
						"http_response_firewall_managed",
						"http_response_headers_transform",
						"magic_transit",
						"magic_transit_ids_managed",
						"magic_transit_managed"
					],
					"example": "http_request_firewall_custom",
					"title": "Phase",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"description": "A list of rulesets. The returned information will not include the rules in each ruleset.",
											"items": {
												"allOf": [
													{
														"description": "A ruleset object.",
														"properties": {
															"description": {
																"default": "",
																"description": "An informative description of the ruleset.",
																"example": "My ruleset to execute managed rulesets",
																"title": "Description",
																"type": "string"
															},
															"id": {
																"allOf": [
																	{
																		"description": "The unique ID of the ruleset.",
																		"example": "2f2feab2026849078ba485f918791bdc",
																		"pattern": "^[0-9a-f]{32}$",
																		"title": "ID",
																		"type": "string"
																	},
																	{
																		"readOnly": true
																	}
																]
															},
															"kind": {
																"description": "The kind of the ruleset.",
																"enum": [
																	"managed",
																	"custom",
																	"root",
																	"zone"
																],
																"example": "root",
																"title": "Kind",
																"type": "string"
															},
															"last_updated": {
																"description": "The timestamp of when the ruleset was last modified.",
																"example": "2000-01-01T00:00:00.000000Z",
																"format": "date-time",
																"readOnly": true,
																"title": "Last updated",
																"type": "string"
															},
															"name": {
																"description": "The human-readable name of the ruleset.",
																"example": "My ruleset",
																"minLength": 1,
																"title": "Name",
																"type": "string"
															},
															"phase": {
																"description": "The phase of the ruleset.",
																"enum": [
																	"ddos_l4",
																	"ddos_l7",
																	"http_config_settings",
																	"http_custom_errors",
																	"http_log_custom_fields",
																	"http_ratelimit",
																	"http_request_cache_settings",
																	"http_request_dynamic_redirect",
																	"http_request_firewall_custom",
																	"http_request_firewall_managed",
																	"http_request_late_transform",
																	"http_request_origin",
																	"http_request_redirect",
																	"http_request_sanitize",
																	"http_request_sbfm",
																	"http_request_select_configuration",
																	"http_request_transform",
																	"http_response_compression",
																	"http_response_firewall_managed",
																	"http_response_headers_transform",
																	"magic_transit",
																	"magic_transit_ids_managed",
																	"magic_transit_managed"
																],
																"example": "http_request_firewall_custom",
																"title": "Phase",
																"type": "string"
															},
															"version": {
																"description": "The version of the ruleset.",
																"example": "1",
																"pattern": "^[0-9]+$",
																"readOnly": true,
																"title": "Version",
																"type": "string"
															}
														},
														"required": [
															"id",
															"version",
															"last_updated"
														],
														"title": "Ruleset",
														"type": "object"
													},
													{
														"required": [
															"name",
															"kind",
															"phase"
														]
													}
												]
											},
											"title": "Rulesets",
											"type": "array"
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A rulesets response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List a zone entry point ruleset's versions",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions/{ruleset_version}": {
		"description": "Fetches a specific version of a zone entry point ruleset.",
		"operationId": "getZoneEntrypointRulesetVersion",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_version",
				"required": true,
				"schema": {
					"description": "The version of the ruleset.",
					"example": "1",
					"pattern": "^[0-9]+$",
					"readOnly": true,
					"title": "Version",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_phase",
				"required": true,
				"schema": {
					"description": "The phase of the ruleset.",
					"enum": [
						"ddos_l4",
						"ddos_l7",
						"http_config_settings",
						"http_custom_errors",
						"http_log_custom_fields",
						"http_ratelimit",
						"http_request_cache_settings",
						"http_request_dynamic_redirect",
						"http_request_firewall_custom",
						"http_request_firewall_managed",
						"http_request_late_transform",
						"http_request_origin",
						"http_request_redirect",
						"http_request_sanitize",
						"http_request_sbfm",
						"http_request_select_configuration",
						"http_request_transform",
						"http_response_compression",
						"http_response_firewall_managed",
						"http_response_headers_transform",
						"magic_transit",
						"magic_transit_ids_managed",
						"magic_transit_managed"
					],
					"example": "http_request_firewall_custom",
					"title": "Phase",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get a zone entry point ruleset version",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}": {
		"description": "Updates an existing rule in a zone ruleset.",
		"operationId": "updateZoneRulesetRule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the rule.",
					"example": "3a03d665bac047339bb530ecb439a90d",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"discriminator": {
									"mapping": {
										"block": "#/components/schemas/rulesets_BlockRule",
										"challenge": "#/components/schemas/rulesets_ChallengeRule",
										"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
										"execute": "#/components/schemas/rulesets_ExecuteRule",
										"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
										"log": "#/components/schemas/rulesets_LogRule",
										"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
										"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
										"redirect": "#/components/schemas/rulesets_RedirectRule",
										"rewrite": "#/components/schemas/rulesets_RewriteRule",
										"route": "#/components/schemas/rulesets_RouteRule",
										"score": "#/components/schemas/rulesets_ScoreRule",
										"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
										"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
										"set_config": "#/components/schemas/rulesets_SetConfigRule",
										"skip": "#/components/schemas/rulesets_SkipRule"
									},
									"propertyName": "action"
								},
								"oneOf": [
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"block"
														]
													},
													"action_parameters": {
														"properties": {
															"response": {
																"description": "The response to show when the block is applied.",
																"properties": {
																	"content": {
																		"description": "The content to return.",
																		"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																		"minLength": 1,
																		"title": "Content",
																		"type": "string"
																	},
																	"content_type": {
																		"description": "The type of the content to return.",
																		"example": "application/json",
																		"minLength": 1,
																		"title": "Content type",
																		"type": "string"
																	},
																	"status_code": {
																		"description": "The status code to return.",
																		"maximum": 499,
																		"minimum": 400,
																		"title": "Status code",
																		"type": "integer"
																	}
																},
																"required": [
																	"status_code",
																	"content",
																	"content_type"
																],
																"title": "Response",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Block when the IP address is not 1.1.1.1"
													}
												},
												"title": "Block rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"challenge"
														]
													},
													"description": {
														"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
													}
												},
												"title": "Challenge rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"compress_response"
														]
													},
													"action_parameters": {
														"properties": {
															"algorithms": {
																"description": "Custom order for compression algorithms.",
																"example": [
																	{
																		"name": "none"
																	}
																],
																"items": {
																	"description": "Compression algorithm to enable.",
																	"properties": {
																		"name": {
																			"description": "Name of compression algorithm to enable.",
																			"enum": [
																				"none",
																				"auto",
																				"default",
																				"gzip",
																				"brotli"
																			],
																			"title": "Name",
																			"type": "string"
																		}
																	},
																	"title": "Compression Algorithm",
																	"type": "object"
																},
																"title": "Algorithm",
																"type": "array"
															}
														}
													},
													"description": {
														"example": "Disable compression when address is not 1.1.1.1"
													}
												},
												"title": "Compression rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"execute"
														]
													},
													"action_parameters": {
														"properties": {
															"id": {
																"allOf": [
																	{
																		"description": "The unique ID of the ruleset.",
																		"example": "2f2feab2026849078ba485f918791bdc",
																		"pattern": "^[0-9a-f]{32}$",
																		"title": "ID",
																		"type": "string"
																	},
																	{
																		"description": "The ID of the ruleset to execute.",
																		"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																	}
																]
															},
															"matched_data": {
																"description": "The configuration to use for matched data logging.",
																"properties": {
																	"public_key": {
																		"description": "The public key to encrypt matched data logs with.",
																		"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																		"minLength": 1,
																		"title": "Public key",
																		"type": "string"
																	}
																},
																"required": [
																	"public_key"
																],
																"title": "Matched data",
																"type": "object"
															},
															"overrides": {
																"description": "A set of overrides to apply to the target ruleset.",
																"minProperties": 1,
																"properties": {
																	"action": {
																		"allOf": [
																			{
																				"description": "The action to perform when the rule matches.",
																				"pattern": "^[a-z]+$",
																				"title": "Action",
																				"type": "string"
																			},
																			{
																				"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																				"example": "log"
																			}
																		]
																	},
																	"categories": {
																		"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																		"items": {
																			"description": "A category-level override",
																			"minProperties": 2,
																			"properties": {
																				"action": {
																					"allOf": [
																						{
																							"description": "The action to perform when the rule matches.",
																							"pattern": "^[a-z]+$",
																							"title": "Action",
																							"type": "string"
																						},
																						{
																							"description": "The action to override rules in the category with.",
																							"example": "log"
																						}
																					]
																				},
																				"category": {
																					"allOf": [
																						{
																							"description": "A category of the rule.",
																							"example": "directory-traversal",
																							"minLength": 1,
																							"title": "Category",
																							"type": "string"
																						},
																						{
																							"description": "The name of the category to override."
																						}
																					]
																				},
																				"enabled": {
																					"allOf": [
																						{
																							"description": "Whether the rule should be executed.",
																							"example": true,
																							"title": "Enabled",
																							"type": "boolean"
																						},
																						{
																							"description": "Whether to enable execution of rules in the category."
																						}
																					]
																				},
																				"sensitivity_level": {
																					"allOf": [
																						{
																							"enum": [
																								"default",
																								"medium",
																								"low",
																								"eoff"
																							],
																							"title": "Sensitivity level",
																							"type": "string"
																						},
																						{
																							"description": "The sensitivity level to use for rules in the category."
																						}
																					]
																				}
																			},
																			"required": [
																				"category"
																			],
																			"title": "Category override",
																			"type": "object"
																		},
																		"minItems": 1,
																		"title": "Category overrides",
																		"type": "array",
																		"uniqueItems": true
																	},
																	"enabled": {
																		"allOf": [
																			{
																				"description": "Whether the rule should be executed.",
																				"example": true,
																				"title": "Enabled",
																				"type": "boolean"
																			},
																			{
																				"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																			}
																		]
																	},
																	"rules": {
																		"description": "A list of rule-level overrides. This option has the highest precedence.",
																		"items": {
																			"description": "A rule-level override",
																			"minProperties": 2,
																			"properties": {
																				"action": {
																					"allOf": [
																						{
																							"description": "The action to perform when the rule matches.",
																							"pattern": "^[a-z]+$",
																							"title": "Action",
																							"type": "string"
																						},
																						{
																							"description": "The action to override the rule with.",
																							"example": "log"
																						}
																					]
																				},
																				"enabled": {
																					"allOf": [
																						{
																							"description": "Whether the rule should be executed.",
																							"example": true,
																							"title": "Enabled",
																							"type": "boolean"
																						},
																						{
																							"description": "Whether to enable execution of the rule."
																						}
																					]
																				},
																				"id": {
																					"allOf": [
																						{
																							"description": "The unique ID of the rule.",
																							"example": "3a03d665bac047339bb530ecb439a90d",
																							"pattern": "^[0-9a-f]{32}$",
																							"title": "ID",
																							"type": "string"
																						},
																						{
																							"description": "The ID of the rule to override.",
																							"example": "8ac8bc2a661e475d940980f9317f28e1"
																						}
																					]
																				},
																				"score_threshold": {
																					"description": "The score threshold to use for the rule.",
																					"title": "Score threshold",
																					"type": "integer"
																				},
																				"sensitivity_level": {
																					"allOf": [
																						{
																							"enum": [
																								"default",
																								"medium",
																								"low",
																								"eoff"
																							],
																							"title": "Sensitivity level",
																							"type": "string"
																						},
																						{
																							"description": "The sensitivity level to use for the rule."
																						}
																					]
																				}
																			},
																			"required": [
																				"id"
																			],
																			"title": "Rule override",
																			"type": "object"
																		},
																		"minItems": 1,
																		"title": "Rule overrides",
																		"type": "array",
																		"uniqueItems": true
																	},
																	"sensitivity_level": {
																		"allOf": [
																			{
																				"enum": [
																					"default",
																					"medium",
																					"low",
																					"eoff"
																				],
																				"title": "Sensitivity level",
																				"type": "string"
																			},
																			{
																				"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																			}
																		]
																	}
																},
																"title": "Overrides",
																"type": "object"
															}
														},
														"required": [
															"id"
														]
													},
													"description": {
														"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
													}
												},
												"title": "Execute rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"js_challenge"
														]
													},
													"description": {
														"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
													}
												},
												"title": "Javascript Challenge rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"log"
														]
													},
													"description": {
														"example": "Log when the IP address is not 1.1.1.1"
													}
												},
												"title": "Log rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"managed_challenge"
														]
													},
													"description": {
														"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
													}
												},
												"title": "Managed Challenge rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"redirect"
														]
													},
													"action_parameters": {
														"properties": {
															"from_list": {
																"description": "Serve a redirect based on a bulk list lookup.",
																"properties": {
																	"key": {
																		"description": "Expression that evaluates to the list lookup key.",
																		"example": "http.request.full_uri",
																		"minLength": 1,
																		"title": "Key",
																		"type": "string"
																	},
																	"name": {
																		"description": "The name of the list to match against.",
																		"example": "list1",
																		"maxLength": 50,
																		"pattern": "^[a-zA-Z0-9_]+$",
																		"title": "Name",
																		"type": "string"
																	}
																},
																"title": "Bulk Redirect",
																"type": "object"
															},
															"from_value": {
																"description": "Serve a redirect based on the request properties.",
																"properties": {
																	"preserve_query_string": {
																		"description": "Keep the query string of the original request.",
																		"title": "Preserve query string",
																		"type": "boolean"
																	},
																	"status_code": {
																		"description": "The status code to be used for the redirect.",
																		"enum": [
																			301,
																			302,
																			303,
																			307,
																			308
																		],
																		"title": "Status Code",
																		"type": "number"
																	},
																	"target_url": {
																		"description": "The URL to redirect the request to.",
																		"example": {
																			"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																		},
																		"oneOf": [
																			{
																				"properties": {
																					"value": {
																						"description": "The URL to redirect the request to.",
																						"minLength": 1,
																						"type": "string"
																					}
																				},
																				"title": "Static URL redirect",
																				"type": "object"
																			},
																			{
																				"properties": {
																					"expression": {
																						"description": "An expression to evaluate to get the URL to redirect the request to.",
																						"minLength": 1,
																						"type": "string"
																					}
																				},
																				"title": "Dynamic URL redirect",
																				"type": "object"
																			}
																		]
																	}
																},
																"title": "Single redirect",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Redirect when IP address is not 1.1.1.1"
													}
												},
												"title": "Redirect rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"rewrite"
														]
													},
													"action_parameters": {
														"properties": {
															"headers": {
																"additionalProperties": {
																	"oneOf": [
																		{
																			"description": "Remove the header from the request.",
																			"properties": {
																				"operation": {
																					"enum": [
																						"remove"
																					],
																					"title": "Operation",
																					"type": "string"
																				}
																			},
																			"required": [
																				"operation"
																			],
																			"title": "Remove header",
																			"type": "object"
																		},
																		{
																			"description": "Set a request header with a static value.",
																			"properties": {
																				"operation": {
																					"enum": [
																						"set"
																					],
																					"title": "Operation",
																					"type": "string"
																				},
																				"value": {
																					"description": "Static value for the header.",
																					"example": "static-header-value",
																					"minLength": 1,
																					"title": "Value",
																					"type": "string"
																				}
																			},
																			"required": [
																				"operation",
																				"value"
																			],
																			"title": "Static header",
																			"type": "object"
																		},
																		{
																			"description": "Set a request header with a dynamic value.",
																			"properties": {
																				"expression": {
																					"description": "Expression for the header value.",
																					"example": "ip.src",
																					"minLength": 1,
																					"title": "Expression",
																					"type": "string"
																				},
																				"operation": {
																					"enum": [
																						"set"
																					],
																					"title": "Operation",
																					"type": "string"
																				}
																			},
																			"required": [
																				"operation",
																				"expression"
																			],
																			"title": "Dynamic header",
																			"type": "object"
																		}
																	]
																},
																"description": "Map of request headers to modify.",
																"example": {
																	"client-http-version": {
																		"expression": "http.request.version",
																		"operation": "set"
																	}
																},
																"title": "Headers",
																"type": "object"
															},
															"uri": {
																"description": "URI to rewrite the request to.",
																"properties": {
																	"path": {
																		"allOf": [
																			{
																				"description": "Path portion rewrite.",
																				"example": {
																					"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																				},
																				"title": "Path"
																			},
																			{
																				"oneOf": [
																					{
																						"properties": {
																							"value": {
																								"description": "Predefined replacement value.",
																								"example": "/images",
																								"minLength": 1,
																								"type": "string"
																							}
																						},
																						"required": [
																							"value"
																						],
																						"title": "Static value",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"expression": {
																								"description": "Expression to evaluate for the replacement value.",
																								"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																								"minLength": 1,
																								"type": "string"
																							}
																						},
																						"required": [
																							"expression"
																						],
																						"title": "Dynamic value",
																						"type": "object"
																					}
																				]
																			}
																		]
																	},
																	"query": {
																		"allOf": [
																			{
																				"description": "Query portion rewrite.",
																				"example": {
																					"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																				},
																				"title": "Query"
																			},
																			{
																				"oneOf": [
																					{
																						"properties": {
																							"value": {
																								"description": "Predefined replacement value.",
																								"example": "/images",
																								"minLength": 1,
																								"type": "string"
																							}
																						},
																						"required": [
																							"value"
																						],
																						"title": "Static value",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"expression": {
																								"description": "Expression to evaluate for the replacement value.",
																								"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																								"minLength": 1,
																								"type": "string"
																							}
																						},
																						"required": [
																							"expression"
																						],
																						"title": "Dynamic value",
																						"type": "object"
																					}
																				]
																			}
																		]
																	}
																},
																"title": "URI",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Add a header when the IP address is not 1.1.1.1"
													}
												},
												"title": "Rewrite rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"route"
														]
													},
													"action_parameters": {
														"properties": {
															"host_header": {
																"description": "Rewrite the HTTP Host header.",
																"example": "static.example.com",
																"minLength": 1,
																"title": "Host Header",
																"type": "string"
															},
															"origin": {
																"description": "Override the IP/TCP destination.",
																"properties": {
																	"host": {
																		"description": "Override the resolved hostname.",
																		"example": "static.example.com",
																		"minLength": 1,
																		"title": "DNS Record",
																		"type": "string"
																	},
																	"port": {
																		"description": "Override the destination port.",
																		"maximum": 65535,
																		"minimum": 1,
																		"title": "Port",
																		"type": "number"
																	}
																},
																"title": "Origin",
																"type": "object"
															},
															"sni": {
																"description": "Override the Server Name Indication (SNI).",
																"properties": {
																	"value": {
																		"description": "The SNI override.",
																		"example": "static.example.com",
																		"minLength": 1,
																		"title": "Value",
																		"type": "string"
																	}
																},
																"required": [
																	"value"
																],
																"title": "SNI",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Select origin server when IP address is not 1.1.1.1"
													}
												},
												"title": "Origin rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"score"
														]
													},
													"action_parameters": {
														"example": {
															"increment": 3
														},
														"minProperties": 1,
														"properties": {
															"increment": {
																"description": "Increment contains the delta to change the score and can be either positive or negative.",
																"example": 3,
																"title": "Increment",
																"type": "integer"
															}
														}
													},
													"description": {
														"example": "Increment score when the IP address is not 1.1.1.1"
													}
												},
												"title": "Score rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"serve_error"
														]
													},
													"action_parameters": {
														"properties": {
															"content": {
																"description": "Error response content.",
																"example": "{\"error\": \"1xxx error occurred\"}\n",
																"maxLength": 10240,
																"minLength": 1,
																"title": "Content",
																"type": "string"
															},
															"content_type": {
																"description": "Content-type header to set with the response.",
																"enum": [
																	"application/json",
																	"text/xml",
																	"text/plain",
																	"text/html"
																],
																"example": "application/json",
																"title": "Content Type",
																"type": "string"
															},
															"status_code": {
																"description": "The status code to use for the error.",
																"example": 500,
																"maximum": 999,
																"minimum": 400,
																"title": "Status Code",
																"type": "number"
															}
														}
													},
													"description": {
														"example": "Serve a JSON response to api users on error"
													}
												},
												"title": "Serve Error rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"set_config"
														]
													},
													"action_parameters": {
														"properties": {
															"automatic_https_rewrites": {
																"description": "Turn on or off Automatic HTTPS Rewrites.",
																"title": "Automatic HTTPS rewrites",
																"type": "boolean"
															},
															"autominify": {
																"description": "Select which file extensions to minify automatically.",
																"properties": {
																	"css": {
																		"description": "Minify CSS files.",
																		"title": "CSS",
																		"type": "boolean"
																	},
																	"html": {
																		"description": "Minify HTML files.",
																		"title": "HTML",
																		"type": "boolean"
																	},
																	"js": {
																		"description": "Minify JS files.",
																		"title": "JS",
																		"type": "boolean"
																	}
																},
																"title": "Auto Minify",
																"type": "object"
															},
															"bic": {
																"description": "Turn on or off Browser Integrity Check.",
																"title": "Browser Integrity Check",
																"type": "boolean"
															},
															"disable_apps": {
																"description": "Turn off all active Cloudflare Apps.",
																"enum": [
																	true
																],
																"title": "Disable Apps",
																"type": "boolean"
															},
															"disable_rum": {
																"description": "Turn off Real User Monitoring (RUM).",
																"enum": [
																	true
																],
																"title": "Disable RUM",
																"type": "boolean"
															},
															"disable_zaraz": {
																"description": "Turn off Zaraz.",
																"enum": [
																	true
																],
																"title": "Disable Zaraz",
																"type": "boolean"
															},
															"email_obfuscation": {
																"description": "Turn on or off Email Obfuscation.",
																"title": "Email Obfuscation",
																"type": "boolean"
															},
															"fonts": {
																"description": "Turn on or off Cloudflare Fonts.",
																"title": "Cloudflare Fonts",
																"type": "boolean"
															},
															"hotlink_protection": {
																"description": "Turn on or off the Hotlink Protection.",
																"title": "Hotlink Protection",
																"type": "boolean"
															},
															"mirage": {
																"description": "Turn on or off Mirage.",
																"title": "Mirage",
																"type": "boolean"
															},
															"opportunistic_encryption": {
																"description": "Turn on or off Opportunistic Encryption.",
																"title": "Opportunistic Encryption",
																"type": "boolean"
															},
															"polish": {
																"description": "Configure the Polish level.",
																"enum": [
																	"off",
																	"lossless",
																	"lossy"
																],
																"title": "Polish",
																"type": "string"
															},
															"rocket_loader": {
																"description": "Turn on or off Rocket Loader",
																"title": "Rocket Loader",
																"type": "boolean"
															},
															"security_level": {
																"description": "Configure the Security Level.",
																"enum": [
																	"off",
																	"essentially_off",
																	"low",
																	"medium",
																	"high",
																	"under_attack"
																],
																"title": "Security Level",
																"type": "string"
															},
															"server_side_excludes": {
																"description": "Turn on or off Server Side Excludes.",
																"title": "Server Side Excludes",
																"type": "boolean"
															},
															"ssl": {
																"description": "Configure the SSL level.",
																"enum": [
																	"off",
																	"flexible",
																	"full",
																	"strict",
																	"origin_pull"
																],
																"title": "SSL",
																"type": "string"
															},
															"sxg": {
																"description": "Turn on or off Signed Exchanges (SXG).",
																"title": "Signed Exchanges (SXG)",
																"type": "boolean"
															}
														}
													},
													"description": {
														"example": "Disable Zaraz when IP address is not 1.1.1.1"
													}
												},
												"title": "Set Config Rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"skip"
														]
													},
													"action_parameters": {
														"example": {
															"ruleset": "current"
														},
														"minProperties": 1,
														"properties": {
															"phases": {
																"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																"items": {
																	"allOf": [
																		{
																			"description": "The phase of the ruleset.",
																			"enum": [
																				"ddos_l4",
																				"ddos_l7",
																				"http_config_settings",
																				"http_custom_errors",
																				"http_log_custom_fields",
																				"http_ratelimit",
																				"http_request_cache_settings",
																				"http_request_dynamic_redirect",
																				"http_request_firewall_custom",
																				"http_request_firewall_managed",
																				"http_request_late_transform",
																				"http_request_origin",
																				"http_request_redirect",
																				"http_request_sanitize",
																				"http_request_sbfm",
																				"http_request_select_configuration",
																				"http_request_transform",
																				"http_response_compression",
																				"http_response_firewall_managed",
																				"http_response_headers_transform",
																				"magic_transit",
																				"magic_transit_ids_managed",
																				"magic_transit_managed"
																			],
																			"example": "http_request_firewall_custom",
																			"title": "Phase",
																			"type": "string"
																		},
																		{
																			"description": "A phase to skip the execution of."
																		}
																	]
																},
																"minItems": 1,
																"title": "Phases",
																"type": "array",
																"uniqueItems": true
															},
															"products": {
																"description": "A list of legacy security products to skip the execution of.",
																"items": {
																	"description": "The name of a legacy security product to skip the execution of.",
																	"enum": [
																		"bic",
																		"hot",
																		"rateLimit",
																		"securityLevel",
																		"uaBlock",
																		"waf",
																		"zoneLockdown"
																	],
																	"title": "Product",
																	"type": "string"
																},
																"minItems": 1,
																"title": "Products",
																"type": "array",
																"uniqueItems": true
															},
															"rules": {
																"additionalProperties": {
																	"description": "A list of rule IDs in the ruleset to skip the execution of.",
																	"items": {
																		"allOf": [
																			{
																				"description": "The unique ID of the rule.",
																				"example": "3a03d665bac047339bb530ecb439a90d",
																				"pattern": "^[0-9a-f]{32}$",
																				"title": "ID",
																				"type": "string"
																			},
																			{
																				"description": "The ID of a rule in the ruleset to skip the execution of.",
																				"example": "8ac8bc2a661e475d940980f9317f28e1",
																				"title": "Rule"
																			}
																		]
																	},
																	"minItems": 1,
																	"title": "Rules",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																"example": {
																	"4814384a9e5d4991b9815dcfc25d2f1f": [
																		"8ac8bc2a661e475d940980f9317f28e1"
																	]
																},
																"minProperties": 1,
																"title": "Rules",
																"type": "object"
															},
															"ruleset": {
																"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																"enum": [
																	"current"
																],
																"title": "Ruleset",
																"type": "string"
															},
															"rulesets": {
																"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																"items": {
																	"allOf": [
																		{
																			"description": "The unique ID of the ruleset.",
																			"example": "2f2feab2026849078ba485f918791bdc",
																			"pattern": "^[0-9a-f]{32}$",
																			"title": "ID",
																			"type": "string"
																		},
																		{
																			"description": "The ID of a ruleset to skip the execution of.",
																			"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																			"title": "Ruleset"
																		}
																	]
																},
																"minItems": 1,
																"title": "Rulesets",
																"type": "array",
																"uniqueItems": true
															}
														}
													},
													"description": {
														"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
													}
												},
												"title": "Skip rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"set_cache_settings"
														]
													},
													"action_parameters": {
														"properties": {
															"additional_cacheable_ports": {
																"description": "List of additional ports that caching can be enabled on.",
																"items": {
																	"description": "A port to enable caching on",
																	"title": "Additional Cacheable Port",
																	"type": "integer"
																},
																"title": "Additional Cacheable Ports (Enterprise-only)",
																"type": "array"
															},
															"browser_ttl": {
																"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																"properties": {
																	"default": {
																		"description": "The TTL (in seconds) if you choose override_origin mode.",
																		"title": "Default TTL",
																		"type": "integer"
																	},
																	"mode": {
																		"description": "Determines which browser ttl mode to use.",
																		"enum": [
																			"respect_origin",
																			"bypass_by_default",
																			"override_origin"
																		],
																		"title": "Mode",
																		"type": "string"
																	}
																},
																"required": [
																	"mode"
																],
																"title": "Browser TTL",
																"type": "object"
															},
															"cache": {
																"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																"title": "Cache",
																"type": "boolean"
															},
															"cache_key": {
																"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																"properties": {
																	"cache_by_device_type": {
																		"description": "Separate cached content based on the visitor’s device type",
																		"title": "Cache by Device Type",
																		"type": "boolean"
																	},
																	"cache_deception_armor": {
																		"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																		"title": "Cache Deception Armor",
																		"type": "boolean"
																	},
																	"custom_key": {
																		"description": "Customize which components of the request are included or excluded from the cache key.",
																		"properties": {
																			"cookie": {
																				"description": "The cookies to include in building the cache key.",
																				"properties": {
																					"check_presence": {
																						"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																						"items": {
																							"description": "A cookie name to check presence of.",
																							"title": "Cookie name",
																							"type": "string"
																						},
																						"title": "Check presence of cookies",
																						"type": "array"
																					},
																					"include": {
																						"description": "Include these cookies' names and their values.",
																						"items": {
																							"description": "Cookie name and corresponding value to include.",
																							"title": "Cookie name",
																							"type": "string"
																						},
																						"title": "Include cookies",
																						"type": "array"
																					}
																				},
																				"title": "Cookie",
																				"type": "object"
																			},
																			"header": {
																				"description": "The header names and values to include in building the cache key.",
																				"properties": {
																					"check_presence": {
																						"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																						"items": {
																							"description": "A header name to check presence of.",
																							"title": "Header name",
																							"type": "string"
																						},
																						"title": "Check presence of headers",
																						"type": "array"
																					},
																					"exclude_origin": {
																						"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																						"title": "Exclude origin header",
																						"type": "boolean"
																					},
																					"include": {
																						"description": "Include these headers' names and their values.",
																						"items": {
																							"description": "Header name and corresponding value to include.",
																							"title": "Header name",
																							"type": "string"
																						},
																						"title": "Include headers",
																						"type": "array"
																					}
																				},
																				"title": "Headers",
																				"type": "object"
																			},
																			"host": {
																				"description": "Whether to use the original host or the resolved host in the cache key.",
																				"properties": {
																					"resolved": {
																						"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																						"example": true,
																						"title": "Use Resolved host",
																						"type": "boolean"
																					}
																				},
																				"title": "Host",
																				"type": "object"
																			},
																			"query_string": {
																				"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																				"properties": {
																					"exclude": {
																						"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																						"properties": {
																							"all": {
																								"description": "Exclude all query string parameters from use in building the cache key.",
																								"title": "All",
																								"type": "boolean"
																							},
																							"list": {
																								"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																								"items": {
																									"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																									"title": "parameter",
																									"type": "string"
																								},
																								"title": "List",
																								"type": "array"
																							}
																						},
																						"title": "Excluded query string parameters",
																						"type": "object"
																					},
																					"include": {
																						"description": "build the cache key using a list of query string parameters that ARE in the request.",
																						"properties": {
																							"all": {
																								"description": "Use all query string parameters in the cache key.",
																								"title": "All",
																								"type": "boolean"
																							},
																							"list": {
																								"description": "A list of query string parameters used to build the cache key.",
																								"items": {
																									"description": "parameter to include in the list of query string parameters used to build a cache key.",
																									"title": "parameter",
																									"type": "string"
																								},
																								"title": "List",
																								"type": "array"
																							}
																						},
																						"title": "Included query string parameters",
																						"type": "object"
																					}
																				},
																				"title": "Query String",
																				"type": "object"
																			},
																			"user": {
																				"description": "Characteristics of the request user agent used in building the cache key.",
																				"properties": {
																					"device_type": {
																						"description": "Use the user agent's device type in the cache key.",
																						"title": "Device Type",
																						"type": "boolean"
																					},
																					"geo": {
																						"description": "Use the user agents's country in the cache key.",
																						"title": "Country",
																						"type": "boolean"
																					},
																					"lang": {
																						"description": "Use the user agent's language in the cache key.",
																						"title": "Language",
																						"type": "boolean"
																					}
																				},
																				"title": "User",
																				"type": "object"
																			}
																		},
																		"title": "Custom Key",
																		"type": "object"
																	},
																	"ignore_query_strings_order": {
																		"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																		"title": "Ignore Query Strings Order",
																		"type": "boolean"
																	}
																},
																"title": "Cache Key",
																"type": "object"
															},
															"cache_reserve": {
																"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																"properties": {
																	"eligible": {
																		"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																		"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																		"title": "Eligible",
																		"type": "boolean"
																	},
																	"min_file_size": {
																		"description": "The minimum file size eligible for store in cache reserve.",
																		"title": "Minimum File Size",
																		"type": "integer"
																	}
																},
																"required": [
																	"eligible",
																	"min_file_size"
																],
																"title": "CacheReserve",
																"type": "object"
															},
															"edge_ttl": {
																"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																"properties": {
																	"default": {
																		"description": "The TTL (in seconds) if you choose override_origin mode.",
																		"maximum": 9223372036854776000,
																		"minimum": 0,
																		"title": "Default",
																		"type": "integer"
																	},
																	"mode": {
																		"description": "edge ttl options",
																		"enum": [
																			"respect_origin",
																			"bypass_by_default",
																			"override_origin"
																		],
																		"title": "Mode",
																		"type": "string"
																	},
																	"status_code_ttl": {
																		"description": "List of single status codes, or status code ranges to apply the selected mode",
																		"items": {
																			"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																			"properties": {
																				"status_code_range": {
																					"description": "The range of status codes used to apply the selected mode.",
																					"properties": {
																						"from": {
																							"description": "response status code lower bound",
																							"title": "Status Code lower bound",
																							"type": "integer"
																						},
																						"to": {
																							"description": "response status code upper bound",
																							"title": "Status Code upper bound",
																							"type": "integer"
																						}
																					},
																					"required": [
																						"from",
																						"to"
																					],
																					"title": "Status Code Range",
																					"type": "object"
																				},
																				"status_code_value": {
																					"description": "Set the ttl for responses with this specific status code",
																					"title": "Status Code Value",
																					"type": "integer"
																				},
																				"value": {
																					"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																					"title": "TTL value",
																					"type": "integer"
																				}
																			},
																			"required": [
																				"value"
																			],
																			"title": "Status Code TTL",
																			"type": "object"
																		},
																		"title": "Status Code TTLs",
																		"type": "array"
																	}
																},
																"required": [
																	"mode",
																	"default",
																	"status_code_ttl"
																],
																"title": "Edge TTL",
																"type": "object"
															},
															"origin_cache_control": {
																"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																"title": "Origin Cache Control (Enterprise-only)",
																"type": "boolean"
															},
															"origin_error_page_passthru": {
																"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																"title": "Origin Error Page Passthru",
																"type": "boolean"
															},
															"read_timeout": {
																"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																"example": 900,
																"title": "Read Timeout (Enterprise-only)",
																"type": "integer"
															},
															"respect_strong_etags": {
																"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																"title": "Respect Strong Etags",
																"type": "boolean"
															},
															"serve_stale": {
																"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																"properties": {
																	"disable_stale_while_updating": {
																		"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																		"title": "Disable Stale While Updating",
																		"type": "boolean"
																	}
																},
																"required": [
																	"disable_stale_while_updating"
																],
																"title": "Serve Stale",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Set cache settings when the hostname  address is not example.com"
													}
												},
												"title": "Set Cache Settings rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"log_custom_field"
														]
													},
													"action_parameters": {
														"minProperties": 1,
														"properties": {
															"cookie_fields": {
																"description": "The cookie fields to log.",
																"example": [
																	{
																		"name": "cookie_name_1"
																	}
																],
																"items": {
																	"description": "The cookie field to log.",
																	"properties": {
																		"name": {
																			"description": "The name of the field.",
																			"example": "cookie_name_1",
																			"minLength": 1,
																			"title": "Name",
																			"type": "string"
																		}
																	},
																	"required": [
																		"name"
																	],
																	"title": "Cookie field",
																	"type": "object"
																},
																"minItems": 1,
																"title": "Cookie fields",
																"type": "array"
															},
															"request_fields": {
																"description": "The request fields to log.",
																"example": [
																	{
																		"name": "http_request_header_name_1_in_lower_case"
																	}
																],
																"items": {
																	"description": "The request field to log.",
																	"properties": {
																		"name": {
																			"description": "The name of the field.",
																			"example": "http_request_header_name_1_in_lower_case",
																			"minLength": 1,
																			"title": "Name",
																			"type": "string"
																		}
																	},
																	"required": [
																		"name"
																	],
																	"title": "Request field",
																	"type": "object"
																},
																"minItems": 1,
																"title": "Request fields",
																"type": "array"
															},
															"response_fields": {
																"description": "The response fields to log.",
																"example": [
																	{
																		"name": "http_response_header_name_1_in_lower_case"
																	}
																],
																"items": {
																	"description": "The response field to log.",
																	"properties": {
																		"name": {
																			"description": "The name of the field.",
																			"example": "http_response_header_name_1_in_lower_case",
																			"minLength": 1,
																			"title": "Name",
																			"type": "string"
																		}
																	},
																	"required": [
																		"name"
																	],
																	"title": "Response field",
																	"type": "object"
																},
																"minItems": 1,
																"title": "Response fields",
																"type": "array"
															}
														}
													},
													"description": {
														"example": "Log custom field when the IP address is not 1.1.1.1"
													}
												},
												"title": "Log Custom Field rule"
											}
										]
									}
								]
							},
							{
								"properties": {
									"position": {
										"oneOf": [
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"before": {
																"description": "The ID of another rule to place the rule before. An empty value causes the rule to be placed at the top.",
																"example": "da5e8e506c8e7877fe06cdf4c41add54",
																"pattern": "^(?:[0-9a-f]{32})?$",
																"title": "Before",
																"type": "string"
															}
														},
														"title": "Before position"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"after": {
																"description": "The ID of another rule to place the rule after. An empty value causes the rule to be placed at the bottom.",
																"example": "5bccdbb2a5142cd25cad8591255bd209",
																"pattern": "^(?:[0-9a-f]{32})?$",
																"title": "After",
																"type": "string"
															}
														},
														"title": "After position"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"index": {
																"description": "An index at which to place the rule, where index 1 is the first rule.",
																"example": 1,
																"minimum": 1,
																"title": "Index",
																"type": "number"
															}
														},
														"title": "Index position"
													}
												]
											}
										]
									}
								}
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a zone ruleset rule",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/rulesets": {
		"description": "Creates a ruleset at the zone level.",
		"operationId": "createZoneRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"description": "A ruleset object.",
								"properties": {
									"description": {
										"default": "",
										"description": "An informative description of the ruleset.",
										"example": "My ruleset to execute managed rulesets",
										"title": "Description",
										"type": "string"
									},
									"id": {
										"allOf": [
											{
												"description": "The unique ID of the ruleset.",
												"example": "2f2feab2026849078ba485f918791bdc",
												"pattern": "^[0-9a-f]{32}$",
												"title": "ID",
												"type": "string"
											},
											{
												"readOnly": true
											}
										]
									},
									"kind": {
										"description": "The kind of the ruleset.",
										"enum": [
											"managed",
											"custom",
											"root",
											"zone"
										],
										"example": "root",
										"title": "Kind",
										"type": "string"
									},
									"last_updated": {
										"description": "The timestamp of when the ruleset was last modified.",
										"example": "2000-01-01T00:00:00.000000Z",
										"format": "date-time",
										"readOnly": true,
										"title": "Last updated",
										"type": "string"
									},
									"name": {
										"description": "The human-readable name of the ruleset.",
										"example": "My ruleset",
										"minLength": 1,
										"title": "Name",
										"type": "string"
									},
									"phase": {
										"description": "The phase of the ruleset.",
										"enum": [
											"ddos_l4",
											"ddos_l7",
											"http_config_settings",
											"http_custom_errors",
											"http_log_custom_fields",
											"http_ratelimit",
											"http_request_cache_settings",
											"http_request_dynamic_redirect",
											"http_request_firewall_custom",
											"http_request_firewall_managed",
											"http_request_late_transform",
											"http_request_origin",
											"http_request_redirect",
											"http_request_sanitize",
											"http_request_sbfm",
											"http_request_select_configuration",
											"http_request_transform",
											"http_response_compression",
											"http_response_firewall_managed",
											"http_response_headers_transform",
											"magic_transit",
											"magic_transit_ids_managed",
											"magic_transit_managed"
										],
										"example": "http_request_firewall_custom",
										"title": "Phase",
										"type": "string"
									},
									"version": {
										"description": "The version of the ruleset.",
										"example": "1",
										"pattern": "^[0-9]+$",
										"readOnly": true,
										"title": "Version",
										"type": "string"
									}
								},
								"required": [
									"id",
									"version",
									"last_updated"
								],
								"title": "Ruleset",
								"type": "object"
							},
							{
								"properties": {
									"rules": {
										"description": "The list of rules in the ruleset.",
										"items": {
											"discriminator": {
												"mapping": {
													"block": "#/components/schemas/rulesets_BlockRule",
													"challenge": "#/components/schemas/rulesets_ChallengeRule",
													"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
													"execute": "#/components/schemas/rulesets_ExecuteRule",
													"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
													"log": "#/components/schemas/rulesets_LogRule",
													"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
													"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
													"redirect": "#/components/schemas/rulesets_RedirectRule",
													"rewrite": "#/components/schemas/rulesets_RewriteRule",
													"route": "#/components/schemas/rulesets_RouteRule",
													"score": "#/components/schemas/rulesets_ScoreRule",
													"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
													"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
													"set_config": "#/components/schemas/rulesets_SetConfigRule",
													"skip": "#/components/schemas/rulesets_SkipRule"
												},
												"propertyName": "action"
											},
											"oneOf": [
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"block"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"response": {
																			"description": "The response to show when the block is applied.",
																			"properties": {
																				"content": {
																					"description": "The content to return.",
																					"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																					"minLength": 1,
																					"title": "Content",
																					"type": "string"
																				},
																				"content_type": {
																					"description": "The type of the content to return.",
																					"example": "application/json",
																					"minLength": 1,
																					"title": "Content type",
																					"type": "string"
																				},
																				"status_code": {
																					"description": "The status code to return.",
																					"maximum": 499,
																					"minimum": 400,
																					"title": "Status code",
																					"type": "integer"
																				}
																			},
																			"required": [
																				"status_code",
																				"content",
																				"content_type"
																			],
																			"title": "Response",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Block when the IP address is not 1.1.1.1"
																}
															},
															"title": "Block rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"challenge"
																	]
																},
																"description": {
																	"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"compress_response"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"algorithms": {
																			"description": "Custom order for compression algorithms.",
																			"example": [
																				{
																					"name": "none"
																				}
																			],
																			"items": {
																				"description": "Compression algorithm to enable.",
																				"properties": {
																					"name": {
																						"description": "Name of compression algorithm to enable.",
																						"enum": [
																							"none",
																							"auto",
																							"default",
																							"gzip",
																							"brotli"
																						],
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"title": "Compression Algorithm",
																				"type": "object"
																			},
																			"title": "Algorithm",
																			"type": "array"
																		}
																	}
																},
																"description": {
																	"example": "Disable compression when address is not 1.1.1.1"
																}
															},
															"title": "Compression rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"execute"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"id": {
																			"allOf": [
																				{
																					"description": "The unique ID of the ruleset.",
																					"example": "2f2feab2026849078ba485f918791bdc",
																					"pattern": "^[0-9a-f]{32}$",
																					"title": "ID",
																					"type": "string"
																				},
																				{
																					"description": "The ID of the ruleset to execute.",
																					"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																				}
																			]
																		},
																		"matched_data": {
																			"description": "The configuration to use for matched data logging.",
																			"properties": {
																				"public_key": {
																					"description": "The public key to encrypt matched data logs with.",
																					"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																					"minLength": 1,
																					"title": "Public key",
																					"type": "string"
																				}
																			},
																			"required": [
																				"public_key"
																			],
																			"title": "Matched data",
																			"type": "object"
																		},
																		"overrides": {
																			"description": "A set of overrides to apply to the target ruleset.",
																			"minProperties": 1,
																			"properties": {
																				"action": {
																					"allOf": [
																						{
																							"description": "The action to perform when the rule matches.",
																							"pattern": "^[a-z]+$",
																							"title": "Action",
																							"type": "string"
																						},
																						{
																							"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																							"example": "log"
																						}
																					]
																				},
																				"categories": {
																					"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																					"items": {
																						"description": "A category-level override",
																						"minProperties": 2,
																						"properties": {
																							"action": {
																								"allOf": [
																									{
																										"description": "The action to perform when the rule matches.",
																										"pattern": "^[a-z]+$",
																										"title": "Action",
																										"type": "string"
																									},
																									{
																										"description": "The action to override rules in the category with.",
																										"example": "log"
																									}
																								]
																							},
																							"category": {
																								"allOf": [
																									{
																										"description": "A category of the rule.",
																										"example": "directory-traversal",
																										"minLength": 1,
																										"title": "Category",
																										"type": "string"
																									},
																									{
																										"description": "The name of the category to override."
																									}
																								]
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"description": "Whether to enable execution of rules in the category."
																									}
																								]
																							},
																							"sensitivity_level": {
																								"allOf": [
																									{
																										"enum": [
																											"default",
																											"medium",
																											"low",
																											"eoff"
																										],
																										"title": "Sensitivity level",
																										"type": "string"
																									},
																									{
																										"description": "The sensitivity level to use for rules in the category."
																									}
																								]
																							}
																						},
																						"required": [
																							"category"
																						],
																						"title": "Category override",
																						"type": "object"
																					},
																					"minItems": 1,
																					"title": "Category overrides",
																					"type": "array",
																					"uniqueItems": true
																				},
																				"enabled": {
																					"allOf": [
																						{
																							"description": "Whether the rule should be executed.",
																							"example": true,
																							"title": "Enabled",
																							"type": "boolean"
																						},
																						{
																							"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																						}
																					]
																				},
																				"rules": {
																					"description": "A list of rule-level overrides. This option has the highest precedence.",
																					"items": {
																						"description": "A rule-level override",
																						"minProperties": 2,
																						"properties": {
																							"action": {
																								"allOf": [
																									{
																										"description": "The action to perform when the rule matches.",
																										"pattern": "^[a-z]+$",
																										"title": "Action",
																										"type": "string"
																									},
																									{
																										"description": "The action to override the rule with.",
																										"example": "log"
																									}
																								]
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"description": "Whether to enable execution of the rule."
																									}
																								]
																							},
																							"id": {
																								"allOf": [
																									{
																										"description": "The unique ID of the rule.",
																										"example": "3a03d665bac047339bb530ecb439a90d",
																										"pattern": "^[0-9a-f]{32}$",
																										"title": "ID",
																										"type": "string"
																									},
																									{
																										"description": "The ID of the rule to override.",
																										"example": "8ac8bc2a661e475d940980f9317f28e1"
																									}
																								]
																							},
																							"score_threshold": {
																								"description": "The score threshold to use for the rule.",
																								"title": "Score threshold",
																								"type": "integer"
																							},
																							"sensitivity_level": {
																								"allOf": [
																									{
																										"enum": [
																											"default",
																											"medium",
																											"low",
																											"eoff"
																										],
																										"title": "Sensitivity level",
																										"type": "string"
																									},
																									{
																										"description": "The sensitivity level to use for the rule."
																									}
																								]
																							}
																						},
																						"required": [
																							"id"
																						],
																						"title": "Rule override",
																						"type": "object"
																					},
																					"minItems": 1,
																					"title": "Rule overrides",
																					"type": "array",
																					"uniqueItems": true
																				},
																				"sensitivity_level": {
																					"allOf": [
																						{
																							"enum": [
																								"default",
																								"medium",
																								"low",
																								"eoff"
																							],
																							"title": "Sensitivity level",
																							"type": "string"
																						},
																						{
																							"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																						}
																					]
																				}
																			},
																			"title": "Overrides",
																			"type": "object"
																		}
																	},
																	"required": [
																		"id"
																	]
																},
																"description": {
																	"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																}
															},
															"title": "Execute rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"js_challenge"
																	]
																},
																"description": {
																	"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Javascript Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"log"
																	]
																},
																"description": {
																	"example": "Log when the IP address is not 1.1.1.1"
																}
															},
															"title": "Log rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"managed_challenge"
																	]
																},
																"description": {
																	"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Managed Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"redirect"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"from_list": {
																			"description": "Serve a redirect based on a bulk list lookup.",
																			"properties": {
																				"key": {
																					"description": "Expression that evaluates to the list lookup key.",
																					"example": "http.request.full_uri",
																					"minLength": 1,
																					"title": "Key",
																					"type": "string"
																				},
																				"name": {
																					"description": "The name of the list to match against.",
																					"example": "list1",
																					"maxLength": 50,
																					"pattern": "^[a-zA-Z0-9_]+$",
																					"title": "Name",
																					"type": "string"
																				}
																			},
																			"title": "Bulk Redirect",
																			"type": "object"
																		},
																		"from_value": {
																			"description": "Serve a redirect based on the request properties.",
																			"properties": {
																				"preserve_query_string": {
																					"description": "Keep the query string of the original request.",
																					"title": "Preserve query string",
																					"type": "boolean"
																				},
																				"status_code": {
																					"description": "The status code to be used for the redirect.",
																					"enum": [
																						301,
																						302,
																						303,
																						307,
																						308
																					],
																					"title": "Status Code",
																					"type": "number"
																				},
																				"target_url": {
																					"description": "The URL to redirect the request to.",
																					"example": {
																						"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																					},
																					"oneOf": [
																						{
																							"properties": {
																								"value": {
																									"description": "The URL to redirect the request to.",
																									"minLength": 1,
																									"type": "string"
																								}
																							},
																							"title": "Static URL redirect",
																							"type": "object"
																						},
																						{
																							"properties": {
																								"expression": {
																									"description": "An expression to evaluate to get the URL to redirect the request to.",
																									"minLength": 1,
																									"type": "string"
																								}
																							},
																							"title": "Dynamic URL redirect",
																							"type": "object"
																						}
																					]
																				}
																			},
																			"title": "Single redirect",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Redirect when IP address is not 1.1.1.1"
																}
															},
															"title": "Redirect rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"rewrite"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"headers": {
																			"additionalProperties": {
																				"oneOf": [
																					{
																						"description": "Remove the header from the request.",
																						"properties": {
																							"operation": {
																								"enum": [
																									"remove"
																								],
																								"title": "Operation",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation"
																						],
																						"title": "Remove header",
																						"type": "object"
																					},
																					{
																						"description": "Set a request header with a static value.",
																						"properties": {
																							"operation": {
																								"enum": [
																									"set"
																								],
																								"title": "Operation",
																								"type": "string"
																							},
																							"value": {
																								"description": "Static value for the header.",
																								"example": "static-header-value",
																								"minLength": 1,
																								"title": "Value",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation",
																							"value"
																						],
																						"title": "Static header",
																						"type": "object"
																					},
																					{
																						"description": "Set a request header with a dynamic value.",
																						"properties": {
																							"expression": {
																								"description": "Expression for the header value.",
																								"example": "ip.src",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"operation": {
																								"enum": [
																									"set"
																								],
																								"title": "Operation",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation",
																							"expression"
																						],
																						"title": "Dynamic header",
																						"type": "object"
																					}
																				]
																			},
																			"description": "Map of request headers to modify.",
																			"example": {
																				"client-http-version": {
																					"expression": "http.request.version",
																					"operation": "set"
																				}
																			},
																			"title": "Headers",
																			"type": "object"
																		},
																		"uri": {
																			"description": "URI to rewrite the request to.",
																			"properties": {
																				"path": {
																					"allOf": [
																						{
																							"description": "Path portion rewrite.",
																							"example": {
																								"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																							},
																							"title": "Path"
																						},
																						{
																							"oneOf": [
																								{
																									"properties": {
																										"value": {
																											"description": "Predefined replacement value.",
																											"example": "/images",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"value"
																									],
																									"title": "Static value",
																									"type": "object"
																								},
																								{
																									"properties": {
																										"expression": {
																											"description": "Expression to evaluate for the replacement value.",
																											"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"expression"
																									],
																									"title": "Dynamic value",
																									"type": "object"
																								}
																							]
																						}
																					]
																				},
																				"query": {
																					"allOf": [
																						{
																							"description": "Query portion rewrite.",
																							"example": {
																								"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																							},
																							"title": "Query"
																						},
																						{
																							"oneOf": [
																								{
																									"properties": {
																										"value": {
																											"description": "Predefined replacement value.",
																											"example": "/images",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"value"
																									],
																									"title": "Static value",
																									"type": "object"
																								},
																								{
																									"properties": {
																										"expression": {
																											"description": "Expression to evaluate for the replacement value.",
																											"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"expression"
																									],
																									"title": "Dynamic value",
																									"type": "object"
																								}
																							]
																						}
																					]
																				}
																			},
																			"title": "URI",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Add a header when the IP address is not 1.1.1.1"
																}
															},
															"title": "Rewrite rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"route"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"host_header": {
																			"description": "Rewrite the HTTP Host header.",
																			"example": "static.example.com",
																			"minLength": 1,
																			"title": "Host Header",
																			"type": "string"
																		},
																		"origin": {
																			"description": "Override the IP/TCP destination.",
																			"properties": {
																				"host": {
																					"description": "Override the resolved hostname.",
																					"example": "static.example.com",
																					"minLength": 1,
																					"title": "DNS Record",
																					"type": "string"
																				},
																				"port": {
																					"description": "Override the destination port.",
																					"maximum": 65535,
																					"minimum": 1,
																					"title": "Port",
																					"type": "number"
																				}
																			},
																			"title": "Origin",
																			"type": "object"
																		},
																		"sni": {
																			"description": "Override the Server Name Indication (SNI).",
																			"properties": {
																				"value": {
																					"description": "The SNI override.",
																					"example": "static.example.com",
																					"minLength": 1,
																					"title": "Value",
																					"type": "string"
																				}
																			},
																			"required": [
																				"value"
																			],
																			"title": "SNI",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Select origin server when IP address is not 1.1.1.1"
																}
															},
															"title": "Origin rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"score"
																	]
																},
																"action_parameters": {
																	"example": {
																		"increment": 3
																	},
																	"minProperties": 1,
																	"properties": {
																		"increment": {
																			"description": "Increment contains the delta to change the score and can be either positive or negative.",
																			"example": 3,
																			"title": "Increment",
																			"type": "integer"
																		}
																	}
																},
																"description": {
																	"example": "Increment score when the IP address is not 1.1.1.1"
																}
															},
															"title": "Score rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"serve_error"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"content": {
																			"description": "Error response content.",
																			"example": "{\"error\": \"1xxx error occurred\"}\n",
																			"maxLength": 10240,
																			"minLength": 1,
																			"title": "Content",
																			"type": "string"
																		},
																		"content_type": {
																			"description": "Content-type header to set with the response.",
																			"enum": [
																				"application/json",
																				"text/xml",
																				"text/plain",
																				"text/html"
																			],
																			"example": "application/json",
																			"title": "Content Type",
																			"type": "string"
																		},
																		"status_code": {
																			"description": "The status code to use for the error.",
																			"example": 500,
																			"maximum": 999,
																			"minimum": 400,
																			"title": "Status Code",
																			"type": "number"
																		}
																	}
																},
																"description": {
																	"example": "Serve a JSON response to api users on error"
																}
															},
															"title": "Serve Error rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"set_config"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"automatic_https_rewrites": {
																			"description": "Turn on or off Automatic HTTPS Rewrites.",
																			"title": "Automatic HTTPS rewrites",
																			"type": "boolean"
																		},
																		"autominify": {
																			"description": "Select which file extensions to minify automatically.",
																			"properties": {
																				"css": {
																					"description": "Minify CSS files.",
																					"title": "CSS",
																					"type": "boolean"
																				},
																				"html": {
																					"description": "Minify HTML files.",
																					"title": "HTML",
																					"type": "boolean"
																				},
																				"js": {
																					"description": "Minify JS files.",
																					"title": "JS",
																					"type": "boolean"
																				}
																			},
																			"title": "Auto Minify",
																			"type": "object"
																		},
																		"bic": {
																			"description": "Turn on or off Browser Integrity Check.",
																			"title": "Browser Integrity Check",
																			"type": "boolean"
																		},
																		"disable_apps": {
																			"description": "Turn off all active Cloudflare Apps.",
																			"enum": [
																				true
																			],
																			"title": "Disable Apps",
																			"type": "boolean"
																		},
																		"disable_rum": {
																			"description": "Turn off Real User Monitoring (RUM).",
																			"enum": [
																				true
																			],
																			"title": "Disable RUM",
																			"type": "boolean"
																		},
																		"disable_zaraz": {
																			"description": "Turn off Zaraz.",
																			"enum": [
																				true
																			],
																			"title": "Disable Zaraz",
																			"type": "boolean"
																		},
																		"email_obfuscation": {
																			"description": "Turn on or off Email Obfuscation.",
																			"title": "Email Obfuscation",
																			"type": "boolean"
																		},
																		"fonts": {
																			"description": "Turn on or off Cloudflare Fonts.",
																			"title": "Cloudflare Fonts",
																			"type": "boolean"
																		},
																		"hotlink_protection": {
																			"description": "Turn on or off the Hotlink Protection.",
																			"title": "Hotlink Protection",
																			"type": "boolean"
																		},
																		"mirage": {
																			"description": "Turn on or off Mirage.",
																			"title": "Mirage",
																			"type": "boolean"
																		},
																		"opportunistic_encryption": {
																			"description": "Turn on or off Opportunistic Encryption.",
																			"title": "Opportunistic Encryption",
																			"type": "boolean"
																		},
																		"polish": {
																			"description": "Configure the Polish level.",
																			"enum": [
																				"off",
																				"lossless",
																				"lossy"
																			],
																			"title": "Polish",
																			"type": "string"
																		},
																		"rocket_loader": {
																			"description": "Turn on or off Rocket Loader",
																			"title": "Rocket Loader",
																			"type": "boolean"
																		},
																		"security_level": {
																			"description": "Configure the Security Level.",
																			"enum": [
																				"off",
																				"essentially_off",
																				"low",
																				"medium",
																				"high",
																				"under_attack"
																			],
																			"title": "Security Level",
																			"type": "string"
																		},
																		"server_side_excludes": {
																			"description": "Turn on or off Server Side Excludes.",
																			"title": "Server Side Excludes",
																			"type": "boolean"
																		},
																		"ssl": {
																			"description": "Configure the SSL level.",
																			"enum": [
																				"off",
																				"flexible",
																				"full",
																				"strict",
																				"origin_pull"
																			],
																			"title": "SSL",
																			"type": "string"
																		},
																		"sxg": {
																			"description": "Turn on or off Signed Exchanges (SXG).",
																			"title": "Signed Exchanges (SXG)",
																			"type": "boolean"
																		}
																	}
																},
																"description": {
																	"example": "Disable Zaraz when IP address is not 1.1.1.1"
																}
															},
															"title": "Set Config Rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"skip"
																	]
																},
																"action_parameters": {
																	"example": {
																		"ruleset": "current"
																	},
																	"minProperties": 1,
																	"properties": {
																		"phases": {
																			"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																			"items": {
																				"allOf": [
																					{
																						"description": "The phase of the ruleset.",
																						"enum": [
																							"ddos_l4",
																							"ddos_l7",
																							"http_config_settings",
																							"http_custom_errors",
																							"http_log_custom_fields",
																							"http_ratelimit",
																							"http_request_cache_settings",
																							"http_request_dynamic_redirect",
																							"http_request_firewall_custom",
																							"http_request_firewall_managed",
																							"http_request_late_transform",
																							"http_request_origin",
																							"http_request_redirect",
																							"http_request_sanitize",
																							"http_request_sbfm",
																							"http_request_select_configuration",
																							"http_request_transform",
																							"http_response_compression",
																							"http_response_firewall_managed",
																							"http_response_headers_transform",
																							"magic_transit",
																							"magic_transit_ids_managed",
																							"magic_transit_managed"
																						],
																						"example": "http_request_firewall_custom",
																						"title": "Phase",
																						"type": "string"
																					},
																					{
																						"description": "A phase to skip the execution of."
																					}
																				]
																			},
																			"minItems": 1,
																			"title": "Phases",
																			"type": "array",
																			"uniqueItems": true
																		},
																		"products": {
																			"description": "A list of legacy security products to skip the execution of.",
																			"items": {
																				"description": "The name of a legacy security product to skip the execution of.",
																				"enum": [
																					"bic",
																					"hot",
																					"rateLimit",
																					"securityLevel",
																					"uaBlock",
																					"waf",
																					"zoneLockdown"
																				],
																				"title": "Product",
																				"type": "string"
																			},
																			"minItems": 1,
																			"title": "Products",
																			"type": "array",
																			"uniqueItems": true
																		},
																		"rules": {
																			"additionalProperties": {
																				"description": "A list of rule IDs in the ruleset to skip the execution of.",
																				"items": {
																					"allOf": [
																						{
																							"description": "The unique ID of the rule.",
																							"example": "3a03d665bac047339bb530ecb439a90d",
																							"pattern": "^[0-9a-f]{32}$",
																							"title": "ID",
																							"type": "string"
																						},
																						{
																							"description": "The ID of a rule in the ruleset to skip the execution of.",
																							"example": "8ac8bc2a661e475d940980f9317f28e1",
																							"title": "Rule"
																						}
																					]
																				},
																				"minItems": 1,
																				"title": "Rules",
																				"type": "array",
																				"uniqueItems": true
																			},
																			"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																			"example": {
																				"4814384a9e5d4991b9815dcfc25d2f1f": [
																					"8ac8bc2a661e475d940980f9317f28e1"
																				]
																			},
																			"minProperties": 1,
																			"title": "Rules",
																			"type": "object"
																		},
																		"ruleset": {
																			"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																			"enum": [
																				"current"
																			],
																			"title": "Ruleset",
																			"type": "string"
																		},
																		"rulesets": {
																			"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																			"items": {
																				"allOf": [
																					{
																						"description": "The unique ID of the ruleset.",
																						"example": "2f2feab2026849078ba485f918791bdc",
																						"pattern": "^[0-9a-f]{32}$",
																						"title": "ID",
																						"type": "string"
																					},
																					{
																						"description": "The ID of a ruleset to skip the execution of.",
																						"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																						"title": "Ruleset"
																					}
																				]
																			},
																			"minItems": 1,
																			"title": "Rulesets",
																			"type": "array",
																			"uniqueItems": true
																		}
																	}
																},
																"description": {
																	"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																}
															},
															"title": "Skip rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"set_cache_settings"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"additional_cacheable_ports": {
																			"description": "List of additional ports that caching can be enabled on.",
																			"items": {
																				"description": "A port to enable caching on",
																				"title": "Additional Cacheable Port",
																				"type": "integer"
																			},
																			"title": "Additional Cacheable Ports (Enterprise-only)",
																			"type": "array"
																		},
																		"browser_ttl": {
																			"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																			"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																			"properties": {
																				"default": {
																					"description": "The TTL (in seconds) if you choose override_origin mode.",
																					"title": "Default TTL",
																					"type": "integer"
																				},
																				"mode": {
																					"description": "Determines which browser ttl mode to use.",
																					"enum": [
																						"respect_origin",
																						"bypass_by_default",
																						"override_origin"
																					],
																					"title": "Mode",
																					"type": "string"
																				}
																			},
																			"required": [
																				"mode"
																			],
																			"title": "Browser TTL",
																			"type": "object"
																		},
																		"cache": {
																			"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																			"title": "Cache",
																			"type": "boolean"
																		},
																		"cache_key": {
																			"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																			"properties": {
																				"cache_by_device_type": {
																					"description": "Separate cached content based on the visitor’s device type",
																					"title": "Cache by Device Type",
																					"type": "boolean"
																				},
																				"cache_deception_armor": {
																					"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																					"title": "Cache Deception Armor",
																					"type": "boolean"
																				},
																				"custom_key": {
																					"description": "Customize which components of the request are included or excluded from the cache key.",
																					"properties": {
																						"cookie": {
																							"description": "The cookies to include in building the cache key.",
																							"properties": {
																								"check_presence": {
																									"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																									"items": {
																										"description": "A cookie name to check presence of.",
																										"title": "Cookie name",
																										"type": "string"
																									},
																									"title": "Check presence of cookies",
																									"type": "array"
																								},
																								"include": {
																									"description": "Include these cookies' names and their values.",
																									"items": {
																										"description": "Cookie name and corresponding value to include.",
																										"title": "Cookie name",
																										"type": "string"
																									},
																									"title": "Include cookies",
																									"type": "array"
																								}
																							},
																							"title": "Cookie",
																							"type": "object"
																						},
																						"header": {
																							"description": "The header names and values to include in building the cache key.",
																							"properties": {
																								"check_presence": {
																									"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																									"items": {
																										"description": "A header name to check presence of.",
																										"title": "Header name",
																										"type": "string"
																									},
																									"title": "Check presence of headers",
																									"type": "array"
																								},
																								"exclude_origin": {
																									"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																									"title": "Exclude origin header",
																									"type": "boolean"
																								},
																								"include": {
																									"description": "Include these headers' names and their values.",
																									"items": {
																										"description": "Header name and corresponding value to include.",
																										"title": "Header name",
																										"type": "string"
																									},
																									"title": "Include headers",
																									"type": "array"
																								}
																							},
																							"title": "Headers",
																							"type": "object"
																						},
																						"host": {
																							"description": "Whether to use the original host or the resolved host in the cache key.",
																							"properties": {
																								"resolved": {
																									"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																									"example": true,
																									"title": "Use Resolved host",
																									"type": "boolean"
																								}
																							},
																							"title": "Host",
																							"type": "object"
																						},
																						"query_string": {
																							"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																							"properties": {
																								"exclude": {
																									"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																									"properties": {
																										"all": {
																											"description": "Exclude all query string parameters from use in building the cache key.",
																											"title": "All",
																											"type": "boolean"
																										},
																										"list": {
																											"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																											"items": {
																												"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																												"title": "parameter",
																												"type": "string"
																											},
																											"title": "List",
																											"type": "array"
																										}
																									},
																									"title": "Excluded query string parameters",
																									"type": "object"
																								},
																								"include": {
																									"description": "build the cache key using a list of query string parameters that ARE in the request.",
																									"properties": {
																										"all": {
																											"description": "Use all query string parameters in the cache key.",
																											"title": "All",
																											"type": "boolean"
																										},
																										"list": {
																											"description": "A list of query string parameters used to build the cache key.",
																											"items": {
																												"description": "parameter to include in the list of query string parameters used to build a cache key.",
																												"title": "parameter",
																												"type": "string"
																											},
																											"title": "List",
																											"type": "array"
																										}
																									},
																									"title": "Included query string parameters",
																									"type": "object"
																								}
																							},
																							"title": "Query String",
																							"type": "object"
																						},
																						"user": {
																							"description": "Characteristics of the request user agent used in building the cache key.",
																							"properties": {
																								"device_type": {
																									"description": "Use the user agent's device type in the cache key.",
																									"title": "Device Type",
																									"type": "boolean"
																								},
																								"geo": {
																									"description": "Use the user agents's country in the cache key.",
																									"title": "Country",
																									"type": "boolean"
																								},
																								"lang": {
																									"description": "Use the user agent's language in the cache key.",
																									"title": "Language",
																									"type": "boolean"
																								}
																							},
																							"title": "User",
																							"type": "object"
																						}
																					},
																					"title": "Custom Key",
																					"type": "object"
																				},
																				"ignore_query_strings_order": {
																					"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																					"title": "Ignore Query Strings Order",
																					"type": "boolean"
																				}
																			},
																			"title": "Cache Key",
																			"type": "object"
																		},
																		"cache_reserve": {
																			"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																			"properties": {
																				"eligible": {
																					"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																					"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																					"title": "Eligible",
																					"type": "boolean"
																				},
																				"min_file_size": {
																					"description": "The minimum file size eligible for store in cache reserve.",
																					"title": "Minimum File Size",
																					"type": "integer"
																				}
																			},
																			"required": [
																				"eligible",
																				"min_file_size"
																			],
																			"title": "CacheReserve",
																			"type": "object"
																		},
																		"edge_ttl": {
																			"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																			"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																			"properties": {
																				"default": {
																					"description": "The TTL (in seconds) if you choose override_origin mode.",
																					"maximum": 9223372036854776000,
																					"minimum": 0,
																					"title": "Default",
																					"type": "integer"
																				},
																				"mode": {
																					"description": "edge ttl options",
																					"enum": [
																						"respect_origin",
																						"bypass_by_default",
																						"override_origin"
																					],
																					"title": "Mode",
																					"type": "string"
																				},
																				"status_code_ttl": {
																					"description": "List of single status codes, or status code ranges to apply the selected mode",
																					"items": {
																						"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																						"properties": {
																							"status_code_range": {
																								"description": "The range of status codes used to apply the selected mode.",
																								"properties": {
																									"from": {
																										"description": "response status code lower bound",
																										"title": "Status Code lower bound",
																										"type": "integer"
																									},
																									"to": {
																										"description": "response status code upper bound",
																										"title": "Status Code upper bound",
																										"type": "integer"
																									}
																								},
																								"required": [
																									"from",
																									"to"
																								],
																								"title": "Status Code Range",
																								"type": "object"
																							},
																							"status_code_value": {
																								"description": "Set the ttl for responses with this specific status code",
																								"title": "Status Code Value",
																								"type": "integer"
																							},
																							"value": {
																								"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																								"title": "TTL value",
																								"type": "integer"
																							}
																						},
																						"required": [
																							"value"
																						],
																						"title": "Status Code TTL",
																						"type": "object"
																					},
																					"title": "Status Code TTLs",
																					"type": "array"
																				}
																			},
																			"required": [
																				"mode",
																				"default",
																				"status_code_ttl"
																			],
																			"title": "Edge TTL",
																			"type": "object"
																		},
																		"origin_cache_control": {
																			"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																			"title": "Origin Cache Control (Enterprise-only)",
																			"type": "boolean"
																		},
																		"origin_error_page_passthru": {
																			"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																			"title": "Origin Error Page Passthru",
																			"type": "boolean"
																		},
																		"read_timeout": {
																			"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																			"example": 900,
																			"title": "Read Timeout (Enterprise-only)",
																			"type": "integer"
																		},
																		"respect_strong_etags": {
																			"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																			"title": "Respect Strong Etags",
																			"type": "boolean"
																		},
																		"serve_stale": {
																			"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																			"properties": {
																				"disable_stale_while_updating": {
																					"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																					"title": "Disable Stale While Updating",
																					"type": "boolean"
																				}
																			},
																			"required": [
																				"disable_stale_while_updating"
																			],
																			"title": "Serve Stale",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Set cache settings when the hostname  address is not example.com"
																}
															},
															"title": "Set Cache Settings rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"log_custom_field"
																	]
																},
																"action_parameters": {
																	"minProperties": 1,
																	"properties": {
																		"cookie_fields": {
																			"description": "The cookie fields to log.",
																			"example": [
																				{
																					"name": "cookie_name_1"
																				}
																			],
																			"items": {
																				"description": "The cookie field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "cookie_name_1",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Cookie field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Cookie fields",
																			"type": "array"
																		},
																		"request_fields": {
																			"description": "The request fields to log.",
																			"example": [
																				{
																					"name": "http_request_header_name_1_in_lower_case"
																				}
																			],
																			"items": {
																				"description": "The request field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "http_request_header_name_1_in_lower_case",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Request field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Request fields",
																			"type": "array"
																		},
																		"response_fields": {
																			"description": "The response fields to log.",
																			"example": [
																				{
																					"name": "http_response_header_name_1_in_lower_case"
																				}
																			],
																			"items": {
																				"description": "The response field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "http_response_header_name_1_in_lower_case",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Response field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Response fields",
																			"type": "array"
																		}
																	}
																},
																"description": {
																	"example": "Log custom field when the IP address is not 1.1.1.1"
																}
															},
															"title": "Log Custom Field rule"
														}
													]
												}
											]
										},
										"title": "Rules",
										"type": "array"
									}
								},
								"required": [
									"name",
									"kind",
									"phase",
									"rules"
								]
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a zone ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/rulesets/{ruleset_id}/rules": {
		"description": "Adds a new rule to a zone ruleset. The rule will be added to the end of the existing list of rules in the ruleset by default.",
		"operationId": "createZoneRulesetRule",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"discriminator": {
									"mapping": {
										"block": "#/components/schemas/rulesets_BlockRule",
										"challenge": "#/components/schemas/rulesets_ChallengeRule",
										"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
										"execute": "#/components/schemas/rulesets_ExecuteRule",
										"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
										"log": "#/components/schemas/rulesets_LogRule",
										"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
										"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
										"redirect": "#/components/schemas/rulesets_RedirectRule",
										"rewrite": "#/components/schemas/rulesets_RewriteRule",
										"route": "#/components/schemas/rulesets_RouteRule",
										"score": "#/components/schemas/rulesets_ScoreRule",
										"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
										"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
										"set_config": "#/components/schemas/rulesets_SetConfigRule",
										"skip": "#/components/schemas/rulesets_SkipRule"
									},
									"propertyName": "action"
								},
								"oneOf": [
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"block"
														]
													},
													"action_parameters": {
														"properties": {
															"response": {
																"description": "The response to show when the block is applied.",
																"properties": {
																	"content": {
																		"description": "The content to return.",
																		"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																		"minLength": 1,
																		"title": "Content",
																		"type": "string"
																	},
																	"content_type": {
																		"description": "The type of the content to return.",
																		"example": "application/json",
																		"minLength": 1,
																		"title": "Content type",
																		"type": "string"
																	},
																	"status_code": {
																		"description": "The status code to return.",
																		"maximum": 499,
																		"minimum": 400,
																		"title": "Status code",
																		"type": "integer"
																	}
																},
																"required": [
																	"status_code",
																	"content",
																	"content_type"
																],
																"title": "Response",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Block when the IP address is not 1.1.1.1"
													}
												},
												"title": "Block rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"challenge"
														]
													},
													"description": {
														"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
													}
												},
												"title": "Challenge rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"compress_response"
														]
													},
													"action_parameters": {
														"properties": {
															"algorithms": {
																"description": "Custom order for compression algorithms.",
																"example": [
																	{
																		"name": "none"
																	}
																],
																"items": {
																	"description": "Compression algorithm to enable.",
																	"properties": {
																		"name": {
																			"description": "Name of compression algorithm to enable.",
																			"enum": [
																				"none",
																				"auto",
																				"default",
																				"gzip",
																				"brotli"
																			],
																			"title": "Name",
																			"type": "string"
																		}
																	},
																	"title": "Compression Algorithm",
																	"type": "object"
																},
																"title": "Algorithm",
																"type": "array"
															}
														}
													},
													"description": {
														"example": "Disable compression when address is not 1.1.1.1"
													}
												},
												"title": "Compression rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"execute"
														]
													},
													"action_parameters": {
														"properties": {
															"id": {
																"allOf": [
																	{
																		"description": "The unique ID of the ruleset.",
																		"example": "2f2feab2026849078ba485f918791bdc",
																		"pattern": "^[0-9a-f]{32}$",
																		"title": "ID",
																		"type": "string"
																	},
																	{
																		"description": "The ID of the ruleset to execute.",
																		"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																	}
																]
															},
															"matched_data": {
																"description": "The configuration to use for matched data logging.",
																"properties": {
																	"public_key": {
																		"description": "The public key to encrypt matched data logs with.",
																		"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																		"minLength": 1,
																		"title": "Public key",
																		"type": "string"
																	}
																},
																"required": [
																	"public_key"
																],
																"title": "Matched data",
																"type": "object"
															},
															"overrides": {
																"description": "A set of overrides to apply to the target ruleset.",
																"minProperties": 1,
																"properties": {
																	"action": {
																		"allOf": [
																			{
																				"description": "The action to perform when the rule matches.",
																				"pattern": "^[a-z]+$",
																				"title": "Action",
																				"type": "string"
																			},
																			{
																				"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																				"example": "log"
																			}
																		]
																	},
																	"categories": {
																		"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																		"items": {
																			"description": "A category-level override",
																			"minProperties": 2,
																			"properties": {
																				"action": {
																					"allOf": [
																						{
																							"description": "The action to perform when the rule matches.",
																							"pattern": "^[a-z]+$",
																							"title": "Action",
																							"type": "string"
																						},
																						{
																							"description": "The action to override rules in the category with.",
																							"example": "log"
																						}
																					]
																				},
																				"category": {
																					"allOf": [
																						{
																							"description": "A category of the rule.",
																							"example": "directory-traversal",
																							"minLength": 1,
																							"title": "Category",
																							"type": "string"
																						},
																						{
																							"description": "The name of the category to override."
																						}
																					]
																				},
																				"enabled": {
																					"allOf": [
																						{
																							"description": "Whether the rule should be executed.",
																							"example": true,
																							"title": "Enabled",
																							"type": "boolean"
																						},
																						{
																							"description": "Whether to enable execution of rules in the category."
																						}
																					]
																				},
																				"sensitivity_level": {
																					"allOf": [
																						{
																							"enum": [
																								"default",
																								"medium",
																								"low",
																								"eoff"
																							],
																							"title": "Sensitivity level",
																							"type": "string"
																						},
																						{
																							"description": "The sensitivity level to use for rules in the category."
																						}
																					]
																				}
																			},
																			"required": [
																				"category"
																			],
																			"title": "Category override",
																			"type": "object"
																		},
																		"minItems": 1,
																		"title": "Category overrides",
																		"type": "array",
																		"uniqueItems": true
																	},
																	"enabled": {
																		"allOf": [
																			{
																				"description": "Whether the rule should be executed.",
																				"example": true,
																				"title": "Enabled",
																				"type": "boolean"
																			},
																			{
																				"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																			}
																		]
																	},
																	"rules": {
																		"description": "A list of rule-level overrides. This option has the highest precedence.",
																		"items": {
																			"description": "A rule-level override",
																			"minProperties": 2,
																			"properties": {
																				"action": {
																					"allOf": [
																						{
																							"description": "The action to perform when the rule matches.",
																							"pattern": "^[a-z]+$",
																							"title": "Action",
																							"type": "string"
																						},
																						{
																							"description": "The action to override the rule with.",
																							"example": "log"
																						}
																					]
																				},
																				"enabled": {
																					"allOf": [
																						{
																							"description": "Whether the rule should be executed.",
																							"example": true,
																							"title": "Enabled",
																							"type": "boolean"
																						},
																						{
																							"description": "Whether to enable execution of the rule."
																						}
																					]
																				},
																				"id": {
																					"allOf": [
																						{
																							"description": "The unique ID of the rule.",
																							"example": "3a03d665bac047339bb530ecb439a90d",
																							"pattern": "^[0-9a-f]{32}$",
																							"title": "ID",
																							"type": "string"
																						},
																						{
																							"description": "The ID of the rule to override.",
																							"example": "8ac8bc2a661e475d940980f9317f28e1"
																						}
																					]
																				},
																				"score_threshold": {
																					"description": "The score threshold to use for the rule.",
																					"title": "Score threshold",
																					"type": "integer"
																				},
																				"sensitivity_level": {
																					"allOf": [
																						{
																							"enum": [
																								"default",
																								"medium",
																								"low",
																								"eoff"
																							],
																							"title": "Sensitivity level",
																							"type": "string"
																						},
																						{
																							"description": "The sensitivity level to use for the rule."
																						}
																					]
																				}
																			},
																			"required": [
																				"id"
																			],
																			"title": "Rule override",
																			"type": "object"
																		},
																		"minItems": 1,
																		"title": "Rule overrides",
																		"type": "array",
																		"uniqueItems": true
																	},
																	"sensitivity_level": {
																		"allOf": [
																			{
																				"enum": [
																					"default",
																					"medium",
																					"low",
																					"eoff"
																				],
																				"title": "Sensitivity level",
																				"type": "string"
																			},
																			{
																				"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																			}
																		]
																	}
																},
																"title": "Overrides",
																"type": "object"
															}
														},
														"required": [
															"id"
														]
													},
													"description": {
														"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
													}
												},
												"title": "Execute rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"js_challenge"
														]
													},
													"description": {
														"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
													}
												},
												"title": "Javascript Challenge rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"log"
														]
													},
													"description": {
														"example": "Log when the IP address is not 1.1.1.1"
													}
												},
												"title": "Log rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"managed_challenge"
														]
													},
													"description": {
														"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
													}
												},
												"title": "Managed Challenge rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"redirect"
														]
													},
													"action_parameters": {
														"properties": {
															"from_list": {
																"description": "Serve a redirect based on a bulk list lookup.",
																"properties": {
																	"key": {
																		"description": "Expression that evaluates to the list lookup key.",
																		"example": "http.request.full_uri",
																		"minLength": 1,
																		"title": "Key",
																		"type": "string"
																	},
																	"name": {
																		"description": "The name of the list to match against.",
																		"example": "list1",
																		"maxLength": 50,
																		"pattern": "^[a-zA-Z0-9_]+$",
																		"title": "Name",
																		"type": "string"
																	}
																},
																"title": "Bulk Redirect",
																"type": "object"
															},
															"from_value": {
																"description": "Serve a redirect based on the request properties.",
																"properties": {
																	"preserve_query_string": {
																		"description": "Keep the query string of the original request.",
																		"title": "Preserve query string",
																		"type": "boolean"
																	},
																	"status_code": {
																		"description": "The status code to be used for the redirect.",
																		"enum": [
																			301,
																			302,
																			303,
																			307,
																			308
																		],
																		"title": "Status Code",
																		"type": "number"
																	},
																	"target_url": {
																		"description": "The URL to redirect the request to.",
																		"example": {
																			"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																		},
																		"oneOf": [
																			{
																				"properties": {
																					"value": {
																						"description": "The URL to redirect the request to.",
																						"minLength": 1,
																						"type": "string"
																					}
																				},
																				"title": "Static URL redirect",
																				"type": "object"
																			},
																			{
																				"properties": {
																					"expression": {
																						"description": "An expression to evaluate to get the URL to redirect the request to.",
																						"minLength": 1,
																						"type": "string"
																					}
																				},
																				"title": "Dynamic URL redirect",
																				"type": "object"
																			}
																		]
																	}
																},
																"title": "Single redirect",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Redirect when IP address is not 1.1.1.1"
													}
												},
												"title": "Redirect rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"rewrite"
														]
													},
													"action_parameters": {
														"properties": {
															"headers": {
																"additionalProperties": {
																	"oneOf": [
																		{
																			"description": "Remove the header from the request.",
																			"properties": {
																				"operation": {
																					"enum": [
																						"remove"
																					],
																					"title": "Operation",
																					"type": "string"
																				}
																			},
																			"required": [
																				"operation"
																			],
																			"title": "Remove header",
																			"type": "object"
																		},
																		{
																			"description": "Set a request header with a static value.",
																			"properties": {
																				"operation": {
																					"enum": [
																						"set"
																					],
																					"title": "Operation",
																					"type": "string"
																				},
																				"value": {
																					"description": "Static value for the header.",
																					"example": "static-header-value",
																					"minLength": 1,
																					"title": "Value",
																					"type": "string"
																				}
																			},
																			"required": [
																				"operation",
																				"value"
																			],
																			"title": "Static header",
																			"type": "object"
																		},
																		{
																			"description": "Set a request header with a dynamic value.",
																			"properties": {
																				"expression": {
																					"description": "Expression for the header value.",
																					"example": "ip.src",
																					"minLength": 1,
																					"title": "Expression",
																					"type": "string"
																				},
																				"operation": {
																					"enum": [
																						"set"
																					],
																					"title": "Operation",
																					"type": "string"
																				}
																			},
																			"required": [
																				"operation",
																				"expression"
																			],
																			"title": "Dynamic header",
																			"type": "object"
																		}
																	]
																},
																"description": "Map of request headers to modify.",
																"example": {
																	"client-http-version": {
																		"expression": "http.request.version",
																		"operation": "set"
																	}
																},
																"title": "Headers",
																"type": "object"
															},
															"uri": {
																"description": "URI to rewrite the request to.",
																"properties": {
																	"path": {
																		"allOf": [
																			{
																				"description": "Path portion rewrite.",
																				"example": {
																					"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																				},
																				"title": "Path"
																			},
																			{
																				"oneOf": [
																					{
																						"properties": {
																							"value": {
																								"description": "Predefined replacement value.",
																								"example": "/images",
																								"minLength": 1,
																								"type": "string"
																							}
																						},
																						"required": [
																							"value"
																						],
																						"title": "Static value",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"expression": {
																								"description": "Expression to evaluate for the replacement value.",
																								"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																								"minLength": 1,
																								"type": "string"
																							}
																						},
																						"required": [
																							"expression"
																						],
																						"title": "Dynamic value",
																						"type": "object"
																					}
																				]
																			}
																		]
																	},
																	"query": {
																		"allOf": [
																			{
																				"description": "Query portion rewrite.",
																				"example": {
																					"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																				},
																				"title": "Query"
																			},
																			{
																				"oneOf": [
																					{
																						"properties": {
																							"value": {
																								"description": "Predefined replacement value.",
																								"example": "/images",
																								"minLength": 1,
																								"type": "string"
																							}
																						},
																						"required": [
																							"value"
																						],
																						"title": "Static value",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"expression": {
																								"description": "Expression to evaluate for the replacement value.",
																								"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																								"minLength": 1,
																								"type": "string"
																							}
																						},
																						"required": [
																							"expression"
																						],
																						"title": "Dynamic value",
																						"type": "object"
																					}
																				]
																			}
																		]
																	}
																},
																"title": "URI",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Add a header when the IP address is not 1.1.1.1"
													}
												},
												"title": "Rewrite rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"route"
														]
													},
													"action_parameters": {
														"properties": {
															"host_header": {
																"description": "Rewrite the HTTP Host header.",
																"example": "static.example.com",
																"minLength": 1,
																"title": "Host Header",
																"type": "string"
															},
															"origin": {
																"description": "Override the IP/TCP destination.",
																"properties": {
																	"host": {
																		"description": "Override the resolved hostname.",
																		"example": "static.example.com",
																		"minLength": 1,
																		"title": "DNS Record",
																		"type": "string"
																	},
																	"port": {
																		"description": "Override the destination port.",
																		"maximum": 65535,
																		"minimum": 1,
																		"title": "Port",
																		"type": "number"
																	}
																},
																"title": "Origin",
																"type": "object"
															},
															"sni": {
																"description": "Override the Server Name Indication (SNI).",
																"properties": {
																	"value": {
																		"description": "The SNI override.",
																		"example": "static.example.com",
																		"minLength": 1,
																		"title": "Value",
																		"type": "string"
																	}
																},
																"required": [
																	"value"
																],
																"title": "SNI",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Select origin server when IP address is not 1.1.1.1"
													}
												},
												"title": "Origin rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"score"
														]
													},
													"action_parameters": {
														"example": {
															"increment": 3
														},
														"minProperties": 1,
														"properties": {
															"increment": {
																"description": "Increment contains the delta to change the score and can be either positive or negative.",
																"example": 3,
																"title": "Increment",
																"type": "integer"
															}
														}
													},
													"description": {
														"example": "Increment score when the IP address is not 1.1.1.1"
													}
												},
												"title": "Score rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"serve_error"
														]
													},
													"action_parameters": {
														"properties": {
															"content": {
																"description": "Error response content.",
																"example": "{\"error\": \"1xxx error occurred\"}\n",
																"maxLength": 10240,
																"minLength": 1,
																"title": "Content",
																"type": "string"
															},
															"content_type": {
																"description": "Content-type header to set with the response.",
																"enum": [
																	"application/json",
																	"text/xml",
																	"text/plain",
																	"text/html"
																],
																"example": "application/json",
																"title": "Content Type",
																"type": "string"
															},
															"status_code": {
																"description": "The status code to use for the error.",
																"example": 500,
																"maximum": 999,
																"minimum": 400,
																"title": "Status Code",
																"type": "number"
															}
														}
													},
													"description": {
														"example": "Serve a JSON response to api users on error"
													}
												},
												"title": "Serve Error rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"set_config"
														]
													},
													"action_parameters": {
														"properties": {
															"automatic_https_rewrites": {
																"description": "Turn on or off Automatic HTTPS Rewrites.",
																"title": "Automatic HTTPS rewrites",
																"type": "boolean"
															},
															"autominify": {
																"description": "Select which file extensions to minify automatically.",
																"properties": {
																	"css": {
																		"description": "Minify CSS files.",
																		"title": "CSS",
																		"type": "boolean"
																	},
																	"html": {
																		"description": "Minify HTML files.",
																		"title": "HTML",
																		"type": "boolean"
																	},
																	"js": {
																		"description": "Minify JS files.",
																		"title": "JS",
																		"type": "boolean"
																	}
																},
																"title": "Auto Minify",
																"type": "object"
															},
															"bic": {
																"description": "Turn on or off Browser Integrity Check.",
																"title": "Browser Integrity Check",
																"type": "boolean"
															},
															"disable_apps": {
																"description": "Turn off all active Cloudflare Apps.",
																"enum": [
																	true
																],
																"title": "Disable Apps",
																"type": "boolean"
															},
															"disable_rum": {
																"description": "Turn off Real User Monitoring (RUM).",
																"enum": [
																	true
																],
																"title": "Disable RUM",
																"type": "boolean"
															},
															"disable_zaraz": {
																"description": "Turn off Zaraz.",
																"enum": [
																	true
																],
																"title": "Disable Zaraz",
																"type": "boolean"
															},
															"email_obfuscation": {
																"description": "Turn on or off Email Obfuscation.",
																"title": "Email Obfuscation",
																"type": "boolean"
															},
															"fonts": {
																"description": "Turn on or off Cloudflare Fonts.",
																"title": "Cloudflare Fonts",
																"type": "boolean"
															},
															"hotlink_protection": {
																"description": "Turn on or off the Hotlink Protection.",
																"title": "Hotlink Protection",
																"type": "boolean"
															},
															"mirage": {
																"description": "Turn on or off Mirage.",
																"title": "Mirage",
																"type": "boolean"
															},
															"opportunistic_encryption": {
																"description": "Turn on or off Opportunistic Encryption.",
																"title": "Opportunistic Encryption",
																"type": "boolean"
															},
															"polish": {
																"description": "Configure the Polish level.",
																"enum": [
																	"off",
																	"lossless",
																	"lossy"
																],
																"title": "Polish",
																"type": "string"
															},
															"rocket_loader": {
																"description": "Turn on or off Rocket Loader",
																"title": "Rocket Loader",
																"type": "boolean"
															},
															"security_level": {
																"description": "Configure the Security Level.",
																"enum": [
																	"off",
																	"essentially_off",
																	"low",
																	"medium",
																	"high",
																	"under_attack"
																],
																"title": "Security Level",
																"type": "string"
															},
															"server_side_excludes": {
																"description": "Turn on or off Server Side Excludes.",
																"title": "Server Side Excludes",
																"type": "boolean"
															},
															"ssl": {
																"description": "Configure the SSL level.",
																"enum": [
																	"off",
																	"flexible",
																	"full",
																	"strict",
																	"origin_pull"
																],
																"title": "SSL",
																"type": "string"
															},
															"sxg": {
																"description": "Turn on or off Signed Exchanges (SXG).",
																"title": "Signed Exchanges (SXG)",
																"type": "boolean"
															}
														}
													},
													"description": {
														"example": "Disable Zaraz when IP address is not 1.1.1.1"
													}
												},
												"title": "Set Config Rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"skip"
														]
													},
													"action_parameters": {
														"example": {
															"ruleset": "current"
														},
														"minProperties": 1,
														"properties": {
															"phases": {
																"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																"items": {
																	"allOf": [
																		{
																			"description": "The phase of the ruleset.",
																			"enum": [
																				"ddos_l4",
																				"ddos_l7",
																				"http_config_settings",
																				"http_custom_errors",
																				"http_log_custom_fields",
																				"http_ratelimit",
																				"http_request_cache_settings",
																				"http_request_dynamic_redirect",
																				"http_request_firewall_custom",
																				"http_request_firewall_managed",
																				"http_request_late_transform",
																				"http_request_origin",
																				"http_request_redirect",
																				"http_request_sanitize",
																				"http_request_sbfm",
																				"http_request_select_configuration",
																				"http_request_transform",
																				"http_response_compression",
																				"http_response_firewall_managed",
																				"http_response_headers_transform",
																				"magic_transit",
																				"magic_transit_ids_managed",
																				"magic_transit_managed"
																			],
																			"example": "http_request_firewall_custom",
																			"title": "Phase",
																			"type": "string"
																		},
																		{
																			"description": "A phase to skip the execution of."
																		}
																	]
																},
																"minItems": 1,
																"title": "Phases",
																"type": "array",
																"uniqueItems": true
															},
															"products": {
																"description": "A list of legacy security products to skip the execution of.",
																"items": {
																	"description": "The name of a legacy security product to skip the execution of.",
																	"enum": [
																		"bic",
																		"hot",
																		"rateLimit",
																		"securityLevel",
																		"uaBlock",
																		"waf",
																		"zoneLockdown"
																	],
																	"title": "Product",
																	"type": "string"
																},
																"minItems": 1,
																"title": "Products",
																"type": "array",
																"uniqueItems": true
															},
															"rules": {
																"additionalProperties": {
																	"description": "A list of rule IDs in the ruleset to skip the execution of.",
																	"items": {
																		"allOf": [
																			{
																				"description": "The unique ID of the rule.",
																				"example": "3a03d665bac047339bb530ecb439a90d",
																				"pattern": "^[0-9a-f]{32}$",
																				"title": "ID",
																				"type": "string"
																			},
																			{
																				"description": "The ID of a rule in the ruleset to skip the execution of.",
																				"example": "8ac8bc2a661e475d940980f9317f28e1",
																				"title": "Rule"
																			}
																		]
																	},
																	"minItems": 1,
																	"title": "Rules",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																"example": {
																	"4814384a9e5d4991b9815dcfc25d2f1f": [
																		"8ac8bc2a661e475d940980f9317f28e1"
																	]
																},
																"minProperties": 1,
																"title": "Rules",
																"type": "object"
															},
															"ruleset": {
																"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																"enum": [
																	"current"
																],
																"title": "Ruleset",
																"type": "string"
															},
															"rulesets": {
																"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																"items": {
																	"allOf": [
																		{
																			"description": "The unique ID of the ruleset.",
																			"example": "2f2feab2026849078ba485f918791bdc",
																			"pattern": "^[0-9a-f]{32}$",
																			"title": "ID",
																			"type": "string"
																		},
																		{
																			"description": "The ID of a ruleset to skip the execution of.",
																			"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																			"title": "Ruleset"
																		}
																	]
																},
																"minItems": 1,
																"title": "Rulesets",
																"type": "array",
																"uniqueItems": true
															}
														}
													},
													"description": {
														"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
													}
												},
												"title": "Skip rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"set_cache_settings"
														]
													},
													"action_parameters": {
														"properties": {
															"additional_cacheable_ports": {
																"description": "List of additional ports that caching can be enabled on.",
																"items": {
																	"description": "A port to enable caching on",
																	"title": "Additional Cacheable Port",
																	"type": "integer"
																},
																"title": "Additional Cacheable Ports (Enterprise-only)",
																"type": "array"
															},
															"browser_ttl": {
																"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																"properties": {
																	"default": {
																		"description": "The TTL (in seconds) if you choose override_origin mode.",
																		"title": "Default TTL",
																		"type": "integer"
																	},
																	"mode": {
																		"description": "Determines which browser ttl mode to use.",
																		"enum": [
																			"respect_origin",
																			"bypass_by_default",
																			"override_origin"
																		],
																		"title": "Mode",
																		"type": "string"
																	}
																},
																"required": [
																	"mode"
																],
																"title": "Browser TTL",
																"type": "object"
															},
															"cache": {
																"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																"title": "Cache",
																"type": "boolean"
															},
															"cache_key": {
																"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																"properties": {
																	"cache_by_device_type": {
																		"description": "Separate cached content based on the visitor’s device type",
																		"title": "Cache by Device Type",
																		"type": "boolean"
																	},
																	"cache_deception_armor": {
																		"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																		"title": "Cache Deception Armor",
																		"type": "boolean"
																	},
																	"custom_key": {
																		"description": "Customize which components of the request are included or excluded from the cache key.",
																		"properties": {
																			"cookie": {
																				"description": "The cookies to include in building the cache key.",
																				"properties": {
																					"check_presence": {
																						"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																						"items": {
																							"description": "A cookie name to check presence of.",
																							"title": "Cookie name",
																							"type": "string"
																						},
																						"title": "Check presence of cookies",
																						"type": "array"
																					},
																					"include": {
																						"description": "Include these cookies' names and their values.",
																						"items": {
																							"description": "Cookie name and corresponding value to include.",
																							"title": "Cookie name",
																							"type": "string"
																						},
																						"title": "Include cookies",
																						"type": "array"
																					}
																				},
																				"title": "Cookie",
																				"type": "object"
																			},
																			"header": {
																				"description": "The header names and values to include in building the cache key.",
																				"properties": {
																					"check_presence": {
																						"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																						"items": {
																							"description": "A header name to check presence of.",
																							"title": "Header name",
																							"type": "string"
																						},
																						"title": "Check presence of headers",
																						"type": "array"
																					},
																					"exclude_origin": {
																						"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																						"title": "Exclude origin header",
																						"type": "boolean"
																					},
																					"include": {
																						"description": "Include these headers' names and their values.",
																						"items": {
																							"description": "Header name and corresponding value to include.",
																							"title": "Header name",
																							"type": "string"
																						},
																						"title": "Include headers",
																						"type": "array"
																					}
																				},
																				"title": "Headers",
																				"type": "object"
																			},
																			"host": {
																				"description": "Whether to use the original host or the resolved host in the cache key.",
																				"properties": {
																					"resolved": {
																						"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																						"example": true,
																						"title": "Use Resolved host",
																						"type": "boolean"
																					}
																				},
																				"title": "Host",
																				"type": "object"
																			},
																			"query_string": {
																				"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																				"properties": {
																					"exclude": {
																						"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																						"properties": {
																							"all": {
																								"description": "Exclude all query string parameters from use in building the cache key.",
																								"title": "All",
																								"type": "boolean"
																							},
																							"list": {
																								"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																								"items": {
																									"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																									"title": "parameter",
																									"type": "string"
																								},
																								"title": "List",
																								"type": "array"
																							}
																						},
																						"title": "Excluded query string parameters",
																						"type": "object"
																					},
																					"include": {
																						"description": "build the cache key using a list of query string parameters that ARE in the request.",
																						"properties": {
																							"all": {
																								"description": "Use all query string parameters in the cache key.",
																								"title": "All",
																								"type": "boolean"
																							},
																							"list": {
																								"description": "A list of query string parameters used to build the cache key.",
																								"items": {
																									"description": "parameter to include in the list of query string parameters used to build a cache key.",
																									"title": "parameter",
																									"type": "string"
																								},
																								"title": "List",
																								"type": "array"
																							}
																						},
																						"title": "Included query string parameters",
																						"type": "object"
																					}
																				},
																				"title": "Query String",
																				"type": "object"
																			},
																			"user": {
																				"description": "Characteristics of the request user agent used in building the cache key.",
																				"properties": {
																					"device_type": {
																						"description": "Use the user agent's device type in the cache key.",
																						"title": "Device Type",
																						"type": "boolean"
																					},
																					"geo": {
																						"description": "Use the user agents's country in the cache key.",
																						"title": "Country",
																						"type": "boolean"
																					},
																					"lang": {
																						"description": "Use the user agent's language in the cache key.",
																						"title": "Language",
																						"type": "boolean"
																					}
																				},
																				"title": "User",
																				"type": "object"
																			}
																		},
																		"title": "Custom Key",
																		"type": "object"
																	},
																	"ignore_query_strings_order": {
																		"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																		"title": "Ignore Query Strings Order",
																		"type": "boolean"
																	}
																},
																"title": "Cache Key",
																"type": "object"
															},
															"cache_reserve": {
																"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																"properties": {
																	"eligible": {
																		"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																		"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																		"title": "Eligible",
																		"type": "boolean"
																	},
																	"min_file_size": {
																		"description": "The minimum file size eligible for store in cache reserve.",
																		"title": "Minimum File Size",
																		"type": "integer"
																	}
																},
																"required": [
																	"eligible",
																	"min_file_size"
																],
																"title": "CacheReserve",
																"type": "object"
															},
															"edge_ttl": {
																"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																"properties": {
																	"default": {
																		"description": "The TTL (in seconds) if you choose override_origin mode.",
																		"maximum": 9223372036854776000,
																		"minimum": 0,
																		"title": "Default",
																		"type": "integer"
																	},
																	"mode": {
																		"description": "edge ttl options",
																		"enum": [
																			"respect_origin",
																			"bypass_by_default",
																			"override_origin"
																		],
																		"title": "Mode",
																		"type": "string"
																	},
																	"status_code_ttl": {
																		"description": "List of single status codes, or status code ranges to apply the selected mode",
																		"items": {
																			"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																			"properties": {
																				"status_code_range": {
																					"description": "The range of status codes used to apply the selected mode.",
																					"properties": {
																						"from": {
																							"description": "response status code lower bound",
																							"title": "Status Code lower bound",
																							"type": "integer"
																						},
																						"to": {
																							"description": "response status code upper bound",
																							"title": "Status Code upper bound",
																							"type": "integer"
																						}
																					},
																					"required": [
																						"from",
																						"to"
																					],
																					"title": "Status Code Range",
																					"type": "object"
																				},
																				"status_code_value": {
																					"description": "Set the ttl for responses with this specific status code",
																					"title": "Status Code Value",
																					"type": "integer"
																				},
																				"value": {
																					"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																					"title": "TTL value",
																					"type": "integer"
																				}
																			},
																			"required": [
																				"value"
																			],
																			"title": "Status Code TTL",
																			"type": "object"
																		},
																		"title": "Status Code TTLs",
																		"type": "array"
																	}
																},
																"required": [
																	"mode",
																	"default",
																	"status_code_ttl"
																],
																"title": "Edge TTL",
																"type": "object"
															},
															"origin_cache_control": {
																"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																"title": "Origin Cache Control (Enterprise-only)",
																"type": "boolean"
															},
															"origin_error_page_passthru": {
																"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																"title": "Origin Error Page Passthru",
																"type": "boolean"
															},
															"read_timeout": {
																"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																"example": 900,
																"title": "Read Timeout (Enterprise-only)",
																"type": "integer"
															},
															"respect_strong_etags": {
																"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																"title": "Respect Strong Etags",
																"type": "boolean"
															},
															"serve_stale": {
																"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																"properties": {
																	"disable_stale_while_updating": {
																		"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																		"title": "Disable Stale While Updating",
																		"type": "boolean"
																	}
																},
																"required": [
																	"disable_stale_while_updating"
																],
																"title": "Serve Stale",
																"type": "object"
															}
														}
													},
													"description": {
														"example": "Set cache settings when the hostname  address is not example.com"
													}
												},
												"title": "Set Cache Settings rule"
											}
										]
									},
									{
										"allOf": [
											{
												"properties": {
													"action": {
														"description": "The action to perform when the rule matches.",
														"pattern": "^[a-z]+$",
														"title": "Action",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters configuring the rule's action.",
														"title": "Action parameters",
														"type": "object"
													},
													"categories": {
														"description": "The categories of the rule.",
														"example": [
															"directory-traversal",
															"header"
														],
														"items": {
															"description": "A category of the rule.",
															"example": "directory-traversal",
															"minLength": 1,
															"title": "Category",
															"type": "string"
														},
														"minItems": 1,
														"readOnly": true,
														"title": "Categories",
														"type": "array",
														"uniqueItems": true
													},
													"description": {
														"default": "",
														"description": "An informative description of the rule.",
														"title": "Description",
														"type": "string"
													},
													"enabled": {
														"allOf": [
															{
																"description": "Whether the rule should be executed.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															},
															{
																"default": true
															}
														]
													},
													"expression": {
														"description": "The expression defining which traffic will match the rule.",
														"example": "ip.src ne 1.1.1.1",
														"minLength": 1,
														"title": "Expression",
														"type": "string"
													},
													"id": {
														"description": "The unique ID of the rule.",
														"example": "3a03d665bac047339bb530ecb439a90d",
														"pattern": "^[0-9a-f]{32}$",
														"title": "ID",
														"type": "string"
													},
													"last_updated": {
														"description": "The timestamp of when the rule was last modified.",
														"example": "2000-01-01T00:00:00.000000Z",
														"format": "date-time",
														"readOnly": true,
														"title": "Last updated",
														"type": "string"
													},
													"logging": {
														"description": "An object configuring the rule's logging behavior.",
														"properties": {
															"enabled": {
																"description": "Whether to generate a log when the rule matches.",
																"example": true,
																"title": "Enabled",
																"type": "boolean"
															}
														},
														"required": [
															"enabled"
														],
														"title": "Logging",
														"type": "object"
													},
													"ref": {
														"description": "The reference of the rule (the rule ID by default).",
														"example": "my_ref",
														"minLength": 1,
														"title": "Ref",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule.",
														"example": "1",
														"pattern": "^[0-9]+$",
														"readOnly": true,
														"title": "Version",
														"type": "string"
													}
												},
												"required": [
													"version",
													"last_updated"
												],
												"title": "Rule",
												"type": "object"
											},
											{
												"properties": {
													"action": {
														"enum": [
															"log_custom_field"
														]
													},
													"action_parameters": {
														"minProperties": 1,
														"properties": {
															"cookie_fields": {
																"description": "The cookie fields to log.",
																"example": [
																	{
																		"name": "cookie_name_1"
																	}
																],
																"items": {
																	"description": "The cookie field to log.",
																	"properties": {
																		"name": {
																			"description": "The name of the field.",
																			"example": "cookie_name_1",
																			"minLength": 1,
																			"title": "Name",
																			"type": "string"
																		}
																	},
																	"required": [
																		"name"
																	],
																	"title": "Cookie field",
																	"type": "object"
																},
																"minItems": 1,
																"title": "Cookie fields",
																"type": "array"
															},
															"request_fields": {
																"description": "The request fields to log.",
																"example": [
																	{
																		"name": "http_request_header_name_1_in_lower_case"
																	}
																],
																"items": {
																	"description": "The request field to log.",
																	"properties": {
																		"name": {
																			"description": "The name of the field.",
																			"example": "http_request_header_name_1_in_lower_case",
																			"minLength": 1,
																			"title": "Name",
																			"type": "string"
																		}
																	},
																	"required": [
																		"name"
																	],
																	"title": "Request field",
																	"type": "object"
																},
																"minItems": 1,
																"title": "Request fields",
																"type": "array"
															},
															"response_fields": {
																"description": "The response fields to log.",
																"example": [
																	{
																		"name": "http_response_header_name_1_in_lower_case"
																	}
																],
																"items": {
																	"description": "The response field to log.",
																	"properties": {
																		"name": {
																			"description": "The name of the field.",
																			"example": "http_response_header_name_1_in_lower_case",
																			"minLength": 1,
																			"title": "Name",
																			"type": "string"
																		}
																	},
																	"required": [
																		"name"
																	],
																	"title": "Response field",
																	"type": "object"
																},
																"minItems": 1,
																"title": "Response fields",
																"type": "array"
															}
														}
													},
													"description": {
														"example": "Log custom field when the IP address is not 1.1.1.1"
													}
												},
												"title": "Log Custom Field rule"
											}
										]
									}
								]
							},
							{
								"properties": {
									"position": {
										"oneOf": [
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"before": {
																"description": "The ID of another rule to place the rule before. An empty value causes the rule to be placed at the top.",
																"example": "da5e8e506c8e7877fe06cdf4c41add54",
																"pattern": "^(?:[0-9a-f]{32})?$",
																"title": "Before",
																"type": "string"
															}
														},
														"title": "Before position"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"after": {
																"description": "The ID of another rule to place the rule after. An empty value causes the rule to be placed at the bottom.",
																"example": "5bccdbb2a5142cd25cad8591255bd209",
																"pattern": "^(?:[0-9a-f]{32})?$",
																"title": "After",
																"type": "string"
															}
														},
														"title": "After position"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"index": {
																"description": "An index at which to place the rule, where index 1 is the first rule.",
																"example": 1,
																"minimum": 1,
																"title": "Index",
																"type": "number"
															}
														},
														"title": "Index position"
													}
												]
											}
										]
									}
								}
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create a zone ruleset rule",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/rulesets/{ruleset_id}": {
		"description": "Updates a zone ruleset, creating a new version.",
		"operationId": "updateZoneRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"description": "A ruleset object.",
								"properties": {
									"description": {
										"default": "",
										"description": "An informative description of the ruleset.",
										"example": "My ruleset to execute managed rulesets",
										"title": "Description",
										"type": "string"
									},
									"id": {
										"allOf": [
											{
												"description": "The unique ID of the ruleset.",
												"example": "2f2feab2026849078ba485f918791bdc",
												"pattern": "^[0-9a-f]{32}$",
												"title": "ID",
												"type": "string"
											},
											{
												"readOnly": true
											}
										]
									},
									"kind": {
										"description": "The kind of the ruleset.",
										"enum": [
											"managed",
											"custom",
											"root",
											"zone"
										],
										"example": "root",
										"title": "Kind",
										"type": "string"
									},
									"last_updated": {
										"description": "The timestamp of when the ruleset was last modified.",
										"example": "2000-01-01T00:00:00.000000Z",
										"format": "date-time",
										"readOnly": true,
										"title": "Last updated",
										"type": "string"
									},
									"name": {
										"description": "The human-readable name of the ruleset.",
										"example": "My ruleset",
										"minLength": 1,
										"title": "Name",
										"type": "string"
									},
									"phase": {
										"description": "The phase of the ruleset.",
										"enum": [
											"ddos_l4",
											"ddos_l7",
											"http_config_settings",
											"http_custom_errors",
											"http_log_custom_fields",
											"http_ratelimit",
											"http_request_cache_settings",
											"http_request_dynamic_redirect",
											"http_request_firewall_custom",
											"http_request_firewall_managed",
											"http_request_late_transform",
											"http_request_origin",
											"http_request_redirect",
											"http_request_sanitize",
											"http_request_sbfm",
											"http_request_select_configuration",
											"http_request_transform",
											"http_response_compression",
											"http_response_firewall_managed",
											"http_response_headers_transform",
											"magic_transit",
											"magic_transit_ids_managed",
											"magic_transit_managed"
										],
										"example": "http_request_firewall_custom",
										"title": "Phase",
										"type": "string"
									},
									"version": {
										"description": "The version of the ruleset.",
										"example": "1",
										"pattern": "^[0-9]+$",
										"readOnly": true,
										"title": "Version",
										"type": "string"
									}
								},
								"required": [
									"id",
									"version",
									"last_updated"
								],
								"title": "Ruleset",
								"type": "object"
							},
							{
								"properties": {
									"rules": {
										"description": "The list of rules in the ruleset.",
										"items": {
											"discriminator": {
												"mapping": {
													"block": "#/components/schemas/rulesets_BlockRule",
													"challenge": "#/components/schemas/rulesets_ChallengeRule",
													"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
													"execute": "#/components/schemas/rulesets_ExecuteRule",
													"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
													"log": "#/components/schemas/rulesets_LogRule",
													"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
													"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
													"redirect": "#/components/schemas/rulesets_RedirectRule",
													"rewrite": "#/components/schemas/rulesets_RewriteRule",
													"route": "#/components/schemas/rulesets_RouteRule",
													"score": "#/components/schemas/rulesets_ScoreRule",
													"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
													"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
													"set_config": "#/components/schemas/rulesets_SetConfigRule",
													"skip": "#/components/schemas/rulesets_SkipRule"
												},
												"propertyName": "action"
											},
											"oneOf": [
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"block"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"response": {
																			"description": "The response to show when the block is applied.",
																			"properties": {
																				"content": {
																					"description": "The content to return.",
																					"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																					"minLength": 1,
																					"title": "Content",
																					"type": "string"
																				},
																				"content_type": {
																					"description": "The type of the content to return.",
																					"example": "application/json",
																					"minLength": 1,
																					"title": "Content type",
																					"type": "string"
																				},
																				"status_code": {
																					"description": "The status code to return.",
																					"maximum": 499,
																					"minimum": 400,
																					"title": "Status code",
																					"type": "integer"
																				}
																			},
																			"required": [
																				"status_code",
																				"content",
																				"content_type"
																			],
																			"title": "Response",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Block when the IP address is not 1.1.1.1"
																}
															},
															"title": "Block rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"challenge"
																	]
																},
																"description": {
																	"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"compress_response"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"algorithms": {
																			"description": "Custom order for compression algorithms.",
																			"example": [
																				{
																					"name": "none"
																				}
																			],
																			"items": {
																				"description": "Compression algorithm to enable.",
																				"properties": {
																					"name": {
																						"description": "Name of compression algorithm to enable.",
																						"enum": [
																							"none",
																							"auto",
																							"default",
																							"gzip",
																							"brotli"
																						],
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"title": "Compression Algorithm",
																				"type": "object"
																			},
																			"title": "Algorithm",
																			"type": "array"
																		}
																	}
																},
																"description": {
																	"example": "Disable compression when address is not 1.1.1.1"
																}
															},
															"title": "Compression rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"execute"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"id": {
																			"allOf": [
																				{
																					"description": "The unique ID of the ruleset.",
																					"example": "2f2feab2026849078ba485f918791bdc",
																					"pattern": "^[0-9a-f]{32}$",
																					"title": "ID",
																					"type": "string"
																				},
																				{
																					"description": "The ID of the ruleset to execute.",
																					"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																				}
																			]
																		},
																		"matched_data": {
																			"description": "The configuration to use for matched data logging.",
																			"properties": {
																				"public_key": {
																					"description": "The public key to encrypt matched data logs with.",
																					"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																					"minLength": 1,
																					"title": "Public key",
																					"type": "string"
																				}
																			},
																			"required": [
																				"public_key"
																			],
																			"title": "Matched data",
																			"type": "object"
																		},
																		"overrides": {
																			"description": "A set of overrides to apply to the target ruleset.",
																			"minProperties": 1,
																			"properties": {
																				"action": {
																					"allOf": [
																						{
																							"description": "The action to perform when the rule matches.",
																							"pattern": "^[a-z]+$",
																							"title": "Action",
																							"type": "string"
																						},
																						{
																							"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																							"example": "log"
																						}
																					]
																				},
																				"categories": {
																					"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																					"items": {
																						"description": "A category-level override",
																						"minProperties": 2,
																						"properties": {
																							"action": {
																								"allOf": [
																									{
																										"description": "The action to perform when the rule matches.",
																										"pattern": "^[a-z]+$",
																										"title": "Action",
																										"type": "string"
																									},
																									{
																										"description": "The action to override rules in the category with.",
																										"example": "log"
																									}
																								]
																							},
																							"category": {
																								"allOf": [
																									{
																										"description": "A category of the rule.",
																										"example": "directory-traversal",
																										"minLength": 1,
																										"title": "Category",
																										"type": "string"
																									},
																									{
																										"description": "The name of the category to override."
																									}
																								]
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"description": "Whether to enable execution of rules in the category."
																									}
																								]
																							},
																							"sensitivity_level": {
																								"allOf": [
																									{
																										"enum": [
																											"default",
																											"medium",
																											"low",
																											"eoff"
																										],
																										"title": "Sensitivity level",
																										"type": "string"
																									},
																									{
																										"description": "The sensitivity level to use for rules in the category."
																									}
																								]
																							}
																						},
																						"required": [
																							"category"
																						],
																						"title": "Category override",
																						"type": "object"
																					},
																					"minItems": 1,
																					"title": "Category overrides",
																					"type": "array",
																					"uniqueItems": true
																				},
																				"enabled": {
																					"allOf": [
																						{
																							"description": "Whether the rule should be executed.",
																							"example": true,
																							"title": "Enabled",
																							"type": "boolean"
																						},
																						{
																							"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																						}
																					]
																				},
																				"rules": {
																					"description": "A list of rule-level overrides. This option has the highest precedence.",
																					"items": {
																						"description": "A rule-level override",
																						"minProperties": 2,
																						"properties": {
																							"action": {
																								"allOf": [
																									{
																										"description": "The action to perform when the rule matches.",
																										"pattern": "^[a-z]+$",
																										"title": "Action",
																										"type": "string"
																									},
																									{
																										"description": "The action to override the rule with.",
																										"example": "log"
																									}
																								]
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"description": "Whether to enable execution of the rule."
																									}
																								]
																							},
																							"id": {
																								"allOf": [
																									{
																										"description": "The unique ID of the rule.",
																										"example": "3a03d665bac047339bb530ecb439a90d",
																										"pattern": "^[0-9a-f]{32}$",
																										"title": "ID",
																										"type": "string"
																									},
																									{
																										"description": "The ID of the rule to override.",
																										"example": "8ac8bc2a661e475d940980f9317f28e1"
																									}
																								]
																							},
																							"score_threshold": {
																								"description": "The score threshold to use for the rule.",
																								"title": "Score threshold",
																								"type": "integer"
																							},
																							"sensitivity_level": {
																								"allOf": [
																									{
																										"enum": [
																											"default",
																											"medium",
																											"low",
																											"eoff"
																										],
																										"title": "Sensitivity level",
																										"type": "string"
																									},
																									{
																										"description": "The sensitivity level to use for the rule."
																									}
																								]
																							}
																						},
																						"required": [
																							"id"
																						],
																						"title": "Rule override",
																						"type": "object"
																					},
																					"minItems": 1,
																					"title": "Rule overrides",
																					"type": "array",
																					"uniqueItems": true
																				},
																				"sensitivity_level": {
																					"allOf": [
																						{
																							"enum": [
																								"default",
																								"medium",
																								"low",
																								"eoff"
																							],
																							"title": "Sensitivity level",
																							"type": "string"
																						},
																						{
																							"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																						}
																					]
																				}
																			},
																			"title": "Overrides",
																			"type": "object"
																		}
																	},
																	"required": [
																		"id"
																	]
																},
																"description": {
																	"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																}
															},
															"title": "Execute rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"js_challenge"
																	]
																},
																"description": {
																	"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Javascript Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"log"
																	]
																},
																"description": {
																	"example": "Log when the IP address is not 1.1.1.1"
																}
															},
															"title": "Log rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"managed_challenge"
																	]
																},
																"description": {
																	"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Managed Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"redirect"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"from_list": {
																			"description": "Serve a redirect based on a bulk list lookup.",
																			"properties": {
																				"key": {
																					"description": "Expression that evaluates to the list lookup key.",
																					"example": "http.request.full_uri",
																					"minLength": 1,
																					"title": "Key",
																					"type": "string"
																				},
																				"name": {
																					"description": "The name of the list to match against.",
																					"example": "list1",
																					"maxLength": 50,
																					"pattern": "^[a-zA-Z0-9_]+$",
																					"title": "Name",
																					"type": "string"
																				}
																			},
																			"title": "Bulk Redirect",
																			"type": "object"
																		},
																		"from_value": {
																			"description": "Serve a redirect based on the request properties.",
																			"properties": {
																				"preserve_query_string": {
																					"description": "Keep the query string of the original request.",
																					"title": "Preserve query string",
																					"type": "boolean"
																				},
																				"status_code": {
																					"description": "The status code to be used for the redirect.",
																					"enum": [
																						301,
																						302,
																						303,
																						307,
																						308
																					],
																					"title": "Status Code",
																					"type": "number"
																				},
																				"target_url": {
																					"description": "The URL to redirect the request to.",
																					"example": {
																						"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																					},
																					"oneOf": [
																						{
																							"properties": {
																								"value": {
																									"description": "The URL to redirect the request to.",
																									"minLength": 1,
																									"type": "string"
																								}
																							},
																							"title": "Static URL redirect",
																							"type": "object"
																						},
																						{
																							"properties": {
																								"expression": {
																									"description": "An expression to evaluate to get the URL to redirect the request to.",
																									"minLength": 1,
																									"type": "string"
																								}
																							},
																							"title": "Dynamic URL redirect",
																							"type": "object"
																						}
																					]
																				}
																			},
																			"title": "Single redirect",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Redirect when IP address is not 1.1.1.1"
																}
															},
															"title": "Redirect rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"rewrite"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"headers": {
																			"additionalProperties": {
																				"oneOf": [
																					{
																						"description": "Remove the header from the request.",
																						"properties": {
																							"operation": {
																								"enum": [
																									"remove"
																								],
																								"title": "Operation",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation"
																						],
																						"title": "Remove header",
																						"type": "object"
																					},
																					{
																						"description": "Set a request header with a static value.",
																						"properties": {
																							"operation": {
																								"enum": [
																									"set"
																								],
																								"title": "Operation",
																								"type": "string"
																							},
																							"value": {
																								"description": "Static value for the header.",
																								"example": "static-header-value",
																								"minLength": 1,
																								"title": "Value",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation",
																							"value"
																						],
																						"title": "Static header",
																						"type": "object"
																					},
																					{
																						"description": "Set a request header with a dynamic value.",
																						"properties": {
																							"expression": {
																								"description": "Expression for the header value.",
																								"example": "ip.src",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"operation": {
																								"enum": [
																									"set"
																								],
																								"title": "Operation",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation",
																							"expression"
																						],
																						"title": "Dynamic header",
																						"type": "object"
																					}
																				]
																			},
																			"description": "Map of request headers to modify.",
																			"example": {
																				"client-http-version": {
																					"expression": "http.request.version",
																					"operation": "set"
																				}
																			},
																			"title": "Headers",
																			"type": "object"
																		},
																		"uri": {
																			"description": "URI to rewrite the request to.",
																			"properties": {
																				"path": {
																					"allOf": [
																						{
																							"description": "Path portion rewrite.",
																							"example": {
																								"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																							},
																							"title": "Path"
																						},
																						{
																							"oneOf": [
																								{
																									"properties": {
																										"value": {
																											"description": "Predefined replacement value.",
																											"example": "/images",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"value"
																									],
																									"title": "Static value",
																									"type": "object"
																								},
																								{
																									"properties": {
																										"expression": {
																											"description": "Expression to evaluate for the replacement value.",
																											"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"expression"
																									],
																									"title": "Dynamic value",
																									"type": "object"
																								}
																							]
																						}
																					]
																				},
																				"query": {
																					"allOf": [
																						{
																							"description": "Query portion rewrite.",
																							"example": {
																								"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																							},
																							"title": "Query"
																						},
																						{
																							"oneOf": [
																								{
																									"properties": {
																										"value": {
																											"description": "Predefined replacement value.",
																											"example": "/images",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"value"
																									],
																									"title": "Static value",
																									"type": "object"
																								},
																								{
																									"properties": {
																										"expression": {
																											"description": "Expression to evaluate for the replacement value.",
																											"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"expression"
																									],
																									"title": "Dynamic value",
																									"type": "object"
																								}
																							]
																						}
																					]
																				}
																			},
																			"title": "URI",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Add a header when the IP address is not 1.1.1.1"
																}
															},
															"title": "Rewrite rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"route"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"host_header": {
																			"description": "Rewrite the HTTP Host header.",
																			"example": "static.example.com",
																			"minLength": 1,
																			"title": "Host Header",
																			"type": "string"
																		},
																		"origin": {
																			"description": "Override the IP/TCP destination.",
																			"properties": {
																				"host": {
																					"description": "Override the resolved hostname.",
																					"example": "static.example.com",
																					"minLength": 1,
																					"title": "DNS Record",
																					"type": "string"
																				},
																				"port": {
																					"description": "Override the destination port.",
																					"maximum": 65535,
																					"minimum": 1,
																					"title": "Port",
																					"type": "number"
																				}
																			},
																			"title": "Origin",
																			"type": "object"
																		},
																		"sni": {
																			"description": "Override the Server Name Indication (SNI).",
																			"properties": {
																				"value": {
																					"description": "The SNI override.",
																					"example": "static.example.com",
																					"minLength": 1,
																					"title": "Value",
																					"type": "string"
																				}
																			},
																			"required": [
																				"value"
																			],
																			"title": "SNI",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Select origin server when IP address is not 1.1.1.1"
																}
															},
															"title": "Origin rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"score"
																	]
																},
																"action_parameters": {
																	"example": {
																		"increment": 3
																	},
																	"minProperties": 1,
																	"properties": {
																		"increment": {
																			"description": "Increment contains the delta to change the score and can be either positive or negative.",
																			"example": 3,
																			"title": "Increment",
																			"type": "integer"
																		}
																	}
																},
																"description": {
																	"example": "Increment score when the IP address is not 1.1.1.1"
																}
															},
															"title": "Score rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"serve_error"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"content": {
																			"description": "Error response content.",
																			"example": "{\"error\": \"1xxx error occurred\"}\n",
																			"maxLength": 10240,
																			"minLength": 1,
																			"title": "Content",
																			"type": "string"
																		},
																		"content_type": {
																			"description": "Content-type header to set with the response.",
																			"enum": [
																				"application/json",
																				"text/xml",
																				"text/plain",
																				"text/html"
																			],
																			"example": "application/json",
																			"title": "Content Type",
																			"type": "string"
																		},
																		"status_code": {
																			"description": "The status code to use for the error.",
																			"example": 500,
																			"maximum": 999,
																			"minimum": 400,
																			"title": "Status Code",
																			"type": "number"
																		}
																	}
																},
																"description": {
																	"example": "Serve a JSON response to api users on error"
																}
															},
															"title": "Serve Error rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"set_config"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"automatic_https_rewrites": {
																			"description": "Turn on or off Automatic HTTPS Rewrites.",
																			"title": "Automatic HTTPS rewrites",
																			"type": "boolean"
																		},
																		"autominify": {
																			"description": "Select which file extensions to minify automatically.",
																			"properties": {
																				"css": {
																					"description": "Minify CSS files.",
																					"title": "CSS",
																					"type": "boolean"
																				},
																				"html": {
																					"description": "Minify HTML files.",
																					"title": "HTML",
																					"type": "boolean"
																				},
																				"js": {
																					"description": "Minify JS files.",
																					"title": "JS",
																					"type": "boolean"
																				}
																			},
																			"title": "Auto Minify",
																			"type": "object"
																		},
																		"bic": {
																			"description": "Turn on or off Browser Integrity Check.",
																			"title": "Browser Integrity Check",
																			"type": "boolean"
																		},
																		"disable_apps": {
																			"description": "Turn off all active Cloudflare Apps.",
																			"enum": [
																				true
																			],
																			"title": "Disable Apps",
																			"type": "boolean"
																		},
																		"disable_rum": {
																			"description": "Turn off Real User Monitoring (RUM).",
																			"enum": [
																				true
																			],
																			"title": "Disable RUM",
																			"type": "boolean"
																		},
																		"disable_zaraz": {
																			"description": "Turn off Zaraz.",
																			"enum": [
																				true
																			],
																			"title": "Disable Zaraz",
																			"type": "boolean"
																		},
																		"email_obfuscation": {
																			"description": "Turn on or off Email Obfuscation.",
																			"title": "Email Obfuscation",
																			"type": "boolean"
																		},
																		"fonts": {
																			"description": "Turn on or off Cloudflare Fonts.",
																			"title": "Cloudflare Fonts",
																			"type": "boolean"
																		},
																		"hotlink_protection": {
																			"description": "Turn on or off the Hotlink Protection.",
																			"title": "Hotlink Protection",
																			"type": "boolean"
																		},
																		"mirage": {
																			"description": "Turn on or off Mirage.",
																			"title": "Mirage",
																			"type": "boolean"
																		},
																		"opportunistic_encryption": {
																			"description": "Turn on or off Opportunistic Encryption.",
																			"title": "Opportunistic Encryption",
																			"type": "boolean"
																		},
																		"polish": {
																			"description": "Configure the Polish level.",
																			"enum": [
																				"off",
																				"lossless",
																				"lossy"
																			],
																			"title": "Polish",
																			"type": "string"
																		},
																		"rocket_loader": {
																			"description": "Turn on or off Rocket Loader",
																			"title": "Rocket Loader",
																			"type": "boolean"
																		},
																		"security_level": {
																			"description": "Configure the Security Level.",
																			"enum": [
																				"off",
																				"essentially_off",
																				"low",
																				"medium",
																				"high",
																				"under_attack"
																			],
																			"title": "Security Level",
																			"type": "string"
																		},
																		"server_side_excludes": {
																			"description": "Turn on or off Server Side Excludes.",
																			"title": "Server Side Excludes",
																			"type": "boolean"
																		},
																		"ssl": {
																			"description": "Configure the SSL level.",
																			"enum": [
																				"off",
																				"flexible",
																				"full",
																				"strict",
																				"origin_pull"
																			],
																			"title": "SSL",
																			"type": "string"
																		},
																		"sxg": {
																			"description": "Turn on or off Signed Exchanges (SXG).",
																			"title": "Signed Exchanges (SXG)",
																			"type": "boolean"
																		}
																	}
																},
																"description": {
																	"example": "Disable Zaraz when IP address is not 1.1.1.1"
																}
															},
															"title": "Set Config Rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"skip"
																	]
																},
																"action_parameters": {
																	"example": {
																		"ruleset": "current"
																	},
																	"minProperties": 1,
																	"properties": {
																		"phases": {
																			"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																			"items": {
																				"allOf": [
																					{
																						"description": "The phase of the ruleset.",
																						"enum": [
																							"ddos_l4",
																							"ddos_l7",
																							"http_config_settings",
																							"http_custom_errors",
																							"http_log_custom_fields",
																							"http_ratelimit",
																							"http_request_cache_settings",
																							"http_request_dynamic_redirect",
																							"http_request_firewall_custom",
																							"http_request_firewall_managed",
																							"http_request_late_transform",
																							"http_request_origin",
																							"http_request_redirect",
																							"http_request_sanitize",
																							"http_request_sbfm",
																							"http_request_select_configuration",
																							"http_request_transform",
																							"http_response_compression",
																							"http_response_firewall_managed",
																							"http_response_headers_transform",
																							"magic_transit",
																							"magic_transit_ids_managed",
																							"magic_transit_managed"
																						],
																						"example": "http_request_firewall_custom",
																						"title": "Phase",
																						"type": "string"
																					},
																					{
																						"description": "A phase to skip the execution of."
																					}
																				]
																			},
																			"minItems": 1,
																			"title": "Phases",
																			"type": "array",
																			"uniqueItems": true
																		},
																		"products": {
																			"description": "A list of legacy security products to skip the execution of.",
																			"items": {
																				"description": "The name of a legacy security product to skip the execution of.",
																				"enum": [
																					"bic",
																					"hot",
																					"rateLimit",
																					"securityLevel",
																					"uaBlock",
																					"waf",
																					"zoneLockdown"
																				],
																				"title": "Product",
																				"type": "string"
																			},
																			"minItems": 1,
																			"title": "Products",
																			"type": "array",
																			"uniqueItems": true
																		},
																		"rules": {
																			"additionalProperties": {
																				"description": "A list of rule IDs in the ruleset to skip the execution of.",
																				"items": {
																					"allOf": [
																						{
																							"description": "The unique ID of the rule.",
																							"example": "3a03d665bac047339bb530ecb439a90d",
																							"pattern": "^[0-9a-f]{32}$",
																							"title": "ID",
																							"type": "string"
																						},
																						{
																							"description": "The ID of a rule in the ruleset to skip the execution of.",
																							"example": "8ac8bc2a661e475d940980f9317f28e1",
																							"title": "Rule"
																						}
																					]
																				},
																				"minItems": 1,
																				"title": "Rules",
																				"type": "array",
																				"uniqueItems": true
																			},
																			"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																			"example": {
																				"4814384a9e5d4991b9815dcfc25d2f1f": [
																					"8ac8bc2a661e475d940980f9317f28e1"
																				]
																			},
																			"minProperties": 1,
																			"title": "Rules",
																			"type": "object"
																		},
																		"ruleset": {
																			"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																			"enum": [
																				"current"
																			],
																			"title": "Ruleset",
																			"type": "string"
																		},
																		"rulesets": {
																			"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																			"items": {
																				"allOf": [
																					{
																						"description": "The unique ID of the ruleset.",
																						"example": "2f2feab2026849078ba485f918791bdc",
																						"pattern": "^[0-9a-f]{32}$",
																						"title": "ID",
																						"type": "string"
																					},
																					{
																						"description": "The ID of a ruleset to skip the execution of.",
																						"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																						"title": "Ruleset"
																					}
																				]
																			},
																			"minItems": 1,
																			"title": "Rulesets",
																			"type": "array",
																			"uniqueItems": true
																		}
																	}
																},
																"description": {
																	"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																}
															},
															"title": "Skip rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"set_cache_settings"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"additional_cacheable_ports": {
																			"description": "List of additional ports that caching can be enabled on.",
																			"items": {
																				"description": "A port to enable caching on",
																				"title": "Additional Cacheable Port",
																				"type": "integer"
																			},
																			"title": "Additional Cacheable Ports (Enterprise-only)",
																			"type": "array"
																		},
																		"browser_ttl": {
																			"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																			"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																			"properties": {
																				"default": {
																					"description": "The TTL (in seconds) if you choose override_origin mode.",
																					"title": "Default TTL",
																					"type": "integer"
																				},
																				"mode": {
																					"description": "Determines which browser ttl mode to use.",
																					"enum": [
																						"respect_origin",
																						"bypass_by_default",
																						"override_origin"
																					],
																					"title": "Mode",
																					"type": "string"
																				}
																			},
																			"required": [
																				"mode"
																			],
																			"title": "Browser TTL",
																			"type": "object"
																		},
																		"cache": {
																			"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																			"title": "Cache",
																			"type": "boolean"
																		},
																		"cache_key": {
																			"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																			"properties": {
																				"cache_by_device_type": {
																					"description": "Separate cached content based on the visitor’s device type",
																					"title": "Cache by Device Type",
																					"type": "boolean"
																				},
																				"cache_deception_armor": {
																					"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																					"title": "Cache Deception Armor",
																					"type": "boolean"
																				},
																				"custom_key": {
																					"description": "Customize which components of the request are included or excluded from the cache key.",
																					"properties": {
																						"cookie": {
																							"description": "The cookies to include in building the cache key.",
																							"properties": {
																								"check_presence": {
																									"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																									"items": {
																										"description": "A cookie name to check presence of.",
																										"title": "Cookie name",
																										"type": "string"
																									},
																									"title": "Check presence of cookies",
																									"type": "array"
																								},
																								"include": {
																									"description": "Include these cookies' names and their values.",
																									"items": {
																										"description": "Cookie name and corresponding value to include.",
																										"title": "Cookie name",
																										"type": "string"
																									},
																									"title": "Include cookies",
																									"type": "array"
																								}
																							},
																							"title": "Cookie",
																							"type": "object"
																						},
																						"header": {
																							"description": "The header names and values to include in building the cache key.",
																							"properties": {
																								"check_presence": {
																									"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																									"items": {
																										"description": "A header name to check presence of.",
																										"title": "Header name",
																										"type": "string"
																									},
																									"title": "Check presence of headers",
																									"type": "array"
																								},
																								"exclude_origin": {
																									"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																									"title": "Exclude origin header",
																									"type": "boolean"
																								},
																								"include": {
																									"description": "Include these headers' names and their values.",
																									"items": {
																										"description": "Header name and corresponding value to include.",
																										"title": "Header name",
																										"type": "string"
																									},
																									"title": "Include headers",
																									"type": "array"
																								}
																							},
																							"title": "Headers",
																							"type": "object"
																						},
																						"host": {
																							"description": "Whether to use the original host or the resolved host in the cache key.",
																							"properties": {
																								"resolved": {
																									"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																									"example": true,
																									"title": "Use Resolved host",
																									"type": "boolean"
																								}
																							},
																							"title": "Host",
																							"type": "object"
																						},
																						"query_string": {
																							"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																							"properties": {
																								"exclude": {
																									"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																									"properties": {
																										"all": {
																											"description": "Exclude all query string parameters from use in building the cache key.",
																											"title": "All",
																											"type": "boolean"
																										},
																										"list": {
																											"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																											"items": {
																												"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																												"title": "parameter",
																												"type": "string"
																											},
																											"title": "List",
																											"type": "array"
																										}
																									},
																									"title": "Excluded query string parameters",
																									"type": "object"
																								},
																								"include": {
																									"description": "build the cache key using a list of query string parameters that ARE in the request.",
																									"properties": {
																										"all": {
																											"description": "Use all query string parameters in the cache key.",
																											"title": "All",
																											"type": "boolean"
																										},
																										"list": {
																											"description": "A list of query string parameters used to build the cache key.",
																											"items": {
																												"description": "parameter to include in the list of query string parameters used to build a cache key.",
																												"title": "parameter",
																												"type": "string"
																											},
																											"title": "List",
																											"type": "array"
																										}
																									},
																									"title": "Included query string parameters",
																									"type": "object"
																								}
																							},
																							"title": "Query String",
																							"type": "object"
																						},
																						"user": {
																							"description": "Characteristics of the request user agent used in building the cache key.",
																							"properties": {
																								"device_type": {
																									"description": "Use the user agent's device type in the cache key.",
																									"title": "Device Type",
																									"type": "boolean"
																								},
																								"geo": {
																									"description": "Use the user agents's country in the cache key.",
																									"title": "Country",
																									"type": "boolean"
																								},
																								"lang": {
																									"description": "Use the user agent's language in the cache key.",
																									"title": "Language",
																									"type": "boolean"
																								}
																							},
																							"title": "User",
																							"type": "object"
																						}
																					},
																					"title": "Custom Key",
																					"type": "object"
																				},
																				"ignore_query_strings_order": {
																					"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																					"title": "Ignore Query Strings Order",
																					"type": "boolean"
																				}
																			},
																			"title": "Cache Key",
																			"type": "object"
																		},
																		"cache_reserve": {
																			"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																			"properties": {
																				"eligible": {
																					"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																					"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																					"title": "Eligible",
																					"type": "boolean"
																				},
																				"min_file_size": {
																					"description": "The minimum file size eligible for store in cache reserve.",
																					"title": "Minimum File Size",
																					"type": "integer"
																				}
																			},
																			"required": [
																				"eligible",
																				"min_file_size"
																			],
																			"title": "CacheReserve",
																			"type": "object"
																		},
																		"edge_ttl": {
																			"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																			"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																			"properties": {
																				"default": {
																					"description": "The TTL (in seconds) if you choose override_origin mode.",
																					"maximum": 9223372036854776000,
																					"minimum": 0,
																					"title": "Default",
																					"type": "integer"
																				},
																				"mode": {
																					"description": "edge ttl options",
																					"enum": [
																						"respect_origin",
																						"bypass_by_default",
																						"override_origin"
																					],
																					"title": "Mode",
																					"type": "string"
																				},
																				"status_code_ttl": {
																					"description": "List of single status codes, or status code ranges to apply the selected mode",
																					"items": {
																						"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																						"properties": {
																							"status_code_range": {
																								"description": "The range of status codes used to apply the selected mode.",
																								"properties": {
																									"from": {
																										"description": "response status code lower bound",
																										"title": "Status Code lower bound",
																										"type": "integer"
																									},
																									"to": {
																										"description": "response status code upper bound",
																										"title": "Status Code upper bound",
																										"type": "integer"
																									}
																								},
																								"required": [
																									"from",
																									"to"
																								],
																								"title": "Status Code Range",
																								"type": "object"
																							},
																							"status_code_value": {
																								"description": "Set the ttl for responses with this specific status code",
																								"title": "Status Code Value",
																								"type": "integer"
																							},
																							"value": {
																								"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																								"title": "TTL value",
																								"type": "integer"
																							}
																						},
																						"required": [
																							"value"
																						],
																						"title": "Status Code TTL",
																						"type": "object"
																					},
																					"title": "Status Code TTLs",
																					"type": "array"
																				}
																			},
																			"required": [
																				"mode",
																				"default",
																				"status_code_ttl"
																			],
																			"title": "Edge TTL",
																			"type": "object"
																		},
																		"origin_cache_control": {
																			"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																			"title": "Origin Cache Control (Enterprise-only)",
																			"type": "boolean"
																		},
																		"origin_error_page_passthru": {
																			"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																			"title": "Origin Error Page Passthru",
																			"type": "boolean"
																		},
																		"read_timeout": {
																			"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																			"example": 900,
																			"title": "Read Timeout (Enterprise-only)",
																			"type": "integer"
																		},
																		"respect_strong_etags": {
																			"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																			"title": "Respect Strong Etags",
																			"type": "boolean"
																		},
																		"serve_stale": {
																			"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																			"properties": {
																				"disable_stale_while_updating": {
																					"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																					"title": "Disable Stale While Updating",
																					"type": "boolean"
																				}
																			},
																			"required": [
																				"disable_stale_while_updating"
																			],
																			"title": "Serve Stale",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Set cache settings when the hostname  address is not example.com"
																}
															},
															"title": "Set Cache Settings rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"log_custom_field"
																	]
																},
																"action_parameters": {
																	"minProperties": 1,
																	"properties": {
																		"cookie_fields": {
																			"description": "The cookie fields to log.",
																			"example": [
																				{
																					"name": "cookie_name_1"
																				}
																			],
																			"items": {
																				"description": "The cookie field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "cookie_name_1",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Cookie field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Cookie fields",
																			"type": "array"
																		},
																		"request_fields": {
																			"description": "The request fields to log.",
																			"example": [
																				{
																					"name": "http_request_header_name_1_in_lower_case"
																				}
																			],
																			"items": {
																				"description": "The request field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "http_request_header_name_1_in_lower_case",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Request field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Request fields",
																			"type": "array"
																		},
																		"response_fields": {
																			"description": "The response fields to log.",
																			"example": [
																				{
																					"name": "http_response_header_name_1_in_lower_case"
																				}
																			],
																			"items": {
																				"description": "The response field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "http_response_header_name_1_in_lower_case",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Response field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Response fields",
																			"type": "array"
																		}
																	}
																},
																"description": {
																	"example": "Log custom field when the IP address is not 1.1.1.1"
																}
															},
															"title": "Log Custom Field rule"
														}
													]
												}
											]
										},
										"title": "Rules",
										"type": "array"
									}
								},
								"required": [
									"rules"
								]
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a zone ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint": {
		"description": "Updates a zone entry point ruleset, creating a new version.",
		"operationId": "updateZoneEntrypointRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_phase",
				"required": true,
				"schema": {
					"description": "The phase of the ruleset.",
					"enum": [
						"ddos_l4",
						"ddos_l7",
						"http_config_settings",
						"http_custom_errors",
						"http_log_custom_fields",
						"http_ratelimit",
						"http_request_cache_settings",
						"http_request_dynamic_redirect",
						"http_request_firewall_custom",
						"http_request_firewall_managed",
						"http_request_late_transform",
						"http_request_origin",
						"http_request_redirect",
						"http_request_sanitize",
						"http_request_sbfm",
						"http_request_select_configuration",
						"http_request_transform",
						"http_response_compression",
						"http_response_firewall_managed",
						"http_response_headers_transform",
						"magic_transit",
						"magic_transit_ids_managed",
						"magic_transit_managed"
					],
					"example": "http_request_firewall_custom",
					"title": "Phase",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"description": "A ruleset object.",
								"properties": {
									"description": {
										"default": "",
										"description": "An informative description of the ruleset.",
										"example": "My ruleset to execute managed rulesets",
										"title": "Description",
										"type": "string"
									},
									"id": {
										"allOf": [
											{
												"description": "The unique ID of the ruleset.",
												"example": "2f2feab2026849078ba485f918791bdc",
												"pattern": "^[0-9a-f]{32}$",
												"title": "ID",
												"type": "string"
											},
											{
												"readOnly": true
											}
										]
									},
									"kind": {
										"description": "The kind of the ruleset.",
										"enum": [
											"managed",
											"custom",
											"root",
											"zone"
										],
										"example": "root",
										"title": "Kind",
										"type": "string"
									},
									"last_updated": {
										"description": "The timestamp of when the ruleset was last modified.",
										"example": "2000-01-01T00:00:00.000000Z",
										"format": "date-time",
										"readOnly": true,
										"title": "Last updated",
										"type": "string"
									},
									"name": {
										"description": "The human-readable name of the ruleset.",
										"example": "My ruleset",
										"minLength": 1,
										"title": "Name",
										"type": "string"
									},
									"phase": {
										"description": "The phase of the ruleset.",
										"enum": [
											"ddos_l4",
											"ddos_l7",
											"http_config_settings",
											"http_custom_errors",
											"http_log_custom_fields",
											"http_ratelimit",
											"http_request_cache_settings",
											"http_request_dynamic_redirect",
											"http_request_firewall_custom",
											"http_request_firewall_managed",
											"http_request_late_transform",
											"http_request_origin",
											"http_request_redirect",
											"http_request_sanitize",
											"http_request_sbfm",
											"http_request_select_configuration",
											"http_request_transform",
											"http_response_compression",
											"http_response_firewall_managed",
											"http_response_headers_transform",
											"magic_transit",
											"magic_transit_ids_managed",
											"magic_transit_managed"
										],
										"example": "http_request_firewall_custom",
										"title": "Phase",
										"type": "string"
									},
									"version": {
										"description": "The version of the ruleset.",
										"example": "1",
										"pattern": "^[0-9]+$",
										"readOnly": true,
										"title": "Version",
										"type": "string"
									}
								},
								"required": [
									"id",
									"version",
									"last_updated"
								],
								"title": "Ruleset",
								"type": "object"
							},
							{
								"properties": {
									"rules": {
										"description": "The list of rules in the ruleset.",
										"items": {
											"discriminator": {
												"mapping": {
													"block": "#/components/schemas/rulesets_BlockRule",
													"challenge": "#/components/schemas/rulesets_ChallengeRule",
													"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
													"execute": "#/components/schemas/rulesets_ExecuteRule",
													"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
													"log": "#/components/schemas/rulesets_LogRule",
													"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
													"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
													"redirect": "#/components/schemas/rulesets_RedirectRule",
													"rewrite": "#/components/schemas/rulesets_RewriteRule",
													"route": "#/components/schemas/rulesets_RouteRule",
													"score": "#/components/schemas/rulesets_ScoreRule",
													"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
													"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
													"set_config": "#/components/schemas/rulesets_SetConfigRule",
													"skip": "#/components/schemas/rulesets_SkipRule"
												},
												"propertyName": "action"
											},
											"oneOf": [
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"block"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"response": {
																			"description": "The response to show when the block is applied.",
																			"properties": {
																				"content": {
																					"description": "The content to return.",
																					"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																					"minLength": 1,
																					"title": "Content",
																					"type": "string"
																				},
																				"content_type": {
																					"description": "The type of the content to return.",
																					"example": "application/json",
																					"minLength": 1,
																					"title": "Content type",
																					"type": "string"
																				},
																				"status_code": {
																					"description": "The status code to return.",
																					"maximum": 499,
																					"minimum": 400,
																					"title": "Status code",
																					"type": "integer"
																				}
																			},
																			"required": [
																				"status_code",
																				"content",
																				"content_type"
																			],
																			"title": "Response",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Block when the IP address is not 1.1.1.1"
																}
															},
															"title": "Block rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"challenge"
																	]
																},
																"description": {
																	"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"compress_response"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"algorithms": {
																			"description": "Custom order for compression algorithms.",
																			"example": [
																				{
																					"name": "none"
																				}
																			],
																			"items": {
																				"description": "Compression algorithm to enable.",
																				"properties": {
																					"name": {
																						"description": "Name of compression algorithm to enable.",
																						"enum": [
																							"none",
																							"auto",
																							"default",
																							"gzip",
																							"brotli"
																						],
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"title": "Compression Algorithm",
																				"type": "object"
																			},
																			"title": "Algorithm",
																			"type": "array"
																		}
																	}
																},
																"description": {
																	"example": "Disable compression when address is not 1.1.1.1"
																}
															},
															"title": "Compression rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"execute"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"id": {
																			"allOf": [
																				{
																					"description": "The unique ID of the ruleset.",
																					"example": "2f2feab2026849078ba485f918791bdc",
																					"pattern": "^[0-9a-f]{32}$",
																					"title": "ID",
																					"type": "string"
																				},
																				{
																					"description": "The ID of the ruleset to execute.",
																					"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																				}
																			]
																		},
																		"matched_data": {
																			"description": "The configuration to use for matched data logging.",
																			"properties": {
																				"public_key": {
																					"description": "The public key to encrypt matched data logs with.",
																					"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																					"minLength": 1,
																					"title": "Public key",
																					"type": "string"
																				}
																			},
																			"required": [
																				"public_key"
																			],
																			"title": "Matched data",
																			"type": "object"
																		},
																		"overrides": {
																			"description": "A set of overrides to apply to the target ruleset.",
																			"minProperties": 1,
																			"properties": {
																				"action": {
																					"allOf": [
																						{
																							"description": "The action to perform when the rule matches.",
																							"pattern": "^[a-z]+$",
																							"title": "Action",
																							"type": "string"
																						},
																						{
																							"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																							"example": "log"
																						}
																					]
																				},
																				"categories": {
																					"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																					"items": {
																						"description": "A category-level override",
																						"minProperties": 2,
																						"properties": {
																							"action": {
																								"allOf": [
																									{
																										"description": "The action to perform when the rule matches.",
																										"pattern": "^[a-z]+$",
																										"title": "Action",
																										"type": "string"
																									},
																									{
																										"description": "The action to override rules in the category with.",
																										"example": "log"
																									}
																								]
																							},
																							"category": {
																								"allOf": [
																									{
																										"description": "A category of the rule.",
																										"example": "directory-traversal",
																										"minLength": 1,
																										"title": "Category",
																										"type": "string"
																									},
																									{
																										"description": "The name of the category to override."
																									}
																								]
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"description": "Whether to enable execution of rules in the category."
																									}
																								]
																							},
																							"sensitivity_level": {
																								"allOf": [
																									{
																										"enum": [
																											"default",
																											"medium",
																											"low",
																											"eoff"
																										],
																										"title": "Sensitivity level",
																										"type": "string"
																									},
																									{
																										"description": "The sensitivity level to use for rules in the category."
																									}
																								]
																							}
																						},
																						"required": [
																							"category"
																						],
																						"title": "Category override",
																						"type": "object"
																					},
																					"minItems": 1,
																					"title": "Category overrides",
																					"type": "array",
																					"uniqueItems": true
																				},
																				"enabled": {
																					"allOf": [
																						{
																							"description": "Whether the rule should be executed.",
																							"example": true,
																							"title": "Enabled",
																							"type": "boolean"
																						},
																						{
																							"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																						}
																					]
																				},
																				"rules": {
																					"description": "A list of rule-level overrides. This option has the highest precedence.",
																					"items": {
																						"description": "A rule-level override",
																						"minProperties": 2,
																						"properties": {
																							"action": {
																								"allOf": [
																									{
																										"description": "The action to perform when the rule matches.",
																										"pattern": "^[a-z]+$",
																										"title": "Action",
																										"type": "string"
																									},
																									{
																										"description": "The action to override the rule with.",
																										"example": "log"
																									}
																								]
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"description": "Whether to enable execution of the rule."
																									}
																								]
																							},
																							"id": {
																								"allOf": [
																									{
																										"description": "The unique ID of the rule.",
																										"example": "3a03d665bac047339bb530ecb439a90d",
																										"pattern": "^[0-9a-f]{32}$",
																										"title": "ID",
																										"type": "string"
																									},
																									{
																										"description": "The ID of the rule to override.",
																										"example": "8ac8bc2a661e475d940980f9317f28e1"
																									}
																								]
																							},
																							"score_threshold": {
																								"description": "The score threshold to use for the rule.",
																								"title": "Score threshold",
																								"type": "integer"
																							},
																							"sensitivity_level": {
																								"allOf": [
																									{
																										"enum": [
																											"default",
																											"medium",
																											"low",
																											"eoff"
																										],
																										"title": "Sensitivity level",
																										"type": "string"
																									},
																									{
																										"description": "The sensitivity level to use for the rule."
																									}
																								]
																							}
																						},
																						"required": [
																							"id"
																						],
																						"title": "Rule override",
																						"type": "object"
																					},
																					"minItems": 1,
																					"title": "Rule overrides",
																					"type": "array",
																					"uniqueItems": true
																				},
																				"sensitivity_level": {
																					"allOf": [
																						{
																							"enum": [
																								"default",
																								"medium",
																								"low",
																								"eoff"
																							],
																							"title": "Sensitivity level",
																							"type": "string"
																						},
																						{
																							"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																						}
																					]
																				}
																			},
																			"title": "Overrides",
																			"type": "object"
																		}
																	},
																	"required": [
																		"id"
																	]
																},
																"description": {
																	"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																}
															},
															"title": "Execute rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"js_challenge"
																	]
																},
																"description": {
																	"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Javascript Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"log"
																	]
																},
																"description": {
																	"example": "Log when the IP address is not 1.1.1.1"
																}
															},
															"title": "Log rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"managed_challenge"
																	]
																},
																"description": {
																	"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																}
															},
															"title": "Managed Challenge rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"redirect"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"from_list": {
																			"description": "Serve a redirect based on a bulk list lookup.",
																			"properties": {
																				"key": {
																					"description": "Expression that evaluates to the list lookup key.",
																					"example": "http.request.full_uri",
																					"minLength": 1,
																					"title": "Key",
																					"type": "string"
																				},
																				"name": {
																					"description": "The name of the list to match against.",
																					"example": "list1",
																					"maxLength": 50,
																					"pattern": "^[a-zA-Z0-9_]+$",
																					"title": "Name",
																					"type": "string"
																				}
																			},
																			"title": "Bulk Redirect",
																			"type": "object"
																		},
																		"from_value": {
																			"description": "Serve a redirect based on the request properties.",
																			"properties": {
																				"preserve_query_string": {
																					"description": "Keep the query string of the original request.",
																					"title": "Preserve query string",
																					"type": "boolean"
																				},
																				"status_code": {
																					"description": "The status code to be used for the redirect.",
																					"enum": [
																						301,
																						302,
																						303,
																						307,
																						308
																					],
																					"title": "Status Code",
																					"type": "number"
																				},
																				"target_url": {
																					"description": "The URL to redirect the request to.",
																					"example": {
																						"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																					},
																					"oneOf": [
																						{
																							"properties": {
																								"value": {
																									"description": "The URL to redirect the request to.",
																									"minLength": 1,
																									"type": "string"
																								}
																							},
																							"title": "Static URL redirect",
																							"type": "object"
																						},
																						{
																							"properties": {
																								"expression": {
																									"description": "An expression to evaluate to get the URL to redirect the request to.",
																									"minLength": 1,
																									"type": "string"
																								}
																							},
																							"title": "Dynamic URL redirect",
																							"type": "object"
																						}
																					]
																				}
																			},
																			"title": "Single redirect",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Redirect when IP address is not 1.1.1.1"
																}
															},
															"title": "Redirect rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"rewrite"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"headers": {
																			"additionalProperties": {
																				"oneOf": [
																					{
																						"description": "Remove the header from the request.",
																						"properties": {
																							"operation": {
																								"enum": [
																									"remove"
																								],
																								"title": "Operation",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation"
																						],
																						"title": "Remove header",
																						"type": "object"
																					},
																					{
																						"description": "Set a request header with a static value.",
																						"properties": {
																							"operation": {
																								"enum": [
																									"set"
																								],
																								"title": "Operation",
																								"type": "string"
																							},
																							"value": {
																								"description": "Static value for the header.",
																								"example": "static-header-value",
																								"minLength": 1,
																								"title": "Value",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation",
																							"value"
																						],
																						"title": "Static header",
																						"type": "object"
																					},
																					{
																						"description": "Set a request header with a dynamic value.",
																						"properties": {
																							"expression": {
																								"description": "Expression for the header value.",
																								"example": "ip.src",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"operation": {
																								"enum": [
																									"set"
																								],
																								"title": "Operation",
																								"type": "string"
																							}
																						},
																						"required": [
																							"operation",
																							"expression"
																						],
																						"title": "Dynamic header",
																						"type": "object"
																					}
																				]
																			},
																			"description": "Map of request headers to modify.",
																			"example": {
																				"client-http-version": {
																					"expression": "http.request.version",
																					"operation": "set"
																				}
																			},
																			"title": "Headers",
																			"type": "object"
																		},
																		"uri": {
																			"description": "URI to rewrite the request to.",
																			"properties": {
																				"path": {
																					"allOf": [
																						{
																							"description": "Path portion rewrite.",
																							"example": {
																								"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																							},
																							"title": "Path"
																						},
																						{
																							"oneOf": [
																								{
																									"properties": {
																										"value": {
																											"description": "Predefined replacement value.",
																											"example": "/images",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"value"
																									],
																									"title": "Static value",
																									"type": "object"
																								},
																								{
																									"properties": {
																										"expression": {
																											"description": "Expression to evaluate for the replacement value.",
																											"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"expression"
																									],
																									"title": "Dynamic value",
																									"type": "object"
																								}
																							]
																						}
																					]
																				},
																				"query": {
																					"allOf": [
																						{
																							"description": "Query portion rewrite.",
																							"example": {
																								"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																							},
																							"title": "Query"
																						},
																						{
																							"oneOf": [
																								{
																									"properties": {
																										"value": {
																											"description": "Predefined replacement value.",
																											"example": "/images",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"value"
																									],
																									"title": "Static value",
																									"type": "object"
																								},
																								{
																									"properties": {
																										"expression": {
																											"description": "Expression to evaluate for the replacement value.",
																											"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																											"minLength": 1,
																											"type": "string"
																										}
																									},
																									"required": [
																										"expression"
																									],
																									"title": "Dynamic value",
																									"type": "object"
																								}
																							]
																						}
																					]
																				}
																			},
																			"title": "URI",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Add a header when the IP address is not 1.1.1.1"
																}
															},
															"title": "Rewrite rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"route"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"host_header": {
																			"description": "Rewrite the HTTP Host header.",
																			"example": "static.example.com",
																			"minLength": 1,
																			"title": "Host Header",
																			"type": "string"
																		},
																		"origin": {
																			"description": "Override the IP/TCP destination.",
																			"properties": {
																				"host": {
																					"description": "Override the resolved hostname.",
																					"example": "static.example.com",
																					"minLength": 1,
																					"title": "DNS Record",
																					"type": "string"
																				},
																				"port": {
																					"description": "Override the destination port.",
																					"maximum": 65535,
																					"minimum": 1,
																					"title": "Port",
																					"type": "number"
																				}
																			},
																			"title": "Origin",
																			"type": "object"
																		},
																		"sni": {
																			"description": "Override the Server Name Indication (SNI).",
																			"properties": {
																				"value": {
																					"description": "The SNI override.",
																					"example": "static.example.com",
																					"minLength": 1,
																					"title": "Value",
																					"type": "string"
																				}
																			},
																			"required": [
																				"value"
																			],
																			"title": "SNI",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Select origin server when IP address is not 1.1.1.1"
																}
															},
															"title": "Origin rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"score"
																	]
																},
																"action_parameters": {
																	"example": {
																		"increment": 3
																	},
																	"minProperties": 1,
																	"properties": {
																		"increment": {
																			"description": "Increment contains the delta to change the score and can be either positive or negative.",
																			"example": 3,
																			"title": "Increment",
																			"type": "integer"
																		}
																	}
																},
																"description": {
																	"example": "Increment score when the IP address is not 1.1.1.1"
																}
															},
															"title": "Score rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"serve_error"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"content": {
																			"description": "Error response content.",
																			"example": "{\"error\": \"1xxx error occurred\"}\n",
																			"maxLength": 10240,
																			"minLength": 1,
																			"title": "Content",
																			"type": "string"
																		},
																		"content_type": {
																			"description": "Content-type header to set with the response.",
																			"enum": [
																				"application/json",
																				"text/xml",
																				"text/plain",
																				"text/html"
																			],
																			"example": "application/json",
																			"title": "Content Type",
																			"type": "string"
																		},
																		"status_code": {
																			"description": "The status code to use for the error.",
																			"example": 500,
																			"maximum": 999,
																			"minimum": 400,
																			"title": "Status Code",
																			"type": "number"
																		}
																	}
																},
																"description": {
																	"example": "Serve a JSON response to api users on error"
																}
															},
															"title": "Serve Error rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"set_config"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"automatic_https_rewrites": {
																			"description": "Turn on or off Automatic HTTPS Rewrites.",
																			"title": "Automatic HTTPS rewrites",
																			"type": "boolean"
																		},
																		"autominify": {
																			"description": "Select which file extensions to minify automatically.",
																			"properties": {
																				"css": {
																					"description": "Minify CSS files.",
																					"title": "CSS",
																					"type": "boolean"
																				},
																				"html": {
																					"description": "Minify HTML files.",
																					"title": "HTML",
																					"type": "boolean"
																				},
																				"js": {
																					"description": "Minify JS files.",
																					"title": "JS",
																					"type": "boolean"
																				}
																			},
																			"title": "Auto Minify",
																			"type": "object"
																		},
																		"bic": {
																			"description": "Turn on or off Browser Integrity Check.",
																			"title": "Browser Integrity Check",
																			"type": "boolean"
																		},
																		"disable_apps": {
																			"description": "Turn off all active Cloudflare Apps.",
																			"enum": [
																				true
																			],
																			"title": "Disable Apps",
																			"type": "boolean"
																		},
																		"disable_rum": {
																			"description": "Turn off Real User Monitoring (RUM).",
																			"enum": [
																				true
																			],
																			"title": "Disable RUM",
																			"type": "boolean"
																		},
																		"disable_zaraz": {
																			"description": "Turn off Zaraz.",
																			"enum": [
																				true
																			],
																			"title": "Disable Zaraz",
																			"type": "boolean"
																		},
																		"email_obfuscation": {
																			"description": "Turn on or off Email Obfuscation.",
																			"title": "Email Obfuscation",
																			"type": "boolean"
																		},
																		"fonts": {
																			"description": "Turn on or off Cloudflare Fonts.",
																			"title": "Cloudflare Fonts",
																			"type": "boolean"
																		},
																		"hotlink_protection": {
																			"description": "Turn on or off the Hotlink Protection.",
																			"title": "Hotlink Protection",
																			"type": "boolean"
																		},
																		"mirage": {
																			"description": "Turn on or off Mirage.",
																			"title": "Mirage",
																			"type": "boolean"
																		},
																		"opportunistic_encryption": {
																			"description": "Turn on or off Opportunistic Encryption.",
																			"title": "Opportunistic Encryption",
																			"type": "boolean"
																		},
																		"polish": {
																			"description": "Configure the Polish level.",
																			"enum": [
																				"off",
																				"lossless",
																				"lossy"
																			],
																			"title": "Polish",
																			"type": "string"
																		},
																		"rocket_loader": {
																			"description": "Turn on or off Rocket Loader",
																			"title": "Rocket Loader",
																			"type": "boolean"
																		},
																		"security_level": {
																			"description": "Configure the Security Level.",
																			"enum": [
																				"off",
																				"essentially_off",
																				"low",
																				"medium",
																				"high",
																				"under_attack"
																			],
																			"title": "Security Level",
																			"type": "string"
																		},
																		"server_side_excludes": {
																			"description": "Turn on or off Server Side Excludes.",
																			"title": "Server Side Excludes",
																			"type": "boolean"
																		},
																		"ssl": {
																			"description": "Configure the SSL level.",
																			"enum": [
																				"off",
																				"flexible",
																				"full",
																				"strict",
																				"origin_pull"
																			],
																			"title": "SSL",
																			"type": "string"
																		},
																		"sxg": {
																			"description": "Turn on or off Signed Exchanges (SXG).",
																			"title": "Signed Exchanges (SXG)",
																			"type": "boolean"
																		}
																	}
																},
																"description": {
																	"example": "Disable Zaraz when IP address is not 1.1.1.1"
																}
															},
															"title": "Set Config Rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"skip"
																	]
																},
																"action_parameters": {
																	"example": {
																		"ruleset": "current"
																	},
																	"minProperties": 1,
																	"properties": {
																		"phases": {
																			"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																			"items": {
																				"allOf": [
																					{
																						"description": "The phase of the ruleset.",
																						"enum": [
																							"ddos_l4",
																							"ddos_l7",
																							"http_config_settings",
																							"http_custom_errors",
																							"http_log_custom_fields",
																							"http_ratelimit",
																							"http_request_cache_settings",
																							"http_request_dynamic_redirect",
																							"http_request_firewall_custom",
																							"http_request_firewall_managed",
																							"http_request_late_transform",
																							"http_request_origin",
																							"http_request_redirect",
																							"http_request_sanitize",
																							"http_request_sbfm",
																							"http_request_select_configuration",
																							"http_request_transform",
																							"http_response_compression",
																							"http_response_firewall_managed",
																							"http_response_headers_transform",
																							"magic_transit",
																							"magic_transit_ids_managed",
																							"magic_transit_managed"
																						],
																						"example": "http_request_firewall_custom",
																						"title": "Phase",
																						"type": "string"
																					},
																					{
																						"description": "A phase to skip the execution of."
																					}
																				]
																			},
																			"minItems": 1,
																			"title": "Phases",
																			"type": "array",
																			"uniqueItems": true
																		},
																		"products": {
																			"description": "A list of legacy security products to skip the execution of.",
																			"items": {
																				"description": "The name of a legacy security product to skip the execution of.",
																				"enum": [
																					"bic",
																					"hot",
																					"rateLimit",
																					"securityLevel",
																					"uaBlock",
																					"waf",
																					"zoneLockdown"
																				],
																				"title": "Product",
																				"type": "string"
																			},
																			"minItems": 1,
																			"title": "Products",
																			"type": "array",
																			"uniqueItems": true
																		},
																		"rules": {
																			"additionalProperties": {
																				"description": "A list of rule IDs in the ruleset to skip the execution of.",
																				"items": {
																					"allOf": [
																						{
																							"description": "The unique ID of the rule.",
																							"example": "3a03d665bac047339bb530ecb439a90d",
																							"pattern": "^[0-9a-f]{32}$",
																							"title": "ID",
																							"type": "string"
																						},
																						{
																							"description": "The ID of a rule in the ruleset to skip the execution of.",
																							"example": "8ac8bc2a661e475d940980f9317f28e1",
																							"title": "Rule"
																						}
																					]
																				},
																				"minItems": 1,
																				"title": "Rules",
																				"type": "array",
																				"uniqueItems": true
																			},
																			"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																			"example": {
																				"4814384a9e5d4991b9815dcfc25d2f1f": [
																					"8ac8bc2a661e475d940980f9317f28e1"
																				]
																			},
																			"minProperties": 1,
																			"title": "Rules",
																			"type": "object"
																		},
																		"ruleset": {
																			"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																			"enum": [
																				"current"
																			],
																			"title": "Ruleset",
																			"type": "string"
																		},
																		"rulesets": {
																			"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																			"items": {
																				"allOf": [
																					{
																						"description": "The unique ID of the ruleset.",
																						"example": "2f2feab2026849078ba485f918791bdc",
																						"pattern": "^[0-9a-f]{32}$",
																						"title": "ID",
																						"type": "string"
																					},
																					{
																						"description": "The ID of a ruleset to skip the execution of.",
																						"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																						"title": "Ruleset"
																					}
																				]
																			},
																			"minItems": 1,
																			"title": "Rulesets",
																			"type": "array",
																			"uniqueItems": true
																		}
																	}
																},
																"description": {
																	"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																}
															},
															"title": "Skip rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"set_cache_settings"
																	]
																},
																"action_parameters": {
																	"properties": {
																		"additional_cacheable_ports": {
																			"description": "List of additional ports that caching can be enabled on.",
																			"items": {
																				"description": "A port to enable caching on",
																				"title": "Additional Cacheable Port",
																				"type": "integer"
																			},
																			"title": "Additional Cacheable Ports (Enterprise-only)",
																			"type": "array"
																		},
																		"browser_ttl": {
																			"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																			"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																			"properties": {
																				"default": {
																					"description": "The TTL (in seconds) if you choose override_origin mode.",
																					"title": "Default TTL",
																					"type": "integer"
																				},
																				"mode": {
																					"description": "Determines which browser ttl mode to use.",
																					"enum": [
																						"respect_origin",
																						"bypass_by_default",
																						"override_origin"
																					],
																					"title": "Mode",
																					"type": "string"
																				}
																			},
																			"required": [
																				"mode"
																			],
																			"title": "Browser TTL",
																			"type": "object"
																		},
																		"cache": {
																			"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																			"title": "Cache",
																			"type": "boolean"
																		},
																		"cache_key": {
																			"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																			"properties": {
																				"cache_by_device_type": {
																					"description": "Separate cached content based on the visitor’s device type",
																					"title": "Cache by Device Type",
																					"type": "boolean"
																				},
																				"cache_deception_armor": {
																					"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																					"title": "Cache Deception Armor",
																					"type": "boolean"
																				},
																				"custom_key": {
																					"description": "Customize which components of the request are included or excluded from the cache key.",
																					"properties": {
																						"cookie": {
																							"description": "The cookies to include in building the cache key.",
																							"properties": {
																								"check_presence": {
																									"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																									"items": {
																										"description": "A cookie name to check presence of.",
																										"title": "Cookie name",
																										"type": "string"
																									},
																									"title": "Check presence of cookies",
																									"type": "array"
																								},
																								"include": {
																									"description": "Include these cookies' names and their values.",
																									"items": {
																										"description": "Cookie name and corresponding value to include.",
																										"title": "Cookie name",
																										"type": "string"
																									},
																									"title": "Include cookies",
																									"type": "array"
																								}
																							},
																							"title": "Cookie",
																							"type": "object"
																						},
																						"header": {
																							"description": "The header names and values to include in building the cache key.",
																							"properties": {
																								"check_presence": {
																									"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																									"items": {
																										"description": "A header name to check presence of.",
																										"title": "Header name",
																										"type": "string"
																									},
																									"title": "Check presence of headers",
																									"type": "array"
																								},
																								"exclude_origin": {
																									"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																									"title": "Exclude origin header",
																									"type": "boolean"
																								},
																								"include": {
																									"description": "Include these headers' names and their values.",
																									"items": {
																										"description": "Header name and corresponding value to include.",
																										"title": "Header name",
																										"type": "string"
																									},
																									"title": "Include headers",
																									"type": "array"
																								}
																							},
																							"title": "Headers",
																							"type": "object"
																						},
																						"host": {
																							"description": "Whether to use the original host or the resolved host in the cache key.",
																							"properties": {
																								"resolved": {
																									"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																									"example": true,
																									"title": "Use Resolved host",
																									"type": "boolean"
																								}
																							},
																							"title": "Host",
																							"type": "object"
																						},
																						"query_string": {
																							"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																							"properties": {
																								"exclude": {
																									"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																									"properties": {
																										"all": {
																											"description": "Exclude all query string parameters from use in building the cache key.",
																											"title": "All",
																											"type": "boolean"
																										},
																										"list": {
																											"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																											"items": {
																												"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																												"title": "parameter",
																												"type": "string"
																											},
																											"title": "List",
																											"type": "array"
																										}
																									},
																									"title": "Excluded query string parameters",
																									"type": "object"
																								},
																								"include": {
																									"description": "build the cache key using a list of query string parameters that ARE in the request.",
																									"properties": {
																										"all": {
																											"description": "Use all query string parameters in the cache key.",
																											"title": "All",
																											"type": "boolean"
																										},
																										"list": {
																											"description": "A list of query string parameters used to build the cache key.",
																											"items": {
																												"description": "parameter to include in the list of query string parameters used to build a cache key.",
																												"title": "parameter",
																												"type": "string"
																											},
																											"title": "List",
																											"type": "array"
																										}
																									},
																									"title": "Included query string parameters",
																									"type": "object"
																								}
																							},
																							"title": "Query String",
																							"type": "object"
																						},
																						"user": {
																							"description": "Characteristics of the request user agent used in building the cache key.",
																							"properties": {
																								"device_type": {
																									"description": "Use the user agent's device type in the cache key.",
																									"title": "Device Type",
																									"type": "boolean"
																								},
																								"geo": {
																									"description": "Use the user agents's country in the cache key.",
																									"title": "Country",
																									"type": "boolean"
																								},
																								"lang": {
																									"description": "Use the user agent's language in the cache key.",
																									"title": "Language",
																									"type": "boolean"
																								}
																							},
																							"title": "User",
																							"type": "object"
																						}
																					},
																					"title": "Custom Key",
																					"type": "object"
																				},
																				"ignore_query_strings_order": {
																					"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																					"title": "Ignore Query Strings Order",
																					"type": "boolean"
																				}
																			},
																			"title": "Cache Key",
																			"type": "object"
																		},
																		"cache_reserve": {
																			"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																			"properties": {
																				"eligible": {
																					"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																					"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																					"title": "Eligible",
																					"type": "boolean"
																				},
																				"min_file_size": {
																					"description": "The minimum file size eligible for store in cache reserve.",
																					"title": "Minimum File Size",
																					"type": "integer"
																				}
																			},
																			"required": [
																				"eligible",
																				"min_file_size"
																			],
																			"title": "CacheReserve",
																			"type": "object"
																		},
																		"edge_ttl": {
																			"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																			"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																			"properties": {
																				"default": {
																					"description": "The TTL (in seconds) if you choose override_origin mode.",
																					"maximum": 9223372036854776000,
																					"minimum": 0,
																					"title": "Default",
																					"type": "integer"
																				},
																				"mode": {
																					"description": "edge ttl options",
																					"enum": [
																						"respect_origin",
																						"bypass_by_default",
																						"override_origin"
																					],
																					"title": "Mode",
																					"type": "string"
																				},
																				"status_code_ttl": {
																					"description": "List of single status codes, or status code ranges to apply the selected mode",
																					"items": {
																						"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																						"properties": {
																							"status_code_range": {
																								"description": "The range of status codes used to apply the selected mode.",
																								"properties": {
																									"from": {
																										"description": "response status code lower bound",
																										"title": "Status Code lower bound",
																										"type": "integer"
																									},
																									"to": {
																										"description": "response status code upper bound",
																										"title": "Status Code upper bound",
																										"type": "integer"
																									}
																								},
																								"required": [
																									"from",
																									"to"
																								],
																								"title": "Status Code Range",
																								"type": "object"
																							},
																							"status_code_value": {
																								"description": "Set the ttl for responses with this specific status code",
																								"title": "Status Code Value",
																								"type": "integer"
																							},
																							"value": {
																								"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																								"title": "TTL value",
																								"type": "integer"
																							}
																						},
																						"required": [
																							"value"
																						],
																						"title": "Status Code TTL",
																						"type": "object"
																					},
																					"title": "Status Code TTLs",
																					"type": "array"
																				}
																			},
																			"required": [
																				"mode",
																				"default",
																				"status_code_ttl"
																			],
																			"title": "Edge TTL",
																			"type": "object"
																		},
																		"origin_cache_control": {
																			"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																			"title": "Origin Cache Control (Enterprise-only)",
																			"type": "boolean"
																		},
																		"origin_error_page_passthru": {
																			"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																			"title": "Origin Error Page Passthru",
																			"type": "boolean"
																		},
																		"read_timeout": {
																			"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																			"example": 900,
																			"title": "Read Timeout (Enterprise-only)",
																			"type": "integer"
																		},
																		"respect_strong_etags": {
																			"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																			"title": "Respect Strong Etags",
																			"type": "boolean"
																		},
																		"serve_stale": {
																			"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																			"properties": {
																				"disable_stale_while_updating": {
																					"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																					"title": "Disable Stale While Updating",
																					"type": "boolean"
																				}
																			},
																			"required": [
																				"disable_stale_while_updating"
																			],
																			"title": "Serve Stale",
																			"type": "object"
																		}
																	}
																},
																"description": {
																	"example": "Set cache settings when the hostname  address is not example.com"
																}
															},
															"title": "Set Cache Settings rule"
														}
													]
												},
												{
													"allOf": [
														{
															"properties": {
																"action": {
																	"description": "The action to perform when the rule matches.",
																	"pattern": "^[a-z]+$",
																	"title": "Action",
																	"type": "string"
																},
																"action_parameters": {
																	"description": "The parameters configuring the rule's action.",
																	"title": "Action parameters",
																	"type": "object"
																},
																"categories": {
																	"description": "The categories of the rule.",
																	"example": [
																		"directory-traversal",
																		"header"
																	],
																	"items": {
																		"description": "A category of the rule.",
																		"example": "directory-traversal",
																		"minLength": 1,
																		"title": "Category",
																		"type": "string"
																	},
																	"minItems": 1,
																	"readOnly": true,
																	"title": "Categories",
																	"type": "array",
																	"uniqueItems": true
																},
																"description": {
																	"default": "",
																	"description": "An informative description of the rule.",
																	"title": "Description",
																	"type": "string"
																},
																"enabled": {
																	"allOf": [
																		{
																			"description": "Whether the rule should be executed.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		},
																		{
																			"default": true
																		}
																	]
																},
																"expression": {
																	"description": "The expression defining which traffic will match the rule.",
																	"example": "ip.src ne 1.1.1.1",
																	"minLength": 1,
																	"title": "Expression",
																	"type": "string"
																},
																"id": {
																	"description": "The unique ID of the rule.",
																	"example": "3a03d665bac047339bb530ecb439a90d",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																"last_updated": {
																	"description": "The timestamp of when the rule was last modified.",
																	"example": "2000-01-01T00:00:00.000000Z",
																	"format": "date-time",
																	"readOnly": true,
																	"title": "Last updated",
																	"type": "string"
																},
																"logging": {
																	"description": "An object configuring the rule's logging behavior.",
																	"properties": {
																		"enabled": {
																			"description": "Whether to generate a log when the rule matches.",
																			"example": true,
																			"title": "Enabled",
																			"type": "boolean"
																		}
																	},
																	"required": [
																		"enabled"
																	],
																	"title": "Logging",
																	"type": "object"
																},
																"ref": {
																	"description": "The reference of the rule (the rule ID by default).",
																	"example": "my_ref",
																	"minLength": 1,
																	"title": "Ref",
																	"type": "string"
																},
																"version": {
																	"description": "The version of the rule.",
																	"example": "1",
																	"pattern": "^[0-9]+$",
																	"readOnly": true,
																	"title": "Version",
																	"type": "string"
																}
															},
															"required": [
																"version",
																"last_updated"
															],
															"title": "Rule",
															"type": "object"
														},
														{
															"properties": {
																"action": {
																	"enum": [
																		"log_custom_field"
																	]
																},
																"action_parameters": {
																	"minProperties": 1,
																	"properties": {
																		"cookie_fields": {
																			"description": "The cookie fields to log.",
																			"example": [
																				{
																					"name": "cookie_name_1"
																				}
																			],
																			"items": {
																				"description": "The cookie field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "cookie_name_1",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Cookie field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Cookie fields",
																			"type": "array"
																		},
																		"request_fields": {
																			"description": "The request fields to log.",
																			"example": [
																				{
																					"name": "http_request_header_name_1_in_lower_case"
																				}
																			],
																			"items": {
																				"description": "The request field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "http_request_header_name_1_in_lower_case",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Request field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Request fields",
																			"type": "array"
																		},
																		"response_fields": {
																			"description": "The response fields to log.",
																			"example": [
																				{
																					"name": "http_response_header_name_1_in_lower_case"
																				}
																			],
																			"items": {
																				"description": "The response field to log.",
																				"properties": {
																					"name": {
																						"description": "The name of the field.",
																						"example": "http_response_header_name_1_in_lower_case",
																						"minLength": 1,
																						"title": "Name",
																						"type": "string"
																					}
																				},
																				"required": [
																					"name"
																				],
																				"title": "Response field",
																				"type": "object"
																			},
																			"minItems": 1,
																			"title": "Response fields",
																			"type": "array"
																		}
																	}
																},
																"description": {
																	"example": "Log custom field when the IP address is not 1.1.1.1"
																}
															},
															"title": "Log Custom Field rule"
														}
													]
												}
											]
										},
										"title": "Rules",
										"type": "array"
									}
								},
								"required": [
									"rules"
								]
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"enum": [
												[]
											]
										},
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"id": {
															"allOf": [
																{
																	"description": "The unique ID of the ruleset.",
																	"example": "2f2feab2026849078ba485f918791bdc",
																	"pattern": "^[0-9a-f]{32}$",
																	"title": "ID",
																	"type": "string"
																},
																{
																	"readOnly": true
																}
															]
														},
														"kind": {
															"description": "The kind of the ruleset.",
															"enum": [
																"managed",
																"custom",
																"root",
																"zone"
															],
															"example": "root",
															"title": "Kind",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"format": "date-time",
															"readOnly": true,
															"title": "Last updated",
															"type": "string"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"minLength": 1,
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"description": "The phase of the ruleset.",
															"enum": [
																"ddos_l4",
																"ddos_l7",
																"http_config_settings",
																"http_custom_errors",
																"http_log_custom_fields",
																"http_ratelimit",
																"http_request_cache_settings",
																"http_request_dynamic_redirect",
																"http_request_firewall_custom",
																"http_request_firewall_managed",
																"http_request_late_transform",
																"http_request_origin",
																"http_request_redirect",
																"http_request_sanitize",
																"http_request_sbfm",
																"http_request_select_configuration",
																"http_request_transform",
																"http_response_compression",
																"http_response_firewall_managed",
																"http_response_headers_transform",
																"magic_transit",
																"magic_transit_ids_managed",
																"magic_transit_managed"
															],
															"example": "http_request_firewall_custom",
															"title": "Phase",
															"type": "string"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"readOnly": true,
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"last_updated"
													],
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"allOf": [
																	{
																		"discriminator": {
																			"mapping": {
																				"block": "#/components/schemas/rulesets_BlockRule",
																				"challenge": "#/components/schemas/rulesets_ChallengeRule",
																				"compress_response": "#/components/schemas/rulesets_CompressResponseRule",
																				"execute": "#/components/schemas/rulesets_ExecuteRule",
																				"js_challenge": "#/components/schemas/rulesets_JsChallengeRule",
																				"log": "#/components/schemas/rulesets_LogRule",
																				"log_custom_field": "#/components/schemas/rulesets_LogCustomFieldRule",
																				"managed_challenge": "#/components/schemas/rulesets_ManagedChallengeRule",
																				"redirect": "#/components/schemas/rulesets_RedirectRule",
																				"rewrite": "#/components/schemas/rulesets_RewriteRule",
																				"route": "#/components/schemas/rulesets_RouteRule",
																				"score": "#/components/schemas/rulesets_ScoreRule",
																				"serve_error": "#/components/schemas/rulesets_ServeErrorRule",
																				"set_cache_settings": "#/components/schemas/rulesets_SetCacheSettingsRule",
																				"set_config": "#/components/schemas/rulesets_SetConfigRule",
																				"skip": "#/components/schemas/rulesets_SkipRule"
																			},
																			"propertyName": "action"
																		},
																		"oneOf": [
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"block"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"response": {
																										"description": "The response to show when the block is applied.",
																										"properties": {
																											"content": {
																												"description": "The content to return.",
																												"example": "{\n  \"success\": false,\n  \"error\": \"you have been blocked\"\n}",
																												"minLength": 1,
																												"title": "Content",
																												"type": "string"
																											},
																											"content_type": {
																												"description": "The type of the content to return.",
																												"example": "application/json",
																												"minLength": 1,
																												"title": "Content type",
																												"type": "string"
																											},
																											"status_code": {
																												"description": "The status code to return.",
																												"maximum": 499,
																												"minimum": 400,
																												"title": "Status code",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"status_code",
																											"content",
																											"content_type"
																										],
																										"title": "Response",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Block when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Block rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"challenge"
																								]
																							},
																							"description": {
																								"example": "Issue an Interactive Challenge if the visitor had not solved an Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"compress_response"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"algorithms": {
																										"description": "Custom order for compression algorithms.",
																										"example": [
																											{
																												"name": "none"
																											}
																										],
																										"items": {
																											"description": "Compression algorithm to enable.",
																											"properties": {
																												"name": {
																													"description": "Name of compression algorithm to enable.",
																													"enum": [
																														"none",
																														"auto",
																														"default",
																														"gzip",
																														"brotli"
																													],
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"title": "Compression Algorithm",
																											"type": "object"
																										},
																										"title": "Algorithm",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable compression when address is not 1.1.1.1"
																							}
																						},
																						"title": "Compression rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"execute"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"id": {
																										"allOf": [
																											{
																												"description": "The unique ID of the ruleset.",
																												"example": "2f2feab2026849078ba485f918791bdc",
																												"pattern": "^[0-9a-f]{32}$",
																												"title": "ID",
																												"type": "string"
																											},
																											{
																												"description": "The ID of the ruleset to execute.",
																												"example": "4814384a9e5d4991b9815dcfc25d2f1f"
																											}
																										]
																									},
																									"matched_data": {
																										"description": "The configuration to use for matched data logging.",
																										"properties": {
																											"public_key": {
																												"description": "The public key to encrypt matched data logs with.",
																												"example": "iGqBmyIUxuWt1rvxoAharN9FUXneUBxA/Y19PyyrEG0=",
																												"minLength": 1,
																												"title": "Public key",
																												"type": "string"
																											}
																										},
																										"required": [
																											"public_key"
																										],
																										"title": "Matched data",
																										"type": "object"
																									},
																									"overrides": {
																										"description": "A set of overrides to apply to the target ruleset.",
																										"minProperties": 1,
																										"properties": {
																											"action": {
																												"allOf": [
																													{
																														"description": "The action to perform when the rule matches.",
																														"pattern": "^[a-z]+$",
																														"title": "Action",
																														"type": "string"
																													},
																													{
																														"description": "An action to override all rules with. This option has lower precedence than rule and category overrides.",
																														"example": "log"
																													}
																												]
																											},
																											"categories": {
																												"description": "A list of category-level overrides. This option has the second-highest precedence after rule-level overrides.",
																												"items": {
																													"description": "A category-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override rules in the category with.",
																																	"example": "log"
																																}
																															]
																														},
																														"category": {
																															"allOf": [
																																{
																																	"description": "A category of the rule.",
																																	"example": "directory-traversal",
																																	"minLength": 1,
																																	"title": "Category",
																																	"type": "string"
																																},
																																{
																																	"description": "The name of the category to override."
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of rules in the category."
																																}
																															]
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for rules in the category."
																																}
																															]
																														}
																													},
																													"required": [
																														"category"
																													],
																													"title": "Category override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Category overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"enabled": {
																												"allOf": [
																													{
																														"description": "Whether the rule should be executed.",
																														"example": true,
																														"title": "Enabled",
																														"type": "boolean"
																													},
																													{
																														"description": "Whether to enable execution of all rules. This option has lower precedence than rule and category overrides."
																													}
																												]
																											},
																											"rules": {
																												"description": "A list of rule-level overrides. This option has the highest precedence.",
																												"items": {
																													"description": "A rule-level override",
																													"minProperties": 2,
																													"properties": {
																														"action": {
																															"allOf": [
																																{
																																	"description": "The action to perform when the rule matches.",
																																	"pattern": "^[a-z]+$",
																																	"title": "Action",
																																	"type": "string"
																																},
																																{
																																	"description": "The action to override the rule with.",
																																	"example": "log"
																																}
																															]
																														},
																														"enabled": {
																															"allOf": [
																																{
																																	"description": "Whether the rule should be executed.",
																																	"example": true,
																																	"title": "Enabled",
																																	"type": "boolean"
																																},
																																{
																																	"description": "Whether to enable execution of the rule."
																																}
																															]
																														},
																														"id": {
																															"allOf": [
																																{
																																	"description": "The unique ID of the rule.",
																																	"example": "3a03d665bac047339bb530ecb439a90d",
																																	"pattern": "^[0-9a-f]{32}$",
																																	"title": "ID",
																																	"type": "string"
																																},
																																{
																																	"description": "The ID of the rule to override.",
																																	"example": "8ac8bc2a661e475d940980f9317f28e1"
																																}
																															]
																														},
																														"score_threshold": {
																															"description": "The score threshold to use for the rule.",
																															"title": "Score threshold",
																															"type": "integer"
																														},
																														"sensitivity_level": {
																															"allOf": [
																																{
																																	"enum": [
																																		"default",
																																		"medium",
																																		"low",
																																		"eoff"
																																	],
																																	"title": "Sensitivity level",
																																	"type": "string"
																																},
																																{
																																	"description": "The sensitivity level to use for the rule."
																																}
																															]
																														}
																													},
																													"required": [
																														"id"
																													],
																													"title": "Rule override",
																													"type": "object"
																												},
																												"minItems": 1,
																												"title": "Rule overrides",
																												"type": "array",
																												"uniqueItems": true
																											},
																											"sensitivity_level": {
																												"allOf": [
																													{
																														"enum": [
																															"default",
																															"medium",
																															"low",
																															"eoff"
																														],
																														"title": "Sensitivity level",
																														"type": "string"
																													},
																													{
																														"description": "A sensitivity level to set for all rules. This option has lower precedence than rule and category overrides and is only applicable for DDoS phases."
																													}
																												]
																											}
																										},
																										"title": "Overrides",
																										"type": "object"
																									}
																								},
																								"required": [
																									"id"
																								]
																							},
																							"description": {
																								"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Execute rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"js_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a non-interactive Javascript Challenge if the visitor had not solved a Interactive Challenge, Managed Challenge, or Javascript Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Javascript Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log"
																								]
																							},
																							"description": {
																								"example": "Log when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"managed_challenge"
																								]
																							},
																							"description": {
																								"example": "Issue a Managed Challenge if the visitor had not solved a Managed Challenge or Interactive Challenge prior to the request when the address is not 1.1.1.1"
																							}
																						},
																						"title": "Managed Challenge rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"redirect"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"from_list": {
																										"description": "Serve a redirect based on a bulk list lookup.",
																										"properties": {
																											"key": {
																												"description": "Expression that evaluates to the list lookup key.",
																												"example": "http.request.full_uri",
																												"minLength": 1,
																												"title": "Key",
																												"type": "string"
																											},
																											"name": {
																												"description": "The name of the list to match against.",
																												"example": "list1",
																												"maxLength": 50,
																												"pattern": "^[a-zA-Z0-9_]+$",
																												"title": "Name",
																												"type": "string"
																											}
																										},
																										"title": "Bulk Redirect",
																										"type": "object"
																									},
																									"from_value": {
																										"description": "Serve a redirect based on the request properties.",
																										"properties": {
																											"preserve_query_string": {
																												"description": "Keep the query string of the original request.",
																												"title": "Preserve query string",
																												"type": "boolean"
																											},
																											"status_code": {
																												"description": "The status code to be used for the redirect.",
																												"enum": [
																													301,
																													302,
																													303,
																													307,
																													308
																												],
																												"title": "Status Code",
																												"type": "number"
																											},
																											"target_url": {
																												"description": "The URL to redirect the request to.",
																												"example": {
																													"expression": "concat(\"https://m.example.com\", http.request.uri.path)"
																												},
																												"oneOf": [
																													{
																														"properties": {
																															"value": {
																																"description": "The URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Static URL redirect",
																														"type": "object"
																													},
																													{
																														"properties": {
																															"expression": {
																																"description": "An expression to evaluate to get the URL to redirect the request to.",
																																"minLength": 1,
																																"type": "string"
																															}
																														},
																														"title": "Dynamic URL redirect",
																														"type": "object"
																													}
																												]
																											}
																										},
																										"title": "Single redirect",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Redirect when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Redirect rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"rewrite"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"headers": {
																										"additionalProperties": {
																											"oneOf": [
																												{
																													"description": "Remove the header from the request.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"remove"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation"
																													],
																													"title": "Remove header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a static value.",
																													"properties": {
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														},
																														"value": {
																															"description": "Static value for the header.",
																															"example": "static-header-value",
																															"minLength": 1,
																															"title": "Value",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"value"
																													],
																													"title": "Static header",
																													"type": "object"
																												},
																												{
																													"description": "Set a request header with a dynamic value.",
																													"properties": {
																														"expression": {
																															"description": "Expression for the header value.",
																															"example": "ip.src",
																															"minLength": 1,
																															"title": "Expression",
																															"type": "string"
																														},
																														"operation": {
																															"enum": [
																																"set"
																															],
																															"title": "Operation",
																															"type": "string"
																														}
																													},
																													"required": [
																														"operation",
																														"expression"
																													],
																													"title": "Dynamic header",
																													"type": "object"
																												}
																											]
																										},
																										"description": "Map of request headers to modify.",
																										"example": {
																											"client-http-version": {
																												"expression": "http.request.version",
																												"operation": "set"
																											}
																										},
																										"title": "Headers",
																										"type": "object"
																									},
																									"uri": {
																										"description": "URI to rewrite the request to.",
																										"properties": {
																											"path": {
																												"allOf": [
																													{
																														"description": "Path portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")"
																														},
																														"title": "Path"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											},
																											"query": {
																												"allOf": [
																													{
																														"description": "Query portion rewrite.",
																														"example": {
																															"expression": "regex_replace(http.request.uri.query, \"foo=bar\", \"\")"
																														},
																														"title": "Query"
																													},
																													{
																														"oneOf": [
																															{
																																"properties": {
																																	"value": {
																																		"description": "Predefined replacement value.",
																																		"example": "/images",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"value"
																																],
																																"title": "Static value",
																																"type": "object"
																															},
																															{
																																"properties": {
																																	"expression": {
																																		"description": "Expression to evaluate for the replacement value.",
																																		"example": "regex_replace(http.request.uri.path, \"/bar$\", \"/baz\")",
																																		"minLength": 1,
																																		"type": "string"
																																	}
																																},
																																"required": [
																																	"expression"
																																],
																																"title": "Dynamic value",
																																"type": "object"
																															}
																														]
																													}
																												]
																											}
																										},
																										"title": "URI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Add a header when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Rewrite rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"route"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"host_header": {
																										"description": "Rewrite the HTTP Host header.",
																										"example": "static.example.com",
																										"minLength": 1,
																										"title": "Host Header",
																										"type": "string"
																									},
																									"origin": {
																										"description": "Override the IP/TCP destination.",
																										"properties": {
																											"host": {
																												"description": "Override the resolved hostname.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "DNS Record",
																												"type": "string"
																											},
																											"port": {
																												"description": "Override the destination port.",
																												"maximum": 65535,
																												"minimum": 1,
																												"title": "Port",
																												"type": "number"
																											}
																										},
																										"title": "Origin",
																										"type": "object"
																									},
																									"sni": {
																										"description": "Override the Server Name Indication (SNI).",
																										"properties": {
																											"value": {
																												"description": "The SNI override.",
																												"example": "static.example.com",
																												"minLength": 1,
																												"title": "Value",
																												"type": "string"
																											}
																										},
																										"required": [
																											"value"
																										],
																										"title": "SNI",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Select origin server when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Origin rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"score"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"increment": 3
																								},
																								"minProperties": 1,
																								"properties": {
																									"increment": {
																										"description": "Increment contains the delta to change the score and can be either positive or negative.",
																										"example": 3,
																										"title": "Increment",
																										"type": "integer"
																									}
																								}
																							},
																							"description": {
																								"example": "Increment score when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Score rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"serve_error"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"content": {
																										"description": "Error response content.",
																										"example": "{\"error\": \"1xxx error occurred\"}\n",
																										"maxLength": 10240,
																										"minLength": 1,
																										"title": "Content",
																										"type": "string"
																									},
																									"content_type": {
																										"description": "Content-type header to set with the response.",
																										"enum": [
																											"application/json",
																											"text/xml",
																											"text/plain",
																											"text/html"
																										],
																										"example": "application/json",
																										"title": "Content Type",
																										"type": "string"
																									},
																									"status_code": {
																										"description": "The status code to use for the error.",
																										"example": 500,
																										"maximum": 999,
																										"minimum": 400,
																										"title": "Status Code",
																										"type": "number"
																									}
																								}
																							},
																							"description": {
																								"example": "Serve a JSON response to api users on error"
																							}
																						},
																						"title": "Serve Error rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_config"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"automatic_https_rewrites": {
																										"description": "Turn on or off Automatic HTTPS Rewrites.",
																										"title": "Automatic HTTPS rewrites",
																										"type": "boolean"
																									},
																									"autominify": {
																										"description": "Select which file extensions to minify automatically.",
																										"properties": {
																											"css": {
																												"description": "Minify CSS files.",
																												"title": "CSS",
																												"type": "boolean"
																											},
																											"html": {
																												"description": "Minify HTML files.",
																												"title": "HTML",
																												"type": "boolean"
																											},
																											"js": {
																												"description": "Minify JS files.",
																												"title": "JS",
																												"type": "boolean"
																											}
																										},
																										"title": "Auto Minify",
																										"type": "object"
																									},
																									"bic": {
																										"description": "Turn on or off Browser Integrity Check.",
																										"title": "Browser Integrity Check",
																										"type": "boolean"
																									},
																									"disable_apps": {
																										"description": "Turn off all active Cloudflare Apps.",
																										"enum": [
																											true
																										],
																										"title": "Disable Apps",
																										"type": "boolean"
																									},
																									"disable_rum": {
																										"description": "Turn off Real User Monitoring (RUM).",
																										"enum": [
																											true
																										],
																										"title": "Disable RUM",
																										"type": "boolean"
																									},
																									"disable_zaraz": {
																										"description": "Turn off Zaraz.",
																										"enum": [
																											true
																										],
																										"title": "Disable Zaraz",
																										"type": "boolean"
																									},
																									"email_obfuscation": {
																										"description": "Turn on or off Email Obfuscation.",
																										"title": "Email Obfuscation",
																										"type": "boolean"
																									},
																									"fonts": {
																										"description": "Turn on or off Cloudflare Fonts.",
																										"title": "Cloudflare Fonts",
																										"type": "boolean"
																									},
																									"hotlink_protection": {
																										"description": "Turn on or off the Hotlink Protection.",
																										"title": "Hotlink Protection",
																										"type": "boolean"
																									},
																									"mirage": {
																										"description": "Turn on or off Mirage.",
																										"title": "Mirage",
																										"type": "boolean"
																									},
																									"opportunistic_encryption": {
																										"description": "Turn on or off Opportunistic Encryption.",
																										"title": "Opportunistic Encryption",
																										"type": "boolean"
																									},
																									"polish": {
																										"description": "Configure the Polish level.",
																										"enum": [
																											"off",
																											"lossless",
																											"lossy"
																										],
																										"title": "Polish",
																										"type": "string"
																									},
																									"rocket_loader": {
																										"description": "Turn on or off Rocket Loader",
																										"title": "Rocket Loader",
																										"type": "boolean"
																									},
																									"security_level": {
																										"description": "Configure the Security Level.",
																										"enum": [
																											"off",
																											"essentially_off",
																											"low",
																											"medium",
																											"high",
																											"under_attack"
																										],
																										"title": "Security Level",
																										"type": "string"
																									},
																									"server_side_excludes": {
																										"description": "Turn on or off Server Side Excludes.",
																										"title": "Server Side Excludes",
																										"type": "boolean"
																									},
																									"ssl": {
																										"description": "Configure the SSL level.",
																										"enum": [
																											"off",
																											"flexible",
																											"full",
																											"strict",
																											"origin_pull"
																										],
																										"title": "SSL",
																										"type": "string"
																									},
																									"sxg": {
																										"description": "Turn on or off Signed Exchanges (SXG).",
																										"title": "Signed Exchanges (SXG)",
																										"type": "boolean"
																									}
																								}
																							},
																							"description": {
																								"example": "Disable Zaraz when IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Set Config Rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"skip"
																								]
																							},
																							"action_parameters": {
																								"example": {
																									"ruleset": "current"
																								},
																								"minProperties": 1,
																								"properties": {
																									"phases": {
																										"description": "A list of phases to skip the execution of. This option is incompatible with the ruleset and rulesets options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The phase of the ruleset.",
																													"enum": [
																														"ddos_l4",
																														"ddos_l7",
																														"http_config_settings",
																														"http_custom_errors",
																														"http_log_custom_fields",
																														"http_ratelimit",
																														"http_request_cache_settings",
																														"http_request_dynamic_redirect",
																														"http_request_firewall_custom",
																														"http_request_firewall_managed",
																														"http_request_late_transform",
																														"http_request_origin",
																														"http_request_redirect",
																														"http_request_sanitize",
																														"http_request_sbfm",
																														"http_request_select_configuration",
																														"http_request_transform",
																														"http_response_compression",
																														"http_response_firewall_managed",
																														"http_response_headers_transform",
																														"magic_transit",
																														"magic_transit_ids_managed",
																														"magic_transit_managed"
																													],
																													"example": "http_request_firewall_custom",
																													"title": "Phase",
																													"type": "string"
																												},
																												{
																													"description": "A phase to skip the execution of."
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Phases",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"products": {
																										"description": "A list of legacy security products to skip the execution of.",
																										"items": {
																											"description": "The name of a legacy security product to skip the execution of.",
																											"enum": [
																												"bic",
																												"hot",
																												"rateLimit",
																												"securityLevel",
																												"uaBlock",
																												"waf",
																												"zoneLockdown"
																											],
																											"title": "Product",
																											"type": "string"
																										},
																										"minItems": 1,
																										"title": "Products",
																										"type": "array",
																										"uniqueItems": true
																									},
																									"rules": {
																										"additionalProperties": {
																											"description": "A list of rule IDs in the ruleset to skip the execution of.",
																											"items": {
																												"allOf": [
																													{
																														"description": "The unique ID of the rule.",
																														"example": "3a03d665bac047339bb530ecb439a90d",
																														"pattern": "^[0-9a-f]{32}$",
																														"title": "ID",
																														"type": "string"
																													},
																													{
																														"description": "The ID of a rule in the ruleset to skip the execution of.",
																														"example": "8ac8bc2a661e475d940980f9317f28e1",
																														"title": "Rule"
																													}
																												]
																											},
																											"minItems": 1,
																											"title": "Rules",
																											"type": "array",
																											"uniqueItems": true
																										},
																										"description": "A mapping of ruleset IDs to a list of rule IDs in that ruleset to skip the execution of. This option is incompatible with the ruleset option.",
																										"example": {
																											"4814384a9e5d4991b9815dcfc25d2f1f": [
																												"8ac8bc2a661e475d940980f9317f28e1"
																											]
																										},
																										"minProperties": 1,
																										"title": "Rules",
																										"type": "object"
																									},
																									"ruleset": {
																										"description": "A ruleset to skip the execution of. This option is incompatible with the rulesets, rules and phases options.",
																										"enum": [
																											"current"
																										],
																										"title": "Ruleset",
																										"type": "string"
																									},
																									"rulesets": {
																										"description": "A list of ruleset IDs to skip the execution of. This option is incompatible with the ruleset and phases options.",
																										"items": {
																											"allOf": [
																												{
																													"description": "The unique ID of the ruleset.",
																													"example": "2f2feab2026849078ba485f918791bdc",
																													"pattern": "^[0-9a-f]{32}$",
																													"title": "ID",
																													"type": "string"
																												},
																												{
																													"description": "The ID of a ruleset to skip the execution of.",
																													"example": "4814384a9e5d4991b9815dcfc25d2f1f",
																													"title": "Ruleset"
																												}
																											]
																										},
																										"minItems": 1,
																										"title": "Rulesets",
																										"type": "array",
																										"uniqueItems": true
																									}
																								}
																							},
																							"description": {
																								"example": "Skip the current ruleset when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Skip rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"set_cache_settings"
																								]
																							},
																							"action_parameters": {
																								"properties": {
																									"additional_cacheable_ports": {
																										"description": "List of additional ports that caching can be enabled on.",
																										"items": {
																											"description": "A port to enable caching on",
																											"title": "Additional Cacheable Port",
																											"type": "integer"
																										},
																										"title": "Additional Cacheable Ports (Enterprise-only)",
																										"type": "array"
																									},
																									"browser_ttl": {
																										"description": "Specify how long client browsers should cache the response. Cloudflare cache purge will not purge content cached on client browsers, so high browser TTLs may lead to stale content.",
																										"example": "{\n    \"mode\": \"override_origin\",\n    \"default\": 1000\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"title": "Default TTL",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "Determines which browser ttl mode to use.",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											}
																										},
																										"required": [
																											"mode"
																										],
																										"title": "Browser TTL",
																										"type": "object"
																									},
																									"cache": {
																										"description": "Mark whether the request’s response from origin is eligible for caching. Caching itself will still depend on the cache-control header and your other caching configurations.",
																										"title": "Cache",
																										"type": "boolean"
																									},
																									"cache_key": {
																										"description": "Define which components of the request are included or excluded from the cache key Cloudflare uses to store the response in cache.",
																										"properties": {
																											"cache_by_device_type": {
																												"description": "Separate cached content based on the visitor’s device type",
																												"title": "Cache by Device Type",
																												"type": "boolean"
																											},
																											"cache_deception_armor": {
																												"description": "Protect from web cache deception attacks while allowing static assets to be cached",
																												"title": "Cache Deception Armor",
																												"type": "boolean"
																											},
																											"custom_key": {
																												"description": "Customize which components of the request are included or excluded from the cache key.",
																												"properties": {
																													"cookie": {
																														"description": "The cookies to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these cookie names. The presence of these cookies is used in building the cache key.",
																																"items": {
																																	"description": "A cookie name to check presence of.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Check presence of cookies",
																																"type": "array"
																															},
																															"include": {
																																"description": "Include these cookies' names and their values.",
																																"items": {
																																	"description": "Cookie name and corresponding value to include.",
																																	"title": "Cookie name",
																																	"type": "string"
																																},
																																"title": "Include cookies",
																																"type": "array"
																															}
																														},
																														"title": "Cookie",
																														"type": "object"
																													},
																													"header": {
																														"description": "The header names and values to include in building the cache key.",
																														"properties": {
																															"check_presence": {
																																"description": "Checks for the presence of these header names. The presence of these headers is used in building the cache key.",
																																"items": {
																																	"description": "A header name to check presence of.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Check presence of headers",
																																"type": "array"
																															},
																															"exclude_origin": {
																																"description": "Whether or not to include the origin header. A value of true will exclude the origin header in the cache key.",
																																"title": "Exclude origin header",
																																"type": "boolean"
																															},
																															"include": {
																																"description": "Include these headers' names and their values.",
																																"items": {
																																	"description": "Header name and corresponding value to include.",
																																	"title": "Header name",
																																	"type": "string"
																																},
																																"title": "Include headers",
																																"type": "array"
																															}
																														},
																														"title": "Headers",
																														"type": "object"
																													},
																													"host": {
																														"description": "Whether to use the original host or the resolved host in the cache key.",
																														"properties": {
																															"resolved": {
																																"description": "Use the resolved host in the cache key. A value of true will use the resolved host, while a value or false will use the original host.",
																																"example": true,
																																"title": "Use Resolved host",
																																"type": "boolean"
																															}
																														},
																														"title": "Host",
																														"type": "object"
																													},
																													"query_string": {
																														"description": "Use the presence or absence of parameters in the query string to build the cache key.",
																														"properties": {
																															"exclude": {
																																"description": "build the cache key using all query string parameters EXCECPT these excluded parameters",
																																"properties": {
																																	"all": {
																																		"description": "Exclude all query string parameters from use in building the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters NOT used to build the cache key. All parameters present in the request but missing in this list will be used to build the cache key.",
																																		"items": {
																																			"description": "A parameter in the list of query string parameters excluded from use in building a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Excluded query string parameters",
																																"type": "object"
																															},
																															"include": {
																																"description": "build the cache key using a list of query string parameters that ARE in the request.",
																																"properties": {
																																	"all": {
																																		"description": "Use all query string parameters in the cache key.",
																																		"title": "All",
																																		"type": "boolean"
																																	},
																																	"list": {
																																		"description": "A list of query string parameters used to build the cache key.",
																																		"items": {
																																			"description": "parameter to include in the list of query string parameters used to build a cache key.",
																																			"title": "parameter",
																																			"type": "string"
																																		},
																																		"title": "List",
																																		"type": "array"
																																	}
																																},
																																"title": "Included query string parameters",
																																"type": "object"
																															}
																														},
																														"title": "Query String",
																														"type": "object"
																													},
																													"user": {
																														"description": "Characteristics of the request user agent used in building the cache key.",
																														"properties": {
																															"device_type": {
																																"description": "Use the user agent's device type in the cache key.",
																																"title": "Device Type",
																																"type": "boolean"
																															},
																															"geo": {
																																"description": "Use the user agents's country in the cache key.",
																																"title": "Country",
																																"type": "boolean"
																															},
																															"lang": {
																																"description": "Use the user agent's language in the cache key.",
																																"title": "Language",
																																"type": "boolean"
																															}
																														},
																														"title": "User",
																														"type": "object"
																													}
																												},
																												"title": "Custom Key",
																												"type": "object"
																											},
																											"ignore_query_strings_order": {
																												"description": "Treat requests with the same query parameters the same, regardless of the order those query parameters are in. A value of true ignores the query strings' order.",
																												"title": "Ignore Query Strings Order",
																												"type": "boolean"
																											}
																										},
																										"title": "Cache Key",
																										"type": "object"
																									},
																									"cache_reserve": {
																										"description": "Mark whether the request's response from origin is eligible for  Cache Reserve (requires a Cache Reserve add-on plan).",
																										"properties": {
																											"eligible": {
																												"description": "Determines whether cache reserve is enabled. If this is true and a request meets eligibility criteria, Cloudflare will write the resource to cache reserve.",
																												"example": "{\n    \"enabled\": true,\n    \"minimum_file_size\": 100000\n}",
																												"title": "Eligible",
																												"type": "boolean"
																											},
																											"min_file_size": {
																												"description": "The minimum file size eligible for store in cache reserve.",
																												"title": "Minimum File Size",
																												"type": "integer"
																											}
																										},
																										"required": [
																											"eligible",
																											"min_file_size"
																										],
																										"title": "CacheReserve",
																										"type": "object"
																									},
																									"edge_ttl": {
																										"description": "TTL (Time to Live) specifies the maximum time to cache a resource in the Cloudflare edge network.",
																										"example": "{\n    \"status_code_ttl\": [\n        {\n            \"status_code_range\": {\n                \"to\": 299\n            },\n            \"value\": 86400\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 300,\n                \"to\": 499\n            },\n            \"value\": 0\n        },\n        {\n            \"status_code_range\": {\n                \"from\": 500\n            },\n            \"value\": -1\n        }\n    ],\n    \"mode\": \"respect_origin\"\n}",
																										"properties": {
																											"default": {
																												"description": "The TTL (in seconds) if you choose override_origin mode.",
																												"maximum": 9223372036854776000,
																												"minimum": 0,
																												"title": "Default",
																												"type": "integer"
																											},
																											"mode": {
																												"description": "edge ttl options",
																												"enum": [
																													"respect_origin",
																													"bypass_by_default",
																													"override_origin"
																												],
																												"title": "Mode",
																												"type": "string"
																											},
																											"status_code_ttl": {
																												"description": "List of single status codes, or status code ranges to apply the selected mode",
																												"items": {
																													"description": "Specify how long Cloudflare should cache the response based on the status code from the origin. Can be a single status code or a range or status codes",
																													"properties": {
																														"status_code_range": {
																															"description": "The range of status codes used to apply the selected mode.",
																															"properties": {
																																"from": {
																																	"description": "response status code lower bound",
																																	"title": "Status Code lower bound",
																																	"type": "integer"
																																},
																																"to": {
																																	"description": "response status code upper bound",
																																	"title": "Status Code upper bound",
																																	"type": "integer"
																																}
																															},
																															"required": [
																																"from",
																																"to"
																															],
																															"title": "Status Code Range",
																															"type": "object"
																														},
																														"status_code_value": {
																															"description": "Set the ttl for responses with this specific status code",
																															"title": "Status Code Value",
																															"type": "integer"
																														},
																														"value": {
																															"description": "Time to cache a response (in seconds). A value of 0 is equivalent to setting the Cache-Control header with the value \"no-cache\". A value of -1 is equivalent to setting Cache-Control header with the value of \"no-store\".",
																															"title": "TTL value",
																															"type": "integer"
																														}
																													},
																													"required": [
																														"value"
																													],
																													"title": "Status Code TTL",
																													"type": "object"
																												},
																												"title": "Status Code TTLs",
																												"type": "array"
																											}
																										},
																										"required": [
																											"mode",
																											"default",
																											"status_code_ttl"
																										],
																										"title": "Edge TTL",
																										"type": "object"
																									},
																									"origin_cache_control": {
																										"description": "When enabled, Cloudflare will aim to strictly adhere to RFC 7234.",
																										"title": "Origin Cache Control (Enterprise-only)",
																										"type": "boolean"
																									},
																									"origin_error_page_passthru": {
																										"description": "Generate Cloudflare error pages from issues sent from the origin server. When on, error pages will trigger for issues from the origin",
																										"title": "Origin Error Page Passthru",
																										"type": "boolean"
																									},
																									"read_timeout": {
																										"description": "Define a timeout value between two successive read operations to your origin server. Historically, the timeout value between two read options from Cloudflare to an origin server is 100 seconds. If you are attempting to reduce HTTP 524 errors because of timeouts from an origin server, try increasing this timeout value.",
																										"example": 900,
																										"title": "Read Timeout (Enterprise-only)",
																										"type": "integer"
																									},
																									"respect_strong_etags": {
																										"description": "Specify whether or not Cloudflare should respect strong ETag (entity tag) headers. When off, Cloudflare converts strong ETag headers to weak ETag headers.",
																										"title": "Respect Strong Etags",
																										"type": "boolean"
																									},
																									"serve_stale": {
																										"description": "Define if Cloudflare should serve stale content while getting the latest content from the origin. If on, Cloudflare will not serve stale content while getting the latest content from the origin.",
																										"properties": {
																											"disable_stale_while_updating": {
																												"description": "Defines whether Cloudflare should serve stale content while updating. If true, Cloudflare will not serve stale content while getting the latest content from the origin.",
																												"title": "Disable Stale While Updating",
																												"type": "boolean"
																											}
																										},
																										"required": [
																											"disable_stale_while_updating"
																										],
																										"title": "Serve Stale",
																										"type": "object"
																									}
																								}
																							},
																							"description": {
																								"example": "Set cache settings when the hostname  address is not example.com"
																							}
																						},
																						"title": "Set Cache Settings rule"
																					}
																				]
																			},
																			{
																				"allOf": [
																					{
																						"properties": {
																							"action": {
																								"description": "The action to perform when the rule matches.",
																								"pattern": "^[a-z]+$",
																								"title": "Action",
																								"type": "string"
																							},
																							"action_parameters": {
																								"description": "The parameters configuring the rule's action.",
																								"title": "Action parameters",
																								"type": "object"
																							},
																							"categories": {
																								"description": "The categories of the rule.",
																								"example": [
																									"directory-traversal",
																									"header"
																								],
																								"items": {
																									"description": "A category of the rule.",
																									"example": "directory-traversal",
																									"minLength": 1,
																									"title": "Category",
																									"type": "string"
																								},
																								"minItems": 1,
																								"readOnly": true,
																								"title": "Categories",
																								"type": "array",
																								"uniqueItems": true
																							},
																							"description": {
																								"default": "",
																								"description": "An informative description of the rule.",
																								"title": "Description",
																								"type": "string"
																							},
																							"enabled": {
																								"allOf": [
																									{
																										"description": "Whether the rule should be executed.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									},
																									{
																										"default": true
																									}
																								]
																							},
																							"expression": {
																								"description": "The expression defining which traffic will match the rule.",
																								"example": "ip.src ne 1.1.1.1",
																								"minLength": 1,
																								"title": "Expression",
																								"type": "string"
																							},
																							"id": {
																								"description": "The unique ID of the rule.",
																								"example": "3a03d665bac047339bb530ecb439a90d",
																								"pattern": "^[0-9a-f]{32}$",
																								"title": "ID",
																								"type": "string"
																							},
																							"last_updated": {
																								"description": "The timestamp of when the rule was last modified.",
																								"example": "2000-01-01T00:00:00.000000Z",
																								"format": "date-time",
																								"readOnly": true,
																								"title": "Last updated",
																								"type": "string"
																							},
																							"logging": {
																								"description": "An object configuring the rule's logging behavior.",
																								"properties": {
																									"enabled": {
																										"description": "Whether to generate a log when the rule matches.",
																										"example": true,
																										"title": "Enabled",
																										"type": "boolean"
																									}
																								},
																								"required": [
																									"enabled"
																								],
																								"title": "Logging",
																								"type": "object"
																							},
																							"ref": {
																								"description": "The reference of the rule (the rule ID by default).",
																								"example": "my_ref",
																								"minLength": 1,
																								"title": "Ref",
																								"type": "string"
																							},
																							"version": {
																								"description": "The version of the rule.",
																								"example": "1",
																								"pattern": "^[0-9]+$",
																								"readOnly": true,
																								"title": "Version",
																								"type": "string"
																							}
																						},
																						"required": [
																							"version",
																							"last_updated"
																						],
																						"title": "Rule",
																						"type": "object"
																					},
																					{
																						"properties": {
																							"action": {
																								"enum": [
																									"log_custom_field"
																								]
																							},
																							"action_parameters": {
																								"minProperties": 1,
																								"properties": {
																									"cookie_fields": {
																										"description": "The cookie fields to log.",
																										"example": [
																											{
																												"name": "cookie_name_1"
																											}
																										],
																										"items": {
																											"description": "The cookie field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "cookie_name_1",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Cookie field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Cookie fields",
																										"type": "array"
																									},
																									"request_fields": {
																										"description": "The request fields to log.",
																										"example": [
																											{
																												"name": "http_request_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The request field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_request_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Request field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Request fields",
																										"type": "array"
																									},
																									"response_fields": {
																										"description": "The response fields to log.",
																										"example": [
																											{
																												"name": "http_response_header_name_1_in_lower_case"
																											}
																										],
																										"items": {
																											"description": "The response field to log.",
																											"properties": {
																												"name": {
																													"description": "The name of the field.",
																													"example": "http_response_header_name_1_in_lower_case",
																													"minLength": 1,
																													"title": "Name",
																													"type": "string"
																												}
																											},
																											"required": [
																												"name"
																											],
																											"title": "Response field",
																											"type": "object"
																										},
																										"minItems": 1,
																										"title": "Response fields",
																										"type": "array"
																									}
																								}
																							},
																							"description": {
																								"example": "Log custom field when the IP address is not 1.1.1.1"
																							}
																						},
																						"title": "Log Custom Field rule"
																					}
																				]
																			}
																		]
																	},
																	{
																		"required": [
																			"id",
																			"expression",
																			"action",
																			"ref",
																			"enabled"
																		]
																	}
																]
															},
															"title": "Rules",
															"type": "array"
														}
													},
													"required": [
														"name",
														"kind",
														"phase",
														"rules"
													]
												}
											]
										},
										"success": {
											"enum": [
												true
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"description": "A list of error messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Errors",
											"type": "array"
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"description": "A message.",
												"properties": {
													"code": {
														"description": "A unique code for this message.",
														"example": 10000,
														"title": "Code",
														"type": "integer"
													},
													"message": {
														"description": "A text description of this message.",
														"example": "something bad happened",
														"minLength": 1,
														"title": "Description",
														"type": "string"
													},
													"source": {
														"description": "The source of this message.",
														"properties": {
															"pointer": {
																"description": "A JSON pointer to the field that is the source of the message.",
																"example": "/rules/0/action",
																"minLength": 1,
																"title": "Pointer",
																"type": "string"
															}
														},
														"required": [
															"pointer"
														],
														"title": "Source",
														"type": "object"
													}
												},
												"required": [
													"message"
												],
												"title": "Message",
												"type": "object"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"enum": [
												null
											]
										},
										"success": {
											"enum": [
												false
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "A failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update a zone entry point ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}