{
	"GET /radar/email/routing/summary/arc": {
		"description": "Percentage distribution of emails classified per ARC validation.",
		"operationId": "radar-get-email-routing-summary-by-arc",
		"parameters": [
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"type": "object"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"FAIL": {
													"example": "2",
													"type": "string"
												},
												"NONE": {
													"example": "53",
													"type": "string"
												},
												"PASS": {
													"example": "45",
													"type": "string"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get ARC Validations Summary",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/summary/dkim": {
		"description": "Percentage distribution of emails classified per DKIM validation.",
		"operationId": "radar-get-email-routing-summary-by-dkim",
		"parameters": [
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"type": "object"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"FAIL": {
													"example": "2",
													"type": "string"
												},
												"NONE": {
													"example": "53",
													"type": "string"
												},
												"PASS": {
													"example": "45",
													"type": "string"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DKIM Validations Summary",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/summary/dmarc": {
		"description": "Percentage distribution of emails classified per DMARC validation.",
		"operationId": "radar-get-email-routing-summary-by-dmarc",
		"parameters": [
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"type": "object"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"FAIL": {
													"example": "2",
													"type": "string"
												},
												"NONE": {
													"example": "53",
													"type": "string"
												},
												"PASS": {
													"example": "45",
													"type": "string"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DMARC Validations Summary",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/summary/encrypted": {
		"description": "Percentage distribution of emails by Encrypted",
		"operationId": "radar-get-email-routing-summary-by-encrypted",
		"parameters": [
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"type": "object"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"ENCRYPTED": {
													"example": "65",
													"type": "string"
												},
												"NOT_ENCRYPTED": {
													"example": "35",
													"type": "string"
												}
											},
											"required": [
												"ENCRYPTED",
												"NOT_ENCRYPTED"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Encrypted Summary",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/summary/ip_version": {
		"description": "Percentage distribution of emails by Ip Version.",
		"operationId": "radar-get-email-routing-summary-by-ip-version",
		"parameters": [
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"type": "object"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"IPv4": {
													"example": "65",
													"type": "string"
												},
												"IPv6": {
													"example": "35",
													"type": "string"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Ip Version Summary",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/summary/spf": {
		"description": "Percentage distribution of emails classified per SPF validation.",
		"operationId": "radar-get-email-routing-summary-by-spf",
		"parameters": [
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"properties": {
												"confidenceInfo": {
													"properties": {
														"annotations": {
															"items": {
																"properties": {
																	"dataSource": {
																		"example": "ALL",
																		"type": "string"
																	},
																	"description": {
																		"example": "Cable cut in Tonga",
																		"type": "string"
																	},
																	"endTime": {
																		"format": "date-time",
																		"type": "string"
																	},
																	"eventType": {
																		"example": "OUTAGE",
																		"type": "string"
																	},
																	"isInstantaneous": {
																		"type": "object"
																	},
																	"linkedUrl": {
																		"type": "string"
																	},
																	"startTime": {
																		"format": "date-time",
																		"type": "string"
																	}
																},
																"required": [
																	"dataSource",
																	"eventType",
																	"description",
																	"isInstantaneous"
																],
																"type": "object"
															},
															"type": "array"
														},
														"level": {
															"type": "integer"
														}
													},
													"type": "object"
												},
												"dateRange": {
													"items": {
														"properties": {
															"endTime": {
																"description": "Adjusted end of date range.",
																"example": "2022-09-17T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															},
															"startTime": {
																"description": "Adjusted start of date range.",
																"example": "2022-09-16T10:22:57.555Z",
																"format": "date-time",
																"type": "string"
															}
														},
														"required": [
															"startTime",
															"endTime"
														],
														"type": "object"
													},
													"type": "array"
												},
												"lastUpdated": {
													"example": "2023-07-26T08:59:57Z",
													"type": "string"
												},
												"normalization": {
													"example": "PERCENTAGE",
													"type": "string"
												}
											},
											"required": [
												"dateRange",
												"normalization",
												"lastUpdated"
											],
											"type": "object"
										},
										"summary_0": {
											"properties": {
												"FAIL": {
													"example": "2",
													"type": "string"
												},
												"NONE": {
													"example": "53",
													"type": "string"
												},
												"PASS": {
													"example": "45",
													"type": "string"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"summary_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get SPF Validations Summary",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/timeseries_groups/arc": {
		"description": "Percentage distribution of emails classified per Arc validation over time.",
		"operationId": "radar-get-email-routing-timeseries-group-by-arc",
		"parameters": [
			{
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get ARC Validations Time Series",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/timeseries_groups/dkim": {
		"description": "Percentage distribution of emails classified per DKIM validation over time.",
		"operationId": "radar-get-email-routing-timeseries-group-by-dkim",
		"parameters": [
			{
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DKIM Validations Time Series",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/timeseries_groups/dmarc": {
		"description": "Percentage distribution of emails classified per DMARC validation over time.",
		"operationId": "radar-get-email-routing-timeseries-group-by-dmarc",
		"parameters": [
			{
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get DMARC Validations Time Series",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/timeseries_groups/encrypted": {
		"description": "Percentage distribution of emails by Encrypted over time.",
		"operationId": "radar-get-email-routing-timeseries-group-by-encrypted",
		"parameters": [
			{
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"ENCRYPTED": {
													"items": {
														"example": "65",
														"type": "string"
													},
													"type": "array"
												},
												"NOT_ENCRYPTED": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"ENCRYPTED",
												"NOT_ENCRYPTED"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Encrypted Time Series",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/timeseries_groups/ip_version": {
		"description": "Percentage distribution of emails by Ip Version over time.",
		"operationId": "radar-get-email-routing-timeseries-group-by-ip-version",
		"parameters": [
			{
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "spf",
				"schema": {
					"description": "Filter for spf.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"IPv4": {
													"items": {
														"example": "65",
														"type": "string"
													},
													"type": "array"
												},
												"IPv6": {
													"items": {
														"example": "35",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"IPv4",
												"IPv6"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get Ip Version Time Series",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /radar/email/routing/timeseries_groups/spf": {
		"description": "Percentage distribution of emails classified per SPF validation over time.",
		"operationId": "radar-get-email-routing-timeseries-group-by-spf",
		"parameters": [
			{
				"in": "query",
				"name": "aggInterval",
				"schema": {
					"description": "Aggregation interval results should be returned in (for example, in 15 minutes or 1 hour intervals). Refer to [Aggregation intervals](https://developers.cloudflare.com/radar/concepts/aggregation-intervals/).",
					"enum": [
						"15m",
						"1h",
						"1d",
						"1w"
					],
					"example": "1h",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "name",
				"schema": {
					"description": "Array of names that will be used to name the series in responses.",
					"example": "main_series",
					"items": {
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateRange",
				"schema": {
					"description": "For example, use `7d` and `7dControl` to compare this week with the previous week. Use this parameter or set specific start and end dates (`dateStart` and `dateEnd` parameters).",
					"items": {
						"enum": [
							"1d",
							"2d",
							"7d",
							"14d",
							"28d",
							"12w",
							"24w",
							"52w",
							"1dControl",
							"2dControl",
							"7dControl",
							"14dControl",
							"28dControl",
							"12wControl",
							"24wControl"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateStart",
				"schema": {
					"description": "Array of datetimes to filter the start of a series.",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dateEnd",
				"schema": {
					"description": "End of the date range (inclusive).",
					"example": "2023-09-01T11:41:33.782Z",
					"items": {
						"format": "date-time",
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "arc",
				"schema": {
					"description": "Filter for arc (Authenticated Received Chain).",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dkim",
				"schema": {
					"description": "Filter for dkim.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "dmarc",
				"schema": {
					"description": "Filter for dmarc.",
					"example": "PASS",
					"items": {
						"enum": [
							"PASS",
							"NONE",
							"FAIL"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "ipVersion",
				"schema": {
					"description": "Filter for ip version.",
					"example": "IPv4",
					"items": {
						"enum": [
							"IPv4",
							"IPv6"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "encrypted",
				"schema": {
					"description": "Filter for encrypted emails.",
					"example": "ENCRYPTED",
					"items": {
						"enum": [
							"ENCRYPTED",
							"NOT_ENCRYPTED"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "format",
				"schema": {
					"description": "Format results are returned in.",
					"enum": [
						"JSON",
						"CSV"
					],
					"example": "json",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"result": {
									"properties": {
										"meta": {
											"type": "object"
										},
										"serie_0": {
											"properties": {
												"FAIL": {
													"items": {
														"example": "2",
														"type": "string"
													},
													"type": "array"
												},
												"NONE": {
													"items": {
														"example": "53",
														"type": "string"
													},
													"type": "array"
												},
												"PASS": {
													"items": {
														"example": "45",
														"type": "string"
													},
													"type": "array"
												}
											},
											"required": [
												"NONE",
												"PASS",
												"FAIL"
											],
											"type": "object"
										}
									},
									"required": [
										"meta",
										"serie_0"
									],
									"type": "object"
								},
								"success": {
									"example": true,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success"
							],
							"type": "object"
						}
					}
				},
				"description": "Successful Response"
			},
			"400": {
				"content": {
					"application/json": {
						"schema": {
							"properties": {
								"errors": {
									"items": {
										"properties": {
											"message": {
												"type": "string"
											}
										},
										"required": [
											"message"
										],
										"type": "object"
									},
									"type": "array"
								},
								"result": {
									"type": "object"
								},
								"success": {
									"example": false,
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors"
							],
							"type": "object"
						}
					}
				},
				"description": "Bad Request"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": [],
				"api_token": []
			}
		],
		"summary": "Get SPF Validations Time Series",
		"tags": [
			"Radar Email Routing"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.api.user.read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}