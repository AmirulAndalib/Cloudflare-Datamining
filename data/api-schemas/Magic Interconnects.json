{
	"GET /accounts/{account_identifier}/magic/cf_interconnects": {
		"description": "Lists interconnects associated with an account.",
		"operationId": "magic-interconnects-list-interconnects",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"interconnects": {
													"items": {
														"properties": {
															"colo_name": {
																"$ref": "#/components/schemas/components-schemas-name-SGE9Wn9k"
															},
															"created_on": {
																"$ref": "#/components/schemas/schemas-created_on-lEbUK7aW"
															},
															"description": {
																"$ref": "#/components/schemas/interconnect_components-schemas-description"
															},
															"gre": {
																"$ref": "#/components/schemas/gre"
															},
															"health_check": {
																"$ref": "#/components/schemas/schemas-health_check"
															},
															"id": {
																"$ref": "#/components/schemas/schemas-identifier-0ptsYQhi"
															},
															"interface_address": {
																"$ref": "#/components/schemas/interface_address"
															},
															"modified_on": {
																"$ref": "#/components/schemas/schemas-modified_on-OtHvypTs"
															},
															"mtu": {
																"$ref": "#/components/schemas/schemas-mtu"
															},
															"name": {
																"$ref": "#/components/schemas/components-schemas-name-SGE9Wn9k"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "List interconnects response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"interconnects": {
															"items": {
																"properties": {
																	"colo_name": {
																		"$ref": "#/components/schemas/components-schemas-name-SGE9Wn9k"
																	},
																	"created_on": {
																		"$ref": "#/components/schemas/schemas-created_on-lEbUK7aW"
																	},
																	"description": {
																		"$ref": "#/components/schemas/interconnect_components-schemas-description"
																	},
																	"gre": {
																		"$ref": "#/components/schemas/gre"
																	},
																	"health_check": {
																		"$ref": "#/components/schemas/schemas-health_check"
																	},
																	"id": {
																		"$ref": "#/components/schemas/schemas-identifier-0ptsYQhi"
																	},
																	"interface_address": {
																		"$ref": "#/components/schemas/interface_address"
																	},
																	"modified_on": {
																		"$ref": "#/components/schemas/schemas-modified_on-OtHvypTs"
																	},
																	"mtu": {
																		"$ref": "#/components/schemas/schemas-mtu"
																	},
																	"name": {
																		"$ref": "#/components/schemas/components-schemas-name-SGE9Wn9k"
																	}
																},
																"type": "object"
															},
															"type": "array"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List interconnects response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List interconnects",
		"tags": [
			"Magic Interconnects"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/magic/cf_interconnects/{tunnel_identifier}": {
		"description": "Lists details for a specific interconnect.",
		"operationId": "magic-interconnects-list-interconnect-details",
		"parameters": [
			{
				"in": "path",
				"name": "tunnel_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"interconnect": {
													"type": "object"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "List interconnect Details response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"interconnect": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List interconnect Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List interconnect Details",
		"tags": [
			"Magic Interconnects"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_identifier}/magic/cf_interconnects": {
		"description": "Updates multiple interconnects associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.",
		"operationId": "magic-interconnects-update-multiple-interconnects",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"required": [
							"id"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"modified": {
													"example": true,
													"type": "boolean"
												},
												"modified_interconnects": {
													"items": {
														"properties": {
															"colo_name": {
																"$ref": "#/components/schemas/components-schemas-name-SGE9Wn9k"
															},
															"created_on": {
																"$ref": "#/components/schemas/schemas-created_on-lEbUK7aW"
															},
															"description": {
																"$ref": "#/components/schemas/interconnect_components-schemas-description"
															},
															"gre": {
																"$ref": "#/components/schemas/gre"
															},
															"health_check": {
																"$ref": "#/components/schemas/schemas-health_check"
															},
															"id": {
																"$ref": "#/components/schemas/schemas-identifier-0ptsYQhi"
															},
															"interface_address": {
																"$ref": "#/components/schemas/interface_address"
															},
															"modified_on": {
																"$ref": "#/components/schemas/schemas-modified_on-OtHvypTs"
															},
															"mtu": {
																"$ref": "#/components/schemas/schemas-mtu"
															},
															"name": {
																"$ref": "#/components/schemas/components-schemas-name-SGE9Wn9k"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Update multiple interconnects response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"example": true,
															"type": "boolean"
														},
														"modified_interconnects": {
															"items": {
																"properties": {
																	"colo_name": {
																		"$ref": "#/components/schemas/components-schemas-name-SGE9Wn9k"
																	},
																	"created_on": {
																		"$ref": "#/components/schemas/schemas-created_on-lEbUK7aW"
																	},
																	"description": {
																		"$ref": "#/components/schemas/interconnect_components-schemas-description"
																	},
																	"gre": {
																		"$ref": "#/components/schemas/gre"
																	},
																	"health_check": {
																		"$ref": "#/components/schemas/schemas-health_check"
																	},
																	"id": {
																		"$ref": "#/components/schemas/schemas-identifier-0ptsYQhi"
																	},
																	"interface_address": {
																		"$ref": "#/components/schemas/interface_address"
																	},
																	"modified_on": {
																		"$ref": "#/components/schemas/schemas-modified_on-OtHvypTs"
																	},
																	"mtu": {
																		"$ref": "#/components/schemas/schemas-mtu"
																	},
																	"name": {
																		"$ref": "#/components/schemas/components-schemas-name-SGE9Wn9k"
																	}
																},
																"type": "object"
															},
															"type": "array"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update multiple interconnects response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update multiple interconnects",
		"tags": [
			"Magic Interconnects"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_identifier}/magic/cf_interconnects/{tunnel_identifier}": {
		"description": "Updates a specific interconnect associated with an account. Use `?validate_only=true` as an optional query parameter to only run validation without persisting changes.",
		"operationId": "magic-interconnects-update-interconnect",
		"parameters": [
			{
				"in": "path",
				"name": "tunnel_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"description": {
								"description": "An optional description of the interconnect.",
								"example": "Tunnel for Interconnect to ORD",
								"type": "string"
							},
							"gre": {
								"description": "The configuration specific to GRE interconnects.",
								"properties": {
									"cloudflare_endpoint": {
										"description": "The IP address assigned to the Cloudflare side of the GRE tunnel created as part of the Interconnect.",
										"example": "203.0.113.1",
										"type": "string"
									}
								},
								"type": "object"
							},
							"health_check": {
								"properties": {
									"enabled": {
										"default": true,
										"description": "Determines whether to run healthchecks for a tunnel.",
										"example": true,
										"type": "boolean"
									},
									"rate": {
										"default": "mid",
										"description": "How frequent the health check is run. The default value is `mid`.",
										"enum": [
											"low",
											"mid",
											"high"
										],
										"example": "low",
										"type": "string"
									},
									"target": {
										"description": "The destination address in a request type health check. After the healthcheck is decapsulated at the customer end of the tunnel, the ICMP echo will be forwarded to this address. This field defaults to `customer_gre_endpoint address`.",
										"example": "203.0.113.1",
										"type": "string"
									},
									"type": {
										"default": "reply",
										"description": "The type of healthcheck to run, reply or request. The default value is `reply`.",
										"enum": [
											"reply",
											"request"
										],
										"example": "request",
										"type": "string"
									}
								},
								"type": "object"
							},
							"interface_address": {
								"description": "A 31-bit prefix (/31 in CIDR notation) supporting two hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
								"example": "192.0.2.0/31",
								"type": "string"
							},
							"mtu": {
								"default": 1476,
								"description": "The Maximum Transmission Unit (MTU) in bytes for the interconnect. The minimum value is 576.",
								"type": "integer"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"modified": {
													"example": true,
													"type": "boolean"
												},
												"modified_interconnect": {
													"type": "object"
												}
											}
										}
									}
								}
							]
						}
					}
				},
				"description": "Update interconnect response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"example": true,
															"type": "boolean"
														},
														"modified_interconnect": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update interconnect response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update interconnect",
		"tags": [
			"Magic Interconnects"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}