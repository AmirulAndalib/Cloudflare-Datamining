{
	"DELETE /zones/{zone_id}/rulesets/{ruleset_id}": {
		"description": "Deletes all versions of an existing zone ruleset.",
		"operationId": "deleteZoneRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"204": {
				"description": "Delete a zone ruleset response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Delete a zone ruleset failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Delete a zone ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}": {
		"description": "Deletes an existing rule from a zone ruleset.",
		"operationId": "deleteZoneRulesetRule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the rule.",
					"example": "3a03d665bac047339bb530ecb439a90d",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete a zone ruleset rule response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Delete a zone ruleset rule failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Delete a zone ruleset rule",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /zones/{zone_id}/rulesets/{ruleset_id}/versions/{ruleset_version}": {
		"description": "Deletes an existing version of a zone ruleset.",
		"operationId": "deleteZoneRulesetVersion",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_version",
				"required": true,
				"schema": {
					"description": "The version of the ruleset.",
					"example": "1",
					"pattern": "^[0-9]+$",
					"title": "Version",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"204": {
				"description": "Delete a zone ruleset version response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Delete a zone ruleset version failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Delete a zone ruleset version",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets": {
		"description": "Fetches all rulesets at the zone level.",
		"operationId": "listZoneRulesets",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "A list of rulesets. The returned information will not include the rules in each ruleset.",
											"items": {
												"allOf": [
													{
														"description": "A ruleset object.",
														"properties": {
															"description": {
																"default": "",
																"description": "An informative description of the ruleset.",
																"example": "My ruleset to execute managed rulesets",
																"title": "Description",
																"type": "string"
															},
															"kind": {
																"$ref": "#/components/schemas/RulesetKind"
															},
															"name": {
																"description": "The human-readable name of the ruleset.",
																"example": "My ruleset",
																"title": "Name",
																"type": "string"
															},
															"phase": {
																"$ref": "#/components/schemas/RulesetPhase"
															}
														},
														"title": "Ruleset",
														"type": "object"
													},
													{
														"properties": {
															"id": {
																"description": "The unique ID of the ruleset.",
																"example": "2f2feab2026849078ba485f918791bdc",
																"pattern": "^[0-9a-f]{32}$",
																"title": "ID",
																"type": "string"
															},
															"last_updated": {
																"description": "The timestamp of when the ruleset was last modified.",
																"example": "2000-01-01T00:00:00.000000Z",
																"title": "Last updated",
																"type": "string"
															},
															"version": {
																"description": "The version of the ruleset.",
																"example": "1",
																"pattern": "^[0-9]+$",
																"title": "Version",
																"type": "string"
															}
														},
														"required": [
															"id",
															"version",
															"name",
															"kind",
															"phase",
															"last_updated"
														]
													}
												]
											},
											"title": "Rulesets",
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List zone rulesets response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "List zone rulesets failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "List zone rulesets",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/{ruleset_id}": {
		"description": "Fetches the latest version of a zone ruleset.",
		"operationId": "getZoneRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get a zone ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Get a zone ruleset failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Get a zone ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/{ruleset_id}/versions": {
		"description": "Fetches the versions of a zone ruleset.",
		"operationId": "listZoneRulesetVersions",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "A list of rulesets. The returned information will not include the rules in each ruleset.",
											"items": {
												"allOf": [
													{
														"description": "A ruleset object.",
														"properties": {
															"description": {
																"default": "",
																"description": "An informative description of the ruleset.",
																"example": "My ruleset to execute managed rulesets",
																"title": "Description",
																"type": "string"
															},
															"kind": {
																"$ref": "#/components/schemas/RulesetKind"
															},
															"name": {
																"description": "The human-readable name of the ruleset.",
																"example": "My ruleset",
																"title": "Name",
																"type": "string"
															},
															"phase": {
																"$ref": "#/components/schemas/RulesetPhase"
															}
														},
														"title": "Ruleset",
														"type": "object"
													},
													{
														"properties": {
															"id": {
																"description": "The unique ID of the ruleset.",
																"example": "2f2feab2026849078ba485f918791bdc",
																"pattern": "^[0-9a-f]{32}$",
																"title": "ID",
																"type": "string"
															},
															"last_updated": {
																"description": "The timestamp of when the ruleset was last modified.",
																"example": "2000-01-01T00:00:00.000000Z",
																"title": "Last updated",
																"type": "string"
															},
															"version": {
																"description": "The version of the ruleset.",
																"example": "1",
																"pattern": "^[0-9]+$",
																"title": "Version",
																"type": "string"
															}
														},
														"required": [
															"id",
															"version",
															"name",
															"kind",
															"phase",
															"last_updated"
														]
													}
												]
											},
											"title": "Rulesets",
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List a zone ruleset's versions response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "List a zone ruleset's versions failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "List a zone ruleset's versions",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/{ruleset_id}/versions/{ruleset_version}": {
		"description": "Fetches a specific version of a zone ruleset.",
		"operationId": "getZoneRulesetVersions",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_version",
				"required": true,
				"schema": {
					"description": "The version of the ruleset.",
					"example": "1",
					"pattern": "^[0-9]+$",
					"title": "Version",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get a zone ruleset version response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Get a zone ruleset version failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Get a zone ruleset version",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint": {
		"description": "Fetches the latest version of the zone entry point ruleset for a given phase.",
		"operationId": "getZoneEntrypointRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_phase",
				"required": true,
				"schema": {
					"description": "The phase of the ruleset.",
					"example": "http_request_firewall_managed",
					"pattern": "^[a-z_]+$",
					"title": "Phase",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get a zone entry point ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Get a zone entry point ruleset failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Get a zone entry point ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions": {
		"description": "Fetches the versions of a zone entry point ruleset.",
		"operationId": "listZoneEntrypointRulesetVersions",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_phase",
				"required": true,
				"schema": {
					"description": "The phase of the ruleset.",
					"example": "http_request_firewall_managed",
					"pattern": "^[a-z_]+$",
					"title": "Phase",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"description": "A list of rulesets. The returned information will not include the rules in each ruleset.",
											"items": {
												"allOf": [
													{
														"description": "A ruleset object.",
														"properties": {
															"description": {
																"default": "",
																"description": "An informative description of the ruleset.",
																"example": "My ruleset to execute managed rulesets",
																"title": "Description",
																"type": "string"
															},
															"kind": {
																"$ref": "#/components/schemas/RulesetKind"
															},
															"name": {
																"description": "The human-readable name of the ruleset.",
																"example": "My ruleset",
																"title": "Name",
																"type": "string"
															},
															"phase": {
																"$ref": "#/components/schemas/RulesetPhase"
															}
														},
														"title": "Ruleset",
														"type": "object"
													},
													{
														"properties": {
															"id": {
																"description": "The unique ID of the ruleset.",
																"example": "2f2feab2026849078ba485f918791bdc",
																"pattern": "^[0-9a-f]{32}$",
																"title": "ID",
																"type": "string"
															},
															"last_updated": {
																"description": "The timestamp of when the ruleset was last modified.",
																"example": "2000-01-01T00:00:00.000000Z",
																"title": "Last updated",
																"type": "string"
															},
															"version": {
																"description": "The version of the ruleset.",
																"example": "1",
																"pattern": "^[0-9]+$",
																"title": "Version",
																"type": "string"
															}
														},
														"required": [
															"id",
															"version",
															"name",
															"kind",
															"phase",
															"last_updated"
														]
													}
												]
											},
											"title": "Rulesets",
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List a zone entry point ruleset's versions response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "List a zone entry point ruleset's versions failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "List a zone entry point ruleset's versions",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions/{ruleset_version}": {
		"description": "Fetches a specific version of a zone entry point ruleset.",
		"operationId": "getZoneEntrypointRulesetVersion",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_version",
				"required": true,
				"schema": {
					"description": "The version of the ruleset.",
					"example": "1",
					"pattern": "^[0-9]+$",
					"title": "Version",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_phase",
				"required": true,
				"schema": {
					"description": "The phase of the ruleset.",
					"example": "http_request_firewall_managed",
					"pattern": "^[a-z_]+$",
					"title": "Phase",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get a zone entry point ruleset version response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Get a zone entry point ruleset version failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Get a zone entry point ruleset version",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_id}/rulesets/{ruleset_id}/rules/{rule_id}": {
		"description": "Updates an existing rule in a zone ruleset.",
		"operationId": "updateZoneRulesetRule",
		"parameters": [
			{
				"in": "path",
				"name": "rule_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the rule.",
					"example": "3a03d665bac047339bb530ecb439a90d",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"action": {
										"description": "The action to perform when the rule matches.",
										"example": "execute",
										"pattern": "^[a-z_]+$",
										"title": "Action",
										"type": "string"
									},
									"action_parameters": {
										"description": "The parameters configuring the rule action.",
										"example": {
											"id": "4814384a9e5d4991b9815dcfc25d2f1f"
										},
										"title": "Action parameters",
										"type": "object"
									},
									"description": {
										"default": "",
										"description": "An informative description of the rule.",
										"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1",
										"title": "Description",
										"type": "string"
									},
									"enabled": {
										"default": true,
										"description": "Whether the rule should be executed.",
										"example": true,
										"title": "Enabled",
										"type": "boolean"
									},
									"expression": {
										"description": "The expression defining which traffic will match the rule.",
										"example": "ip.src ne 1.1.1.1",
										"title": "Expression",
										"type": "string"
									},
									"id": {
										"$ref": "#/components/schemas/RuleId"
									},
									"logging": {
										"description": "An object configuring the rule's logging behavior.",
										"example": {
											"enabled": true
										},
										"properties": {
											"enabled": {
												"description": "Whether to generate a log when the rule matches.",
												"example": true,
												"title": "Enabled",
												"type": "boolean"
											}
										},
										"title": "Logging",
										"type": "object"
									},
									"ref": {
										"description": "The reference of the rule (the rule ID by default).",
										"example": "my_ref",
										"title": "Ref",
										"type": "string"
									}
								},
								"title": "Rule",
								"type": "object"
							},
							{
								"properties": {
									"position": {
										"oneOf": [
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"before": {
																"description": "The ID of another rule to place the rule before. An empty value causes the rule to be placed at the top.",
																"example": "da5e8e506c8e7877fe06cdf4c41add54",
																"title": "Before",
																"type": "string"
															}
														},
														"title": "Before position"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"after": {
																"description": "The ID of another rule to place the rule after. An empty value causes the rule to be placed at the bottom.",
																"example": "5bccdbb2a5142cd25cad8591255bd209",
																"title": "After",
																"type": "string"
															}
														},
														"title": "After position"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"index": {
																"description": "An index at which to place the rule, where index 1 is the first rule.",
																"example": 1,
																"title": "Index",
																"type": "number"
															}
														},
														"title": "Index position"
													}
												]
											}
										]
									}
								}
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Update a zone ruleset rule response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Update a zone ruleset rule failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Update a zone ruleset rule",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/rulesets": {
		"description": "Creates a ruleset at the zone level.",
		"operationId": "createZoneRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"description": "A ruleset object.",
								"properties": {
									"description": {
										"default": "",
										"description": "An informative description of the ruleset.",
										"example": "My ruleset to execute managed rulesets",
										"title": "Description",
										"type": "string"
									},
									"kind": {
										"$ref": "#/components/schemas/RulesetKind"
									},
									"name": {
										"description": "The human-readable name of the ruleset.",
										"example": "My ruleset",
										"title": "Name",
										"type": "string"
									},
									"phase": {
										"$ref": "#/components/schemas/RulesetPhase"
									}
								},
								"title": "Ruleset",
								"type": "object"
							},
							{
								"properties": {
									"rules": {
										"description": "The list of rules in the ruleset.",
										"items": {
											"$ref": "#/components/schemas/RuleRequest"
										},
										"title": "Rules",
										"type": "array"
									}
								},
								"required": [
									"name",
									"kind",
									"phase",
									"rules"
								]
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Create a zone ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Create a zone ruleset failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Create a zone ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /zones/{zone_id}/rulesets/{ruleset_id}/rules": {
		"description": "Adds a new rule to a zone ruleset. The rule will be added to the end of the existing list of rules in the ruleset by default.",
		"operationId": "createZoneRulesetRule",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"properties": {
									"action": {
										"description": "The action to perform when the rule matches.",
										"example": "execute",
										"pattern": "^[a-z_]+$",
										"title": "Action",
										"type": "string"
									},
									"action_parameters": {
										"description": "The parameters configuring the rule action.",
										"example": {
											"id": "4814384a9e5d4991b9815dcfc25d2f1f"
										},
										"title": "Action parameters",
										"type": "object"
									},
									"description": {
										"default": "",
										"description": "An informative description of the rule.",
										"example": "Execute the OWASP ruleset when the IP address is not 1.1.1.1",
										"title": "Description",
										"type": "string"
									},
									"enabled": {
										"default": true,
										"description": "Whether the rule should be executed.",
										"example": true,
										"title": "Enabled",
										"type": "boolean"
									},
									"expression": {
										"description": "The expression defining which traffic will match the rule.",
										"example": "ip.src ne 1.1.1.1",
										"title": "Expression",
										"type": "string"
									},
									"id": {
										"$ref": "#/components/schemas/RuleId"
									},
									"logging": {
										"description": "An object configuring the rule's logging behavior.",
										"example": {
											"enabled": true
										},
										"properties": {
											"enabled": {
												"description": "Whether to generate a log when the rule matches.",
												"example": true,
												"title": "Enabled",
												"type": "boolean"
											}
										},
										"title": "Logging",
										"type": "object"
									},
									"ref": {
										"description": "The reference of the rule (the rule ID by default).",
										"example": "my_ref",
										"title": "Ref",
										"type": "string"
									}
								},
								"title": "Rule",
								"type": "object"
							},
							{
								"properties": {
									"position": {
										"oneOf": [
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"before": {
																"description": "The ID of another rule to place the rule before. An empty value causes the rule to be placed at the top.",
																"example": "da5e8e506c8e7877fe06cdf4c41add54",
																"title": "Before",
																"type": "string"
															}
														},
														"title": "Before position"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"after": {
																"description": "The ID of another rule to place the rule after. An empty value causes the rule to be placed at the bottom.",
																"example": "5bccdbb2a5142cd25cad8591255bd209",
																"title": "After",
																"type": "string"
															}
														},
														"title": "After position"
													}
												]
											},
											{
												"allOf": [
													{
														"description": "An object configuring where the rule will be placed.",
														"title": "Position",
														"type": "object"
													},
													{
														"properties": {
															"index": {
																"description": "An index at which to place the rule, where index 1 is the first rule.",
																"example": 1,
																"title": "Index",
																"type": "number"
															}
														},
														"title": "Index position"
													}
												]
											}
										]
									}
								}
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Create a zone ruleset rule response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Create a zone ruleset rule failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Create a zone ruleset rule",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/rulesets/{ruleset_id}": {
		"description": "Updates a zone ruleset, creating a new version.",
		"operationId": "updateZoneRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the ruleset.",
					"example": "2f2feab2026849078ba485f918791bdc",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"description": "A ruleset object.",
								"properties": {
									"description": {
										"default": "",
										"description": "An informative description of the ruleset.",
										"example": "My ruleset to execute managed rulesets",
										"title": "Description",
										"type": "string"
									},
									"kind": {
										"$ref": "#/components/schemas/RulesetKind"
									},
									"name": {
										"description": "The human-readable name of the ruleset.",
										"example": "My ruleset",
										"title": "Name",
										"type": "string"
									},
									"phase": {
										"$ref": "#/components/schemas/RulesetPhase"
									}
								},
								"title": "Ruleset",
								"type": "object"
							},
							{
								"properties": {
									"id": {
										"description": "The unique ID of the ruleset.",
										"example": "2f2feab2026849078ba485f918791bdc",
										"pattern": "^[0-9a-f]{32}$",
										"title": "ID",
										"type": "string"
									},
									"rules": {
										"description": "The list of rules in the ruleset.",
										"items": {
											"$ref": "#/components/schemas/RuleRequest"
										},
										"title": "Rules",
										"type": "array"
									},
									"version": {
										"description": "The version of the ruleset.",
										"example": "1",
										"pattern": "^[0-9]+$",
										"title": "Version",
										"type": "string"
									}
								},
								"required": [
									"rules"
								]
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Update a zone ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Update a zone ruleset failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Update a zone ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint": {
		"description": "Updates a zone entry point ruleset, creating a new version.",
		"operationId": "updateZoneEntrypointRuleset",
		"parameters": [
			{
				"in": "path",
				"name": "ruleset_phase",
				"required": true,
				"schema": {
					"description": "The phase of the ruleset.",
					"example": "http_request_firewall_managed",
					"pattern": "^[a-z_]+$",
					"title": "Phase",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "zone_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the zone.",
					"example": "9f1839b6152d298aca64c4e906b6d074",
					"pattern": "^[0-9a-f]{32}$",
					"title": "ID",
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"allOf": [
							{
								"description": "A ruleset object.",
								"properties": {
									"description": {
										"default": "",
										"description": "An informative description of the ruleset.",
										"example": "My ruleset to execute managed rulesets",
										"title": "Description",
										"type": "string"
									},
									"kind": {
										"$ref": "#/components/schemas/RulesetKind"
									},
									"name": {
										"description": "The human-readable name of the ruleset.",
										"example": "My ruleset",
										"title": "Name",
										"type": "string"
									},
									"phase": {
										"$ref": "#/components/schemas/RulesetPhase"
									}
								},
								"title": "Ruleset",
								"type": "object"
							},
							{
								"properties": {
									"id": {
										"description": "The unique ID of the ruleset.",
										"example": "2f2feab2026849078ba485f918791bdc",
										"pattern": "^[0-9a-f]{32}$",
										"title": "ID",
										"type": "string"
									},
									"rules": {
										"description": "The list of rules in the ruleset.",
										"items": {
											"$ref": "#/components/schemas/RuleRequest"
										},
										"title": "Rules",
										"type": "array"
									},
									"version": {
										"description": "The version of the ruleset.",
										"example": "1",
										"pattern": "^[0-9]+$",
										"title": "Version",
										"type": "string"
									}
								},
								"required": [
									"rules"
								]
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"description": "A response object.",
									"properties": {
										"errors": {
											"allOf": [
												{
													"description": "A list of error messages.",
													"items": {
														"$ref": "#/components/schemas/Message"
													},
													"title": "Errors",
													"type": "array"
												},
												{
													"example": []
												}
											]
										},
										"messages": {
											"description": "A list of warning messages.",
											"items": {
												"$ref": "#/components/schemas/Message"
											},
											"title": "Messages",
											"type": "array"
										},
										"result": {
											"description": "A result.",
											"title": "Result"
										},
										"success": {
											"description": "Whether the API call was successful.",
											"example": true,
											"title": "Success",
											"type": "boolean"
										}
									},
									"required": [
										"result",
										"success",
										"errors",
										"messages"
									],
									"title": "Response",
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"description": "A ruleset object.",
													"properties": {
														"description": {
															"default": "",
															"description": "An informative description of the ruleset.",
															"example": "My ruleset to execute managed rulesets",
															"title": "Description",
															"type": "string"
														},
														"kind": {
															"$ref": "#/components/schemas/RulesetKind"
														},
														"name": {
															"description": "The human-readable name of the ruleset.",
															"example": "My ruleset",
															"title": "Name",
															"type": "string"
														},
														"phase": {
															"$ref": "#/components/schemas/RulesetPhase"
														}
													},
													"title": "Ruleset",
													"type": "object"
												},
												{
													"properties": {
														"id": {
															"description": "The unique ID of the ruleset.",
															"example": "2f2feab2026849078ba485f918791bdc",
															"pattern": "^[0-9a-f]{32}$",
															"title": "ID",
															"type": "string"
														},
														"last_updated": {
															"description": "The timestamp of when the ruleset was last modified.",
															"example": "2000-01-01T00:00:00.000000Z",
															"title": "Last updated",
															"type": "string"
														},
														"rules": {
															"description": "The list of rules in the ruleset.",
															"items": {
																"$ref": "#/components/schemas/RuleResponse"
															},
															"title": "Rules",
															"type": "array"
														},
														"version": {
															"description": "The version of the ruleset.",
															"example": "1",
															"pattern": "^[0-9]+$",
															"title": "Version",
															"type": "string"
														}
													},
													"required": [
														"id",
														"version",
														"name",
														"kind",
														"phase",
														"rules",
														"last_updated"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Update a zone entry point ruleset response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"description": "A failure response object.",
							"properties": {
								"errors": {
									"description": "A list of error messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Errors",
									"type": "array"
								},
								"messages": {
									"description": "A list of warning messages.",
									"items": {
										"$ref": "#/components/schemas/Message"
									},
									"title": "Messages",
									"type": "array"
								},
								"result": {
									"description": "A result.",
									"title": "Result",
									"type": "object"
								},
								"success": {
									"description": "Whether the API call was successful.",
									"example": false,
									"title": "Success",
									"type": "boolean"
								}
							},
							"required": [
								"result",
								"success",
								"errors",
								"messages"
							],
							"title": "Failure response",
							"type": "object"
						}
					}
				},
				"description": "Update a zone entry point ruleset failure response."
			}
		},
		"security": [
			{
				"api_token": []
			},
			{
				"api_key": []
			},
			{
				"api_email": []
			}
		],
		"summary": "Update a zone entry point ruleset",
		"tags": [
			"Zone Rulesets"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}