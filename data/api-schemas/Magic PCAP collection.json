{
	"DELETE /accounts/{account_identifier}/pcaps/ownership/{identifier}": {
		"description": "Deletes buckets added to the packet captures API.",
		"operationId": "magic-pcap-collection-delete-buckets-for-full-packet-captures",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {}
				},
				"description": "Delete buckets for full packet captures response"
			},
			"4XX": {
				"content": {
					"application/json": {}
				},
				"description": "Delete buckets for full packet captures response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete buckets for full packet captures",
		"tags": [
			"Magic PCAP collection"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/pcaps": {
		"description": "Lists all packet capture requests for an account.",
		"operationId": "magic-pcap-collection-list-packet-capture-requests",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common-2Si5IPcY"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"anyOf": [
													{
														"properties": {
															"filter_v1": {
																"$ref": "#/components/schemas/pcaps_filter_v1"
															},
															"id": {
																"$ref": "#/components/schemas/pcaps_id"
															},
															"status": {
																"$ref": "#/components/schemas/pcaps_status"
															},
															"submitted": {
																"$ref": "#/components/schemas/pcaps_submitted"
															},
															"system": {
																"$ref": "#/components/schemas/pcaps_system"
															},
															"time_limit": {
																"$ref": "#/components/schemas/pcaps_time_limit"
															},
															"type": {
																"$ref": "#/components/schemas/pcaps_type"
															}
														},
														"type": "object"
													},
													{
														"properties": {
															"byte_limit": {
																"$ref": "#/components/schemas/pcaps_byte_limit"
															},
															"colo_name": {
																"$ref": "#/components/schemas/pcaps_colo_name"
															},
															"destination_conf": {
																"$ref": "#/components/schemas/pcaps_destination_conf"
															},
															"error_message": {
																"$ref": "#/components/schemas/pcaps_error_message"
															},
															"filter_v1": {
																"$ref": "#/components/schemas/pcaps_filter_v1"
															},
															"id": {
																"$ref": "#/components/schemas/pcaps_id"
															},
															"status": {
																"$ref": "#/components/schemas/pcaps_status"
															},
															"submitted": {
																"$ref": "#/components/schemas/pcaps_submitted"
															},
															"system": {
																"$ref": "#/components/schemas/pcaps_system"
															},
															"time_limit": {
																"$ref": "#/components/schemas/pcaps_time_limit"
															},
															"type": {
																"$ref": "#/components/schemas/pcaps_type"
															}
														},
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List packet capture requests response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common-2Si5IPcY"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"anyOf": [
															{
																"properties": {
																	"filter_v1": {
																		"$ref": "#/components/schemas/pcaps_filter_v1"
																	},
																	"id": {
																		"$ref": "#/components/schemas/pcaps_id"
																	},
																	"status": {
																		"$ref": "#/components/schemas/pcaps_status"
																	},
																	"submitted": {
																		"$ref": "#/components/schemas/pcaps_submitted"
																	},
																	"system": {
																		"$ref": "#/components/schemas/pcaps_system"
																	},
																	"time_limit": {
																		"$ref": "#/components/schemas/pcaps_time_limit"
																	},
																	"type": {
																		"$ref": "#/components/schemas/pcaps_type"
																	}
																},
																"type": "object"
															},
															{
																"properties": {
																	"byte_limit": {
																		"$ref": "#/components/schemas/pcaps_byte_limit"
																	},
																	"colo_name": {
																		"$ref": "#/components/schemas/pcaps_colo_name"
																	},
																	"destination_conf": {
																		"$ref": "#/components/schemas/pcaps_destination_conf"
																	},
																	"error_message": {
																		"$ref": "#/components/schemas/pcaps_error_message"
																	},
																	"filter_v1": {
																		"$ref": "#/components/schemas/pcaps_filter_v1"
																	},
																	"id": {
																		"$ref": "#/components/schemas/pcaps_id"
																	},
																	"status": {
																		"$ref": "#/components/schemas/pcaps_status"
																	},
																	"submitted": {
																		"$ref": "#/components/schemas/pcaps_submitted"
																	},
																	"system": {
																		"$ref": "#/components/schemas/pcaps_system"
																	},
																	"time_limit": {
																		"$ref": "#/components/schemas/pcaps_time_limit"
																	},
																	"type": {
																		"$ref": "#/components/schemas/pcaps_type"
																	}
																},
																"type": "object"
															}
														]
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List packet capture requests response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List packet capture requests",
		"tags": [
			"Magic PCAP collection"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/pcaps/{identifier}": {
		"description": "Get information for a PCAP request by id.",
		"operationId": "magic-pcap-collection-get-pcap-request",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common-2Si5IPcY"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"properties": {
														"filter_v1": {
															"$ref": "#/components/schemas/pcaps_filter_v1"
														},
														"id": {
															"$ref": "#/components/schemas/pcaps_id"
														},
														"status": {
															"$ref": "#/components/schemas/pcaps_status"
														},
														"submitted": {
															"$ref": "#/components/schemas/pcaps_submitted"
														},
														"system": {
															"$ref": "#/components/schemas/pcaps_system"
														},
														"time_limit": {
															"$ref": "#/components/schemas/pcaps_time_limit"
														},
														"type": {
															"$ref": "#/components/schemas/pcaps_type"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"byte_limit": {
															"$ref": "#/components/schemas/pcaps_byte_limit"
														},
														"colo_name": {
															"$ref": "#/components/schemas/pcaps_colo_name"
														},
														"destination_conf": {
															"$ref": "#/components/schemas/pcaps_destination_conf"
														},
														"error_message": {
															"$ref": "#/components/schemas/pcaps_error_message"
														},
														"filter_v1": {
															"$ref": "#/components/schemas/pcaps_filter_v1"
														},
														"id": {
															"$ref": "#/components/schemas/pcaps_id"
														},
														"status": {
															"$ref": "#/components/schemas/pcaps_status"
														},
														"submitted": {
															"$ref": "#/components/schemas/pcaps_submitted"
														},
														"system": {
															"$ref": "#/components/schemas/pcaps_system"
														},
														"time_limit": {
															"$ref": "#/components/schemas/pcaps_time_limit"
														},
														"type": {
															"$ref": "#/components/schemas/pcaps_type"
														}
													},
													"type": "object"
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get PCAP request response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common-2Si5IPcY"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"properties": {
																"filter_v1": {
																	"$ref": "#/components/schemas/pcaps_filter_v1"
																},
																"id": {
																	"$ref": "#/components/schemas/pcaps_id"
																},
																"status": {
																	"$ref": "#/components/schemas/pcaps_status"
																},
																"submitted": {
																	"$ref": "#/components/schemas/pcaps_submitted"
																},
																"system": {
																	"$ref": "#/components/schemas/pcaps_system"
																},
																"time_limit": {
																	"$ref": "#/components/schemas/pcaps_time_limit"
																},
																"type": {
																	"$ref": "#/components/schemas/pcaps_type"
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"byte_limit": {
																	"$ref": "#/components/schemas/pcaps_byte_limit"
																},
																"colo_name": {
																	"$ref": "#/components/schemas/pcaps_colo_name"
																},
																"destination_conf": {
																	"$ref": "#/components/schemas/pcaps_destination_conf"
																},
																"error_message": {
																	"$ref": "#/components/schemas/pcaps_error_message"
																},
																"filter_v1": {
																	"$ref": "#/components/schemas/pcaps_filter_v1"
																},
																"id": {
																	"$ref": "#/components/schemas/pcaps_id"
																},
																"status": {
																	"$ref": "#/components/schemas/pcaps_status"
																},
																"submitted": {
																	"$ref": "#/components/schemas/pcaps_submitted"
																},
																"system": {
																	"$ref": "#/components/schemas/pcaps_system"
																},
																"time_limit": {
																	"$ref": "#/components/schemas/pcaps_time_limit"
																},
																"type": {
																	"$ref": "#/components/schemas/pcaps_type"
																}
															},
															"type": "object"
														}
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get PCAP request response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get PCAP request",
		"tags": [
			"Magic PCAP collection"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/pcaps/{identifier}/download": {
		"description": "Download PCAP information into a file. Response is a binary PCAP file.",
		"operationId": "magic-pcap-collection-download-simple-pcap",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {}
				},
				"description": "Download Simple PCAP response"
			},
			"4XX": {
				"content": {
					"application/json": {}
				},
				"description": "Download Simple PCAP response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Download Simple PCAP",
		"tags": [
			"Magic PCAP collection"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/pcaps/ownership": {
		"description": "List all buckets configured for use with PCAPs API.",
		"operationId": "magic-pcap-collection-list-pca-ps-bucket-ownership",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common-2Si5IPcY"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"destination_conf": {
														"$ref": "#/components/schemas/pcaps_destination_conf"
													},
													"filename": {
														"$ref": "#/components/schemas/pcaps_ownership_challenge"
													},
													"id": {
														"description": "The bucket ID associated with the packet captures API.",
														"example": "9883874ecac311ec8475433579a6bf5f",
														"maxLength": 32,
														"minLength": 32,
														"type": "string"
													},
													"status": {
														"description": "The status of the ownership challenge. Can be pending, success or failed.",
														"enum": [
															"pending",
															"success",
															"failed"
														],
														"example": "success",
														"type": "string"
													},
													"submitted": {
														"description": "The RFC 3339 timestamp when the bucket was added to packet captures API.",
														"example": "2020-01-01T08:00:00Z",
														"type": "string"
													},
													"validated": {
														"description": "The RFC 3339 timestamp when the bucket was validated.",
														"example": "2020-01-01T08:00:00Z",
														"type": "string"
													}
												},
												"required": [
													"id",
													"status",
													"submitted",
													"destination_conf",
													"filename"
												],
												"type": "object"
											},
											"nullable": true,
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List PCAPs Bucket Ownership response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common-2Si5IPcY"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"destination_conf": {
																"$ref": "#/components/schemas/pcaps_destination_conf"
															},
															"filename": {
																"$ref": "#/components/schemas/pcaps_ownership_challenge"
															},
															"id": {
																"description": "The bucket ID associated with the packet captures API.",
																"example": "9883874ecac311ec8475433579a6bf5f",
																"maxLength": 32,
																"minLength": 32,
																"type": "string"
															},
															"status": {
																"description": "The status of the ownership challenge. Can be pending, success or failed.",
																"enum": [
																	"pending",
																	"success",
																	"failed"
																],
																"example": "success",
																"type": "string"
															},
															"submitted": {
																"description": "The RFC 3339 timestamp when the bucket was added to packet captures API.",
																"example": "2020-01-01T08:00:00Z",
																"type": "string"
															},
															"validated": {
																"description": "The RFC 3339 timestamp when the bucket was validated.",
																"example": "2020-01-01T08:00:00Z",
																"type": "string"
															}
														},
														"required": [
															"id",
															"status",
															"submitted",
															"destination_conf",
															"filename"
														],
														"type": "object"
													},
													"nullable": true,
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List PCAPs Bucket Ownership response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List PCAPs Bucket Ownership",
		"tags": [
			"Magic PCAP collection"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /accounts/{account_identifier}/pcaps": {
		"description": "Create new PCAP request for account.",
		"operationId": "magic-pcap-collection-create-pcap-request",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"anyOf": [
							{
								"properties": {
									"filter_v1": {
										"$ref": "#/components/schemas/pcaps_filter_v1"
									},
									"packet_limit": {
										"$ref": "#/components/schemas/pcaps_packet_limit"
									},
									"system": {
										"$ref": "#/components/schemas/pcaps_system"
									},
									"time_limit": {
										"$ref": "#/components/schemas/pcaps_time_limit"
									},
									"type": {
										"$ref": "#/components/schemas/pcaps_type"
									}
								},
								"required": [
									"time_limit",
									"packet_limit",
									"type",
									"system"
								],
								"type": "object"
							},
							{
								"properties": {
									"byte_limit": {
										"$ref": "#/components/schemas/pcaps_byte_limit"
									},
									"colo_name": {
										"$ref": "#/components/schemas/pcaps_colo_name"
									},
									"destination_conf": {
										"$ref": "#/components/schemas/pcaps_destination_conf"
									},
									"filter_v1": {
										"$ref": "#/components/schemas/pcaps_filter_v1"
									},
									"packet_limit": {
										"$ref": "#/components/schemas/pcaps_packet_limit"
									},
									"system": {
										"$ref": "#/components/schemas/pcaps_system"
									},
									"time_limit": {
										"$ref": "#/components/schemas/pcaps_time_limit"
									},
									"type": {
										"$ref": "#/components/schemas/pcaps_type"
									}
								},
								"required": [
									"time_limit",
									"type",
									"system",
									"colo_name",
									"destination_conf"
								],
								"type": "object"
							}
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common-2Si5IPcY"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"properties": {
														"filter_v1": {
															"$ref": "#/components/schemas/pcaps_filter_v1"
														},
														"id": {
															"$ref": "#/components/schemas/pcaps_id"
														},
														"status": {
															"$ref": "#/components/schemas/pcaps_status"
														},
														"submitted": {
															"$ref": "#/components/schemas/pcaps_submitted"
														},
														"system": {
															"$ref": "#/components/schemas/pcaps_system"
														},
														"time_limit": {
															"$ref": "#/components/schemas/pcaps_time_limit"
														},
														"type": {
															"$ref": "#/components/schemas/pcaps_type"
														}
													},
													"type": "object"
												},
												{
													"properties": {
														"byte_limit": {
															"$ref": "#/components/schemas/pcaps_byte_limit"
														},
														"colo_name": {
															"$ref": "#/components/schemas/pcaps_colo_name"
														},
														"destination_conf": {
															"$ref": "#/components/schemas/pcaps_destination_conf"
														},
														"error_message": {
															"$ref": "#/components/schemas/pcaps_error_message"
														},
														"filter_v1": {
															"$ref": "#/components/schemas/pcaps_filter_v1"
														},
														"id": {
															"$ref": "#/components/schemas/pcaps_id"
														},
														"status": {
															"$ref": "#/components/schemas/pcaps_status"
														},
														"submitted": {
															"$ref": "#/components/schemas/pcaps_submitted"
														},
														"system": {
															"$ref": "#/components/schemas/pcaps_system"
														},
														"time_limit": {
															"$ref": "#/components/schemas/pcaps_time_limit"
														},
														"type": {
															"$ref": "#/components/schemas/pcaps_type"
														}
													},
													"type": "object"
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Create PCAP request response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common-2Si5IPcY"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															],
															"nullable": true
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"properties": {
																"filter_v1": {
																	"$ref": "#/components/schemas/pcaps_filter_v1"
																},
																"id": {
																	"$ref": "#/components/schemas/pcaps_id"
																},
																"status": {
																	"$ref": "#/components/schemas/pcaps_status"
																},
																"submitted": {
																	"$ref": "#/components/schemas/pcaps_submitted"
																},
																"system": {
																	"$ref": "#/components/schemas/pcaps_system"
																},
																"time_limit": {
																	"$ref": "#/components/schemas/pcaps_time_limit"
																},
																"type": {
																	"$ref": "#/components/schemas/pcaps_type"
																}
															},
															"type": "object"
														},
														{
															"properties": {
																"byte_limit": {
																	"$ref": "#/components/schemas/pcaps_byte_limit"
																},
																"colo_name": {
																	"$ref": "#/components/schemas/pcaps_colo_name"
																},
																"destination_conf": {
																	"$ref": "#/components/schemas/pcaps_destination_conf"
																},
																"error_message": {
																	"$ref": "#/components/schemas/pcaps_error_message"
																},
																"filter_v1": {
																	"$ref": "#/components/schemas/pcaps_filter_v1"
																},
																"id": {
																	"$ref": "#/components/schemas/pcaps_id"
																},
																"status": {
																	"$ref": "#/components/schemas/pcaps_status"
																},
																"submitted": {
																	"$ref": "#/components/schemas/pcaps_submitted"
																},
																"system": {
																	"$ref": "#/components/schemas/pcaps_system"
																},
																"time_limit": {
																	"$ref": "#/components/schemas/pcaps_time_limit"
																},
																"type": {
																	"$ref": "#/components/schemas/pcaps_type"
																}
															},
															"type": "object"
														}
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create PCAP request response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create PCAP request",
		"tags": [
			"Magic PCAP collection"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /accounts/{account_identifier}/pcaps/ownership": {
		"description": "Adds an AWS or GCP bucket to use with full packet captures.",
		"operationId": "magic-pcap-collection-add-buckets-for-full-packet-captures",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"destination_conf": {
								"description": "The full URI for the bucket. This field only applies to `full` packet captures.",
								"example": "s3://pcaps-bucket?region=us-east-1",
								"type": "string"
							}
						},
						"required": [
							"destination_conf"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"$ref": "#/components/schemas/messages"
										},
										"messages": {
											"$ref": "#/components/schemas/messages"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"destination_conf": {
													"$ref": "#/components/schemas/pcaps_destination_conf"
												},
												"filename": {
													"$ref": "#/components/schemas/pcaps_ownership_challenge"
												},
												"id": {
													"description": "The bucket ID associated with the packet captures API.",
													"example": "9883874ecac311ec8475433579a6bf5f",
													"maxLength": 32,
													"minLength": 32,
													"type": "string"
												},
												"status": {
													"description": "The status of the ownership challenge. Can be pending, success or failed.",
													"enum": [
														"pending",
														"success",
														"failed"
													],
													"example": "success",
													"type": "string"
												},
												"submitted": {
													"description": "The RFC 3339 timestamp when the bucket was added to packet captures API.",
													"example": "2020-01-01T08:00:00Z",
													"type": "string"
												},
												"validated": {
													"description": "The RFC 3339 timestamp when the bucket was validated.",
													"example": "2020-01-01T08:00:00Z",
													"type": "string"
												}
											},
											"required": [
												"id",
												"status",
												"submitted",
												"destination_conf",
												"filename"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Add buckets for full packet captures response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"destination_conf": {
															"$ref": "#/components/schemas/pcaps_destination_conf"
														},
														"filename": {
															"$ref": "#/components/schemas/pcaps_ownership_challenge"
														},
														"id": {
															"description": "The bucket ID associated with the packet captures API.",
															"example": "9883874ecac311ec8475433579a6bf5f",
															"maxLength": 32,
															"minLength": 32,
															"type": "string"
														},
														"status": {
															"description": "The status of the ownership challenge. Can be pending, success or failed.",
															"enum": [
																"pending",
																"success",
																"failed"
															],
															"example": "success",
															"type": "string"
														},
														"submitted": {
															"description": "The RFC 3339 timestamp when the bucket was added to packet captures API.",
															"example": "2020-01-01T08:00:00Z",
															"type": "string"
														},
														"validated": {
															"description": "The RFC 3339 timestamp when the bucket was validated.",
															"example": "2020-01-01T08:00:00Z",
															"type": "string"
														}
													},
													"required": [
														"id",
														"status",
														"submitted",
														"destination_conf",
														"filename"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Add buckets for full packet captures response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Add buckets for full packet captures",
		"tags": [
			"Magic PCAP collection"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /accounts/{account_identifier}/pcaps/ownership/validate": {
		"description": "Validates buckets added to the packet captures API.",
		"operationId": "magic-pcap-collection-validate-buckets-for-full-packet-captures",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"destination_conf": {
								"description": "The full URI for the bucket. This field only applies to `full` packet captures.",
								"example": "s3://pcaps-bucket?region=us-east-1",
								"type": "string"
							},
							"ownership_challenge": {
								"description": "The ownership challenge filename stored in the bucket.",
								"example": "ownership-challenge-9883874ecac311ec8475433579a6bf5f.txt",
								"type": "string"
							}
						},
						"required": [
							"destination_conf",
							"ownership_challenge"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"$ref": "#/components/schemas/messages"
										},
										"messages": {
											"$ref": "#/components/schemas/messages"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"destination_conf": {
													"$ref": "#/components/schemas/pcaps_destination_conf"
												},
												"filename": {
													"$ref": "#/components/schemas/pcaps_ownership_challenge"
												},
												"id": {
													"description": "The bucket ID associated with the packet captures API.",
													"example": "9883874ecac311ec8475433579a6bf5f",
													"maxLength": 32,
													"minLength": 32,
													"type": "string"
												},
												"status": {
													"description": "The status of the ownership challenge. Can be pending, success or failed.",
													"enum": [
														"pending",
														"success",
														"failed"
													],
													"example": "success",
													"type": "string"
												},
												"submitted": {
													"description": "The RFC 3339 timestamp when the bucket was added to packet captures API.",
													"example": "2020-01-01T08:00:00Z",
													"type": "string"
												},
												"validated": {
													"description": "The RFC 3339 timestamp when the bucket was validated.",
													"example": "2020-01-01T08:00:00Z",
													"type": "string"
												}
											},
											"required": [
												"id",
												"status",
												"submitted",
												"destination_conf",
												"filename"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Validate buckets for full packet captures response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"$ref": "#/components/schemas/messages"
												},
												"messages": {
													"$ref": "#/components/schemas/messages"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"destination_conf": {
															"$ref": "#/components/schemas/pcaps_destination_conf"
														},
														"filename": {
															"$ref": "#/components/schemas/pcaps_ownership_challenge"
														},
														"id": {
															"description": "The bucket ID associated with the packet captures API.",
															"example": "9883874ecac311ec8475433579a6bf5f",
															"maxLength": 32,
															"minLength": 32,
															"type": "string"
														},
														"status": {
															"description": "The status of the ownership challenge. Can be pending, success or failed.",
															"enum": [
																"pending",
																"success",
																"failed"
															],
															"example": "success",
															"type": "string"
														},
														"submitted": {
															"description": "The RFC 3339 timestamp when the bucket was added to packet captures API.",
															"example": "2020-01-01T08:00:00Z",
															"type": "string"
														},
														"validated": {
															"description": "The RFC 3339 timestamp when the bucket was validated.",
															"example": "2020-01-01T08:00:00Z",
															"type": "string"
														}
													},
													"required": [
														"id",
														"status",
														"submitted",
														"destination_conf",
														"filename"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Validate buckets for full packet captures response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Validate buckets for full packet captures",
		"tags": [
			"Magic PCAP collection"
		],
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}