{
	"DELETE /accounts/{account_identifier}/workers/domains/{domain_identifier}": {
		"description": "Detaches a worker from a zone and hostname.",
		"operationId": "worker-domain-detach-from-domain",
		"parameters": [
			{
				"in": "path",
				"name": "domain_identifier",
				"required": true,
				"schema": {
					"description": "Identifer of the Worker Domain.",
					"example": "dbe10b4bc17c295377eabd600e1787fd"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "9a7806061c88ada191ed06f989cc3dac"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {}
				},
				"description": "Detach from Domain response"
			},
			"4xx": {
				"content": {
					"application/json": {}
				},
				"description": "Detach from Domain response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Detach from Domain",
		"tags": [
			"Worker Domain"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.domain.delete"
			]
		}
	},
	"GET /accounts/{account_identifier}/workers/domains": {
		"description": "Lists all Worker Domains.",
		"operationId": "worker-domain-list-domains",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "9a7806061c88ada191ed06f989cc3dac"
				}
			},
			{
				"in": "query",
				"name": "zone_name",
				"schema": {
					"description": "Name of the zone.",
					"example": "example.com",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "service",
				"schema": {
					"description": "Worker service associated with the zone and hostname.",
					"example": "foo",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "zone_identifier",
				"schema": {
					"description": "Identifier of the zone.",
					"example": "593c9c94de529bbbfaac7c53ced0447d"
				}
			},
			{
				"in": "query",
				"name": "hostname",
				"schema": {
					"description": "Hostname of the Worker Domain.",
					"example": "foo.example.com",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "environment",
				"schema": {
					"description": "Worker environment associated with the zone and hostname.",
					"example": "production",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"environment": {
														"$ref": "#/components/schemas/environment"
													},
													"hostname": {
														"$ref": "#/components/schemas/components-schemas-hostname"
													},
													"id": {
														"$ref": "#/components/schemas/domain_identifier"
													},
													"service": {
														"$ref": "#/components/schemas/schemas-service"
													},
													"zone_id": {
														"$ref": "#/components/schemas/zone_identifier-ESZc7l5X"
													},
													"zone_name": {
														"$ref": "#/components/schemas/zone_name"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Domains response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"environment": {
																"$ref": "#/components/schemas/environment"
															},
															"hostname": {
																"$ref": "#/components/schemas/components-schemas-hostname"
															},
															"id": {
																"$ref": "#/components/schemas/domain_identifier"
															},
															"service": {
																"$ref": "#/components/schemas/schemas-service"
															},
															"zone_id": {
																"$ref": "#/components/schemas/zone_identifier-ESZc7l5X"
															},
															"zone_name": {
																"$ref": "#/components/schemas/zone_name"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Domains response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "List Domains",
		"tags": [
			"Worker Domain"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.domain.list"
			]
		}
	},
	"GET /accounts/{account_identifier}/workers/domains/{domain_identifier}": {
		"description": "Gets a Worker Domain.",
		"operationId": "worker-domain-get-a-domain",
		"parameters": [
			{
				"in": "path",
				"name": "domain_identifier",
				"required": true,
				"schema": {
					"description": "Identifer of the Worker Domain.",
					"example": "dbe10b4bc17c295377eabd600e1787fd"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "9a7806061c88ada191ed06f989cc3dac"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"environment": {
													"$ref": "#/components/schemas/environment"
												},
												"hostname": {
													"$ref": "#/components/schemas/components-schemas-hostname"
												},
												"id": {
													"$ref": "#/components/schemas/domain_identifier"
												},
												"service": {
													"$ref": "#/components/schemas/schemas-service"
												},
												"zone_id": {
													"$ref": "#/components/schemas/zone_identifier-ESZc7l5X"
												},
												"zone_name": {
													"$ref": "#/components/schemas/zone_name"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a Domain response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"environment": {
															"$ref": "#/components/schemas/environment"
														},
														"hostname": {
															"$ref": "#/components/schemas/components-schemas-hostname"
														},
														"id": {
															"$ref": "#/components/schemas/domain_identifier"
														},
														"service": {
															"$ref": "#/components/schemas/schemas-service"
														},
														"zone_id": {
															"$ref": "#/components/schemas/zone_identifier-ESZc7l5X"
														},
														"zone_name": {
															"$ref": "#/components/schemas/zone_name"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a Domain response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get a Domain",
		"tags": [
			"Worker Domain"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.domain.read"
			]
		}
	},
	"PUT /accounts/{account_identifier}/workers/domains": {
		"description": "Attaches a worker to a zone and hostname.",
		"operationId": "worker-domain-attach-to-domain",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "9a7806061c88ada191ed06f989cc3dac"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"environment": {
								"description": "Worker environment associated with the zone and hostname.",
								"example": "production",
								"type": "string"
							},
							"hostname": {
								"description": "Hostname of the Worker Domain.",
								"example": "foo.example.com",
								"type": "string"
							},
							"service": {
								"description": "Worker service associated with the zone and hostname.",
								"example": "foo",
								"type": "string"
							},
							"zone_id": {
								"description": "Identifier of the zone.",
								"example": "593c9c94de529bbbfaac7c53ced0447d"
							}
						},
						"required": [
							"zone_id",
							"hostname",
							"service",
							"environment"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"properties": {
										"errors": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"messages": {
											"example": [],
											"items": {
												"properties": {
													"code": {
														"minimum": 1000,
														"type": "integer"
													},
													"message": {
														"type": "string"
													}
												},
												"required": [
													"code",
													"message"
												],
												"type": "object",
												"uniqueItems": true
											},
											"type": "array"
										},
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"items": {},
													"type": "array"
												},
												{
													"type": "string"
												}
											]
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												true
											],
											"example": true,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"environment": {
													"$ref": "#/components/schemas/environment"
												},
												"hostname": {
													"$ref": "#/components/schemas/components-schemas-hostname"
												},
												"id": {
													"$ref": "#/components/schemas/domain_identifier"
												},
												"service": {
													"$ref": "#/components/schemas/schemas-service"
												},
												"zone_id": {
													"$ref": "#/components/schemas/zone_identifier-ESZc7l5X"
												},
												"zone_name": {
													"$ref": "#/components/schemas/zone_name"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Attach to Domain response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"properties": {
												"errors": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"messages": {
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												},
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"items": {},
															"type": "array"
														},
														{
															"type": "string"
														}
													]
												},
												"success": {
													"description": "Whether the API call was successful",
													"enum": [
														true
													],
													"example": true,
													"type": "boolean"
												}
											},
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"environment": {
															"$ref": "#/components/schemas/environment"
														},
														"hostname": {
															"$ref": "#/components/schemas/components-schemas-hostname"
														},
														"id": {
															"$ref": "#/components/schemas/domain_identifier"
														},
														"service": {
															"$ref": "#/components/schemas/schemas-service"
														},
														"zone_id": {
															"$ref": "#/components/schemas/zone_identifier-ESZc7l5X"
														},
														"zone_name": {
															"$ref": "#/components/schemas/zone_name"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Attach to Domain response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Attach to Domain",
		"tags": [
			"Worker Domain"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"com.cloudflare.edge.worker.domain.update"
			]
		}
	}
}