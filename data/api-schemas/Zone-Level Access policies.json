{
	"DELETE /zones/{identifier}/access/apps/{uuid1}/policies/{uuid}": {
		"description": "Delete an Access policy.",
		"operationId": "zone-level-access-policies-delete-an-access-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "uuid1",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "The policy ID.",
													"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
													"maxLength": 36,
													"type": "string"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete an Access policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "The policy ID.",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"maxLength": 36,
															"type": "string"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete an Access policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete an Access policy",
		"tags": [
			"Zone-Level Access policies"
		]
	},
	"GET /zones/{identifier}/access/apps/{uuid}/policies": {
		"description": "Lists Access policies configured for an application.",
		"operationId": "zone-level-access-policies-list-access-policies",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"approval_groups": {
														"$ref": "#/components/schemas/approval_groups"
													},
													"approval_required": {
														"$ref": "#/components/schemas/approval_required"
													},
													"created_at": {
														"$ref": "#/components/schemas/timestamp"
													},
													"decision": {
														"$ref": "#/components/schemas/decision"
													},
													"exclude": {
														"$ref": "#/components/schemas/schemas-exclude-xvvzQa27"
													},
													"id": {
														"$ref": "#/components/schemas/components-schemas-uuid"
													},
													"include": {
														"$ref": "#/components/schemas/include-QH8GcJB4"
													},
													"isolation_required": {
														"$ref": "#/components/schemas/isolation_required"
													},
													"name": {
														"$ref": "#/components/schemas/policies_components-schemas-name"
													},
													"precedence": {
														"$ref": "#/components/schemas/precedence"
													},
													"purpose_justification_prompt": {
														"$ref": "#/components/schemas/purpose_justification_prompt"
													},
													"purpose_justification_required": {
														"$ref": "#/components/schemas/purpose_justification_required"
													},
													"require": {
														"$ref": "#/components/schemas/schemas-require-ADtj3N9J"
													},
													"updated_at": {
														"$ref": "#/components/schemas/timestamp"
													}
												},
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Access policies response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"approval_groups": {
																"$ref": "#/components/schemas/approval_groups"
															},
															"approval_required": {
																"$ref": "#/components/schemas/approval_required"
															},
															"created_at": {
																"$ref": "#/components/schemas/timestamp"
															},
															"decision": {
																"$ref": "#/components/schemas/decision"
															},
															"exclude": {
																"$ref": "#/components/schemas/schemas-exclude-xvvzQa27"
															},
															"id": {
																"$ref": "#/components/schemas/components-schemas-uuid"
															},
															"include": {
																"$ref": "#/components/schemas/include-QH8GcJB4"
															},
															"isolation_required": {
																"$ref": "#/components/schemas/isolation_required"
															},
															"name": {
																"$ref": "#/components/schemas/policies_components-schemas-name"
															},
															"precedence": {
																"$ref": "#/components/schemas/precedence"
															},
															"purpose_justification_prompt": {
																"$ref": "#/components/schemas/purpose_justification_prompt"
															},
															"purpose_justification_required": {
																"$ref": "#/components/schemas/purpose_justification_required"
															},
															"require": {
																"$ref": "#/components/schemas/schemas-require-ADtj3N9J"
															},
															"updated_at": {
																"$ref": "#/components/schemas/timestamp"
															}
														},
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Access policies response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Access policies",
		"tags": [
			"Zone-Level Access policies"
		]
	},
	"GET /zones/{identifier}/access/apps/{uuid1}/policies/{uuid}": {
		"description": "Fetches a single Access policy.",
		"operationId": "zone-level-access-policies-get-an-access-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "uuid1",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"approval_groups": {
													"$ref": "#/components/schemas/approval_groups"
												},
												"approval_required": {
													"$ref": "#/components/schemas/approval_required"
												},
												"created_at": {
													"$ref": "#/components/schemas/timestamp"
												},
												"decision": {
													"$ref": "#/components/schemas/decision"
												},
												"exclude": {
													"$ref": "#/components/schemas/schemas-exclude-xvvzQa27"
												},
												"id": {
													"$ref": "#/components/schemas/components-schemas-uuid"
												},
												"include": {
													"$ref": "#/components/schemas/include-QH8GcJB4"
												},
												"isolation_required": {
													"$ref": "#/components/schemas/isolation_required"
												},
												"name": {
													"$ref": "#/components/schemas/policies_components-schemas-name"
												},
												"precedence": {
													"$ref": "#/components/schemas/precedence"
												},
												"purpose_justification_prompt": {
													"$ref": "#/components/schemas/purpose_justification_prompt"
												},
												"purpose_justification_required": {
													"$ref": "#/components/schemas/purpose_justification_required"
												},
												"require": {
													"$ref": "#/components/schemas/schemas-require-ADtj3N9J"
												},
												"updated_at": {
													"$ref": "#/components/schemas/timestamp"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get an Access policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"approval_groups": {
															"$ref": "#/components/schemas/approval_groups"
														},
														"approval_required": {
															"$ref": "#/components/schemas/approval_required"
														},
														"created_at": {
															"$ref": "#/components/schemas/timestamp"
														},
														"decision": {
															"$ref": "#/components/schemas/decision"
														},
														"exclude": {
															"$ref": "#/components/schemas/schemas-exclude-xvvzQa27"
														},
														"id": {
															"$ref": "#/components/schemas/components-schemas-uuid"
														},
														"include": {
															"$ref": "#/components/schemas/include-QH8GcJB4"
														},
														"isolation_required": {
															"$ref": "#/components/schemas/isolation_required"
														},
														"name": {
															"$ref": "#/components/schemas/policies_components-schemas-name"
														},
														"precedence": {
															"$ref": "#/components/schemas/precedence"
														},
														"purpose_justification_prompt": {
															"$ref": "#/components/schemas/purpose_justification_prompt"
														},
														"purpose_justification_required": {
															"$ref": "#/components/schemas/purpose_justification_required"
														},
														"require": {
															"$ref": "#/components/schemas/schemas-require-ADtj3N9J"
														},
														"updated_at": {
															"$ref": "#/components/schemas/timestamp"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get an Access policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get an Access policy",
		"tags": [
			"Zone-Level Access policies"
		]
	},
	"POST /zones/{identifier}/access/apps/{uuid}/policies": {
		"description": "Create a new Access policy for an application.",
		"operationId": "zone-level-access-policies-create-an-access-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"approval_groups": {
								"description": "Administrators who can approve a temporary authentication request.",
								"example": [
									{
										"approvals_needed": 1,
										"email_addresses": [
											"test1@cloudflare.com",
											"test2@cloudflare.com"
										]
									},
									{
										"approvals_needed": 3,
										"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34"
									}
								],
								"items": {
									"description": "A group of email addresses that can approve a temporary authentication request.",
									"properties": {
										"approvals_needed": {
											"description": "The number of approvals needed to obtain access.",
											"example": 1,
											"minimum": 0,
											"type": "number"
										},
										"email_addresses": {
											"description": "A list of emails that can approve the access request.",
											"example": [
												"test@cloudflare.com",
												"test2@cloudflare.com"
											],
											"items": {},
											"type": "array"
										},
										"email_list_uuid": {
											"description": "The UUID of an re-usable email list.",
											"type": "string"
										}
									},
									"required": [
										"approvals_needed"
									],
									"type": "object"
								},
								"type": "array"
							},
							"approval_required": {
								"default": false,
								"description": "Requires the user to request access from an administrator at the start of each session.",
								"example": true,
								"type": "boolean"
							},
							"decision": {
								"description": "The action Access will take if a user matches this policy.",
								"enum": [
									"allow",
									"deny",
									"non_identity",
									"bypass"
								],
								"example": "allow",
								"type": "string"
							},
							"exclude": {
								"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
								"items": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/email_rule"
										},
										{
											"$ref": "#/components/schemas/domain_rule"
										},
										{
											"$ref": "#/components/schemas/everyone_rule"
										},
										{
											"$ref": "#/components/schemas/ip_rule"
										},
										{
											"$ref": "#/components/schemas/ip_list_rule"
										},
										{
											"$ref": "#/components/schemas/certificate_rule"
										},
										{
											"$ref": "#/components/schemas/access_group_rule"
										},
										{
											"$ref": "#/components/schemas/azure_group_rule"
										},
										{
											"$ref": "#/components/schemas/github_organization_rule"
										},
										{
											"$ref": "#/components/schemas/gsuite_group_rule"
										},
										{
											"$ref": "#/components/schemas/okta_group_rule"
										},
										{
											"$ref": "#/components/schemas/saml_group_rule"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"include": {
								"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
								"items": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/email_rule"
										},
										{
											"$ref": "#/components/schemas/domain_rule"
										},
										{
											"$ref": "#/components/schemas/everyone_rule"
										},
										{
											"$ref": "#/components/schemas/ip_rule"
										},
										{
											"$ref": "#/components/schemas/ip_list_rule"
										},
										{
											"$ref": "#/components/schemas/certificate_rule"
										},
										{
											"$ref": "#/components/schemas/access_group_rule"
										},
										{
											"$ref": "#/components/schemas/azure_group_rule"
										},
										{
											"$ref": "#/components/schemas/github_organization_rule"
										},
										{
											"$ref": "#/components/schemas/gsuite_group_rule"
										},
										{
											"$ref": "#/components/schemas/okta_group_rule"
										},
										{
											"$ref": "#/components/schemas/saml_group_rule"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"isolation_required": {
								"default": false,
								"description": "Require this application to be served in an isolated browser for users matching this policy.",
								"example": false,
								"type": "boolean"
							},
							"name": {
								"description": "The name of the Access policy.",
								"example": "Allow devs",
								"type": "string"
							},
							"precedence": {
								"description": "The order of execution for this policy. Must be unique for each policy.",
								"type": "integer"
							},
							"purpose_justification_prompt": {
								"description": "A custom message that will appear on the purpose justification screen.",
								"example": "Please enter a justification for entering this protected domain.",
								"type": "string"
							},
							"purpose_justification_required": {
								"default": false,
								"description": "Require users to enter a justification when they log in to the application.",
								"example": true,
								"type": "boolean"
							},
							"require": {
								"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
								"items": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/email_rule"
										},
										{
											"$ref": "#/components/schemas/domain_rule"
										},
										{
											"$ref": "#/components/schemas/everyone_rule"
										},
										{
											"$ref": "#/components/schemas/ip_rule"
										},
										{
											"$ref": "#/components/schemas/ip_list_rule"
										},
										{
											"$ref": "#/components/schemas/certificate_rule"
										},
										{
											"$ref": "#/components/schemas/access_group_rule"
										},
										{
											"$ref": "#/components/schemas/azure_group_rule"
										},
										{
											"$ref": "#/components/schemas/github_organization_rule"
										},
										{
											"$ref": "#/components/schemas/gsuite_group_rule"
										},
										{
											"$ref": "#/components/schemas/okta_group_rule"
										},
										{
											"$ref": "#/components/schemas/saml_group_rule"
										}
									],
									"type": "object"
								},
								"type": "array"
							}
						},
						"required": [
							"name",
							"decision",
							"include"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"approval_groups": {
													"$ref": "#/components/schemas/approval_groups"
												},
												"approval_required": {
													"$ref": "#/components/schemas/approval_required"
												},
												"created_at": {
													"$ref": "#/components/schemas/timestamp"
												},
												"decision": {
													"$ref": "#/components/schemas/decision"
												},
												"exclude": {
													"$ref": "#/components/schemas/schemas-exclude-xvvzQa27"
												},
												"id": {
													"$ref": "#/components/schemas/components-schemas-uuid"
												},
												"include": {
													"$ref": "#/components/schemas/include-QH8GcJB4"
												},
												"isolation_required": {
													"$ref": "#/components/schemas/isolation_required"
												},
												"name": {
													"$ref": "#/components/schemas/policies_components-schemas-name"
												},
												"precedence": {
													"$ref": "#/components/schemas/precedence"
												},
												"purpose_justification_prompt": {
													"$ref": "#/components/schemas/purpose_justification_prompt"
												},
												"purpose_justification_required": {
													"$ref": "#/components/schemas/purpose_justification_required"
												},
												"require": {
													"$ref": "#/components/schemas/schemas-require-ADtj3N9J"
												},
												"updated_at": {
													"$ref": "#/components/schemas/timestamp"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create an Access policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"approval_groups": {
															"$ref": "#/components/schemas/approval_groups"
														},
														"approval_required": {
															"$ref": "#/components/schemas/approval_required"
														},
														"created_at": {
															"$ref": "#/components/schemas/timestamp"
														},
														"decision": {
															"$ref": "#/components/schemas/decision"
														},
														"exclude": {
															"$ref": "#/components/schemas/schemas-exclude-xvvzQa27"
														},
														"id": {
															"$ref": "#/components/schemas/components-schemas-uuid"
														},
														"include": {
															"$ref": "#/components/schemas/include-QH8GcJB4"
														},
														"isolation_required": {
															"$ref": "#/components/schemas/isolation_required"
														},
														"name": {
															"$ref": "#/components/schemas/policies_components-schemas-name"
														},
														"precedence": {
															"$ref": "#/components/schemas/precedence"
														},
														"purpose_justification_prompt": {
															"$ref": "#/components/schemas/purpose_justification_prompt"
														},
														"purpose_justification_required": {
															"$ref": "#/components/schemas/purpose_justification_required"
														},
														"require": {
															"$ref": "#/components/schemas/schemas-require-ADtj3N9J"
														},
														"updated_at": {
															"$ref": "#/components/schemas/timestamp"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create an Access policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create an Access policy",
		"tags": [
			"Zone-Level Access policies"
		]
	},
	"PUT /zones/{identifier}/access/apps/{uuid1}/policies/{uuid}": {
		"description": "Update a configured Access policy.",
		"operationId": "zone-level-access-policies-update-an-access-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "uuid1",
				"required": true,
				"schema": {
					"description": "The policy ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"approval_groups": {
								"description": "Administrators who can approve a temporary authentication request.",
								"example": [
									{
										"approvals_needed": 1,
										"email_addresses": [
											"test1@cloudflare.com",
											"test2@cloudflare.com"
										]
									},
									{
										"approvals_needed": 3,
										"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34"
									}
								],
								"items": {
									"description": "A group of email addresses that can approve a temporary authentication request.",
									"properties": {
										"approvals_needed": {
											"description": "The number of approvals needed to obtain access.",
											"example": 1,
											"minimum": 0,
											"type": "number"
										},
										"email_addresses": {
											"description": "A list of emails that can approve the access request.",
											"example": [
												"test@cloudflare.com",
												"test2@cloudflare.com"
											],
											"items": {},
											"type": "array"
										},
										"email_list_uuid": {
											"description": "The UUID of an re-usable email list.",
											"type": "string"
										}
									},
									"required": [
										"approvals_needed"
									],
									"type": "object"
								},
								"type": "array"
							},
							"approval_required": {
								"default": false,
								"description": "Requires the user to request access from an administrator at the start of each session.",
								"example": true,
								"type": "boolean"
							},
							"decision": {
								"description": "The action Access will take if a user matches this policy.",
								"enum": [
									"allow",
									"deny",
									"non_identity",
									"bypass"
								],
								"example": "allow",
								"type": "string"
							},
							"exclude": {
								"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
								"items": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/email_rule"
										},
										{
											"$ref": "#/components/schemas/domain_rule"
										},
										{
											"$ref": "#/components/schemas/everyone_rule"
										},
										{
											"$ref": "#/components/schemas/ip_rule"
										},
										{
											"$ref": "#/components/schemas/ip_list_rule"
										},
										{
											"$ref": "#/components/schemas/certificate_rule"
										},
										{
											"$ref": "#/components/schemas/access_group_rule"
										},
										{
											"$ref": "#/components/schemas/azure_group_rule"
										},
										{
											"$ref": "#/components/schemas/github_organization_rule"
										},
										{
											"$ref": "#/components/schemas/gsuite_group_rule"
										},
										{
											"$ref": "#/components/schemas/okta_group_rule"
										},
										{
											"$ref": "#/components/schemas/saml_group_rule"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"include": {
								"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
								"items": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/email_rule"
										},
										{
											"$ref": "#/components/schemas/domain_rule"
										},
										{
											"$ref": "#/components/schemas/everyone_rule"
										},
										{
											"$ref": "#/components/schemas/ip_rule"
										},
										{
											"$ref": "#/components/schemas/ip_list_rule"
										},
										{
											"$ref": "#/components/schemas/certificate_rule"
										},
										{
											"$ref": "#/components/schemas/access_group_rule"
										},
										{
											"$ref": "#/components/schemas/azure_group_rule"
										},
										{
											"$ref": "#/components/schemas/github_organization_rule"
										},
										{
											"$ref": "#/components/schemas/gsuite_group_rule"
										},
										{
											"$ref": "#/components/schemas/okta_group_rule"
										},
										{
											"$ref": "#/components/schemas/saml_group_rule"
										}
									],
									"type": "object"
								},
								"type": "array"
							},
							"isolation_required": {
								"default": false,
								"description": "Require this application to be served in an isolated browser for users matching this policy.",
								"example": false,
								"type": "boolean"
							},
							"name": {
								"description": "The name of the Access policy.",
								"example": "Allow devs",
								"type": "string"
							},
							"precedence": {
								"description": "The order of execution for this policy. Must be unique for each policy.",
								"type": "integer"
							},
							"purpose_justification_prompt": {
								"description": "A custom message that will appear on the purpose justification screen.",
								"example": "Please enter a justification for entering this protected domain.",
								"type": "string"
							},
							"purpose_justification_required": {
								"default": false,
								"description": "Require users to enter a justification when they log in to the application.",
								"example": true,
								"type": "boolean"
							},
							"require": {
								"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
								"items": {
									"oneOf": [
										{
											"$ref": "#/components/schemas/email_rule"
										},
										{
											"$ref": "#/components/schemas/domain_rule"
										},
										{
											"$ref": "#/components/schemas/everyone_rule"
										},
										{
											"$ref": "#/components/schemas/ip_rule"
										},
										{
											"$ref": "#/components/schemas/ip_list_rule"
										},
										{
											"$ref": "#/components/schemas/certificate_rule"
										},
										{
											"$ref": "#/components/schemas/access_group_rule"
										},
										{
											"$ref": "#/components/schemas/azure_group_rule"
										},
										{
											"$ref": "#/components/schemas/github_organization_rule"
										},
										{
											"$ref": "#/components/schemas/gsuite_group_rule"
										},
										{
											"$ref": "#/components/schemas/okta_group_rule"
										},
										{
											"$ref": "#/components/schemas/saml_group_rule"
										}
									],
									"type": "object"
								},
								"type": "array"
							}
						},
						"required": [
							"name",
							"decision",
							"include"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"approval_groups": {
													"$ref": "#/components/schemas/approval_groups"
												},
												"approval_required": {
													"$ref": "#/components/schemas/approval_required"
												},
												"created_at": {
													"$ref": "#/components/schemas/timestamp"
												},
												"decision": {
													"$ref": "#/components/schemas/decision"
												},
												"exclude": {
													"$ref": "#/components/schemas/schemas-exclude-xvvzQa27"
												},
												"id": {
													"$ref": "#/components/schemas/components-schemas-uuid"
												},
												"include": {
													"$ref": "#/components/schemas/include-QH8GcJB4"
												},
												"isolation_required": {
													"$ref": "#/components/schemas/isolation_required"
												},
												"name": {
													"$ref": "#/components/schemas/policies_components-schemas-name"
												},
												"precedence": {
													"$ref": "#/components/schemas/precedence"
												},
												"purpose_justification_prompt": {
													"$ref": "#/components/schemas/purpose_justification_prompt"
												},
												"purpose_justification_required": {
													"$ref": "#/components/schemas/purpose_justification_required"
												},
												"require": {
													"$ref": "#/components/schemas/schemas-require-ADtj3N9J"
												},
												"updated_at": {
													"$ref": "#/components/schemas/timestamp"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update an Access policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"approval_groups": {
															"$ref": "#/components/schemas/approval_groups"
														},
														"approval_required": {
															"$ref": "#/components/schemas/approval_required"
														},
														"created_at": {
															"$ref": "#/components/schemas/timestamp"
														},
														"decision": {
															"$ref": "#/components/schemas/decision"
														},
														"exclude": {
															"$ref": "#/components/schemas/schemas-exclude-xvvzQa27"
														},
														"id": {
															"$ref": "#/components/schemas/components-schemas-uuid"
														},
														"include": {
															"$ref": "#/components/schemas/include-QH8GcJB4"
														},
														"isolation_required": {
															"$ref": "#/components/schemas/isolation_required"
														},
														"name": {
															"$ref": "#/components/schemas/policies_components-schemas-name"
														},
														"precedence": {
															"$ref": "#/components/schemas/precedence"
														},
														"purpose_justification_prompt": {
															"$ref": "#/components/schemas/purpose_justification_prompt"
														},
														"purpose_justification_required": {
															"$ref": "#/components/schemas/purpose_justification_required"
														},
														"require": {
															"$ref": "#/components/schemas/schemas-require-ADtj3N9J"
														},
														"updated_at": {
															"$ref": "#/components/schemas/timestamp"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update an Access policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update an Access policy",
		"tags": [
			"Zone-Level Access policies"
		]
	}
}