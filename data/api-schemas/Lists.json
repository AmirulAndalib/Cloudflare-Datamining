{
	"DELETE /accounts/{account_identifier}/rules/lists/{list_id}": {
		"description": "Deletes a specific list and all its items.",
		"operationId": "lists-delete-a-list",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"description": "The unique ID of the item in the List.",
													"example": "34b12448945f11eaa1b71c4d701ab86e",
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a list response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "The unique ID of the item in the List.",
															"example": "34b12448945f11eaa1b71c4d701ab86e",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete a list response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Delete a list",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"DELETE /accounts/{account_identifier}/rules/lists/{list_id}/items": {
		"description": "Removes one or more items from a list.\n\nThis operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.",
		"operationId": "lists-delete-list-items",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"items": {
								"items": {
									"properties": {
										"id": {
											"description": "The unique ID of the item in the List.",
											"example": "34b12448945f11eaa1b71c4d701ab86e",
											"type": "string"
										}
									}
								},
								"minItems": 1,
								"type": "array"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"operation_id": {
													"description": "The unique operation ID of the asynchronous action.",
													"example": "4da8780eeb215e6cb7f48dd981c4ea02",
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete list items response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"operation_id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete list items response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Delete list items",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_identifier}/rules/lists": {
		"description": "Fetches all lists in the account.",
		"operationId": "lists-get-lists",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"allOf": [
													{
														"properties": {
															"created_on": {
																"$ref": "#/components/schemas/schemas-created_on-bmqd07nA"
															},
															"description": {
																"$ref": "#/components/schemas/lists_components-schemas-description"
															},
															"id": {
																"$ref": "#/components/schemas/list_id"
															},
															"kind": {
																"$ref": "#/components/schemas/kind-z9w1nQL4"
															},
															"modified_on": {
																"$ref": "#/components/schemas/lists_components-schemas-modified_on"
															},
															"name": {
																"$ref": "#/components/schemas/lists_components-schemas-name"
															},
															"num_items": {
																"$ref": "#/components/schemas/num_items"
															},
															"num_referencing_filters": {
																"$ref": "#/components/schemas/num_referencing_filters"
															}
														}
													},
													{
														"required": [
															"id",
															"name",
															"kind",
															"num_items",
															"created_on",
															"modified_on"
														],
														"type": "object"
													}
												]
											},
											"type": "array"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get lists response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"properties": {
																	"created_on": {
																		"$ref": "#/components/schemas/schemas-created_on-bmqd07nA"
																	},
																	"description": {
																		"$ref": "#/components/schemas/lists_components-schemas-description"
																	},
																	"id": {
																		"$ref": "#/components/schemas/list_id"
																	},
																	"kind": {
																		"$ref": "#/components/schemas/kind-z9w1nQL4"
																	},
																	"modified_on": {
																		"$ref": "#/components/schemas/lists_components-schemas-modified_on"
																	},
																	"name": {
																		"$ref": "#/components/schemas/lists_components-schemas-name"
																	},
																	"num_items": {
																		"$ref": "#/components/schemas/num_items"
																	},
																	"num_referencing_filters": {
																		"$ref": "#/components/schemas/num_referencing_filters"
																	}
																}
															},
															{
																"required": [
																	"id",
																	"name",
																	"kind",
																	"num_items",
																	"created_on",
																	"modified_on"
																],
																"type": "object"
															}
														]
													},
													"type": "array"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get lists response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get lists",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_identifier}/rules/lists/{list_id}": {
		"description": "Fetches the details of a list.",
		"operationId": "lists-get-a-list",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"$ref": "#/components/schemas/schemas-created_on-bmqd07nA"
												},
												"description": {
													"$ref": "#/components/schemas/lists_components-schemas-description"
												},
												"id": {
													"$ref": "#/components/schemas/list_id"
												},
												"kind": {
													"$ref": "#/components/schemas/kind-z9w1nQL4"
												},
												"modified_on": {
													"$ref": "#/components/schemas/lists_components-schemas-modified_on"
												},
												"name": {
													"$ref": "#/components/schemas/lists_components-schemas-name"
												},
												"num_items": {
													"$ref": "#/components/schemas/num_items"
												},
												"num_referencing_filters": {
													"$ref": "#/components/schemas/num_referencing_filters"
												}
											}
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a list response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"$ref": "#/components/schemas/schemas-created_on-bmqd07nA"
														},
														"description": {
															"$ref": "#/components/schemas/lists_components-schemas-description"
														},
														"id": {
															"$ref": "#/components/schemas/list_id"
														},
														"kind": {
															"$ref": "#/components/schemas/kind-z9w1nQL4"
														},
														"modified_on": {
															"$ref": "#/components/schemas/lists_components-schemas-modified_on"
														},
														"name": {
															"$ref": "#/components/schemas/lists_components-schemas-name"
														},
														"num_items": {
															"$ref": "#/components/schemas/num_items"
														},
														"num_referencing_filters": {
															"$ref": "#/components/schemas/num_referencing_filters"
														}
													}
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a list response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get a list",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_identifier}/rules/lists/{list_id}/items": {
		"description": "Fetches all the items in the list.",
		"operationId": "lists-get-list-items",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "cursor",
				"schema": {
					"description": "The pagination cursor. An opaque string token indicating the position from which to continue when requesting the next/previous set of records. Cursor values are provided under `result_info.cursors` in the response. You should make no assumptions about a cursor's content or length.",
					"example": "zzz",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/item"
											},
											"type": "array"
										},
										"result_info": {
											"properties": {
												"cursors": {
													"properties": {
														"after": {
															"example": "yyy",
															"type": "string"
														},
														"before": {
															"example": "xxx",
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get list items response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/item"
													},
													"type": "array"
												},
												"result_info": {
													"properties": {
														"cursors": {
															"properties": {
																"after": {
																	"example": "yyy",
																	"type": "string"
																},
																"before": {
																	"example": "xxx",
																	"type": "string"
																}
															},
															"type": "object"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get list items response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get list items",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_identifier}/rules/lists/{list_id}/items/{item_id}": {
		"description": "Fetches a list item in the list.",
		"operationId": "lists-get-a-list-item",
		"parameters": [
			{
				"in": "path",
				"name": "item_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the item in the List.",
					"example": "34b12448945f11eaa1b71c4d701ab86e",
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"example": {
												"comment": "Private IP address",
												"created_on": "2020-01-01T08:00:00Z",
												"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
												"ip": "10.0.0.1",
												"modified_on": "2020-01-10T14:00:00Z"
											},
											"oneOf": [
												{
													"required": [
														"ip"
													]
												},
												{
													"required": [
														"redirect"
													]
												},
												{
													"required": [
														"hostname"
													]
												}
											],
											"properties": {
												"comment": {
													"$ref": "#/components/schemas/item_comment"
												},
												"created_on": {
													"description": "The RFC 3339 timestamp of when the item was created.",
													"example": "2020-01-01T08:00:00Z",
													"readOnly": true,
													"type": "string"
												},
												"hostname": {
													"$ref": "#/components/schemas/item_hostname"
												},
												"id": {
													"$ref": "#/components/schemas/list_id"
												},
												"ip": {
													"$ref": "#/components/schemas/item_ip"
												},
												"modified_on": {
													"description": "The RFC 3339 timestamp of when the item was last modified.",
													"example": "2020-01-10T14:00:00Z",
													"readOnly": true,
													"type": "string"
												},
												"redirect": {
													"$ref": "#/components/schemas/item_redirect"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a list item response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"example": {
														"comment": "Private IP address",
														"created_on": "2020-01-01T08:00:00Z",
														"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
														"ip": "10.0.0.1",
														"modified_on": "2020-01-10T14:00:00Z"
													},
													"oneOf": [
														{
															"required": [
																"ip"
															]
														},
														{
															"required": [
																"redirect"
															]
														},
														{
															"required": [
																"hostname"
															]
														}
													],
													"properties": {
														"comment": {
															"$ref": "#/components/schemas/item_comment"
														},
														"created_on": {
															"description": "The RFC 3339 timestamp of when the item was created.",
															"example": "2020-01-01T08:00:00Z",
															"readOnly": true,
															"type": "string"
														},
														"hostname": {
															"$ref": "#/components/schemas/item_hostname"
														},
														"id": {
															"$ref": "#/components/schemas/list_id"
														},
														"ip": {
															"$ref": "#/components/schemas/item_ip"
														},
														"modified_on": {
															"description": "The RFC 3339 timestamp of when the item was last modified.",
															"example": "2020-01-10T14:00:00Z",
															"readOnly": true,
															"type": "string"
														},
														"redirect": {
															"$ref": "#/components/schemas/item_redirect"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get a list item response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get a list item",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /accounts/{account_identifier}/rules/lists/bulk_operations/{operation_id}": {
		"description": "Gets the current status of an asynchronous operation on a list.\n\nThe `status` property can have one of the following values: `pending`, `running`, `completed`, or `failed`. If the status is `failed`, the `error` property will contain a message describing the error.",
		"operationId": "lists-get-bulk-operation-status",
		"parameters": [
			{
				"in": "path",
				"name": "operation_id",
				"required": true,
				"schema": {
					"description": "The unique operation ID of the asynchronous action.",
					"example": "4da8780eeb215e6cb7f48dd981c4ea02",
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"completed": {
													"description": "The RFC 3339 timestamp of when the operation was completed.",
													"example": "2020-01-01T08:00:00Z",
													"readOnly": true,
													"type": "string"
												},
												"error": {
													"description": "A message describing the error when the status is `failed`.",
													"example": "This list is at the maximum number of items",
													"readOnly": true,
													"type": "string"
												},
												"id": {
													"$ref": "#/components/schemas/operation_id"
												},
												"status": {
													"description": "The current status of the asynchronous operation.",
													"enum": [
														"pending",
														"running",
														"completed",
														"failed"
													],
													"example": "failed",
													"readOnly": true,
													"type": "string"
												}
											},
											"required": [
												"id",
												"status"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get bulk operation status response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"completed": {
															"description": "The RFC 3339 timestamp of when the operation was completed.",
															"example": "2020-01-01T08:00:00Z",
															"readOnly": true,
															"type": "string"
														},
														"error": {
															"description": "A message describing the error when the status is `failed`.",
															"example": "This list is at the maximum number of items",
															"readOnly": true,
															"type": "string"
														},
														"id": {
															"$ref": "#/components/schemas/operation_id"
														},
														"status": {
															"description": "The current status of the asynchronous operation.",
															"enum": [
																"pending",
																"running",
																"completed",
																"failed"
															],
															"example": "failed",
															"readOnly": true,
															"type": "string"
														}
													},
													"required": [
														"id",
														"status"
													],
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get bulk operation status response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get bulk operation status",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_identifier}/rules/lists": {
		"description": "Creates a new list of the specified type.",
		"operationId": "lists-create-a-list",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"description": {
								"description": "An informative summary of the list.",
								"example": "This is a note.",
								"maxLength": 500,
								"type": "string"
							},
							"kind": {
								"description": "The type of the list. Each type supports specific list items (IP addresses, hostnames or redirects).",
								"enum": [
									"ip",
									"redirect",
									"hostname"
								],
								"example": "ip",
								"type": "string"
							},
							"name": {
								"description": "An informative name for the list. Use this name in filter and rule expressions.",
								"example": "list1",
								"maxLength": 50,
								"pattern": "^[a-zA-Z0-9_]+$",
								"type": "string"
							}
						},
						"required": [
							"name",
							"kind"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"$ref": "#/components/schemas/schemas-created_on-bmqd07nA"
												},
												"description": {
													"$ref": "#/components/schemas/lists_components-schemas-description"
												},
												"id": {
													"$ref": "#/components/schemas/list_id"
												},
												"kind": {
													"$ref": "#/components/schemas/kind-z9w1nQL4"
												},
												"modified_on": {
													"$ref": "#/components/schemas/lists_components-schemas-modified_on"
												},
												"name": {
													"$ref": "#/components/schemas/lists_components-schemas-name"
												},
												"num_items": {
													"$ref": "#/components/schemas/num_items"
												},
												"num_referencing_filters": {
													"$ref": "#/components/schemas/num_referencing_filters"
												}
											}
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a list response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"$ref": "#/components/schemas/schemas-created_on-bmqd07nA"
														},
														"description": {
															"$ref": "#/components/schemas/lists_components-schemas-description"
														},
														"id": {
															"$ref": "#/components/schemas/list_id"
														},
														"kind": {
															"$ref": "#/components/schemas/kind-z9w1nQL4"
														},
														"modified_on": {
															"$ref": "#/components/schemas/lists_components-schemas-modified_on"
														},
														"name": {
															"$ref": "#/components/schemas/lists_components-schemas-name"
														},
														"num_items": {
															"$ref": "#/components/schemas/num_items"
														},
														"num_referencing_filters": {
															"$ref": "#/components/schemas/num_referencing_filters"
														}
													}
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create a list response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Create a list",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"POST /accounts/{account_identifier}/rules/lists/{list_id}/items": {
		"description": "Appends new items to the list.\n\nThis operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.",
		"operationId": "lists-create-list-items",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"allOf": [
								{
									"oneOf": [
										{
											"required": [
												"ip"
											]
										},
										{
											"required": [
												"redirect"
											]
										},
										{
											"required": [
												"hostname"
											]
										}
									],
									"properties": {
										"comment": {
											"description": "An informative summary of the list item.",
											"example": "Private IP address",
											"type": "string"
										},
										"ip": {
											"description": "An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.",
											"example": "10.0.0.1",
											"type": "string"
										},
										"redirect": {
											"description": "The definition of the redirect.",
											"properties": {
												"include_subdomains": {
													"default": false,
													"type": "boolean"
												},
												"preserve_path_suffix": {
													"default": true,
													"type": "boolean"
												},
												"preserve_query_string": {
													"default": false,
													"type": "boolean"
												},
												"source_url": {
													"example": "example.com/arch",
													"type": "string"
												},
												"status_code": {
													"default": 301,
													"enum": [
														301,
														302,
														307,
														308
													],
													"type": "integer"
												},
												"subpath_matching": {
													"default": false,
													"type": "boolean"
												},
												"target_url": {
													"example": "https://archlinux.org/",
													"type": "string"
												}
											},
											"required": [
												"source_url",
												"target_url"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"operation_id": {
													"description": "The unique operation ID of the asynchronous action.",
													"example": "4da8780eeb215e6cb7f48dd981c4ea02",
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create list items response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"operation_id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create list items response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Create list items",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /accounts/{account_identifier}/rules/lists/{list_id}": {
		"description": "Updates the description of a list.",
		"operationId": "lists-update-a-list",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"description": {
								"description": "An informative summary of the list.",
								"example": "This is a note.",
								"maxLength": 500,
								"type": "string"
							}
						},
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"created_on": {
													"$ref": "#/components/schemas/schemas-created_on-bmqd07nA"
												},
												"description": {
													"$ref": "#/components/schemas/lists_components-schemas-description"
												},
												"id": {
													"$ref": "#/components/schemas/list_id"
												},
												"kind": {
													"$ref": "#/components/schemas/kind-z9w1nQL4"
												},
												"modified_on": {
													"$ref": "#/components/schemas/lists_components-schemas-modified_on"
												},
												"name": {
													"$ref": "#/components/schemas/lists_components-schemas-name"
												},
												"num_items": {
													"$ref": "#/components/schemas/num_items"
												},
												"num_referencing_filters": {
													"$ref": "#/components/schemas/num_referencing_filters"
												}
											}
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a list response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_on": {
															"$ref": "#/components/schemas/schemas-created_on-bmqd07nA"
														},
														"description": {
															"$ref": "#/components/schemas/lists_components-schemas-description"
														},
														"id": {
															"$ref": "#/components/schemas/list_id"
														},
														"kind": {
															"$ref": "#/components/schemas/kind-z9w1nQL4"
														},
														"modified_on": {
															"$ref": "#/components/schemas/lists_components-schemas-modified_on"
														},
														"name": {
															"$ref": "#/components/schemas/lists_components-schemas-name"
														},
														"num_items": {
															"$ref": "#/components/schemas/num_items"
														},
														"num_referencing_filters": {
															"$ref": "#/components/schemas/num_referencing_filters"
														}
													}
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update a list response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Update a list",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PUT /accounts/{account_identifier}/rules/lists/{list_id}/items": {
		"description": "Removes all existing items from the list and adds the provided items to the list.\n\nThis operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.",
		"operationId": "lists-update-all-list-items",
		"parameters": [
			{
				"in": "path",
				"name": "list_id",
				"required": true,
				"schema": {
					"description": "The unique ID of the list.",
					"example": "2c0fc9fa937b11eaa1b71c4d701ab86e",
					"maxLength": 32,
					"minLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"allOf": [
								{
									"oneOf": [
										{
											"required": [
												"ip"
											]
										},
										{
											"required": [
												"redirect"
											]
										},
										{
											"required": [
												"hostname"
											]
										}
									],
									"properties": {
										"comment": {
											"description": "An informative summary of the list item.",
											"example": "Private IP address",
											"type": "string"
										},
										"ip": {
											"description": "An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.",
											"example": "10.0.0.1",
											"type": "string"
										},
										"redirect": {
											"description": "The definition of the redirect.",
											"properties": {
												"include_subdomains": {
													"default": false,
													"type": "boolean"
												},
												"preserve_path_suffix": {
													"default": true,
													"type": "boolean"
												},
												"preserve_query_string": {
													"default": false,
													"type": "boolean"
												},
												"source_url": {
													"example": "example.com/arch",
													"type": "string"
												},
												"status_code": {
													"default": 301,
													"enum": [
														301,
														302,
														307,
														308
													],
													"type": "integer"
												},
												"subpath_matching": {
													"default": false,
													"type": "boolean"
												},
												"target_url": {
													"example": "https://archlinux.org/",
													"type": "string"
												}
											},
											"required": [
												"source_url",
												"target_url"
											],
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"operation_id": {
													"description": "The unique operation ID of the asynchronous action.",
													"example": "4da8780eeb215e6cb7f48dd981c4ea02",
													"readOnly": true,
													"type": "string"
												}
											},
											"type": "object"
										}
									},
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update all list items response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"operation_id": {
															"description": "The unique operation ID of the asynchronous action.",
															"example": "4da8780eeb215e6cb7f48dd981c4ea02",
															"readOnly": true,
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"type": "object"
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update all list items response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Update all list items",
		"tags": [
			"Lists"
		],
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	}
}