{
	"DELETE /zones/{zone_identifier}/cache/variants": {
		"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
		"operationId": "zone-cache-settings-delete-variants-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/base-bIOqsc1z"
												},
												{
													"properties": {
														"id": {
															"description": "ID of the zone setting.",
															"enum": [
																"variants"
															],
															"example": "variants"
														}
													}
												}
											],
											"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
											"title": "Variants Caching"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete variants setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/base-bIOqsc1z"
														},
														{
															"properties": {
																"id": {
																	"description": "ID of the zone setting.",
																	"enum": [
																		"variants"
																	],
																	"example": "variants"
																}
															}
														}
													],
													"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
													"title": "Variants Caching"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete variants setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Delete variants setting",
		"tags": [
			"Zone Cache Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/cache/cache_reserve": {
		"description": "Increase cache lifetimes by automatically storing all cacheable files into Cloudflare's persistent object storage buckets. Requires Cache Reserve subscription. Note: using Tiered Cache with Cache Reserve is highly recommended to reduce Reserve operations costs. See the [developer docs](https://developers.cloudflare.com/cache/about/cache-reserve) for more information.",
		"operationId": "zone-cache-settings-get-cache-reserve-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/cache_reserve"
												},
												{
													"properties": {
														"value": {
															"$ref": "#/components/schemas/cache_reserve_value"
														}
													},
													"required": [
														"value"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Cache Reserve setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/cache_reserve"
														},
														{
															"properties": {
																"value": {
																	"$ref": "#/components/schemas/cache_reserve_value"
																}
															},
															"required": [
																"value"
															]
														}
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Cache Reserve setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get Cache Reserve setting",
		"tags": [
			"Zone Cache Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"GET /zones/{zone_identifier}/cache/regional_tiered_cache": {
		"description": "Instructs Cloudflare to check a regional hub data center on the way to your upper tier. This can help improve performance for smart and custom tiered cache topologies.",
		"operationId": "zone-cache-settings-get-regional-tiered-cache-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/regional_tiered_cache"
												},
												{
													"properties": {
														"value": {
															"$ref": "#/components/schemas/regional_tiered_cache"
														}
													},
													"required": [
														"value"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Regional Tiered Cache setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/regional_tiered_cache"
														},
														{
															"properties": {
																"value": {
																	"$ref": "#/components/schemas/regional_tiered_cache"
																}
															},
															"required": [
																"value"
															]
														}
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Regional Tiered Cache setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get Regional Tiered Cache setting",
		"tags": [
			"Zone Cache Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /zones/{zone_identifier}/cache/variants": {
		"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
		"operationId": "zone-cache-settings-get-variants-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/variants-leITR2zA"
												},
												{
													"properties": {
														"value": {
															"$ref": "#/components/schemas/variants_value"
														}
													},
													"required": [
														"value"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Get variants setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/variants-leITR2zA"
														},
														{
															"properties": {
																"value": {
																	"$ref": "#/components/schemas/variants_value"
																}
															},
															"required": [
																"value"
															]
														}
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get variants setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get variants setting",
		"tags": [
			"Zone Cache Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/cache/cache_reserve": {
		"description": "Increase cache lifetimes by automatically storing all cacheable files into Cloudflare's persistent object storage buckets. Requires Cache Reserve subscription. Note: using Tiered Cache with Cache Reserve is highly recommended to reduce Reserve operations costs. See the [developer docs](https://developers.cloudflare.com/cache/about/cache-reserve) for more information.",
		"operationId": "zone-cache-settings-change-cache-reserve-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the Cache Reserve zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/cache_reserve"
												},
												{
													"properties": {
														"value": {
															"$ref": "#/components/schemas/cache_reserve_value"
														}
													},
													"required": [
														"value"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Cache Reserve setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/cache_reserve"
														},
														{
															"properties": {
																"value": {
																	"$ref": "#/components/schemas/cache_reserve_value"
																}
															},
															"required": [
																"value"
															]
														}
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Change Cache Reserve setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Change Cache Reserve setting",
		"tags": [
			"Zone Cache Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": true,
			"pro": true
		}
	},
	"PATCH /zones/{zone_identifier}/cache/regional_tiered_cache": {
		"description": "Instructs Cloudflare to check a regional hub data center on the way to your upper tier. This can help improve performance for smart and custom tiered cache topologies.",
		"operationId": "zone-cache-settings-change-regional-tiered-cache-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"default": "off",
								"description": "Value of the Regional Tiered Cache zone setting.",
								"enum": [
									"on",
									"off"
								],
								"type": "string"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/regional_tiered_cache"
												},
												{
													"properties": {
														"value": {
															"$ref": "#/components/schemas/regional_tiered_cache"
														}
													},
													"required": [
														"value"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Change Regional Tiered Cache setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/regional_tiered_cache"
														},
														{
															"properties": {
																"value": {
																	"$ref": "#/components/schemas/regional_tiered_cache"
																}
															},
															"required": [
																"value"
															]
														}
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Change Regional Tiered Cache setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Change Regional Tiered Cache setting",
		"tags": [
			"Zone Cache Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PATCH /zones/{zone_identifier}/cache/variants": {
		"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
		"operationId": "zone-cache-settings-change-variants-setting",
		"parameters": [
			{
				"in": "path",
				"name": "zone_identifier",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"value": {
								"description": "Value of the zone setting.",
								"properties": {
									"avif": {
										"description": "List of strings with the MIME types of all the variants that should be served for avif.",
										"example": [
											"image/webp",
											"image/jpeg"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"bmp": {
										"description": "List of strings with the MIME types of all the variants that should be served for bmp.",
										"example": [
											"image/webp",
											"image/jpeg"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"gif": {
										"description": "List of strings with the MIME types of all the variants that should be served for gif.",
										"example": [
											"image/webp",
											"image/jpeg"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"jp2": {
										"description": "List of strings with the MIME types of all the variants that should be served for jp2.",
										"example": [
											"image/webp",
											"image/avif"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"jpeg": {
										"description": "List of strings with the MIME types of all the variants that should be served for jpeg.",
										"example": [
											"image/webp",
											"image/avif"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"jpg": {
										"description": "List of strings with the MIME types of all the variants that should be served for jpg.",
										"example": [
											"image/webp",
											"image/avif"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"jpg2": {
										"description": "List of strings with the MIME types of all the variants that should be served for jpg2.",
										"example": [
											"image/webp",
											"image/avif"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"png": {
										"description": "List of strings with the MIME types of all the variants that should be served for png.",
										"example": [
											"image/webp",
											"image/avif"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"tif": {
										"description": "List of strings with the MIME types of all the variants that should be served for tif.",
										"example": [
											"image/webp",
											"image/avif"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"tiff": {
										"description": "List of strings with the MIME types of all the variants that should be served for tiff.",
										"example": [
											"image/webp",
											"image/avif"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									},
									"webp": {
										"description": "List of strings with the MIME types of all the variants that should be served for webp.",
										"example": [
											"image/jpeg",
											"image/avif"
										],
										"items": {},
										"type": "array",
										"uniqueItems": true
									}
								},
								"type": "object"
							}
						},
						"required": [
							"value"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"result": {
											"allOf": [
												{
													"$ref": "#/components/schemas/variants-leITR2zA"
												},
												{
													"properties": {
														"value": {
															"$ref": "#/components/schemas/variants_value"
														}
													},
													"required": [
														"value"
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				"description": "Change variants setting response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-single-AyeD7kjt"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/components/schemas/variants-leITR2zA"
														},
														{
															"properties": {
																"value": {
																	"$ref": "#/components/schemas/variants_value"
																}
															},
															"required": [
																"value"
															]
														}
													]
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Change variants setting response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Change variants setting",
		"tags": [
			"Zone Cache Settings"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#zone_settings:edit"
			]
		},
		"x-cfPlanAvailability": {
			"business": true,
			"enterprise": true,
			"free": false,
			"pro": true
		}
	}
}