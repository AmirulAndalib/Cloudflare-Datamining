{
	"openapi": "3.0.3",
	"info": {
		"title": "Cloudflare Client API",
		"description": "The Cloudflare Client API",
		"version": "4.0.0",
		"x-revision": "160-7a441e2"
	},
	"servers": [
		{
			"url": "https://api.cloudflare.com/client/v4"
		}
	],
	"paths": {
		"/user": {
			"get": {
				"summary": "User Details",
				"parameters": [],
				"responses": {
					"200": {
						"description": "User Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"allOf": [
												{
													"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
												},
												{
													"properties": {
														"result": {
															"nullable": true,
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											]
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.user.read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit User",
				"description": "Edit part of your user details",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Edit User response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.user.update"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"first_name": {
										"description": "User's first name",
										"type": "string",
										"maxLength": 60,
										"example": "John",
										"nullable": true
									},
									"last_name": {
										"description": "User's last name",
										"type": "string",
										"maxLength": 60,
										"example": "Appleseed",
										"nullable": true
									},
									"telephone": {
										"description": "User's telephone number",
										"type": "string",
										"maxLength": 20,
										"example": "+1 123-123-1234",
										"nullable": true
									},
									"country": {
										"description": "The country in which the user lives.",
										"type": "string",
										"maxLength": 30,
										"example": "US",
										"nullable": true
									},
									"zipcode": {
										"description": "The zipcode or postal code where the user lives.",
										"type": "string",
										"maxLength": 20,
										"example": "12345",
										"nullable": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/tokens": {
			"get": {
				"summary": "List Tokens",
				"description": "List all access tokens you created",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Tokens response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_token": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.token.list"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Token",
				"description": "Create a new access token",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create Token response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"allOf": [
														{
															"type": "object"
														},
														{
															"type": "object",
															"properties": {
																"value": {
																	"description": "The token value",
																	"type": "string",
																	"minLength": 40,
																	"maxLength": 80,
																	"readOnly": true,
																	"example": "8M7wS6hCpXVc-DoRnPPY_UCWPgy8aea4Wy6kCe5T"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_token": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.token.create"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"name",
									"policies"
								],
								"properties": {
									"name": {
										"description": "Token name",
										"type": "string",
										"maxLength": 120,
										"example": "readonly token"
									},
									"not_before": {
										"description": "The time before which the token MUST NOT be accepted for processing",
										"type": "string",
										"format": "date-time",
										"example": "2018-07-01T05:20:00+00:00"
									},
									"expires_on": {
										"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing",
										"type": "string",
										"format": "date-time",
										"example": "2020-01-01T00:00:00+00:00"
									},
									"policies": {
										"description": "List of access policies assigned to the token",
										"type": "array",
										"items": {
											"type": "object",
											"oneOf": [
												{
													"title": "policy_with_permission_groups",
													"required": [
														"id",
														"effect",
														"resources",
														"permission_groups"
													],
													"properties": {
														"id": {
															"description": "Policy identifier",
															"type": "string",
															"readOnly": true,
															"example": "f267e341f3dd4697bd3b9f71dd96247f"
														},
														"effect": {
															"description": "Allow or deny operations against the resources",
															"type": "string",
															"enum": [
																"allow",
																"deny"
															],
															"example": "allow"
														},
														"resources": {
															"description": "A list of resource names that the policy applies to",
															"type": "object",
															"example": {
																"com.cloudflare.api.account.zone.eb78d65290b24279ba6f44721b3ea3c4": "*",
																"com.cloudflare.api.account.zone.22b1de5f1c0e4b3ea97bb1e963b06a43": "*"
															}
														},
														"permission_groups": {
															"description": "A set of permission groups that are specified to the policy",
															"type": "array",
															"items": {
																"description": "A named group of permissions that map to a group of operations against resources",
																"type": "object",
																"required": [
																	"id"
																],
																"properties": {
																	"id": {
																		"description": "Identifier of the group",
																		"type": "string",
																		"readOnly": true,
																		"example": "6d7f2f5f5b1d4a0e9081fdc98d432fd1"
																	},
																	"name": {
																		"description": "Name of the group",
																		"type": "string",
																		"readOnly": true,
																		"example": "Load Balancers Write"
																	}
																}
															},
															"example": [
																{
																	"id": "c8fed203ed3043cba015a93ad1616f1f",
																	"name": "Zone Read"
																},
																{
																	"id": "82e64a83756745bbbb1c9c2701bf816b",
																	"name": "DNS Read"
																}
															]
														}
													}
												}
											]
										}
									},
									"condition": {
										"type": "object",
										"properties": {
											"request.ip": {
												"description": "Client IP restrictions",
												"type": "object",
												"properties": {
													"in": {
														"description": "List of IPv4/IPv6 CIDR addresses",
														"type": "array",
														"items": {
															"type": "string",
															"description": "IPv4/IPv6 CIDR",
															"example": "199.27.128.0/21"
														},
														"example": [
															"199.27.128.0/21",
															"2400:cb00::/32"
														]
													},
													"not_in": {
														"$ref": "#/paths/~1user~1tokens/post/requestBody/content/application~1json/schema/properties/condition/properties/request.ip/properties/in"
													}
												},
												"example": {
													"in": [
														"123.123.123.0/24",
														"2606:4700::/32"
													],
													"not_in": [
														"123.123.123.100/24",
														"2606:4700:4700::/48"
													]
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/tokens/{identifier}": {
			"get": {
				"summary": "Token Details",
				"description": "Get information about a specific token",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Token Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_token": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.token.read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Token",
				"description": "Update an existing token",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Token response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_token": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.token.update"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"type": "object",
										"required": [
											"id",
											"name",
											"status",
											"policies"
										],
										"properties": {
											"id": {
												"description": "Token identifier tag",
												"type": "string",
												"maxLength": 32,
												"readOnly": true,
												"example": "ed17574386854bf78a67040be0a770b0"
											},
											"name": {
												"description": "Token name",
												"type": "string",
												"maxLength": 120,
												"example": "readonly token"
											},
											"status": {
												"description": "Status of the token",
												"type": "string",
												"enum": [
													"active",
													"disabled",
													"expired"
												],
												"example": "active"
											},
											"issued_on": {
												"description": "The time on which the token was created",
												"readOnly": true,
												"type": "string",
												"format": "date-time",
												"example": "2018-07-01T05:20:00+00:00"
											},
											"modified_on": {
												"description": "Last time the token was modified",
												"readOnly": true,
												"type": "string",
												"format": "date-time",
												"example": "2018-07-02T05:20:00+00:00"
											},
											"not_before": {
												"description": "The time before which the token MUST NOT be accepted for processing",
												"type": "string",
												"format": "date-time",
												"example": "2018-07-01T05:20:00+00:00"
											},
											"expires_on": {
												"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing",
												"type": "string",
												"format": "date-time",
												"example": "2020-01-01T00:00:00+00:00"
											},
											"policies": {
												"description": "List of access policies assigned to the token",
												"type": "array",
												"items": {
													"$ref": "#/paths/~1user~1tokens/post/requestBody/content/application~1json/schema/properties/policies/items"
												}
											},
											"condition": {
												"$ref": "#/paths/~1user~1tokens/post/requestBody/content/application~1json/schema/properties/condition"
											}
										}
									}
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Token",
				"description": "Destroy a token",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Token response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"required": [
														"id"
													],
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
														}
													},
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_token": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.token.delete"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/user/tokens/{identifier}/value": {
			"put": {
				"summary": "Roll Token",
				"description": "Roll the token secret",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Roll Token response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"description": "The token value",
													"type": "string",
													"minLength": 40,
													"maxLength": 80,
													"readOnly": true,
													"example": "8M7wS6hCpXVc-DoRnPPY_UCWPgy8aea4Wy6kCe5T"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_token": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.token.update"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {}
							}
						}
					}
				}
			}
		},
		"/user/tokens/verify": {
			"get": {
				"summary": "Verify Token",
				"description": "Test a token",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Verify Token response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"required": [
														"id",
														"status"
													],
													"properties": {
														"id": {
															"description": "Token identifier tag",
															"type": "string",
															"maxLength": 32,
															"readOnly": true,
															"example": "ed17574386854bf78a67040be0a770b0"
														},
														"status": {
															"description": "Status of the token",
															"type": "string",
															"enum": [
																"active",
																"disabled",
																"expired"
															],
															"example": "active"
														},
														"not_before": {
															"description": "The time before which the token MUST NOT be accepted for processing",
															"type": "string",
															"format": "date-time",
															"example": "2018-07-01T05:20:00+00:00"
														},
														"expires_on": {
															"description": "The expiration time on or after which the JWT MUST NOT be accepted for processing",
															"type": "string",
															"format": "date-time",
															"example": "2020-01-01T00:00:00+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_token": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/user/tokens/permission_groups": {
			"get": {
				"summary": "List Permission Groups",
				"description": "Find all available permission groups",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Permission Groups response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"anyOf": [
												{
													"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
												},
												{
													"properties": {
														"result": {
															"type": "array",
															"nullable": true,
															"items": {}
														},
														"result_info": {
															"type": "object",
															"properties": {
																"page": {
																	"description": "Current page within paginated list of results",
																	"type": "number",
																	"example": 1
																},
																"per_page": {
																	"description": "Number of results per page of results",
																	"type": "number",
																	"example": 20
																},
																"count": {
																	"description": "Total results returned based on your search parameters",
																	"type": "number",
																	"example": 1
																},
																"total_count": {
																	"description": "Total results available without any search parameters",
																	"type": "number",
																	"example": 2000
																}
															}
														}
													}
												}
											]
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													},
													"example": [
														{
															"id": "7cf72faf220841aabcfdfab81c43c4f6",
															"name": "Billing Read",
															"scopes": [
																"com.cloudflare.api.account"
															]
														},
														{
															"id": "9d24387c6e8544e2bc4024a03991339f",
															"name": "Load Balancing: Monitors and Pools Read",
															"scopes": [
																"com.cloudflare.api.account"
															]
														},
														{
															"id": "d2a1802cc9a34e30852f8b33869b2f3c",
															"name": "Load Balancing: Monitors and Pools Write",
															"scopes": [
																"com.cloudflare.api.account"
															]
														},
														{
															"id": "8b47d2786a534c08a1f94ee8f9f599ef",
															"name": "Workers KV Storage Read",
															"scopes": [
																"com.cloudflare.api.account"
															]
														},
														{
															"id": "f7f0eda5697f475c90846e879bab8666",
															"name": "Workers KV Storage Write",
															"scopes": [
																"com.cloudflare.api.account"
															]
														},
														{
															"id": "1a71c399035b4950a1bd1466bbe4f420",
															"name": "Workers Scripts Read",
															"scopes": [
																"com.cloudflare.api.account"
															]
														},
														{
															"id": "e086da7e2179491d91ee5f35b3ca210a",
															"name": "Workers Scripts Write",
															"scopes": [
																"com.cloudflare.api.account"
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_token": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.token.read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/memberships": {
			"get": {
				"summary": "List Memberships",
				"description": "List memberships of accounts the user can access",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Memberships response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "Membership identifier tag",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "4536bcfad5faccb111b47003c79917fa"
															},
															"code": {
																"type": "string",
																"description": "The unique activation code for the account membership",
																"maxLength": 64,
																"readOnly": true,
																"example": "05dd05cce12bbed97c0d87cd78e89bc2fd41a6cee72f27f6fc84af2e45c0fac0"
															},
															"status": {
																"type": "string",
																"enum": [
																	"accepted",
																	"pending",
																	"rejected"
																],
																"description": "Status of this membership",
																"example": "accepted"
															},
															"account": {
																"allOf": [
																	{
																		"type": "object",
																		"required": [
																			"id",
																			"name"
																		],
																		"properties": {
																			"id": {
																				"description": "Account identifier tag",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "01a7362d577a6c3019a474fd6f485823"
																			},
																			"name": {
																				"description": "Account name",
																				"type": "string",
																				"maxLength": 100,
																				"example": "Demo Account"
																			},
																			"settings": {
																				"type": "object",
																				"description": "Account settings",
																				"properties": {
																					"enforce_twofactor": {
																						"type": "boolean",
																						"description": "Indicates whether or not membership in this account requires that Two-Factor Authentication is enabled",
																						"default": false
																					},
																					"use_account_custom_ns_by_default": {
																						"type": "boolean",
																						"description": "Indicates whether new zones should use the account-level custom nameservers by default",
																						"default": false
																					}
																				}
																			},
																			"created_on": {
																				"description": "describes when account was created",
																				"type": "string",
																				"format": "date-time",
																				"readOnly": true,
																				"example": "2014-03-01T12:21:02+00:00"
																			}
																		}
																	}
																],
																"readOnly": true
															},
															"roles": {
																"type": "array",
																"description": "List of role names for the User at the Account",
																"readOnly": true,
																"items": {
																	"type": "string",
																	"maxLength": 120,
																	"example": "Account Administrator"
																}
															},
															"permissions": {
																"allOf": [
																	{
																		"type": "object",
																		"properties": {
																			"analytics": {
																				"type": "object",
																				"properties": {
																					"read": {
																						"type": "boolean",
																						"example": true
																					},
																					"write": {
																						"type": "boolean",
																						"example": true
																					}
																				},
																				"example": {
																					"read": true,
																					"write": false
																				}
																			},
																			"billing": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"cache_purge": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"dns": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"dns_records": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"lb": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"logs": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"organization": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"ssl": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"waf": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"zones": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			},
																			"zone_settings": {
																				"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0/properties/analytics"
																			}
																		},
																		"example": {
																			"zones": {
																				"read": true,
																				"write": true
																			},
																			"analytics": {
																				"read": true,
																				"write": false
																			}
																		}
																	}
																],
																"description": "All access permissions for the User at the Account",
																"readOnly": true
															}
														},
														"x-cfLinkErrors": {
															"1000": "An unknown error(<CODE>) has occurred",
															"1001": "Invalid request",
															"1002": "Forbidden",
															"1003": "Membership not found"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/memberships/{identifier}": {
			"get": {
				"summary": "Membership Details",
				"description": "Get a specific membership",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Membership identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "4536bcfad5faccb111b47003c79917fa"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Membership Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Membership",
				"description": "Accept or reject this account invitation",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1memberships~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Membership response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1memberships~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"status"
								],
								"properties": {
									"status": {
										"enum": [
											"accepted",
											"rejected"
										],
										"description": "Whether to accept or reject this account invitation",
										"example": "accepted"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Membership",
				"description": "Remove the associated member from an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1memberships~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Membership response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1memberships~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts": {
			"get": {
				"summary": "List Accounts",
				"description": "List all accounts you have ownership or verified access to",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Accounts response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{identifier}": {
			"get": {
				"summary": "Account Details",
				"description": "Get information about a specific account that you are a member of",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Account Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Account",
				"description": "Update an existing Account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Account response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/account/allOf/0"
									}
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/members": {
			"get": {
				"summary": "List Members",
				"description": "List all members of an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Members response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Add Member",
				"description": "Add a user to the list of members for this account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1members/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add Member response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"email",
									"roles"
								],
								"properties": {
									"email": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/allOf/1/properties/scope/properties/email"
									},
									"status": {
										"enum": [
											"accepted",
											"pending"
										],
										"readOnly": false,
										"default": "pending"
									},
									"roles": {
										"type": "array",
										"description": "Array of roles associated with this member",
										"items": {
											"description": "Role identifier tag",
											"type": "string",
											"maxLength": 32,
											"readOnly": true,
											"example": "3536bcfad5faccb999b47003c79917fb"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/members/{identifier}": {
			"get": {
				"summary": "Member Details",
				"description": "Get information about a specific member of an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Member Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Member",
				"description": "Modify an account member",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Member response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1members~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"type": "object",
										"required": [
											"id",
											"user",
											"status",
											"roles"
										],
										"properties": {
											"id": {
												"description": "Membership identifier tag",
												"type": "string",
												"maxLength": 32,
												"readOnly": true,
												"example": "4536bcfad5faccb111b47003c79917fa"
											},
											"code": {
												"type": "string",
												"description": "The unique activation code for the account membership",
												"maxLength": 64,
												"readOnly": true,
												"example": "05dd05cce12bbed97c0d87cd78e89bc2fd41a6cee72f27f6fc84af2e45c0fac0"
											},
											"user": {
												"type": "object",
												"readOnly": true,
												"required": [
													"email"
												],
												"properties": {
													"id": {
														"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/0/properties/result/items/properties/owner/properties/id"
													},
													"first_name": {
														"$ref": "#/paths/~1user/patch/requestBody/content/application~1json/schema/properties/first_name"
													},
													"last_name": {
														"$ref": "#/paths/~1user/patch/requestBody/content/application~1json/schema/properties/last_name"
													},
													"email": {
														"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/allOf/1/properties/scope/properties/email"
													},
													"two_factor_authentication_enabled": {
														"description": "Whether two-factor authentication is enabled for the user account. This does not apply to API authentication",
														"type": "boolean",
														"readOnly": true,
														"default": false
													}
												}
											},
											"status": {
												"readOnly": true
											},
											"roles": {
												"type": "array",
												"description": "Roles assigned to this member",
												"items": {
													"type": "object",
													"required": [
														"id",
														"name",
														"description",
														"permissions"
													],
													"properties": {
														"id": {
															"description": "Role identifier tag",
															"type": "string",
															"maxLength": 32,
															"readOnly": true,
															"example": "3536bcfad5faccb999b47003c79917fb"
														},
														"name": {
															"type": "string",
															"description": "Role Name",
															"maxLength": 120,
															"readOnly": true,
															"example": "Account Administrator"
														},
														"description": {
															"type": "string",
															"description": "Description of role's permissions",
															"readOnly": true,
															"example": "Administrative access to the entire Account"
														},
														"permissions": {
															"$ref": "#/paths/~1memberships/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/permissions/allOf/0"
														}
													}
												}
											}
										}
									}
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Remove Member",
				"description": "Remove a member from an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Remove Member response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/roles": {
			"get": {
				"summary": "List Roles",
				"description": "Get all available roles for an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Roles response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				}
			}
		},
		"/accounts/{account_identifier}/roles/{identifier}": {
			"get": {
				"summary": "Role Details",
				"description": "Get information about a specific role for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Role Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				}
			}
		},
		"/accounts/{account_identifier}/subscriptions": {
			"get": {
				"summary": "List Subscriptions",
				"description": "Lists all an account's subscriptions",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Subscriptions response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"type": "object",
																"properties": {
																	"app": {
																		"properties": {
																			"install_id": {
																				"type": "string",
																				"description": "app install id"
																			}
																		}
																	},
																	"id": {
																		"description": "Subscription identifier tag",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "506e3185e9c882d175a2d0cb0093d9f2"
																	},
																	"state": {
																		"description": "The state that the subscription is in",
																		"type": "string",
																		"enum": [
																			"Trial",
																			"Provisioned",
																			"Paid",
																			"AwaitingPayment",
																			"Cancelled",
																			"Failed",
																			"Expired"
																		],
																		"example": "Paid",
																		"readOnly": true
																	},
																	"price": {
																		"description": "The price of the subscription that will be billed, in US dollars",
																		"type": "number",
																		"readOnly": true,
																		"example": 20
																	},
																	"currency": {
																		"description": "The monetary unit in which pricing information is displayed",
																		"type": "string",
																		"readOnly": true,
																		"example": "USD"
																	},
																	"component_values": {
																		"description": "The list of add-ons subscribed to",
																		"type": "array",
																		"items": {
																			"description": "A component value for a subscription",
																			"type": "object",
																			"properties": {
																				"name": {
																					"description": "The name of the component_value",
																					"type": "string",
																					"example": "page_rules"
																				},
																				"value": {
																					"description": "The amount of the component value assigned",
																					"type": "number",
																					"example": 20
																				},
																				"default": {
																					"description": "The default amount assigned.",
																					"type": "number",
																					"example": 5
																				},
																				"price": {
																					"description": "The unit price for the component value",
																					"type": "number",
																					"example": 5
																				}
																			}
																		}
																	},
																	"zone": {
																		"description": "A simple zone object. May have null properties if not a zone subscription.",
																		"type": "object",
																		"properties": {
																			"id": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
																			},
																			"name": {
																				"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/zone/properties/name"
																			}
																		}
																	},
																	"frequency": {
																		"description": "How often the subscription is renewed automatically",
																		"type": "string",
																		"enum": [
																			"weekly",
																			"monthly",
																			"quarterly",
																			"yearly"
																		],
																		"example": "monthly"
																	},
																	"rate_plan": {
																		"description": "The rate plan applied to the subscription",
																		"type": "object",
																		"properties": {
																			"id": {
																				"description": "The ID of the rate_plan",
																				"example": "free"
																			},
																			"public_name": {
																				"description": "The full name of the rate plan",
																				"type": "string",
																				"example": "Business Plan"
																			},
																			"currency": {
																				"description": "The currency applied to the rate_plan subscription",
																				"type": "string",
																				"example": "USD"
																			},
																			"scope": {
																				"description": "The scope that this rate_plan applies to",
																				"type": "string",
																				"example": "zone"
																			},
																			"sets": {
																				"description": "The list of sets this rate_plan applies to",
																				"type": "array",
																				"items": {
																					"type": "string"
																				}
																			},
																			"is_contract": {
																				"description": "Whether or not a rate_plan is enterprise-based (or newly adopted term contract)",
																				"type": "boolean",
																				"example": false
																			},
																			"externally_managed": {
																				"description": "Whether this rate_plan is managed externally from Cloudflare",
																				"type": "boolean",
																				"example": false
																			}
																		}
																	},
																	"current_period_end": {
																		"description": "The end of the current period, and also when the next billing is due",
																		"type": "string",
																		"format": "date-time",
																		"readOnly": true,
																		"example": "2014-03-31T12:20:00+00:00"
																	},
																	"current_period_start": {
																		"description": "When the current billing period started, may be the same as InitialPeriodStart if this is the first period",
																		"type": "string",
																		"format": "date-time",
																		"readOnly": true,
																		"example": "2014-05-11T12:20:00+00:00"
																	}
																}
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Subscription",
				"description": "Create an account subscription.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Subscription response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read",
						"#billing:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/subscriptions/{subscription_identifier}": {
			"put": {
				"summary": "Update Subscription",
				"description": "Update an account subscriptions.",
				"parameters": [
					{
						"name": "subscription_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Subscription identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "506e3185e9c882d175a2d0cb0093d9f2"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Subscription response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read",
						"#billing:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Subscription",
				"description": "Deletes an account's subscription",
				"parameters": [
					{
						"name": "subscription_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions~1%7Bsubscription_identifier%7D/put/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions~1%7Bsubscription_identifier%7D/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Subscription response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"subscription_id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions~1%7Bsubscription_identifier%7D/put/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:edit"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/organizations/{identifier}": {
			"get": {
				"summary": "Organization Details",
				"description": "Get information about a specific organization that you are a member of",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Organization identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Organization Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"id": "org_deprecation",
					"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
					"eol": "2020-02-04",
					"display": true
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit Organization",
				"description": "Update an existing Organization",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit Organization response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/x-cfDeprecation"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"description": "Organization Name",
										"type": "string",
										"maxLength": 100,
										"example": "Cloudflare, Inc."
									}
								}
							}
						}
					}
				}
			}
		},
		"/organizations/{organization_identifier}/invites": {
			"get": {
				"summary": "List Invitations",
				"description": "List all invitations associated with an organization",
				"parameters": [
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Invitations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"allOf": [
																	{
																		"type": "object",
																		"required": [
																			"invited_member_id",
																			"organization_id"
																		],
																		"properties": {
																			"id": {
																				"description": "Invite identifier tag",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "4f5f0c14a2a41d5063dd301b2f829f04"
																			},
																			"invited_member_id": {
																				"description": "Id of the user to be added to the Organization",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "5a7805061c76ada191ed06f989cc3dac",
																				"nullable": true
																			},
																			"invited_member_email": {
																				"description": "Email address of the user to be added to the Organization",
																				"type": "string",
																				"maxLength": 90,
																				"example": "user@example.com"
																			},
																			"organization_id": {
																				"description": "ID of the Organization the user will be added to",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "5a7805061c76ada191ed06f989cc3dac"
																			},
																			"organization_name": {
																				"description": "Organization Name",
																				"type": "string",
																				"maxLength": 100,
																				"readOnly": true,
																				"example": "Cloudflare, Inc."
																			},
																			"roles": {
																				"description": "Roles to be assigned to this Member",
																				"type": "array",
																				"items": {
																					"type": "object",
																					"required": [
																						"id",
																						"name",
																						"description",
																						"permissions"
																					],
																					"properties": {
																						"id": {
																							"description": "Role identifier tag",
																							"type": "string",
																							"maxLength": 32,
																							"readOnly": true,
																							"example": "3536bcfad5faccb999b47003c79917fb"
																						},
																						"name": {
																							"type": "string",
																							"description": "Role Name",
																							"maxLength": 120,
																							"readOnly": true,
																							"example": "Organization Admin"
																						},
																						"description": {
																							"type": "string",
																							"description": "Description of role's permissions",
																							"readOnly": true,
																							"example": "Administrative access to the entire Organization"
																						},
																						"permissions": {
																							"type": "array",
																							"description": "Access permissions for this User",
																							"readOnly": true,
																							"items": {
																								"type": "string",
																								"maxLength": 160,
																								"example": "#zones:read"
																							}
																						}
																					}
																				}
																			},
																			"invited_by": {
																				"description": "The email address of the user who created the invite",
																				"type": "string",
																				"maxLength": 90,
																				"example": "user@example.com"
																			},
																			"invited_on": {
																				"description": "When the invite was sent",
																				"type": "string",
																				"format": "date-time",
																				"readOnly": true,
																				"example": "2014-01-01T05:20:00+00:00"
																			},
																			"expires_on": {
																				"description": "When the invite is no longer active",
																				"type": "string",
																				"format": "date-time",
																				"readOnly": true,
																				"example": "2014-01-01T05:20:00+00:00"
																			}
																		}
																	},
																	{
																		"properties": {
																			"organization_is_enforcing_twofactor": {
																				"description": "Current status of two factor enforcement on the organization",
																				"type": "boolean",
																				"example": true,
																				"default": false
																			},
																			"status": {
																				"description": "Current status of the invitation",
																				"type": "string",
																				"enum": [
																					"pending",
																					"accepted",
																					"rejected",
																					"canceled",
																					"left",
																					"expired"
																				],
																				"example": "accepted"
																			}
																		}
																	}
																]
															}
														],
														"x-cfDeprecations": {
															"id": "org_deprecation",
															"description": "This endpoint and its related APIs are deprecated in favor of the `/accounts` equivalent APIs, which have a broader range of features and are backwards compatible with these API.",
															"eol": "2020-02-04",
															"display": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Invitation",
				"description": "Invite a User to become a Member of an Organization",
				"parameters": [
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Invitation response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"invited_member_email",
									"roles"
								],
								"properties": {
									"invited_member_email": {
										"description": "Email address of the user to be added to the Organization",
										"type": "string",
										"maxLength": 90,
										"example": "user@example.com"
									},
									"roles": {
										"type": "array",
										"description": "Array of Roles associated with the invited user",
										"items": {
											"type": "object",
											"required": [
												"id"
											],
											"properties": {
												"id": {
													"description": "Role identifier tag",
													"type": "string",
													"maxLength": 32,
													"readOnly": true,
													"example": "3536bcfad5faccb999b47003c79917fb"
												},
												"name": {
													"type": "string",
													"description": "Role Name",
													"maxLength": 120,
													"readOnly": true,
													"example": "Organization Admin"
												},
												"description": {
													"type": "string",
													"description": "Description of role's permissions",
													"readOnly": true,
													"example": "Administrative access to the entire Organization"
												},
												"permissions": {
													"type": "array",
													"description": "Access permissions for this User",
													"readOnly": true,
													"items": {
														"type": "string",
														"maxLength": 160,
														"example": "#zones:read"
													}
												}
											}
										},
										"example": [
											{
												"id": "5a7805061c76ada191ed06f989cc3dac"
											},
											{
												"id": "9a7806061c88ada191ed06f989cc3dac"
											}
										]
									},
									"auto_accept": {
										"type": "boolean",
										"description": "When present and set to true, allows for the invited user to be automatically accepted to the organization. No invitation is sent.",
										"example": true,
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/organizations/{organization_identifier}/invites/{identifier}": {
			"get": {
				"summary": "Invitation Details",
				"description": "Get the details of an invitation",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Invite identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "4f5f0c14a2a41d5063dd301b2f829f04"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Invitation Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit Invitation Roles",
				"description": "Change the Roles of a Pending Invite",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit Invitation Roles response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"roles": {
										"type": "array",
										"description": "Array of Roles associated with the invited user",
										"items": {
											"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/post/requestBody/content/application~1json/schema/properties/roles/items/properties/id"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Cancel Invitation",
				"description": "Cancel an existing invitation",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Cancel Invitation response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites~1%7Bidentifier%7D/get/parameters/0/schema"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/organizations/{organization_identifier}/members": {
			"get": {
				"summary": "List Members",
				"description": "List all members of a organization",
				"parameters": [
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Members response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name",
															"email",
															"status",
															"roles"
														],
														"properties": {
															"id": {
																"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/0/properties/result/items/properties/owner/properties/id"
															},
															"name": {
																"type": "string",
																"description": "Member Name",
																"maxLength": 100,
																"example": "John Smith",
																"nullable": true
															},
															"email": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/allOf/1/properties/scope/properties/email"
															},
															"status": {
																"enum": [
																	"accepted",
																	"invited"
																],
																"description": "A member's status in the organization.",
																"example": "accepted"
															},
															"roles": {
																"type": "array",
																"description": "Roles assigned to this Member",
																"items": {
																	"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/allOf/0/properties/roles/items"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/organizations/{organization_identifier}/members/{identifier}": {
			"get": {
				"summary": "Member Details",
				"description": "Get information about a specific member of an organization",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/0/properties/result/items/properties/owner/properties/id"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1members/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Member Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit Member Roles",
				"description": "Change the Roles of an Organization's Member",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit Member Roles response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1members~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"roles": {
										"type": "array",
										"description": "Array of Roles associated with this Member",
										"items": {
											"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/post/requestBody/content/application~1json/schema/properties/roles/items/properties/id"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Remove Member",
				"description": "Remove a member from an organization",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Remove Member response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1members~1%7Bidentifier%7D/get/parameters/0/schema"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/organizations/{organization_identifier}/roles": {
			"get": {
				"summary": "List Roles",
				"description": "Get all available roles for an organization",
				"parameters": [
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Roles response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name",
															"description",
															"permissions"
														],
														"properties": {
															"id": {
																"description": "Role identifier tag",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "3536bcfad5faccb999b47003c79917fb"
															},
															"name": {
																"type": "string",
																"description": "Role Name",
																"maxLength": 120,
																"readOnly": true,
																"example": "Organization Admin"
															},
															"description": {
																"type": "string",
																"description": "Description of role's permissions",
																"readOnly": true,
																"example": "Administrative access to the entire Organization"
															},
															"permissions": {
																"type": "array",
																"description": "Access permissions for this User",
																"readOnly": true,
																"items": {
																	"type": "string",
																	"maxLength": 160,
																	"example": "#zones:read"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/organizations/{organization_identifier}/roles/{identifier}": {
			"get": {
				"summary": "Role Details",
				"description": "Get information about a specific role for an organization",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/post/requestBody/content/application~1json/schema/properties/roles/items/properties/id"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1roles/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Role Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/user/invites": {
			"get": {
				"summary": "List Invitations",
				"description": "List all invitations associated with my user",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Invitations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"allOf": [
																	{
																		"type": "object",
																		"required": [
																			"invited_member_id",
																			"organization_id"
																		],
																		"properties": {
																			"id": {
																				"description": "Invite identifier tag",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "4f5f0c14a2a41d5063dd301b2f829f04"
																			},
																			"invited_member_id": {
																				"description": "Id of the user to be added to the Organization",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "5a7805061c76ada191ed06f989cc3dac",
																				"nullable": true
																			},
																			"invited_member_email": {
																				"description": "Email address of the user to be added to the Organization",
																				"type": "string",
																				"maxLength": 90,
																				"example": "user@example.com"
																			},
																			"organization_id": {
																				"description": "ID of the Organization the user will be added to",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "5a7805061c76ada191ed06f989cc3dac"
																			},
																			"organization_name": {
																				"description": "Organization Name",
																				"type": "string",
																				"maxLength": 100,
																				"readOnly": true,
																				"example": "Cloudflare, Inc."
																			},
																			"roles": {
																				"description": "Roles to be assigned to this Member",
																				"type": "array",
																				"items": {
																					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/allOf/0/properties/roles/items"
																				}
																			},
																			"invited_by": {
																				"description": "The email address of the user who created the invite",
																				"type": "string",
																				"maxLength": 90,
																				"example": "user@example.com"
																			},
																			"invited_on": {
																				"description": "When the invite was sent",
																				"type": "string",
																				"format": "date-time",
																				"readOnly": true,
																				"example": "2014-01-01T05:20:00+00:00"
																			},
																			"expires_on": {
																				"description": "When the invite is no longer active",
																				"type": "string",
																				"format": "date-time",
																				"readOnly": true,
																				"example": "2014-01-01T05:20:00+00:00"
																			}
																		}
																	},
																	{
																		"properties": {
																			"status": {
																				"description": "Current status of the invitation",
																				"enum": [
																					"pending",
																					"accepted",
																					"rejected",
																					"expired"
																				],
																				"example": "accepted"
																			}
																		}
																	}
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/user/invites/{identifier}": {
			"get": {
				"summary": "Invitation Details",
				"description": "Get the details of an invitation",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Invitation Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Respond to Invitation",
				"description": "Respond to an invitation",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1invites~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Respond to Invitation response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1invites~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"status"
								],
								"properties": {
									"status": {
										"enum": [
											"accepted",
											"rejected"
										],
										"description": "Status of your response to the invitation (rejected or accepted)",
										"example": "accepted"
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/organizations": {
			"get": {
				"summary": "List Organizations",
				"description": "List organizations the user is associated with",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Organizations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
															},
															"name": {
																"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/name"
															},
															"status": {
																"type": "string",
																"enum": [
																	"member",
																	"invited"
																],
																"description": "Whether or not the user is a member of the organization or has an inivitation pending",
																"example": "member"
															},
															"permissions": {
																"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/post/requestBody/content/application~1json/schema/properties/roles/items/properties/permissions"
															},
															"roles": {
																"type": "array",
																"description": "List of role names for the User at the Organization",
																"readOnly": true,
																"items": {
																	"type": "string",
																	"maxLength": 120,
																	"example": "All Privileges - Super Administrator"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/user/organizations/{identifier}": {
			"get": {
				"summary": "Organization Details",
				"description": "Get a specific organization the user is associated with",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Organization Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Leave Organization",
				"description": "Remove association to an organization",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Leave Organization response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/paths/~1user~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/user/billing/profile": {
			"get": {
				"summary": "Billing Profile Details",
				"description": "Access your billing profile object",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Billing Profile Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/user/billing/history": {
			"get": {
				"summary": "Billing History Details",
				"description": "Access your billing history object",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Billing History Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"type",
															"action",
															"description",
															"occurred_at",
															"amount",
															"currency",
															"zone"
														],
														"properties": {
															"id": {
																"description": "Billing item identifier tag",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "b69a9f3492637782896352daae219e7d"
															},
															"type": {
																"description": "The billing item type",
																"type": "string",
																"maxLength": 30,
																"readOnly": true,
																"example": "charge"
															},
															"action": {
																"description": "The billing item action",
																"type": "string",
																"maxLength": 30,
																"readOnly": true,
																"example": "subscription"
															},
															"description": {
																"description": "The billing item description",
																"type": "string",
																"maxLength": 255,
																"readOnly": true,
																"example": "The billing item description"
															},
															"occurred_at": {
																"description": "When the billing item was created",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-03-01T12:21:59.345600+00:00"
															},
															"amount": {
																"description": "The amount associated with this billing item",
																"type": "number",
																"readOnly": true,
																"example": 20.99
															},
															"currency": {
																"description": "The monetary unit in which pricing information is displayed",
																"type": "string",
																"readOnly": true,
																"example": "USD"
															},
															"zone": {
																"type": "object",
																"properties": {
																	"name": {
																		"readOnly": true
																	}
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/user/subscriptions": {
			"get": {
				"summary": "Get User Subscriptions",
				"description": "Lists all a user's subscriptions",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get User Subscriptions response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				}
			}
		},
		"/user/subscriptions/{identifier}": {
			"put": {
				"summary": "Update User Subscription",
				"description": "Update a user subscriptions.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions~1%7Bsubscription_identifier%7D/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update User Subscription response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read",
						"#billing:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete User Subscription",
				"description": "Deletes a user's subscription",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1subscriptions~1%7Bidentifier%7D/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete User Subscription response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"subscription_id": {
											"$ref": "#/paths/~1user~1subscriptions~1%7Bidentifier%7D/put/parameters/0/schema"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:edit"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/billing/profile": {
			"get": {
				"summary": "Billing Profile Details",
				"description": "Get the current billing profile for the account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Billing Profile Details response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1billing~1profile/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/available_rate_plans": {
			"get": {
				"summary": "List Available Rate Plans",
				"description": "List all rate plans the zone can subscribe to.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Available Rate Plans response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"type": "object",
																"properties": {
																	"id": {
																		"description": "Plan identifier tag",
																		"type": "string",
																		"readOnly": true,
																		"example": "free"
																	},
																	"name": {
																		"description": "The plan name",
																		"type": "string",
																		"maxLength": 80,
																		"readOnly": true,
																		"example": "Free Plan"
																	},
																	"currency": {
																		"description": "The monetary unit in which pricing information is displayed",
																		"type": "string",
																		"readOnly": true,
																		"example": "USD"
																	},
																	"duration": {
																		"description": "The duration of the plan subscription",
																		"type": "number",
																		"example": 1
																	},
																	"frequency": {
																		"description": "The frequency at which you will be billed for this plan",
																		"type": "string",
																		"enum": [
																			"weekly",
																			"monthly",
																			"quarterly",
																			"yearly"
																		],
																		"readOnly": true,
																		"example": "monthly"
																	},
																	"components": {
																		"description": "Array of available components values for the plan",
																		"type": "array",
																		"items": {
																			"type": "object",
																			"properties": {
																				"name": {
																					"description": "The unique component",
																					"enum": [
																						"zones",
																						"page_rules",
																						"dedicated_certificates",
																						"dedicated_certificates_custom"
																					],
																					"example": "page_rules"
																				},
																				"default": {
																					"description": "The default amount allocated",
																					"type": "number",
																					"example": 5
																				},
																				"unit_price": {
																					"description": "The unit price of the addon",
																					"type": "number",
																					"readOnly": true,
																					"example": 1
																				}
																			}
																		}
																	}
																}
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/available_plans": {
			"get": {
				"summary": "List Available Plans",
				"description": "List available plans the zone can subscribe to.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_rate_plans/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Available Plans response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"name": {
																"description": "The plan name",
																"type": "string",
																"maxLength": 80,
																"readOnly": true,
																"example": "Free Plan"
															},
															"currency": {
																"description": "The monetary unit in which pricing information is displayed",
																"type": "string",
																"readOnly": true,
																"example": "USD"
															},
															"frequency": {
																"description": "The frequency at which you will be billed for this plan",
																"type": "string",
																"enum": [
																	"weekly",
																	"monthly",
																	"quarterly",
																	"yearly"
																],
																"readOnly": true,
																"example": "monthly"
															},
															"price": {
																"description": "The amount for which you will be billed for this plan",
																"type": "number",
																"example": 0
															},
															"is_subscribed": {
																"type": "boolean",
																"description": "Indicates whether you are currently subscribed to this plan",
																"default": false,
																"example": false
															},
															"can_subscribe": {
																"type": "boolean",
																"description": "Indicates whether you can subscribe to this plan",
																"default": false,
																"example": true
															},
															"legacy_id": {
																"description": "The legacy identifier for this rate plan, if any",
																"type": "string",
																"readOnly": true,
																"example": "free"
															},
															"legacy_discount": {
																"type": "boolean",
																"description": "Indicates if this plan has a legacy discount applied",
																"default": false,
																"example": false
															},
															"externally_managed": {
																"type": "boolean",
																"description": "Indicates if this plan is managed externally",
																"default": false,
																"example": false
															}
														},
														"x-$comment": "Both this schema and rate-plan.json describe a rate plan, but the fields are different. Notably the id in this schema can be used as the identifier for subsequent API calls"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/available_plans/{plan_identifier}": {
			"get": {
				"summary": "Available Plan Details",
				"description": "Details of an available plan that the zone can subscribe to.",
				"parameters": [
					{
						"name": "plan_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "9a7806061c88ada191ed06f989cc3dac"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_rate_plans/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Available Plan Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{identifier}/subscription": {
			"get": {
				"summary": "Zone Subscription Details",
				"description": "Zone subscription details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions~1%7Bsubscription_identifier%7D/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Zone Subscription Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Zone Subscription",
				"description": "Update Zone subscriptions. Either plan and add-ons",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1subscription/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Zone Subscription response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1subscription/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read",
						"#billing:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create Zone Subscription",
				"description": "Create a Zone subscriptions. Either plan or add-ons",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1subscription/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Zone Subscription response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1subscription/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#billing:read",
						"#billing:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
							}
						}
					}
				}
			}
		},
		"/user/audit_logs": {
			"get": {
				"summary": "Get user audit logs",
				"description": "Gets a list of audit logs for a user account. The list can be filtered by who made the change, which zone was the change made on, and the timeframe of the change.",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get user audit logs response",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"example": true
												},
												"errors": {
													"example": null,
													"nullable": true
												},
												"messages": {
													"type": "array",
													"example": [],
													"items": {}
												},
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "A string that uniquely identifies the audit log.",
																"type": "string",
																"example": "d5b0f326-1232-4452-8858-1089bd7168ef"
															},
															"action": {
																"type": "object",
																"properties": {
																	"type": {
																		"description": "A short string that describes the action that was performed.",
																		"type": "string",
																		"example": "change_setting"
																	},
																	"result": {
																		"description": "A boolean that indicates if the action attempted was successful.",
																		"type": "boolean",
																		"example": true
																	}
																}
															},
															"actor": {
																"type": "object",
																"properties": {
																	"id": {
																		"type": "string",
																		"example": "f6b5de0326bb5182b8a4840ee01ec774",
																		"description": "The ID of the actor that performed the action. If a user performed the action, this will be their User ID."
																	},
																	"email": {
																		"type": "string",
																		"format": "email",
																		"example": "michelle@example.com",
																		"description": "The email of the user that performed the action."
																	},
																	"type": {
																		"description": "The type of actor, whether a User, Cloudflare Admin, or an Automated System",
																		"type": "string",
																		"enum": [
																			"user",
																			"admin",
																			"Cloudflare"
																		],
																		"example": "user"
																	},
																	"ip": {
																		"description": "The IP address of the request that performed the action",
																		"type": "string",
																		"example": "198.41.129.166"
																	}
																}
															},
															"newValue": {
																"description": "The new value of the resource that was modified.",
																"type": "string",
																"example": "low"
															},
															"oldValue": {
																"description": "The value of the resource before it was modified.",
																"type": "string",
																"example": "high"
															},
															"owner": {
																"type": "object",
																"properties": {
																	"id": {
																		"description": "The unique identifier of the user.",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "7c5dae5552338874e5053f2534d2767a"
																	}
																}
															},
															"resource": {
																"type": "object",
																"properties": {
																	"type": {
																		"description": "A short string that describes the resource that was affected by the action.",
																		"type": "string",
																		"example": "zone"
																	},
																	"id": {
																		"description": "An identifier for the resource that was affected by the action.",
																		"type": "string",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353"
																	}
																}
															},
															"interface": {
																"description": "The source of the event",
																"type": "string",
																"example": "API"
															},
															"metadata": {
																"description": "An object which can lend more context to the action being logged. This is a flexible value and varies between different actions.",
																"type": "object",
																"example": {
																	"zone_name": "example.com",
																	"type": "firewall",
																	"name": "security_level",
																	"value": "high"
																}
															},
															"when": {
																"description": "A UTC RFC3339 timestamp that specifies when the action being logged occured.",
																"type": "string",
																"format": "date-time",
																"example": "2017-04-26T17:31:07+00:00"
															}
														},
														"x-cfDeprecations": {
															"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
														}
													}
												}
											}
										},
										{
											"type": "object",
											"required": [
												"success",
												"errors",
												"messages",
												"result"
											],
											"oneOf": [
												{
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																true
															],
															"example": true
														},
														"errors": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"code",
																	"message"
																],
																"properties": {
																	"code": {
																		"type": "integer",
																		"minimum": 1000
																	},
																	"message": {
																		"type": "string"
																	}
																},
																"uniqueItems": true
															},
															"example": []
														},
														"messages": {
															"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1/oneOf/0/properties/errors"
														},
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "array",
																	"items": {}
																},
																{
																	"type": "string"
																}
															]
														}
													},
													"x-$comment": "This subschema describes successful responses"
												},
												{
													"properties": {
														"success": {
															"description": "Whether the API call was successful or not",
															"type": "boolean",
															"enum": [
																false
															],
															"example": false
														},
														"errors": {
															"allOf": [
																{
																	"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1/oneOf/0/properties/errors"
																}
															],
															"minLength": 1,
															"example": [
																{
																	"code": 7003,
																	"message": "No route for the URI"
																}
															]
														},
														"messages": {
															"allOf": [
																{
																	"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1/oneOf/0/properties/errors"
																}
															],
															"example": []
														},
														"result": {
															"enum": [
																null
															],
															"example": null,
															"nullable": true
														}
													},
													"x-$comment": "This subschema describes failure responses"
												}
											]
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_identifier}/audit_logs": {
			"get": {
				"summary": "Get account audit logs",
				"description": "Gets a list of audit logs for an account. The list can be filtered by who made the change, which zone was the change made on, and the timeframe of the change.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get account audit logs response",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"example": true
												},
												"errors": {
													"example": null,
													"nullable": true
												},
												"messages": {
													"type": "array",
													"example": [],
													"items": {}
												},
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "A string that uniquely identifies the audit log.",
																"type": "string",
																"example": "d5b0f326-1232-4452-8858-1089bd7168ef"
															},
															"action": {
																"type": "object",
																"properties": {
																	"type": {
																		"description": "A short string that describes the action that was performed.",
																		"type": "string",
																		"example": "change_setting"
																	},
																	"result": {
																		"description": "A boolean that indicates if the action attempted was successful.",
																		"type": "boolean",
																		"example": true
																	}
																}
															},
															"actor": {
																"type": "object",
																"properties": {
																	"id": {
																		"type": "string",
																		"example": "f6b5de0326bb5182b8a4840ee01ec774",
																		"description": "The ID of the actor that performed the action. If a user performed the action, this will be their User ID."
																	},
																	"email": {
																		"type": "string",
																		"format": "email",
																		"example": "michelle@example.com",
																		"description": "The email of the user that performed the action."
																	},
																	"type": {
																		"description": "The type of actor, whether a User, Cloudflare Admin, or an Automated System",
																		"type": "string",
																		"enum": [
																			"user",
																			"admin",
																			"Cloudflare"
																		],
																		"example": "user"
																	},
																	"ip": {
																		"description": "The IP address of the request that performed the action",
																		"type": "string",
																		"example": "198.41.129.166"
																	}
																}
															},
															"newValue": {
																"description": "The new value of the resource that was modified.",
																"type": "string",
																"example": "low"
															},
															"oldValue": {
																"description": "The value of the resource before it was modified.",
																"type": "string",
																"example": "high"
															},
															"owner": {
																"type": "object",
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/0/properties/result/items/properties/owner/properties/id"
																	}
																}
															},
															"resource": {
																"type": "object",
																"properties": {
																	"type": {
																		"description": "A short string that describes the resource that was affected by the action.",
																		"type": "string",
																		"example": "zone"
																	},
																	"id": {
																		"description": "An identifier for the resource that was affected by the action.",
																		"type": "string",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353"
																	}
																}
															},
															"interface": {
																"description": "The source of the event",
																"type": "string",
																"example": "API"
															},
															"metadata": {
																"description": "An object which can lend more context to the action being logged. This is a flexible value and varies between different actions.",
																"type": "object",
																"example": {
																	"zone_name": "example.com",
																	"type": "firewall",
																	"name": "security_level",
																	"value": "high"
																}
															},
															"when": {
																"description": "A UTC RFC3339 timestamp that specifies when the action being logged occured.",
																"type": "string",
																"format": "date-time",
																"example": "2017-04-26T17:31:07+00:00"
															}
														},
														"x-cfDeprecations": {
															"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
														}
													}
												}
											}
										},
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/organizations/{organization_identifier}/audit_logs": {
			"get": {
				"summary": "Get organization audit logs",
				"description": "Gets a list of audit logs for an organization. The list can be filtered by who made the change, which zone was the change made on, and the timeframe of the change.",
				"parameters": [
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get organization audit logs response",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"example": true
												},
												"errors": {
													"example": null,
													"nullable": true
												},
												"messages": {
													"type": "array",
													"example": [],
													"items": {}
												},
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "A string that uniquely identifies the audit log.",
																"type": "string",
																"example": "d5b0f326-1232-4452-8858-1089bd7168ef"
															},
															"action": {
																"type": "object",
																"properties": {
																	"type": {
																		"description": "A short string that describes the action that was performed.",
																		"type": "string",
																		"example": "change_setting"
																	},
																	"result": {
																		"description": "A boolean that indicates if the action attempted was successful.",
																		"type": "boolean",
																		"example": true
																	}
																}
															},
															"actor": {
																"type": "object",
																"properties": {
																	"id": {
																		"type": "string",
																		"example": "f6b5de0326bb5182b8a4840ee01ec774",
																		"description": "The ID of the actor that performed the action. If a user performed the action, this will be their User ID."
																	},
																	"email": {
																		"type": "string",
																		"format": "email",
																		"example": "michelle@example.com",
																		"description": "The email of the user that performed the action."
																	},
																	"type": {
																		"description": "The type of actor, whether a User, Cloudflare Admin, or an Automated System",
																		"type": "string",
																		"enum": [
																			"user",
																			"admin",
																			"Cloudflare"
																		],
																		"example": "user"
																	},
																	"ip": {
																		"description": "The IP address of the request that performed the action",
																		"type": "string",
																		"example": "198.41.129.166"
																	}
																}
															},
															"newValue": {
																"description": "The new value of the resource that was modified.",
																"type": "string",
																"example": "low"
															},
															"oldValue": {
																"description": "The value of the resource before it was modified.",
																"type": "string",
																"example": "high"
															},
															"owner": {
																"type": "object",
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/0/properties/result/items/properties/owner/properties/id"
																	}
																}
															},
															"resource": {
																"type": "object",
																"properties": {
																	"type": {
																		"description": "A short string that describes the resource that was affected by the action.",
																		"type": "string",
																		"example": "zone"
																	},
																	"id": {
																		"description": "An identifier for the resource that was affected by the action.",
																		"type": "string",
																		"example": "023e105f4ecef8ad9ca31a8372d0c353"
																	}
																}
															},
															"interface": {
																"description": "The source of the event",
																"type": "string",
																"example": "API"
															},
															"metadata": {
																"description": "An object which can lend more context to the action being logged. This is a flexible value and varies between different actions.",
																"type": "object",
																"example": {
																	"zone_name": "example.com",
																	"type": "firewall",
																	"name": "security_level",
																	"value": "high"
																}
															},
															"when": {
																"description": "A UTC RFC3339 timestamp that specifies when the action being logged occured.",
																"type": "string",
																"format": "date-time",
																"example": "2017-04-26T17:31:07+00:00"
															}
														},
														"x-cfDeprecations": {
															"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
														}
													}
												}
											}
										},
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/argo/smart_routing": {
			"get": {
				"summary": "Get Argo Smart Routing setting",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Zone identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "023e105f4ecef8ad9ca31a8372d0c353"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Argo Smart Routing setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Patch Argo Smart Routing setting",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch Argo Smart Routing setting response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read",
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"description": "Update Enablement of Argo smart routing",
								"type": "object",
								"properties": {
									"value": {
										"description": "Enablement of Argo smart routing",
										"type": "string",
										"enum": [
											true,
											false
										],
										"example": true
									}
								},
								"required": [
									"value"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/analytics/latency": {
			"get": {
				"summary": "Argo Analytics for a zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Argo Analytics for a zone response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#analytics:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/analytics/latency/colos": {
			"get": {
				"summary": "Argo Analytics for a zone at differnt PoPs",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Argo Analytics for a zone at differnt PoPs response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#analytics:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones": {
			"get": {
				"summary": "List Zones",
				"description": "List, search, sort, and filter your zones",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Zones response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"type": "object",
																"allOf": [
																	{
																		"$ref": "#/paths/~1railguns~1%7Bidentifier%7D~1zones/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
																	},
																	{
																		"properties": {
																			"owner": {
																				"description": "Information about the owner of the zone",
																				"type": "object",
																				"oneOf": [
																					{
																						"description": "A user that owns the zone",
																						"type": "object",
																						"properties": {
																							"id": {
																								"oneOf": [
																									{
																										"nullable": true
																									},
																									{
																										"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/0/properties/result/items/properties/owner/properties/id"
																									}
																								]
																							},
																							"email": {
																								"oneOf": [
																									{
																										"nullable": true
																									},
																									{
																										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/allOf/1/properties/scope/properties/email"
																									}
																								]
																							},
																							"type": {
																								"description": "The type of owner of the zone",
																								"enum": [
																									"user"
																								],
																								"readOnly": true,
																								"example": "user"
																							}
																						}
																					},
																					{
																						"description": "An organization that owns the zone",
																						"type": "object",
																						"properties": {
																							"id": {
																								"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
																							},
																							"name": {
																								"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/name"
																							},
																							"type": {
																								"description": "The type of owner of the zone",
																								"enum": [
																									"organization"
																								],
																								"readOnly": true,
																								"example": "organization"
																							}
																						}
																					}
																				]
																			},
																			"account": {
																				"description": "Information about the account the zone belongs to",
																				"type": "object",
																				"properties": {
																					"id": {
																						"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
																					},
																					"name": {
																						"description": "Account name",
																						"type": "string",
																						"maxLength": 100,
																						"example": "Demo Account"
																					}
																				}
																			},
																			"permissions": {
																				"description": "Available permissions on the zone for the current user requesting the item",
																				"type": "array",
																				"items": {
																					"type": "string"
																				},
																				"readOnly": true,
																				"example": [
																					"#zone:read",
																					"#zone:edit"
																				]
																			},
																			"plan": {
																				"type": "object",
																				"allOf": [
																					{
																						"type": "object",
																						"properties": {
																							"id": {
																								"description": "Plan identifier tag",
																								"type": "string",
																								"maxLength": 32,
																								"readOnly": true,
																								"example": "e592fd9519420ba7405e1307bff33214"
																							},
																							"name": {
																								"description": "The plan name",
																								"type": "string",
																								"maxLength": 80,
																								"readOnly": true,
																								"example": "Pro Plan"
																							},
																							"price": {
																								"description": "The price of the subscription that will be billed, in US dollars",
																								"type": "number",
																								"readOnly": true,
																								"example": 20
																							},
																							"currency": {
																								"description": "The monetary unit in which pricing information is displayed",
																								"type": "string",
																								"readOnly": true,
																								"example": "USD"
																							},
																							"frequency": {
																								"description": "The frequency at which you will be billed for this plan",
																								"type": "string",
																								"enum": [
																									"weekly",
																									"monthly",
																									"quarterly",
																									"yearly",
																									""
																								],
																								"readOnly": true,
																								"example": "monthly"
																							}
																						}
																					},
																					{
																						"type": "object",
																						"properties": {
																							"legacy_id": {
																								"description": "A 'friendly' identifier to indicate to the UI what plan the object is",
																								"enum": [
																									"free",
																									"pro",
																									"business",
																									"enterprise"
																								],
																								"example": "pro"
																							},
																							"is_subscribed": {
																								"description": "If the zone is subscribed to this plan",
																								"type": "boolean",
																								"example": true
																							},
																							"can_subscribe": {
																								"description": "If the zone is allowed to subscribe to this plan",
																								"type": "boolean",
																								"example": true
																							}
																						}
																					}
																				]
																			},
																			"plan_pending": {
																				"$ref": "#/paths/~1zones/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/allOf/1/properties/plan"
																			},
																			"status": {
																				"description": "Status of the zone",
																				"type": "string",
																				"enum": [
																					"active",
																					"pending",
																					"initializing",
																					"moved",
																					"deleted",
																					"deactivated"
																				],
																				"readOnly": true,
																				"example": "active"
																			},
																			"paused": {
																				"description": "Indicates if the zone is only using Cloudflare DNS services. A true value means the zone will not receive security or performance benefits.",
																				"type": "boolean",
																				"readOnly": true,
																				"default": false
																			},
																			"type": {
																				"description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup.",
																				"type": "string",
																				"enum": [
																					"full",
																					"partial"
																				],
																				"example": "full"
																			},
																			"name_servers": {
																				"description": "Cloudflare-assigned name servers. This is only populated for zones that use Cloudflare DNS",
																				"type": "array",
																				"items": {
																					"type": "string",
																					"format": "hostname"
																				},
																				"example": [
																					"tony.ns.cloudflare.com",
																					"woz.ns.cloudflare.com"
																				]
																			}
																		}
																	}
																],
																"properties": {
																	"host": {
																		"description": "Hosting partner information, if the zone signed up via a Cloudflare hosting partner",
																		"type": "object",
																		"properties": {
																			"name": {
																				"type": "string",
																				"description": "Host company name",
																				"example": "Example Host"
																			},
																			"website": {
																				"type": "string",
																				"description": "The host's website URL",
																				"example": "http://www.examplehost.com"
																			}
																		},
																		"readOnly": true,
																		"example": {
																			"name": "Hosting Company, Inc.",
																			"website": "http://www.hostingcompanyinc.com"
																		}
																	},
																	"vanity_name_servers": {
																		"description": "An array of domains used for custom name servers. This is only available for Business and Enterprise plans.",
																		"type": "array",
																		"items": {
																			"type": "string",
																			"format": "hostname",
																			"maxLength": 253
																		},
																		"example": [
																			"ns1.example.com",
																			"ns2.example.com"
																		]
																	},
																	"betas": {
																		"description": "A list of beta features in which the zone is participating",
																		"type": "array",
																		"items": {
																			"description": "A beta feature ID",
																			"type": "string",
																			"example": "new_feature"
																		}
																	},
																	"deactivation_reason": {
																		"description": "Exists only with a deactivated status and indicates the reason the zone is not resolving on the Cloudflare network.",
																		"enum": [
																			"abuse_violation",
																			"plan_limits_exceeded"
																		],
																		"example": "abuse_violation"
																	},
																	"meta": {
																		"description": "Metadata about the domain.",
																		"type": "object",
																		"properties": {
																			"custom_certificate_quota": {
																				"type": "number",
																				"description": "Maximum custom certificates that can be uploaded/used.",
																				"default": 0,
																				"example": 1
																			},
																			"page_rule_quota": {
																				"type": "number",
																				"description": "Maximum page rules that can be created.",
																				"default": 3,
																				"example": 5
																			},
																			"wildcard_proxiable": {
																				"type": "boolean",
																				"description": "Indicates whether wildcard DNS records can receive Cloudflare security and performance features",
																				"default": false,
																				"example": false
																			},
																			"phishing_detected": {
																				"type": "boolean",
																				"description": "Indicates if URLs on the zone have been identified as hosting phishing content.",
																				"default": false,
																				"example": false
																			},
																			"multiple_railguns_allowed": {
																				"type": "boolean",
																				"description": "Indicates whether the zone is allowed to be connected to multiple Railguns at once",
																				"default": false,
																				"example": false
																			}
																		},
																		"readOnly": true
																	}
																}
															}
														],
														"x-cfDeprecations": {
															"zone_request_id_deprecation": {
																"id": "zone_request_id_deprecation",
																"description": "In mid 2020, we introduced cf-request-id, an experimental HTTP header. This header was present on requests sent to origins and returned in responses to eyeballs (users). After careful evaluation, we decided to remove the cf-request-id header.\n\nEffective today, cf-request-id is deprecated but will remain in place until July 1, 2021. After this date, the header will no longer be present on requests and responses. If you require an identifier for requests, we recommend using the CF-RAY header.\n\nIn preparation of the header’s removal, we will perform a test-run on June 15, 2021. The cf-request-id header will not be present from 15:00 UTC to 23:00 UTC. After this time, it will be present until its full removal on July 1.",
																"eol": "2021-07-01",
																"display": true
															}
														},
														"x-cfLinkErrors": {
															"1000": "Invalid or missing user",
															"1001": "Invalid zone identifier",
															"1002": "Invalid domain",
															"1003": "'jump_start' must be boolean",
															"1006": "Invalid or missing zone",
															"1008": "Invalid or missing Zone id",
															"1010": "Bulk deal limit reached",
															"1012": "Request must contain one of 'purge_everything', 'files', 'tags', 'hosts' or 'prefixes'",
															"1013": "'purge_everything' must be true",
															"1014": "'files', 'tags', 'hosts' or 'prefixes' must be an array",
															"1015": "Unable to purge <url>",
															"1016": "Unable to purge any urls",
															"1017": "Unable to purge all",
															"1018": "Invalid zone status",
															"1019": "Zone is already paused",
															"1020": "Invalid or missing zone",
															"1021": "Invalid zone status",
															"1022": "Zone is already unpaused",
															"1023": "Invalid or missing zone",
															"1049": "<domain> is not a registered domain",
															"1050": "<domain> is currently being tasted. It is not currently a registered domain",
															"1051": "Cloudflare is already hosting <domain>",
															"1052": "An error has occurred and it has been logged. We will fix this problem promptly. We apologize for the inconvenience",
															"1055": "Failed to disable <domain>",
															"1056": "preserve_ini must be a boolean",
															"1057": "Zone must be in 'initializing' status",
															"1059": "Unable to delete zone",
															"1061": "<domain> already exists",
															"1064": "Not allowed to update zone step. Bad zone status",
															"1065": "Not allowed to update zone step. Zone has already been set up",
															"1066": "Could not promote zone to step 3",
															"1067": "Invalid organization identifier passed in your organization variable",
															"1068": "Permission denied",
															"1069": "organization variable should be an organization object",
															"1070": "This operation requires a Business or Enterprise account.",
															"1071": "Vanity name server array expected.",
															"1073": "A name server provided is in the wrong format.",
															"1074": "Could not find a valid zone.",
															"1075": "Vanity name server array count is invalid",
															"1076": "Name servers have invalid IP addresses",
															"1077": "Could not find a valid zone.",
															"1078": "This zone has no valid vanity IPs.",
															"1079": "This zone has no valid vanity name servers.",
															"1080": "There is a conflict with one of the name servers.",
															"1081": "There are no valid vanity name servers to disable.",
															"1082": "Unable to purge '<url>'. You can only purge files for this zone",
															"1083": "Unable to purge '<url>'. Rate limit reached. Please wait if you need to perform more operations",
															"1084": "Unable to purge '<url>', which is an invalid URL.",
															"1085": "Only one property can be updated at a time",
															"1086": "Invalid property",
															"1088": "Invalid/Missing Zone plan ID",
															"1089": "Invalid/Missing Zone plan ID",
															"1092": "Request cannot contain 'purge_everything' and any of 'files', 'tags', 'hosts' or 'prefixes'",
															"1094": "Exceeded maximum amount of files that can be purged on a single request for your plan type.",
															"1095": "Sorry, you do not have access to purge cache for that zone id or that zone id is invalid",
															"1096": "This action is not available as your zone has been deactivated for a possible Terms of Service violation",
															"1097": "This web property cannot be added to Cloudflare at this time. If you are an Enterprise customer, please contact your Customer Success Manager. Otherwise, please email abusereply@cloudflare.com with the name of the web property and a detailed explanation of your association with this web property.",
															"1098": "This web property is temporarily restricted from being added to Cloudflare at this time. Please try again later, or contact Cloudflare Support with any questions.",
															"1099": "We were unable to identify <domain> as a registered domain. Please ensure you are providing the root domain and not any subdomains (e.g., example.com, not subdomain.example.com)",
															"1100": "Tag exceeds maximum length of 1024 characters",
															"1101": "Exceeded maximum amount of 30 tags that can be purged on a single request",
															"1102": "Unable to purge by tag, rate limit reached. Please wait if you need to perform more",
															"1104": "Partial zone signup not allowed",
															"1105": "This web property is temporarily restricted from being added to Cloudflare at this time. Please try again later, or contact Cloudflare Support with any questions.",
															"1106": "Sorry, you are not allowed to create new zones. Please contact support.",
															"1107": "Only enterprise zones can purge by tag.",
															"1108": "Unable to update domain subscription. Please contact support for assistance.",
															"1109": "Unable to update domain subscription. Please contact support for assistance.",
															"1110": "Failed to lookup registrar and hosting information of <domain> at this time. Please contact Cloudflare Support or try again later.",
															"1111": "Exceeded maximum amount of 30 hosts that can be purged on a single request",
															"1112": "Only enterprise zones can purge by host",
															"1113": "Unable to purge by host, rate limit reached. Please wait if you need to perform more operations.",
															"1114": "Host exceeds maximum length of 200 characters",
															"1115": "Invalid host",
															"1116": "No prefixes were provided in the request. Must provide at least 1 prefixes.",
															"1117": "Exceeded maximum amount of 30 prefixes that can be purged on a single request.",
															"1118": "Empty prefix provided. Prefixes must not be empty.",
															"1119": "URI scheme provided in prefix '<prefix>'. URI schemes must not be provided.",
															"1120": "URI host was not provided in prefix '<prefix>'. Host must be provided in each prefix.",
															"1121": "URI host in prefix '<prefix>' exceeds maximum length of 200 characters.",
															"1122": "URI host in prefix '<prefix>' has a segment exceeding maximum length of 63 characters.",
															"1123": "URI Query string was provided in prefix '<prefix>'. Query strings must not be provided.",
															"1124": "URI fragment was provided in prefix '<prefix>'. Fragments must not be provided.",
															"1125": "URI host in prefix '<prefix>' is not a domain. Host must be a valid domain or IPV4 address.",
															"1126": "URI host in prefix '<prefix>' contains an invalid top level domain.",
															"1127": "Invalid prefix '<prefix>'. Invalid Url.",
															"1128": "Prefix '<prefix>' overlaps with another prefix. Prefixes must not be redundant.",
															"1129": "Could not purge prefix '<prefix>'. Internal error.",
															"1130": "Only enterprise zones can purge by prefix.",
															"1131": "Unable to purge by prefix, rate limit reached. Please wait if you need to perform more operations",
															"1132": "Unable to purge '<url>'. Resized images cannot be purged. Purge the original image instead.",
															"1133": "Path too deep in '<prefix>', maximum path depth is 31.",
															"1134": "Unable to purge '<url>'. URL headers must not contain reserved cf header: '<header name>'.",
															"1135": "Unable to purge: '<url>'. URL contains a newline.",
															"1136": "Unable to purge: '<url>'. URL has invalid scheme \"<scheme>\".",
															"1137": "Unable to purge: '<url>'. URL host is too long.",
															"1138": "Unable to purge: '<url>'. URL host has a zero-length label.",
															"1139": "Unable to purge: '<url>'. Host has a label exceeding '<max host label length>' characters.",
															"1140": "Unable to purge: '<url>'. Host contains invalid top level domain: '<top level domain>'.",
															"1141": "Unable to purge: '<url>'. Host is an invalid domain.",
															"1142": "Unable to purge '<url>', cdn-cgi endpoints cannot be purged."
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Zone",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create Zone response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"name",
									"account"
								],
								"properties": {
									"name": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/zone/properties/name"
									},
									"account": {
										"description": "Account of which the zone is created in",
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
											}
										}
									},
									"jump_start": {
										"description": "Automatically attempt to fetch existing DNS records",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"type": {
										"description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup.",
										"type": "string",
										"enum": [
											"full",
											"partial"
										],
										"example": "full"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}": {
			"get": {
				"summary": "Zone Details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Zone Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit Zone",
				"description": "Only one zone property can be changed at a time",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit Zone response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"paused": {
										"description": "Indicates if the zone is only using Cloudflare DNS services. A true value means the zone will not receive security or performance benefits.",
										"type": "boolean",
										"readOnly": true,
										"default": false
									},
									"vanity_name_servers": {
										"$ref": "#/paths/~1zones/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/properties/vanity_name_servers"
									},
									"plan": {
										"description": "The desired plan for the zone. Changing this value will create/cancel associated subscriptions. To view available plans for this zone, see Zone Plans",
										"type": "object",
										"properties": {
											"id": {
												"description": "Plan identifier tag",
												"type": "string",
												"maxLength": 32,
												"readOnly": true,
												"example": "e592fd9519420ba7405e1307bff33214"
											}
										}
									},
									"type": {
										"description": "A full zone implies that DNS is hosted with Cloudflare. A partial zone is typically a partner-hosted zone or a CNAME setup. This parameter is only available to Enterprise customers or if it has been explicitly enabled on a zone.",
										"type": "string",
										"enum": [
											"full",
											"partial"
										],
										"example": "full"
									}
								},
								"example": {
									"paused": true
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Zone",
				"description": "Delete an existing zone.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Zone response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/activation_check": {
			"put": {
				"summary": "Zone Activation Check",
				"description": "Initiate another zone activation check",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Zone Activation Check response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/purge_cache": {
			"post": {
				"summary": "Purge Files by Cache-Tags, Host or Prefix",
				"description": "Granularly remove one or more files from Cloudflare's cache either by specifying the host, the associated Cache-Tag, or a Prefix.\n\n**NB:** Cache-Tag, host and prefix purging each have a rate limit of 30,000 purge API calls in every 24 hour period. You may purge up to 30 tags, hosts, or prefixes in one API call. This rate limit can be raised for customers who need to purge at higher volume.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Purge Files by Cache-Tags, Host or Prefix response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#cache_purge:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"tags": {
										"description": "Any assets served with a Cache-Tag header that matches one of the provided values will be purged from the Cloudflare cache",
										"type": "array",
										"items": {
											"type": "string"
										},
										"maxLength": 30,
										"example": [
											"some-tag",
											"another-tag"
										]
									},
									"hosts": {
										"description": "Any assets at URLs with a host that matches one of the provided values will be purged from the Cloudflare cache",
										"type": "array",
										"items": {
											"type": "string"
										},
										"maxLength": 30,
										"example": [
											"www.example.com",
											"images.example.com"
										]
									},
									"prefixes": {
										"description": "Any assets at URLs that match the prefix will be purged from the Cloudflare cache. For instance, a.com/b will purge a.com/b/c/d.png but not a.com/bc.png. The prefixes a.com/b and a.com/b/c are redundant.",
										"type": "array",
										"items": {
											"type": "string"
										},
										"maxLength": 30,
										"example": [
											"www.example.com/foo",
											"images.example.com/bar/baz"
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings": {
			"get": {
				"summary": "Get all Zone settings",
				"description": "Available settings for your user in relation to a zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get all Zone settings response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items"
													},
													"anyOf": [
														{
															"type": "array",
															"items": {}
														},
														{
															"type": "object"
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit zone settings info",
				"description": "Edit settings for a zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit zone settings info response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"items"
								],
								"properties": {
									"items": {
										"type": "array",
										"description": "One or more zone setting objects. Must contain an ID and a value.",
										"minItems": 1,
										"items": {
											"type": "object",
											"oneOf": [
												{
													"title": "Always Online Mode",
													"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"always_online"
																	],
																	"example": "always_online",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": true
																}
															}
														}
													]
												},
												{
													"title": "Advanced DDoS Protection",
													"description": "Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"advanced_ddos"
																	],
																	"example": "advanced_ddos",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"default": false,
																	"description": "Value of the zone setting\nNotes: Defaults to on for Business+ plans"
																}
															}
														}
													]
												},
												{
													"title": "Brotli Compression",
													"description": "When the client requesting an asset supports the brotli compression algorithm, Cloudflare will serve a brotli compressed version of the asset.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"brotli"
																	],
																	"example": "brotli",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		true
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Browser Cache TTL",
													"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"browser_cache_ttl"
																	],
																	"example": "browser_cache_ttl",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "number",
																	"enum": [
																		0,
																		30,
																		60,
																		120,
																		300,
																		1200,
																		1800,
																		3600,
																		7200,
																		10800,
																		14400,
																		18000,
																		28800,
																		43200,
																		57600,
																		72000,
																		86400,
																		172800,
																		259200,
																		345600,
																		432000,
																		691200,
																		1382400,
																		2073600,
																		2678400,
																		5356800,
																		16070400,
																		31536000
																	],
																	"default": 14400,
																	"description": "Value of the zone setting\nNotes: Setting a TTL of 0 is equivalent to selecting `Respect Existing Headers`"
																}
															}
														}
													]
												},
												{
													"title": "Browser Check",
													"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"browser_check"
																	],
																	"example": "browser_check",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"default": true,
																	"description": "Value of the zone setting"
																}
															}
														}
													]
												},
												{
													"title": "Cloudflare CNAME Flattening",
													"description": "Whether or not cname flattening is on",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"cname_flattening"
																	],
																	"example": "flatten_at_root",
																	"description": "How to flatten the cname destination"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		"flatten_at_root",
																		"flatten_all"
																	],
																	"default": "flatten_at_root",
																	"description": "Value of the cname flattening setting"
																}
															}
														}
													],
													"x-cfPrivate": true
												},
												{
													"title": "Cloudflare Cache Level",
													"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"cache_level"
																	],
																	"example": "cache_level",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		"aggressive",
																		"basic",
																		"simplified"
																	],
																	"default": "aggressive",
																	"description": "Value of the zone setting"
																}
															}
														}
													]
												},
												{
													"title": "Challenge Page TTL",
													"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"challenge_ttl"
																	],
																	"example": "challenge_ttl",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "number",
																	"enum": [
																		300,
																		900,
																		1800,
																		2700,
																		3600,
																		7200,
																		10800,
																		14400,
																		28800,
																		57600,
																		86400,
																		604800,
																		2592000,
																		31536000
																	],
																	"default": 1800,
																	"description": "Value of the zone setting"
																}
															}
														}
													]
												},
												{
													"title": "Development Mode",
													"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"development_mode"
																	],
																	"example": "development_mode",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																},
																"time_remaining": {
																	"type": "number",
																	"readOnly": true,
																	"description": "Value of the zone setting\nNotes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.",
																	"example": 3600
																}
															}
														}
													]
												},
												{
													"title": "Early Hints",
													"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"early_hints"
																	],
																	"example": "early_hints",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Edge Cache TTL",
													"description": "Time (in seconds) that a resource will be ensured to remain on Cloudflare's cache servers.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"edge_cache_ttl"
																	],
																	"example": "edge_cache_ttl",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "number",
																	"enum": [
																		30,
																		60,
																		300,
																		1200,
																		1800,
																		3600,
																		7200,
																		10800,
																		14400,
																		18000,
																		28800,
																		43200,
																		57600,
																		72000,
																		86400,
																		172800,
																		259200,
																		345600,
																		432000,
																		518400,
																		604800
																	],
																	"default": 7200,
																	"description": "Value of the zone setting\nNotes: The minimum TTL available depends on the plan level of the zone. (Enterprise = 30, Business = 1800, Pro = 3600, Free = 7200)"
																}
															}
														}
													]
												},
												{
													"title": "Error Pages On",
													"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"origin_error_page_pass_thru"
																	],
																	"example": "origin_error_page_pass_thru",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Get String Sort",
													"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"sort_query_string_for_cache"
																	],
																	"example": "sort_query_string_for_cache",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Email Obfuscation",
													"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"email_obfuscation"
																	],
																	"example": "email_obfuscation",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": true
																}
															}
														}
													]
												},
												{
													"title": "Hotlink Protection",
													"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"hotlink_protection"
																	],
																	"example": "hotlink_protection",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "IP Geolocation",
													"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"ip_geolocation"
																	],
																	"example": "ip_geolocation",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": true
																}
															}
														}
													]
												},
												{
													"title": "IPv6",
													"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"ipv6"
																	],
																	"example": "ipv6",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		true
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "WebSockets",
													"description": "WebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming. For more information refer to [Can I use Cloudflare with Websockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Can-I-use-Cloudflare-with-WebSockets-)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"websockets"
																	],
																	"example": "websockets",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		true
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Toggle SHA1 support",
													"description": "Allow SHA1 support",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"sha1_support"
																	],
																	"example": "sha1_support",
																	"description": "Zone setting identifier"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		true
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "TLS1.2 only",
													"description": "Only allows TLS1.2.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"tls_1_2_only"
																	],
																	"example": "tls_1_2_only",
																	"description": "Zone setting identifier."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		true
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Auto-Minify Assets",
													"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"minify"
																	],
																	"example": "minify",
																	"description": "Zone setting identifier."
																},
																"value": {
																	"type": "object",
																	"description": "Value of the zone setting.",
																	"properties": {
																		"css": {
																			"description": "Automatically minify all CSS files for your website.",
																			"enum": [
																				true,
																				false
																			],
																			"default": false
																		},
																		"html": {
																			"description": "Automatically minify all HTML files for your website.",
																			"enum": [
																				true,
																				false
																			],
																			"default": false
																		},
																		"js": {
																			"description": "Automatically minify all JavaScript files for your website.",
																			"enum": [
																				true,
																				false
																			],
																			"default": false
																		}
																	}
																}
															}
														}
													]
												},
												{
													"title": "Max Upload",
													"description": "Maximum size of an allowable upload",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"max_upload"
																	],
																	"example": "max_upload",
																	"description": "identifier of the zone setting"
																},
																"value": {
																	"type": "number",
																	"enum": [
																		100,
																		200,
																		500
																	],
																	"default": 100,
																	"description": "Value of the zone setting\nNotes: The size depends on the plan level of the zone. (Enterprise = 500, Business = 200, Pro = 100, Free = 100)"
																}
															}
														}
													]
												},
												{
													"title": "Mobile Redirect",
													"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"mobile_redirect"
																	],
																	"example": "mobile_redirect",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"type": "object",
																	"description": "Value of the zone setting.",
																	"properties": {
																		"status": {
																			"enum": [
																				true,
																				false
																			],
																			"description": "Whether or not mobile redirect is enabled.",
																			"default": false
																		},
																		"mobile_subdomain": {
																			"description": "Which subdomain prefix you wish to redirect visitors on mobile devices to (subdomain must already exist).",
																			"type": "string",
																			"minLength": 1,
																			"example": "m",
																			"nullable": true
																		},
																		"strip_uri": {
																			"description": "Whether to drop the current page path and redirect to the mobile subdomain URL root, or keep the path and redirect to the same page on the mobile subdomain.",
																			"type": "boolean",
																			"example": false,
																			"default": false
																		}
																	}
																}
															}
														}
													]
												},
												{
													"title": "Mirage Image Optimization",
													"description": "Automatically optimize image loading for website visitors on mobile devices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more information.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"mirage"
																	],
																	"example": "mirage",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Polish Image Optimization",
													"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"polish"
																	],
																	"example": "polish",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		"lossless",
																		"lossy"
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Polish WebP Conversion",
													"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"webp"
																	],
																	"example": "webp",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		true
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Prefetch preload",
													"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"prefetch_preload"
																	],
																	"example": "prefetch_preload",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Privacy Pass",
													"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"privacy_pass"
																	],
																	"example": "privacy_pass",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": true
																}
															}
														}
													]
												},
												{
													"title": "Response Buffering",
													"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"response_buffering"
																	],
																	"example": "response_buffering",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Rocket Loader",
													"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"rocket_loader"
																	],
																	"example": "rocket_loader",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Security Header",
													"description": "Cloudflare security header for a zone.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"security_header"
																	],
																	"example": "security_header",
																	"description": "ID of the zone's security header"
																},
																"value": {
																	"type": "object",
																	"properties": {
																		"strict_transport_security": {
																			"type": "object",
																			"description": "Strict Transport Security",
																			"properties": {
																				"enabled": {
																					"type": "boolean",
																					"description": "Whether or not strict transport security is enabled",
																					"example": true
																				},
																				"max_age": {
																					"type": "number",
																					"description": "Max age in seconds of the strict transport security",
																					"example": 86400
																				},
																				"include_subdomains": {
																					"type": "boolean",
																					"description": "Include all subdomains for strict transport security",
																					"example": true
																				},
																				"nosniff": {
																					"type": "boolean",
																					"description": "Whether or not to include 'X-Content-Type-Options: nosniff' header",
																					"example": true
																				}
																			}
																		}
																	}
																}
															}
														}
													]
												},
												{
													"title": "Security Level",
													"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"security_level"
																	],
																	"example": "security_level",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		"essentially_off",
																		"low",
																		"medium",
																		"high",
																		"under_attack"
																	],
																	"description": "Value of the zone setting",
																	"default": "medium"
																}
															}
														}
													]
												},
												{
													"title": "Server Side Exclude",
													"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"server_side_exclude"
																	],
																	"example": "server_side_exclude",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": true
																}
															}
														}
													]
												},
												{
													"title": "SSL",
													"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"ssl"
																	],
																	"example": "ssl",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		"flexible",
																		"full",
																		"strict"
																	],
																	"default": false,
																	"description": "Value of the zone setting\nNotes: Depends on the zone's plan level"
																}
															}
														}
													]
												},
												{
													"title": "SSL/TLS Recommender",
													"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"enum": [
																		"ssl_recommender"
																	],
																	"example": "ssl_recommender",
																	"description": "Enrollment value for SSL/TLS Recommender"
																},
																"enabled": {
																	"type": "boolean",
																	"default": false,
																	"description": "ssl-recommender enrollment setting"
																}
															}
														},
														{
															"properties": {
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															}
														}
													]
												},
												{
													"title": "TLS Client Authentication",
													"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"tls_client_auth"
																	],
																	"example": "tls_client_auth",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"default": true,
																	"description": "value of the zone setting"
																}
															}
														}
													]
												},
												{
													"title": "True Client IP Header",
													"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"true_client_ip_header"
																	],
																	"example": "true_client_ip_header",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Proxy Read Timeout",
													"description": "Maximum time between two read operations from origin",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"proxy_read_timeout"
																	],
																	"example": "proxy_read_timeout",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "number",
																	"default": 100,
																	"description": "Value of the zone setting\nNotes: Value must be between 1 and 6000"
																}
															}
														}
													]
												},
												{
													"title": "Web Application Firewall",
													"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"waf"
																	],
																	"example": "waf",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Zone Minimum TLS Version value",
													"description": "Only accepts HTTPS requests that use at least the TLS protocol version specified. For example, if TLS 1.1 is selected, TLS 1.0 connections will be rejected, while 1.1, 1.2, and 1.3 (if enabled) will be permitted.",
													"default": "1.0",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"min_tls_version"
																	],
																	"example": "min_tls_version",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		"1.0",
																		"1.1",
																		"1.2",
																		"1.3"
																	],
																	"description": "Value of the zone setting.",
																	"default": "1.0"
																}
															}
														}
													]
												},
												{
													"title": "Zone ciphers allowed for TLS termination",
													"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
													"default": [],
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"ciphers"
																	],
																	"example": "ciphers",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "array",
																	"description": "Value of the zone setting.",
																	"default": [],
																	"uniqueItems": true,
																	"items": {
																		"type": "string"
																	},
																	"example": [
																		"ECDHE-RSA-AES128-GCM-SHA256",
																		"AES128-SHA"
																	]
																}
															}
														}
													]
												},
												{
													"title": "Enable TLS 1.3 value for a zone",
													"description": "Enables Crypto TLS 1.3 feature for a zone.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"tls_1_3"
																	],
																	"example": "tls_1_3",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false,
																		"zrt"
																	],
																	"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Enable Opportunistic Encryption for a zone",
													"description": "Enables the Opportunistic Encryption feature for a zone.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"opportunistic_encryption"
																	],
																	"example": "opportunistic_encryption",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
																	"default": true
																}
															}
														}
													]
												},
												{
													"title": "Zone Enable Automatic HTTPS Rewrites",
													"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"automatic_https_rewrites"
																	],
																	"example": "automatic_https_rewrites",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting\nNotes: Default value depends on the zone's plan level.",
																	"default": true
																}
															}
														}
													]
												},
												{
													"title": "HTTP2 Value",
													"description": "HTTP2 enabled for this zone.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"http2"
																	],
																	"example": "http2",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the HTTP2 setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "HTTP3 Value",
													"description": "HTTP3 enabled for this zone.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"http3"
																	],
																	"example": "http3",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the HTTP3 setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Origin Max HTTP version",
													"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"enum": [
																		"origin_max_http_version"
																	],
																	"example": "origin_max_http_version",
																	"description": "Identifier of the zone setting"
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id"
															]
														}
													]
												},
												{
													"title": "0-RTT Value",
													"description": "0-RTT session resumption enabled for this zone.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"0rtt"
																	],
																	"example": "0rtt",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the 0-RTT setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Pseudo IPv4 Value",
													"description": "The value set for the Pseudo IPv4 setting",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"pseudo_ipv4"
																	],
																	"default": "pseudo_ipv4",
																	"description": "Value of the Pseudo IPv4 setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		false,
																		"add_header",
																		"overwrite_header"
																	],
																	"description": "Value of the Pseudo IPv4 setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Zone Enable Always Use HTTPS",
													"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"always_use_https"
																	],
																	"example": "always_use_https",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Zone Enable Onion Routing",
													"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
													"default": false,
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"opportunistic_onion"
																	],
																	"example": "opportunistic_onion",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting\nNotes: Default value depends on the zone's plan level.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Orange to Orange",
													"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"orange_to_orange"
																	],
																	"example": "orange_to_orange",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"description": "Value of the zone setting",
																	"default": true
																}
															}
														}
													]
												},
												{
													"title": "Image Resizing",
													"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. (https://developers.cloudflare.com/images/)",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"image_resizing"
																	],
																	"example": "image_resizing",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false,
																		"open"
																	],
																	"description": "Whether the feature is enabled, disabled, or enabled in 'open proxy' mode",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "HTTP/2 Edge Prioritization",
													"description": "HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"h2_prioritization"
																	],
																	"example": "h2_prioritization",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false,
																		"custom"
																	],
																	"description": "Value of the zone setting.",
																	"default": false
																}
															}
														}
													]
												},
												{
													"title": "Automatic Platform Optimization for WordPress",
													"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare's edge network and caches third-party fonts.",
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/0/allOf/0"
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"automatic_platform_optimization"
																	],
																	"example": "automatic_platform_optimization",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "object",
																	"required": [
																		"enabled",
																		"cf",
																		"wordpress",
																		"wp_plugin",
																		"hostnames",
																		"cache_by_device_type"
																	],
																	"properties": {
																		"enabled": {
																			"type": "boolean",
																			"description": "Indicates whether or not Automatic Platform Optimization is enabled.",
																			"default": false,
																			"example": true
																		},
																		"cf": {
																			"type": "boolean",
																			"description": "Indicates whether or not Cloudflare proxy is enabled.",
																			"default": false,
																			"example": true
																		},
																		"wordpress": {
																			"type": "boolean",
																			"description": "Indicates whether or not site is powered by WordPress.",
																			"default": false,
																			"example": true
																		},
																		"wp_plugin": {
																			"type": "boolean",
																			"description": "Indicates whether or not [Cloudflare for WordPress plugin](https://wordpress.org/plugins/cloudflare/) is installed.",
																			"default": false,
																			"example": true
																		},
																		"hostnames": {
																			"description": "An array of hostnames where Automatic Platform Optimization for WordPress is activated.",
																			"type": "array",
																			"items": {
																				"type": "string",
																				"format": "hostname"
																			},
																			"example": [
																				"www.example.com",
																				"example.com",
																				"shop.example.com"
																			],
																			"default": null
																		},
																		"cache_by_device_type": {
																			"type": "boolean",
																			"description": "Indicates whether or not [cache by device type](https://developers.cloudflare.com/automatic-platform-optimization/reference/cache-device-type/) is enabled.",
																			"default": null,
																			"example": false
																		}
																	}
																}
															}
														}
													]
												}
											]
										},
										"example": [
											{
												"id": "always_online",
												"value": true
											},
											{
												"id": "browser_cache_ttl",
												"value": 18000
											},
											{
												"id": "ip_geolocation",
												"value": false
											}
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/advanced_ddos": {
			"get": {
				"summary": "Get Advanced DDOS setting",
				"description": "Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Advanced DDOS setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Advanced DDoS Protection",
													"description": "Advanced protection from Distributed Denial of Service (DDoS) attacks on your website. This is an uneditable value that is 'on' in the case of Business and Enterprise zones",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"advanced_ddos"
																	],
																	"example": "advanced_ddos",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"type": "string",
																	"enum": [
																		true,
																		false
																	],
																	"default": false,
																	"description": "Value of the zone setting\nNotes: Defaults to on for Business+ plans"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/settings/always_online": {
			"get": {
				"summary": "Get Always Online setting",
				"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Always Online setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Always Online Mode",
													"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"always_online"
																	],
																	"example": "always_online",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1always_online/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Always Online setting",
				"description": "When enabled, Cloudflare serves limited copies of web pages available from the [Internet Archive's Wayback Machine](https://archive.org/web/) if your server is offline. Refer to [Always Online](https://developers.cloudflare.com/cache/about/always-online) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1always_online/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Always Online setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1always_online/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1always_online/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/always_use_https": {
			"get": {
				"summary": "Get Always Use HTTPS setting",
				"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Always Use HTTPS setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Zone Enable Always Use HTTPS",
													"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"always_use_https"
																	],
																	"example": "always_use_https",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1always_use_https/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Always Use HTTPS setting",
				"description": "Reply to all requests for URLs that use \"http\" with a 301 redirect to the equivalent \"https\" URL. If you only want to redirect for a subset of requests, consider creating an \"Always use HTTPS\" page rule.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1always_use_https/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Always Use HTTPS setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1always_use_https/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1always_use_https/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/opportunistic_onion": {
			"get": {
				"summary": "Get Opportunistic Onion setting",
				"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Opportunistic Onion setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Zone Enable Onion Routing",
													"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"opportunistic_onion"
																	],
																	"example": "opportunistic_onion",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1opportunistic_onion/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Opportunistic Onion setting",
				"description": "Add an Alt-Svc header to all legitimate requests from Tor, allowing the connection to use our onion services instead of exit nodes.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1opportunistic_onion/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Opportunistic Onion setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1opportunistic_onion/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1opportunistic_onion/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting\nNotes: Default value depends on the zone's plan level.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/orange_to_orange": {
			"get": {
				"summary": "Get Orange to Orange (O2O)",
				"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Orange to Orange (O2O) response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Orange to Orange",
													"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"orange_to_orange"
																	],
																	"example": "orange_to_orange",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1orange_to_orange/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Orange to Orange (O2O)",
				"description": "Orange to Orange (O2O) allows zones on Cloudflare to CNAME to other zones also on Cloudflare.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1orange_to_orange/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Orange to Orange (O2O) response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1orange_to_orange/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1orange_to_orange/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/automatic_https_rewrites": {
			"get": {
				"summary": "Get Automatic HTTPS Rewrites setting",
				"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Automatic HTTPS Rewrites setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Zone Enable Automatic HTTPS Rewrites",
													"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"automatic_https_rewrites"
																	],
																	"example": "automatic_https_rewrites",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1automatic_https_rewrites/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Automatic HTTPS Rewrites setting",
				"description": "Enable the Automatic HTTPS Rewrites feature for this zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1automatic_https_rewrites/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Automatic HTTPS Rewrites setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1automatic_https_rewrites/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1automatic_https_rewrites/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting\nNotes: Default value depends on the zone's plan level.",
										"default": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/browser_cache_ttl": {
			"get": {
				"summary": "Get Browser Cache TTL setting",
				"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Browser Cache TTL setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Browser Cache TTL",
													"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"browser_cache_ttl"
																	],
																	"example": "browser_cache_ttl",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1browser_cache_ttl/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Browser Cache TTL setting",
				"description": "Browser Cache TTL (in seconds) specifies how long Cloudflare-cached resources will remain on your visitors' computers. Cloudflare will honor any larger times specified by your server. (https://support.cloudflare.com/hc/en-us/articles/200168276)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1browser_cache_ttl/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Browser Cache TTL setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1browser_cache_ttl/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1browser_cache_ttl/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "number",
										"enum": [
											0,
											30,
											60,
											120,
											300,
											1200,
											1800,
											3600,
											7200,
											10800,
											14400,
											18000,
											28800,
											43200,
											57600,
											72000,
											86400,
											172800,
											259200,
											345600,
											432000,
											691200,
											1382400,
											2073600,
											2678400,
											5356800,
											16070400,
											31536000
										],
										"default": 14400,
										"description": "Value of the zone setting\nNotes: Setting a TTL of 0 is equivalent to selecting `Respect Existing Headers`"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/browser_check": {
			"get": {
				"summary": "Get Browser Check setting",
				"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Browser Check setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Browser Check",
													"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"browser_check"
																	],
																	"example": "browser_check",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1browser_check/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Browser Check setting",
				"description": "Browser Integrity Check is similar to Bad Behavior and looks for common HTTP headers abused most commonly by spammers and denies access to your page.  It will also challenge visitors that do not have a user agent or a non standard user agent (also commonly used by abuse bots, crawlers or visitors). (https://support.cloudflare.com/hc/en-us/articles/200170086)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1browser_check/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Browser Check setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1browser_check/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1browser_check/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"default": true,
										"description": "Value of the zone setting"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/cache_level": {
			"get": {
				"summary": "Get Cache Level setting",
				"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Cache Level setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Cloudflare Cache Level",
													"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"cache_level"
																	],
																	"example": "cache_level",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1cache_level/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Cache Level setting",
				"description": "Cache Level functions based off the setting level. The basic setting will cache most static resources (i.e., css, images, and JavaScript). The simplified setting will ignore the query string when delivering a cached resource. The aggressive setting will cache all static resources, including ones with a query string. (https://support.cloudflare.com/hc/en-us/articles/200168256)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1cache_level/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Cache Level setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1cache_level/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1cache_level/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											"aggressive",
											"basic",
											"simplified"
										],
										"default": "aggressive",
										"description": "Value of the zone setting"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/challenge_ttl": {
			"get": {
				"summary": "Get Challenge TTL setting",
				"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Challenge TTL setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Challenge Page TTL",
													"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"challenge_ttl"
																	],
																	"example": "challenge_ttl",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1challenge_ttl/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Challenge TTL setting",
				"description": "Specify how long a visitor is allowed access to your site after successfully completing a challenge (such as a CAPTCHA). After the TTL has expired the visitor will have to complete a new challenge. We recommend a 15 - 45 minute setting and will attempt to honor any setting above 45 minutes. (https://support.cloudflare.com/hc/en-us/articles/200170136)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1challenge_ttl/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Challenge TTL setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1challenge_ttl/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1challenge_ttl/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "number",
										"enum": [
											300,
											900,
											1800,
											2700,
											3600,
											7200,
											10800,
											14400,
											28800,
											57600,
											86400,
											604800,
											2592000,
											31536000
										],
										"default": 1800,
										"description": "Value of the zone setting"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/development_mode": {
			"get": {
				"summary": "Get Development Mode setting",
				"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Development Mode setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Development Mode",
													"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"development_mode"
																	],
																	"example": "development_mode",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1development_mode/patch/requestBody/content/application~1json/schema/properties/value"
																},
																"time_remaining": {
																	"type": "number",
																	"readOnly": true,
																	"description": "Value of the zone setting\nNotes: The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is false.",
																	"example": 3600
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Development Mode setting",
				"description": "Development Mode temporarily allows you to enter development mode for your websites if you need to make changes to your site. This will bypass Cloudflare's accelerated cache and slow down your site, but is useful if you are making changes to cacheable content (like images, css, or JavaScript) and would like to see those changes right away. Once entered, development mode will last for 3 hours and then automatically toggle off.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1development_mode/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Development Mode setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1development_mode/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1development_mode/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/early_hints": {
			"get": {
				"summary": "Get Early Hints setting",
				"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Early Hints setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Early Hints",
													"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"early_hints"
																	],
																	"example": "early_hints",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1early_hints/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Early Hints setting",
				"description": "When enabled, Cloudflare will attempt to speed up overall page loads by serving `103` responses with `Link` headers from the final response. Refer to [Early Hints](https://developers.cloudflare.com/cache/about/early-hints) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1early_hints/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Early Hints setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1early_hints/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1early_hints/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/email_obfuscation": {
			"get": {
				"summary": "Get Email Obfuscation setting",
				"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Email Obfuscation setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Email Obfuscation",
													"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"email_obfuscation"
																	],
																	"example": "email_obfuscation",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1email_obfuscation/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Email Obfuscation setting",
				"description": "Encrypt email adresses on your web page from bots, while keeping them visible to humans. (https://support.cloudflare.com/hc/en-us/articles/200170016)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1email_obfuscation/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Email Obfuscation setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1email_obfuscation/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1email_obfuscation/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/hotlink_protection": {
			"get": {
				"summary": "Get Hotlink Protection setting",
				"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Hotlink Protection setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Hotlink Protection",
													"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"hotlink_protection"
																	],
																	"example": "hotlink_protection",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1hotlink_protection/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Hotlink Protection setting",
				"description": "When enabled, the Hotlink Protection option ensures that other sites cannot suck up your bandwidth by building pages that use images hosted on your site. Anytime a request for an image on your site hits Cloudflare, we check to ensure that it's not another site requesting them. People will still be able to download and view images from your page, but other sites won't be able to steal them for use on their own pages. (https://support.cloudflare.com/hc/en-us/articles/200170026)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1hotlink_protection/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Hotlink Protection setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1hotlink_protection/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1hotlink_protection/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/ip_geolocation": {
			"get": {
				"summary": "Get IP Geolocation setting",
				"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get IP Geolocation setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "IP Geolocation",
													"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"ip_geolocation"
																	],
																	"example": "ip_geolocation",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ip_geolocation/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change IP Geolocation setting",
				"description": "Enable IP Geolocation to have Cloudflare geolocate visitors to your website and pass the country code to you. (https://support.cloudflare.com/hc/en-us/articles/200168236)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ip_geolocation/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change IP Geolocation setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ip_geolocation/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ip_geolocation/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/ipv6": {
			"get": {
				"summary": "Get IPv6 setting",
				"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get IPv6 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "IPv6",
													"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"ipv6"
																	],
																	"example": "ipv6",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ipv6/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change IPv6 setting",
				"description": "Enable IPv6 on all subdomains that are Cloudflare enabled.  (https://support.cloudflare.com/hc/en-us/articles/200168586)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ipv6/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change IPv6 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ipv6/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ipv6/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											false,
											true
										],
										"description": "Value of the zone setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/minify": {
			"get": {
				"summary": "Get Minify setting",
				"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Minify setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Auto-Minify Assets",
													"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"minify"
																	],
																	"example": "minify",
																	"description": "Zone setting identifier."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1minify/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Minify setting",
				"description": "Automatically minify certain assets for your website. Refer to [Using Cloudflare Auto Minify](https://support.cloudflare.com/hc/en-us/articles/200168196) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1minify/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Minify setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1minify/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1minify/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "object",
										"description": "Value of the zone setting.",
										"properties": {
											"css": {
												"description": "Automatically minify all CSS files for your website.",
												"enum": [
													true,
													false
												],
												"default": false
											},
											"html": {
												"description": "Automatically minify all HTML files for your website.",
												"enum": [
													true,
													false
												],
												"default": false
											},
											"js": {
												"description": "Automatically minify all JavaScript files for your website.",
												"enum": [
													true,
													false
												],
												"default": false
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/mobile_redirect": {
			"get": {
				"summary": "Get Mobile Redirect setting",
				"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Mobile Redirect setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Mobile Redirect",
													"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"mobile_redirect"
																	],
																	"example": "mobile_redirect",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1mobile_redirect/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Mobile Redirect setting",
				"description": "Automatically redirect visitors on mobile devices to a mobile-optimized subdomain. Refer to [Understanding Cloudflare Mobile Redirect](https://support.cloudflare.com/hc/articles/200168336) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1mobile_redirect/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Mobile Redirect setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1mobile_redirect/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1mobile_redirect/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "object",
										"description": "Value of the zone setting.",
										"properties": {
											"status": {
												"enum": [
													true,
													false
												],
												"description": "Whether or not mobile redirect is enabled.",
												"default": false
											},
											"mobile_subdomain": {
												"description": "Which subdomain prefix you wish to redirect visitors on mobile devices to (subdomain must already exist).",
												"type": "string",
												"minLength": 1,
												"example": "m",
												"nullable": true
											},
											"strip_uri": {
												"description": "Whether to drop the current page path and redirect to the mobile subdomain URL root, or keep the path and redirect to the same page on the mobile subdomain.",
												"type": "boolean",
												"example": false,
												"default": false
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/mirage": {
			"get": {
				"summary": "Get Mirage setting",
				"description": "Automatically optimize image loading for website visitors on mobile devices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Mirage setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Mirage Image Optimization",
													"description": "Automatically optimize image loading for website visitors on mobile devices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more information.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"mirage"
																	],
																	"example": "mirage",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1mirage/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Mirage setting",
				"description": "Automatically optimize image loading for website visitors on mobile devices. Refer to [our blog post](http://blog.cloudflare.com/mirage2-solving-mobile-speed) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1mirage/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Mirage setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1mirage/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1mirage/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/origin_error_page_pass_thru": {
			"get": {
				"summary": "Get Enable Error Pages On setting",
				"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Enable Error Pages On setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Error Pages On",
													"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"origin_error_page_pass_thru"
																	],
																	"example": "origin_error_page_pass_thru",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1origin_error_page_pass_thru/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Enable Error Pages On setting",
				"description": "Cloudflare will proxy customer error pages on any 502,504 errors on origin server instead of showing a default Cloudflare error page. This does not apply to 522 errors and is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1origin_error_page_pass_thru/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Enable Error Pages On setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1origin_error_page_pass_thru/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1origin_error_page_pass_thru/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/opportunistic_encryption": {
			"get": {
				"summary": "Get Opportunistic Encryption setting",
				"description": "Gets Opportunistic Encryption setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Opportunistic Encryption setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Enable Opportunistic Encryption for a zone",
													"description": "Enables the Opportunistic Encryption feature for a zone.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"opportunistic_encryption"
																	],
																	"example": "opportunistic_encryption",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1opportunistic_encryption/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Opportunistic Encryption setting",
				"description": "Changes Opportunistic Encryption setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1opportunistic_encryption/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Opportunistic Encryption setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1opportunistic_encryption/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1opportunistic_encryption/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
										"default": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/polish": {
			"get": {
				"summary": "Get Polish setting",
				"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Polish setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Polish Image Optimization",
													"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"polish"
																	],
																	"example": "polish",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1polish/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Polish setting",
				"description": "Removes metadata and compresses your images for faster page load times. Basic (Lossless): Reduce the size of PNG, JPEG, and GIF files - no impact on visual quality. Basic + JPEG (Lossy): Further reduce the size of JPEG files for faster image loading. Larger JPEGs are converted to progressive images, loading a lower-resolution image first and ending in a higher-resolution version. Not recommended for hi-res photography sites.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1polish/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Polish setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1polish/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1polish/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											false,
											"lossless",
											"lossy"
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/webp": {
			"get": {
				"summary": "Get WebP setting",
				"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get WebP setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Polish WebP Conversion",
													"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"webp"
																	],
																	"example": "webp",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1webp/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change WebP setting",
				"description": "When the client requesting the image supports the WebP image codec, and WebP offers a performance advantage over the original image format, Cloudflare will serve a WebP version of the original image.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1webp/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change WebP setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1webp/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1webp/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											false,
											true
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/brotli": {
			"get": {
				"summary": "Get Brotli setting",
				"description": "When the client requesting an asset supports the brotli compression algorithm, Cloudflare will serve a brotli compressed version of the asset.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Brotli setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Brotli Compression",
													"description": "When the client requesting an asset supports the brotli compression algorithm, Cloudflare will serve a brotli compressed version of the asset.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"brotli"
																	],
																	"example": "brotli",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1brotli/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Brotli setting",
				"description": "When the client requesting an asset supports the brotli compression algorithm, Cloudflare will serve a brotli compressed version of the asset.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1brotli/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Brotli setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1brotli/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1brotli/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											false,
											true
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/prefetch_preload": {
			"get": {
				"summary": "Get prefetch preload setting",
				"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get prefetch preload setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Prefetch preload",
													"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"prefetch_preload"
																	],
																	"example": "prefetch_preload",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1prefetch_preload/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change prefetch preload setting",
				"description": "Cloudflare will prefetch any URLs that are included in the response headers. This is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1prefetch_preload/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change prefetch preload setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1prefetch_preload/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1prefetch_preload/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/privacy_pass": {
			"get": {
				"summary": "Get Privacy Pass setting",
				"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Privacy Pass setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Privacy Pass",
													"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"privacy_pass"
																	],
																	"example": "privacy_pass",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1privacy_pass/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Privacy Pass setting",
				"description": "Privacy Pass is a browser extension developed by the Privacy Pass Team to improve the browsing experience for your visitors. Enabling Privacy Pass will reduce the number of CAPTCHAs shown to your visitors. (https://support.cloudflare.com/hc/en-us/articles/115001992652-Privacy-Pass)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1privacy_pass/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Privacy Pass setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1privacy_pass/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1privacy_pass/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/response_buffering": {
			"get": {
				"summary": "Get Response Buffering setting",
				"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Response Buffering setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Response Buffering",
													"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"response_buffering"
																	],
																	"example": "response_buffering",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1response_buffering/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Response Buffering setting",
				"description": "Enables or disables buffering of responses from the proxied server. Cloudflare may buffer the whole payload to deliver it at once to the client versus allowing it to be delivered in chunks. By default, the proxied server streams directly and is not buffered by Cloudflare. This is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1response_buffering/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Response Buffering setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1response_buffering/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1response_buffering/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/rocket_loader": {
			"get": {
				"summary": "Get Rocket Loader setting",
				"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Rocket Loader setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Rocket Loader",
													"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"rocket_loader"
																	],
																	"example": "rocket_loader",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1rocket_loader/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Rocket Loader setting",
				"description": "Rocket Loader is a general-purpose asynchronous JavaScript optimisation that prioritises rendering your content while loading your site's Javascript asynchronously. Turning on Rocket Loader will immediately improve a web page's rendering time sometimes measured as Time to First Paint (TTFP), and also the `window.onload` time (assuming there is JavaScript on the page). This can have a positive impact on your Google search ranking. When turned on, Rocket Loader will automatically defer the loading of all Javascript referenced in your HTML, with no configuration required. Refer to [Understanding Rocket Loader](https://support.cloudflare.com/hc/articles/200168056) for more information.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1rocket_loader/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Rocket Loader setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1rocket_loader/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1rocket_loader/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/security_header": {
			"get": {
				"summary": "Get Security Header (HSTS) setting",
				"description": "Cloudflare security header for a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Security Header (HSTS) setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Security Header",
													"description": "Cloudflare security header for a zone.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"security_header"
																	],
																	"example": "security_header",
																	"description": "ID of the zone's security header"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1security_header/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Security Header (HSTS) setting",
				"description": "Cloudflare security header for a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1security_header/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Security Header (HSTS) setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1security_header/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1security_header/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "object",
										"properties": {
											"strict_transport_security": {
												"type": "object",
												"description": "Strict Transport Security",
												"properties": {
													"enabled": {
														"type": "boolean",
														"description": "Whether or not strict transport security is enabled",
														"example": true
													},
													"max_age": {
														"type": "number",
														"description": "Max age in seconds of the strict transport security",
														"example": 86400
													},
													"include_subdomains": {
														"type": "boolean",
														"description": "Include all subdomains for strict transport security",
														"example": true
													},
													"nosniff": {
														"type": "boolean",
														"description": "Whether or not to include 'X-Content-Type-Options: nosniff' header",
														"example": true
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/security_level": {
			"get": {
				"summary": "Get Security Level setting",
				"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Security Level setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Security Level",
													"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"security_level"
																	],
																	"example": "security_level",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1security_level/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Security Level setting",
				"description": "Choose the appropriate security profile for your website, which will automatically adjust each of the security settings. If you choose to customize an individual security setting, the profile will become Custom. (https://support.cloudflare.com/hc/en-us/articles/200170056)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1security_level/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Security Level setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1security_level/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1security_level/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											false,
											"essentially_off",
											"low",
											"medium",
											"high",
											"under_attack"
										],
										"description": "Value of the zone setting",
										"default": "medium"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/server_side_exclude": {
			"get": {
				"summary": "Get Server Side Exclude setting",
				"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Server Side Exclude setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Server Side Exclude",
													"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"server_side_exclude"
																	],
																	"example": "server_side_exclude",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1server_side_exclude/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Server Side Exclude setting",
				"description": "If there is sensitive content on your website that you want visible to real visitors, but that you want to hide from suspicious visitors, all you have to do is wrap the content with Cloudflare SSE tags. Wrap any content that you want to be excluded from suspicious visitors in the following SSE tags: <!--sse--><!--/sse-->. For example: <!--sse-->  Bad visitors won't see my phone number, 555-555-5555 <!--/sse-->. Note: SSE only will work with HTML. If you have HTML minification enabled, you won't see the SSE tags in your HTML source when it's served through Cloudflare. SSE will still function in this case, as Cloudflare's HTML minification and SSE functionality occur on-the-fly as the resource moves through our network to the visitor's computer. (https://support.cloudflare.com/hc/en-us/articles/200170036)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1server_side_exclude/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Server Side Exclude setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1server_side_exclude/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1server_side_exclude/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/sort_query_string_for_cache": {
			"get": {
				"summary": "Get Enable Query String Sort setting",
				"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Enable Query String Sort setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Get String Sort",
													"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"sort_query_string_for_cache"
																	],
																	"example": "sort_query_string_for_cache",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1sort_query_string_for_cache/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Enable Query String Sort setting",
				"description": "Cloudflare will treat files with the same query strings as the same file in cache, regardless of the order of the query strings. This is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1sort_query_string_for_cache/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Enable Query String Sort setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1sort_query_string_for_cache/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1sort_query_string_for_cache/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/ssl": {
			"get": {
				"summary": "Get SSL setting",
				"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get SSL setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "SSL",
													"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"ssl"
																	],
																	"example": "ssl",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ssl/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change SSL setting",
				"description": "SSL encrypts your visitor's connection and safeguards credit card numbers and other personal data to and from your website. SSL can take up to 5 minutes to fully activate. Requires Cloudflare active on your root domain or www domain. Off: no SSL between the visitor and Cloudflare, and no SSL between Cloudflare and your web server  (all HTTP traffic). Flexible: SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, but no SSL between Cloudflare and your web server. You don't need to have an SSL cert on your web server, but your vistors will still see the site as being HTTPS enabled. Full:  SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have your own SSL cert or self-signed cert at the very least. Full (Strict): SSL between the visitor and Cloudflare -- visitor sees HTTPS on your site, and SSL between Cloudflare and your web server. You'll need to have a valid SSL certificate installed on your web server. This certificate must be signed by a certificate authority, have an expiration date in the future, and respond for the request domain name (hostname). (https://support.cloudflare.com/hc/en-us/articles/200170416)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ssl/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change SSL setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ssl/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ssl/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											false,
											"flexible",
											"full",
											"strict"
										],
										"default": false,
										"description": "Value of the zone setting\nNotes: Depends on the zone's plan level"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/ssl_recommender": {
			"get": {
				"summary": "Get SSL/TLS Recommender enrollment",
				"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get SSL/TLS Recommender enrollment response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "SSL/TLS Recommender",
													"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"enum": [
																		"ssl_recommender"
																	],
																	"example": "ssl_recommender",
																	"description": "Enrollment value for SSL/TLS Recommender"
																},
																"enabled": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ssl_recommender/patch/requestBody/content/application~1json/schema/properties/enabled"
																}
															}
														},
														{
															"properties": {
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change SSL/TLS Recommender enrollment",
				"description": "Enrollment in the SSL/TLS Recommender service which tries to detect and recommend (by sending periodic emails) the most secure SSL/TLS setting your origin servers support.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ssl_recommender/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change SSL/TLS Recommender enrollment response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ssl_recommender/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ssl_recommender/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"enabled"
								],
								"properties": {
									"enabled": {
										"type": "boolean",
										"default": false,
										"description": "ssl-recommender enrollment setting"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/min_tls_version": {
			"get": {
				"summary": "Get Minimum TLS Version setting",
				"description": "Gets Minimum TLS Version setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Minimum TLS Version setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Zone Minimum TLS Version value",
													"description": "Only accepts HTTPS requests that use at least the TLS protocol version specified. For example, if TLS 1.1 is selected, TLS 1.0 connections will be rejected, while 1.1, 1.2, and 1.3 (if enabled) will be permitted.",
													"default": "1.0",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"min_tls_version"
																	],
																	"example": "min_tls_version",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1min_tls_version/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Minimum TLS Version setting",
				"description": "Changes Minimum TLS Version setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1min_tls_version/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Minimum TLS Version setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1min_tls_version/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1min_tls_version/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											"1.0",
											"1.1",
											"1.2",
											"1.3"
										],
										"description": "Value of the zone setting.",
										"default": "1.0"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/ciphers": {
			"get": {
				"summary": "Get ciphers setting",
				"description": "Gets ciphers setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get ciphers setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Zone ciphers allowed for TLS termination",
													"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
													"default": [],
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"ciphers"
																	],
																	"example": "ciphers",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ciphers/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change ciphers setting",
				"description": "Changes ciphers setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ciphers/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change ciphers setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ciphers/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1ciphers/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "array",
										"description": "Value of the zone setting.",
										"default": [],
										"uniqueItems": true,
										"items": {
											"type": "string"
										},
										"example": [
											"ECDHE-RSA-AES128-GCM-SHA256",
											"AES128-SHA"
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/tls_1_3": {
			"get": {
				"summary": "Get TLS 1.3 setting enabled for a zone",
				"description": "Gets TLS 1.3 setting enabled for a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get TLS 1.3 setting enabled for a zone response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Enable TLS 1.3 value for a zone",
													"description": "Enables Crypto TLS 1.3 feature for a zone.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"tls_1_3"
																	],
																	"example": "tls_1_3",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1tls_1_3/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change TLS 1.3 setting",
				"description": "Changes TLS 1.3 setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1tls_1_3/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change TLS 1.3 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1tls_1_3/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1tls_1_3/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false,
											"zrt"
										],
										"description": "Value of the zone setting.\nNotes: Default value depends on the zone's plan level.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/tls_client_auth": {
			"get": {
				"summary": "Get TLS Client Auth setting",
				"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get TLS Client Auth setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "TLS Client Authentication",
													"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"tls_client_auth"
																	],
																	"example": "tls_client_auth",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1tls_client_auth/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change TLS Client Auth setting",
				"description": "TLS Client Auth requires Cloudflare to connect to your origin server using a client certificate (Enterprise Only)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1tls_client_auth/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change TLS Client Auth setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1tls_client_auth/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1tls_client_auth/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"default": true,
										"description": "value of the zone setting"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/true_client_ip_header": {
			"get": {
				"summary": "Get True Client IP setting",
				"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get True Client IP setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "True Client IP Header",
													"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
													"default": false,
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"true_client_ip_header"
																	],
																	"example": "true_client_ip_header",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1true_client_ip_header/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change True Client IP setting",
				"description": "Allows customer to continue to use True Client IP (Akamai feature) in the headers we send to the origin. This is limited to Enterprise Zones.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1true_client_ip_header/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change True Client IP setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1true_client_ip_header/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1true_client_ip_header/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/proxy_read_timeout": {
			"get": {
				"summary": "Get Proxy Read Timeout setting",
				"description": "Maximum time between two read operations from origin",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Proxy Read Timeout setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Proxy Read Timeout",
													"description": "Maximum time between two read operations from origin",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"proxy_read_timeout"
																	],
																	"example": "proxy_read_timeout",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1proxy_read_timeout/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Proxy Read Timeout setting",
				"description": "Maximum time between two read operations from origin",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1proxy_read_timeout/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Proxy Read Timeout setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1proxy_read_timeout/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1proxy_read_timeout/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "number",
										"default": 100,
										"description": "Value of the zone setting\nNotes: Value must be between 1 and 6000"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/waf": {
			"get": {
				"summary": "Get Web Application Firewall (WAF) setting",
				"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Web Application Firewall (WAF) setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Web Application Firewall",
													"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"waf"
																	],
																	"example": "waf",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1waf/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Web Application Firewall (WAF) setting",
				"description": "The WAF examines HTTP requests to your website.  It inspects both GET and POST requests and applies rules to help filter out illegitimate traffic from legitimate website visitors. The Cloudflare WAF inspects website addresses or URLs to detect anything out of the ordinary. If the Cloudflare WAF determines suspicious user behavior, then the WAF will 'challenge' the web visitor with a page that asks them to submit a CAPTCHA successfully  to continue their action. If the challenge is failed, the action will be stopped. What this means is that Cloudflare's WAF will block any traffic identified as illegitimate before it reaches your origin web server. (https://support.cloudflare.com/hc/en-us/articles/200172016)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1waf/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Web Application Firewall (WAF) setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1waf/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1waf/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the zone setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/http2": {
			"get": {
				"summary": "Get HTTP2 setting",
				"description": "Value of the HTTP2 setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get HTTP2 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "HTTP2 Value",
													"description": "HTTP2 enabled for this zone.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"http2"
																	],
																	"example": "http2",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1http2/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change HTTP2 setting",
				"description": "Value of the HTTP2 setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1http2/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change HTTP2 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1http2/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1http2/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the HTTP2 setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/http3": {
			"get": {
				"summary": "Get HTTP3 setting",
				"description": "Value of the HTTP3 setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get HTTP3 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "HTTP3 Value",
													"description": "HTTP3 enabled for this zone.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"http3"
																	],
																	"example": "http3",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1http3/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change HTTP3 setting",
				"description": "Value of the HTTP3 setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1http3/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change HTTP3 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1http3/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1http3/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the HTTP3 setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/origin_max_http_version": {
			"get": {
				"summary": "Get Origin Max HTTP version setting",
				"description": "Value of the Origin Max HTTP version setting (Note that the default value for Enterprise is \"1\")",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Origin Max HTTP version setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"title": "Origin Max HTTP version",
															"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.)",
															"allOf": [
																{
																	"properties": {
																		"id": {
																			"enum": [
																				"origin_max_http_version"
																			],
																			"example": "origin_max_http_version",
																			"description": "Identifier of the zone setting"
																		},
																		"modified_on": {
																			"type": "string",
																			"readOnly": true,
																			"format": "date-time",
																			"description": "last time this setting was modified",
																			"example": "2014-01-01T05:20:00.123450+00:00",
																			"nullable": true
																		}
																	},
																	"required": [
																		"id"
																	]
																}
															]
														},
														{
															"properties": {
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_max_http_version/patch/requestBody/content/application~1json/schema/properties/value"
																}
															},
															"required": [
																"value"
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Origin Max HTTP version setting",
				"description": "The highest HTTP version Cloudflare will attempt to use with your origin. This setting allows Cloudflare to make HTTP/2 requests to your origin. (Refer to [Enable HTTP/2 to Origin](https://developers.cloudflare.com/cache/how-to/enable-http2-to-origin/), for more information.)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_max_http_version/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Origin Max HTTP version setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_max_http_version/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_max_http_version/get/responses/200/content/application~1json/schema/allOf/1"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											"1",
											"2"
										],
										"description": "Value of the Origin Max HTTP version setting (Note that the default value for Enterprise is \"1\")",
										"default": "2"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/0rtt": {
			"get": {
				"summary": "Get 0-RTT session resumption setting",
				"description": "Gets 0-RTT session resumption setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get 0-RTT session resumption setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "0-RTT Value",
													"description": "0-RTT session resumption enabled for this zone.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"0rtt"
																	],
																	"example": "0rtt",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~10rtt/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change 0-RTT session resumption setting",
				"description": "Changes the 0-RTT session resumption setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~10rtt/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change 0-RTT session resumption setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~10rtt/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~10rtt/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"description": "Value of the 0-RTT setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/pseudo_ipv4": {
			"get": {
				"summary": "Get Pseudo IPv4 setting",
				"description": "Value of the Pseudo IPv4 setting",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Pseudo IPv4 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Pseudo IPv4 Value",
													"description": "The value set for the Pseudo IPv4 setting",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"pseudo_ipv4"
																	],
																	"default": "pseudo_ipv4",
																	"description": "Value of the Pseudo IPv4 setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1pseudo_ipv4/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Pseudo IPv4 setting",
				"description": "Value of the Pseudo IPv4 setting",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1pseudo_ipv4/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Pseudo IPv4 setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1pseudo_ipv4/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1pseudo_ipv4/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											false,
											"add_header",
											"overwrite_header"
										],
										"description": "Value of the Pseudo IPv4 setting",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/websockets": {
			"get": {
				"summary": "Get WebSockets setting",
				"description": "Gets Websockets setting. For more information about Websockets, please refer to [Using Cloudflare with WebSockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Using-Cloudflare-with-WebSockets).",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get WebSockets setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "WebSockets",
													"description": "WebSockets are open connections sustained between the client and the origin server. Inside a WebSockets connection, the client and the origin can pass data back and forth without having to reestablish sessions. This makes exchanging data within a WebSockets connection fast. WebSockets are often used for real-time applications such as live chat and gaming. For more information refer to [Can I use Cloudflare with Websockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Can-I-use-Cloudflare-with-WebSockets-)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"websockets"
																	],
																	"example": "websockets",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1websockets/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change WebSockets setting",
				"description": "Changes Websockets setting. For more information about Websockets, please refer to [Using Cloudflare with WebSockets](https://support.cloudflare.com/hc/en-us/articles/200169466-Using-Cloudflare-with-WebSockets).",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1websockets/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change WebSockets setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1websockets/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1websockets/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											false,
											true
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/image_resizing": {
			"get": {
				"summary": "Get Image Resizing setting",
				"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. (https://developers.cloudflare.com/images/)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Image Resizing setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Image Resizing",
													"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. (https://developers.cloudflare.com/images/)",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"image_resizing"
																	],
																	"example": "image_resizing",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1image_resizing/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Image Resizing setting",
				"description": "Image Resizing provides on-demand resizing, conversion and optimisation for images served through Cloudflare's network. (https://developers.cloudflare.com/images/)",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1image_resizing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Image Resizing setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1image_resizing/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1image_resizing/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false,
											"open"
										],
										"description": "Whether the feature is enabled, disabled, or enabled in 'open proxy' mode",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/h2_prioritization": {
			"get": {
				"summary": "Get HTTP/2 Edge Prioritization setting",
				"description": "Gets HTTP/2 Edge Prioritization setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get HTTP/2 Edge Prioritization setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "HTTP/2 Edge Prioritization",
													"description": "HTTP/2 Edge Prioritization optimises the delivery of resources served through HTTP/2 to improve page load performance. It also supports fine control of content delivery when used in conjunction with Workers.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"h2_prioritization"
																	],
																	"example": "h2_prioritization",
																	"description": "ID of the zone setting."
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1h2_prioritization/patch/requestBody/content/application~1json/schema/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change HTTP/2 Edge Prioritization setting",
				"description": "Changes HTTP/2 Edge Prioritization setting.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1h2_prioritization/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change HTTP/2 Edge Prioritization setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1h2_prioritization/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1h2_prioritization/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "string",
										"enum": [
											true,
											false,
											"custom"
										],
										"description": "Value of the zone setting.",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/settings/automatic_platform_optimization": {
			"get": {
				"summary": "Get Automatic Platform Optimization for WordPress settings",
				"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare's edge network and caches third-party fonts.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Automatic Platform Optimization for WordPress settings response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"title": "Automatic Platform Optimization for WordPress",
													"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare's edge network and caches third-party fonts.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting."
																},
																"value": {
																	"example": true,
																	"description": "Current value of the zone setting",
																	"anyOf": [
																		{
																			"type": "string"
																		},
																		{
																			"type": "number"
																		},
																		{
																			"type": "object"
																		},
																		{
																			"type": "array",
																			"items": {}
																		}
																	]
																},
																"editable": {
																	"type": "boolean",
																	"readOnly": true,
																	"enum": [
																		true,
																		false
																	],
																	"description": "Whether or not this setting can be modified for this zone (based on your Cloudflare plan level)",
																	"default": true
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"value"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"automatic_platform_optimization"
																	],
																	"example": "automatic_platform_optimization",
																	"description": "ID of the zone setting"
																},
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/54/allOf/1/properties/value"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change Automatic Platform Optimization for WordPress settings",
				"description": "[Automatic Platform Optimization for WordPress](https://developers.cloudflare.com/automatic-platform-optimization/) serves your WordPress site from Cloudflare's edge network and caches third-party fonts.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1automatic_platform_optimization/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change Automatic Platform Optimization for WordPress settings response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1automatic_platform_optimization/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings~1automatic_platform_optimization/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1settings/patch/requestBody/content/application~1json/schema/properties/items/items/oneOf/54/allOf/1/properties/value"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/cache/variants": {
			"get": {
				"summary": "Get variants setting",
				"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get variants setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1cache~1variants/delete/responses/200/content/application~1json/schema/allOf/1/properties/result"
														},
														{
															"properties": {
																"value": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1cache~1variants/patch/requestBody/content/application~1json/schema/properties/value"
																}
															},
															"required": [
																"value"
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Change variants setting",
				"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1cache~1variants/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Change variants setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1cache~1variants/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1cache~1variants/get/responses/200/content/application~1json/schema/allOf/1"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"value"
								],
								"properties": {
									"value": {
										"type": "object",
										"description": "Value of the zone setting",
										"properties": {
											"avif": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for avif.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/jpeg"
												],
												"items": {}
											},
											"bmp": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for bmp.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/jpeg"
												],
												"items": {}
											},
											"gif": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for gif.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/jpeg"
												],
												"items": {}
											},
											"jpeg": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for jpeg.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/avif"
												],
												"items": {}
											},
											"jpg": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for jpg.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/avif"
												],
												"items": {}
											},
											"jpg2": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for jpg2.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/avif"
												],
												"items": {}
											},
											"jp2": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for jp2.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/avif"
												],
												"items": {}
											},
											"png": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for png.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/avif"
												],
												"items": {}
											},
											"tiff": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for tiff.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/avif"
												],
												"items": {}
											},
											"tif": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for tif.",
												"uniqueItems": true,
												"example": [
													"image/webp",
													"image/avif"
												],
												"items": {}
											},
											"webp": {
												"type": "array",
												"description": "List of strings with the MIME types of all the variants that should be served for webp.",
												"uniqueItems": true,
												"example": [
													"image/jpeg",
													"image/avif"
												],
												"items": {}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete variants setting",
				"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1cache~1variants/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete variants setting response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1cache~1variants/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"title": "Variants Caching",
													"description": "Variant support enables caching variants of images with certain file extensions in addition to the original. This only applies when the origin server sends the 'Vary: Accept' response header. If the origin server sends 'Vary: Accept' but does not serve the variant requested, the response will not be cached. This will be indicated with BYPASS cache status in the response headers.",
													"allOf": [
														{
															"properties": {
																"id": {
																	"type": "string",
																	"example": "development_mode",
																	"description": "Identifier of the zone setting"
																},
																"modified_on": {
																	"type": "string",
																	"readOnly": true,
																	"format": "date-time",
																	"description": "last time this setting was modified",
																	"example": "2014-01-01T05:20:00.123450+00:00",
																	"nullable": true
																}
															},
															"required": [
																"id",
																"modified_on"
															]
														},
														{
															"properties": {
																"id": {
																	"enum": [
																		"variants"
																	],
																	"example": "variants",
																	"description": "ID of the zone setting"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/analytics/dashboard": {
			"get": {
				"summary": "Get dashboard",
				"description": "The dashboard view provides both totals and timeseries data for the given zone and time period across the entire Cloudflare network.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get dashboard response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"query": {
													"type": "object",
													"description": "The exact parameters/timestamps the analytics service used to return data",
													"readOnly": true,
													"properties": {
														"since": {
															"description": "The (inclusive) beginning of the requested time frame. This value can be a negative integer representing the number of minutes in the past relative to time the request is made, or can be an absolute timestamp that conforms to RFC 3339. At this point in time, it cannot exceed a time in the past greater than one year.\n\nRanges that the Cloudflare web application provides will provide the following period length for each point:\n- Last 60 minutes (from -59 to -1): 1 minute resolution\n- Last 7 hours (from -419 to -60): 15 minutes resolution\n- Last 15 hours (from -899 to -420): 30 minutes resolution\n- Last 72 hours (from -4320 to -900): 1 hour resolution\n- Older than 3 days (-525600 to -4320): 1 day resolution",
															"default": -10080,
															"example": "2015-01-01T12:23:00+00:00",
															"anyOf": [
																{
																	"type": "string"
																},
																{
																	"type": "integer"
																}
															]
														},
														"until": {
															"description": "The (exclusive) end of the requested time frame. This value can be a negative integer representing the number of minutes in the past relative to time the request is made, or can be an absolute timestamp that conforms to RFC 3339. If omitted, the time of the request is used.",
															"default": 0,
															"example": "2015-01-02T12:23:00+00:00",
															"anyOf": [
																{
																	"type": "string"
																},
																{
																	"type": "integer"
																}
															]
														},
														"time_delta": {
															"type": "integer",
															"description": "The amount of time (in minutes) that each data point in the timeseries represents. The granularity of the time-series returned (e.g. each bucket in the time series representing 1-minute vs 1-day) is calculated by the API based on the time-range provided to the API."
														}
													}
												},
												"result": {
													"type": "object",
													"title": "Dashboard response",
													"description": "Totals and timeseries data",
													"properties": {
														"totals": {
															"type": "object",
															"description": "Breakdown of totals by data type",
															"properties": {
																"since": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/query/properties/since"
																},
																"until": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/query/properties/until"
																},
																"requests": {
																	"type": "object",
																	"description": "Breakdown of totals for requests",
																	"properties": {
																		"all": {
																			"type": "integer",
																			"description": "Total number of requests served"
																		},
																		"cached": {
																			"type": "integer",
																			"description": "Total number of cached requests served"
																		},
																		"uncached": {
																			"type": "integer",
																			"description": "Total number of requests served from the origin"
																		},
																		"content_type": {
																			"type": "object",
																			"description": "A variable list of key/value pairs where the key represents the type of content served, and the value is the number of requests.",
																			"example": {
																				"css": 15343,
																				"html": 1234213,
																				"javascript": 318236,
																				"gif": 23178,
																				"jpeg": 1982048
																			}
																		},
																		"country": {
																			"type": "object",
																			"description": "A variable list of key/value pairs where the key is a two-digit country code and the value is the number of requests served to that country",
																			"example": {
																				"US": 4181364,
																				"AG": 37298,
																				"GI": 293846
																			}
																		},
																		"ssl": {
																			"type": "object",
																			"description": "A break down of requests served over HTTPS",
																			"properties": {
																				"encrypted": {
																					"type": "integer",
																					"description": "The number of requests served over HTTPS"
																				},
																				"unencrypted": {
																					"type": "integer",
																					"description": "The number of requests served over HTTP"
																				}
																			}
																		},
																		"ssl_protocols": {
																			"type": "object",
																			"description": "A breakdown of requests by their SSL protocol",
																			"properties": {
																				"TLSv1": {
																					"type": "integer",
																					"description": "The number of requests served over TLS v1.0"
																				},
																				"TLSv1.1": {
																					"type": "integer",
																					"description": "The number of requests served over TLS v1.1"
																				},
																				"TLSv1.2": {
																					"type": "integer",
																					"description": "The number of requests served over TLS v1.2"
																				},
																				"TLSv1.3": {
																					"type": "integer",
																					"description": "The number of requests served over TLS v1.3"
																				},
																				"none": {
																					"type": "integer",
																					"description": "The number of requests served over HTTP"
																				}
																			}
																		},
																		"http_status": {
																			"type": "object",
																			"description": "Key/value pairs where the key is a HTTP status code and the value is the number of requests served with that code",
																			"example": {
																				"200": 13496983,
																				"301": 283,
																				"400": 187936,
																				"402": 1828,
																				"404": 1293
																			},
																			"x-patternProperties": {
																				"^[1-5][0-9][0-9]$": {
																					"type": "integer",
																					"minimum": 0
																				}
																			},
																			"additionalProperties": true
																		}
																	}
																},
																"bandwidth": {
																	"type": "object",
																	"description": "Breakdown of totals for bandwidth in the form of bytes",
																	"properties": {
																		"all": {
																			"type": "integer",
																			"description": "The total number of bytes served within the time frame"
																		},
																		"cached": {
																			"type": "integer",
																			"description": "The number of bytes that were cached (and served) by Cloudflare"
																		},
																		"uncached": {
																			"type": "integer",
																			"description": "The number of bytes that were fetched and served from the origin server"
																		},
																		"content_type": {
																			"type": "object",
																			"description": "A variable list of key/value pairs where the key represents the type of content served, and the value is the number in bytes served.",
																			"example": {
																				"css": 237421,
																				"html": 1231290,
																				"javascript": 123245,
																				"gif": 1234242,
																				"jpeg": 784278
																			}
																		},
																		"country": {
																			"type": "object",
																			"description": "A variable list of key/value pairs where the key is a two-digit country code and the value is the number of bytes served to that country",
																			"example": {
																				"US": 123145433,
																				"AG": 2342483,
																				"GI": 984753
																			}
																		},
																		"ssl": {
																			"type": "object",
																			"description": "A break down of bytes served over HTTPS",
																			"properties": {
																				"encrypted": {
																					"type": "integer",
																					"description": "The number of bytes served over HTTPS"
																				},
																				"unencrypted": {
																					"type": "integer",
																					"description": "The number of bytes served over HTTP"
																				}
																			}
																		},
																		"ssl_protocols": {
																			"type": "object",
																			"description": "A breakdown of requests by their SSL protocol",
																			"properties": {
																				"TLSv1": {
																					"type": "integer",
																					"description": "The number of requests served over TLS v1.0"
																				},
																				"TLSv1.1": {
																					"type": "integer",
																					"description": "The number of requests served over TLS v1.1"
																				},
																				"TLSv1.2": {
																					"type": "integer",
																					"description": "The number of requests served over TLS v1.2"
																				},
																				"TLSv1.3": {
																					"type": "integer",
																					"description": "The number of requests served over TLS v1.3"
																				},
																				"none": {
																					"type": "integer",
																					"description": "The number of requests served over HTTP"
																				}
																			}
																		}
																	}
																},
																"threats": {
																	"type": "object",
																	"description": "Breakdown of totals for threats",
																	"properties": {
																		"all": {
																			"type": "integer",
																			"description": "The total number of identifiable threats received over the time frame"
																		},
																		"country": {
																			"type": "object",
																			"description": "A list of key/value pairs where the key is a two-digit country code and the value is the number of malicious requests received from that country.",
																			"example": {
																				"US": 123,
																				"CN": 523423,
																				"AU": 91
																			}
																		},
																		"type": {
																			"type": "object",
																			"description": "The list of key/value pairs where the key is a threat category and the value is the number of requests.",
																			"example": {
																				"user.ban.ip": 123,
																				"hot.ban.unknown": 5324,
																				"macro.chl.captchaErr": 1341,
																				"macro.chl.jschlErr": 5323
																			}
																		}
																	}
																},
																"pageviews": {
																	"type": "object",
																	"description": "Breakdown of totals for pageviews",
																	"properties": {
																		"all": {
																			"type": "integer",
																			"description": "The total number of pageviews served within the time range"
																		},
																		"search_engine": {
																			"type": "object",
																			"description": "A variable list of key/value pairs representing the search engine and number of hits",
																			"example": {
																				"googlebot": 35272,
																				"pingdom": 13435,
																				"bingbot": 5372,
																				"baidubot": 1345
																			}
																		}
																	}
																},
																"uniques": {
																	"type": "object",
																	"properties": {
																		"all": {
																			"type": "integer",
																			"description": "Total number of unique IP addresses within the time range"
																		}
																	}
																}
															}
														},
														"timeseries": {
															"type": "array",
															"description": "Time deltas containing metadata about each bucket of time. The number of buckets (resolution) is determined by the amount of time between the since and until parameters.",
															"items": {
																"type": "object",
																"properties": {
																	"since": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/query/properties/since"
																	},
																	"until": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/query/properties/until"
																	},
																	"requests": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/totals/properties/requests"
																	},
																	"bandwidth": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/totals/properties/bandwidth"
																	},
																	"threats": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/totals/properties/threats"
																	},
																	"pageviews": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/totals/properties/pageviews"
																	},
																	"uniques": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1dashboard/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/totals/properties/uniques"
																	}
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"id": "zone_analytics_deprecation",
					"description": "Please use the new GraphQL Analytics API instead: https://developers.cloudflare.com/analytics/graphql-api/. It provides equivalent data and more features, including the ability to select only the metrics you need. Migration guide: https://developers.cloudflare.com/analytics/migration-guides/zone-analytics/.",
					"eol": "2021-03-01",
					"display": true
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#analytics:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/analytics/colos": {
			"get": {
				"summary": "Get analytics by Co-locations",
				"description": "This view provides a breakdown of analytics data by datacenter. Note: This is available to Enterprise customers only.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get analytics by Co-locations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"query": {
													"type": "object",
													"description": "The exact parameters/timestamps the analytics service used to return data",
													"readOnly": true,
													"properties": {
														"since": {
															"description": "The (inclusive) beginning of the requested time frame. This value can be a negative integer representing the number of minutes in the past relative to time the request is made, or can be an absolute timestamp that conforms to RFC 3339. At this point in time, it cannot exceed a time in the past greater than one year.\n\nRanges that the Cloudflare web application provides will provide the following period length for each point:\n- Last 60 minutes (from -59 to -1): 1 minute resolution\n- Last 7 hours (from -419 to -60): 15 minutes resolution\n- Last 15 hours (from -899 to -420): 30 minutes resolution\n- Last 72 hours (from -4320 to -900): 1 hour resolution\n- Older than 3 days (-525600 to -4320): 1 day resolution",
															"default": -10080,
															"example": "2015-01-01T12:23:00+00:00",
															"anyOf": [
																{
																	"type": "string"
																},
																{
																	"type": "integer"
																}
															]
														},
														"until": {
															"description": "The (exclusive) end of the requested time frame. This value can be a negative integer representing the number of minutes in the past relative to time the request is made, or can be an absolute timestamp that conforms to RFC 3339. If omitted, the time of the request is used.",
															"default": 0,
															"example": "2015-01-02T12:23:00+00:00",
															"anyOf": [
																{
																	"type": "string"
																},
																{
																	"type": "integer"
																}
															]
														},
														"time_delta": {
															"type": "integer",
															"description": "The amount of time (in minutes) that each data point in the timeseries represents. The granularity of the time-series returned (e.g. each bucket in the time series representing 1-minute vs 1-day) is calculated by the API based on the time-range provided to the API."
														}
													}
												},
												"result": {
													"type": "array",
													"title": "Analytics data by datacenter",
													"description": "A breakdown of all dashboard analytics data by co-locations. This is limited to Enterprise zones only.",
													"items": {
														"type": "object",
														"properties": {
															"colo_id": {
																"type": "string",
																"description": "The airport code identifer for the co-location",
																"example": "SFO"
															},
															"timeseries": {
																"type": "array",
																"description": "Time deltas containing metadata about each bucket of time. The number of buckets (resolution) is determined by the amount of time between the since and until parameters.",
																"items": {
																	"type": "object",
																	"properties": {
																		"since": {
																			"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1colos/get/responses/200/content/application~1json/schema/allOf/1/properties/query/properties/since"
																		},
																		"until": {
																			"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1colos/get/responses/200/content/application~1json/schema/allOf/1/properties/query/properties/until"
																		},
																		"requests": {
																			"type": "object",
																			"description": "Breakdown of totals for requests",
																			"properties": {
																				"all": {
																					"type": "integer",
																					"description": "Total number of requests served"
																				},
																				"cached": {
																					"type": "integer",
																					"description": "Total number of cached requests served"
																				},
																				"uncached": {
																					"type": "integer",
																					"description": "Total number of requests served from the origin"
																				},
																				"country": {
																					"type": "object",
																					"description": "Key/value pairs where the key is a two-digit country code and the value is the number of requests served to that country",
																					"example": {
																						"US": 4181364,
																						"AG": 37298,
																						"GI": 293846
																					},
																					"x-patternProperties": {
																						"^[A-Z]{2}": {
																							"type": "string"
																						}
																					},
																					"additionalProperties": true
																				},
																				"http_status": {
																					"type": "object",
																					"description": "A variable list of key/value pairs where the key is a HTTP status code and the value is the number of requests with that code served",
																					"example": {
																						"200": 13496983,
																						"301": 283,
																						"400": 187936,
																						"402": 1828,
																						"404": 1293
																					}
																				}
																			}
																		},
																		"bandwidth": {
																			"type": "object",
																			"description": "Breakdown of totals for bandwidth in the form of bytes",
																			"properties": {
																				"all": {
																					"type": "integer",
																					"description": "The total number of bytes served within the time frame"
																				},
																				"cached": {
																					"type": "integer",
																					"description": "The number of bytes that were cached (and served) by Cloudflare"
																				},
																				"uncached": {
																					"type": "integer",
																					"description": "The number of bytes that were fetched and served from the origin server"
																				}
																			}
																		},
																		"threats": {
																			"type": "object",
																			"description": "Breakdown of totals for threats",
																			"properties": {
																				"all": {
																					"type": "integer",
																					"description": "The total number of identifiable threats received over the time frame"
																				},
																				"country": {
																					"type": "object",
																					"description": "A list of key/value pairs where the key is a two-digit country code and the value is the number of malicious requests received from that country.",
																					"example": {
																						"US": 123,
																						"CN": 523423,
																						"AU": 91
																					}
																				},
																				"type": {
																					"type": "object",
																					"description": "The list of key/value pairs where the key is a threat category and the value is the number of requests.",
																					"example": {
																						"user.ban.ip": 123,
																						"hot.ban.unknown": 5324,
																						"macro.chl.captchaErr": 1341,
																						"macro.chl.jschlErr": 5323
																					}
																				}
																			}
																		}
																	}
																}
															},
															"totals": {
																"type": "object",
																"description": "Breakdown of totals by data type",
																"properties": {
																	"since": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1colos/get/responses/200/content/application~1json/schema/allOf/1/properties/query/properties/since"
																	},
																	"until": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1colos/get/responses/200/content/application~1json/schema/allOf/1/properties/query/properties/until"
																	},
																	"requests": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1colos/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/timeseries/items/properties/requests"
																	},
																	"bandwidth": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1colos/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/timeseries/items/properties/bandwidth"
																	},
																	"threats": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1analytics~1colos/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/timeseries/items/properties/threats"
																	}
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"id": "zone_analytics_deprecation",
					"description": "Please use the new GraphQL Analytics API instead: https://developers.cloudflare.com/analytics/graphql-api/. It provides equivalent data and more features, including the ability to select only the metrics you need. Migration guide: https://developers.cloudflare.com/analytics/migration-guides/zone-analytics/.",
					"eol": "2021-03-01",
					"display": true
				},
				"x-cfPermissionsRequired": {
					"enum": [
						"#analytics:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/logs/control/retention/flag": {
			"get": {
				"summary": "Get log retention flag",
				"description": "Gets log retention flag for Logpull API.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get log retention flag response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"flag": {
															"type": "boolean",
															"example": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Update log retention flag",
				"description": "Updates log retention flag for Logpull API.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1logs~1control~1retention~1flag/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update log retention flag response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1logs~1control~1retention~1flag/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"flag"
								],
								"properties": {
									"flag": {
										"type": "boolean",
										"description": "The log retention flag for Logpull API.",
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/logs/received": {
			"get": {
				"summary": "Get logs received",
				"description": "The `/received` api route allows customers to retrieve their edge HTTP logs. The basic access pattern is \"give me all the logs for zone Z for minute M\", where the minute M refers to the time records were received at Cloudflare's central data center. `start` is inclusive, and `end` is exclusive. Because of that, to get all data, at minutely cadence, starting at 10AM, the proper values are: `start=2018-05-20T10:00:00Z&end=2018-05-20T10:01:00Z`, then `start=2018-05-20T10:01:00Z&end=2018-05-20T10:02:00Z` and so on; the overlap will be handled properly.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get logs received response",
						"content": {
							"application/json": {
								"schema": {
									"example": "{\"ClientIP\":\"192.0.2.1\",\"RayID\":\"41ddf1740f67442d\",\"EdgeStartTimestamp\":1526810289280000000}\n{\"ClientIP\":\"192.0.2.1\",\"RayID\":\"41ddf1740f67442d\",\"EdgeStartTimestamp\":1526810289280000000}\n{\"ClientIP\":\"192.0.2.1\",\"RayID\":\"41ddf1740f67442d\",\"EdgeStartTimestamp\":1526810289280000000}",
									"anyOf": [
										{
											"type": "string"
										},
										{
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/logs/rayids/{ray_identifier}": {
			"get": {
				"summary": "Get logs RayIDs",
				"description": "The `/rayids` api route allows lookups by specific rayid. The rayids route will return zero, one, or more records (ray ids are not unique).",
				"parameters": [
					{
						"name": "ray_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Ray identifier",
							"type": "string",
							"maxLength": 16,
							"readOnly": true,
							"example": "41ddf1740f67442d"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get logs RayIDs response",
						"content": {
							"application/json": {
								"schema": {
									"example": "{\"ClientIP\":\"192.0.2.1\",\"RayID\":\"41ddf1740f67442d\",\"EdgeStartTimestamp\":1526810289280000000}\n{\"ClientIP\":\"192.0.2.1\",\"RayID\":\"41ddf1740f67442d\",\"EdgeStartTimestamp\":1526810289280000000}\n{\"ClientIP\":\"192.0.2.1\",\"RayID\":\"41ddf1740f67442d\",\"EdgeStartTimestamp\":1526810289280000000}",
									"anyOf": [
										{
											"type": "string"
										},
										{
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/logs/received/fields": {
			"get": {
				"summary": "List fields",
				"description": "Lists all fields available. The response is json object with key-value pairs, where keys are field names, and values are descriptions.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List fields response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"key": {
											"type": "string",
											"example": "value"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/logpush/jobs": {
			"get": {
				"summary": "List Logpush jobs",
				"description": "Lists Logpush jobs for a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Logpush jobs response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"nullable": true
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Logpush job",
				"description": "Creates a new Logpush job for a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1logpush~1jobs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Logpush job response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"destination_conf"
								],
								"properties": {
									"name": {
										"description": "Optional human readable job name. Not unique. Cloudflare suggests that you set this to a meaningful string, like the domain name, to make it easier to identify your job.",
										"type": "string",
										"pattern": "^[a-zA-Z0-9\\-\\.]*$",
										"maxLength": 512,
										"example": "example.com",
										"nullable": true
									},
									"enabled": {
										"description": "Flag that indicates if the job was enabled.",
										"type": "boolean",
										"example": false
									},
									"dataset": {
										"description": "Dataset to be pulled.",
										"type": "string",
										"pattern": "^[a-zA-Z0-9_\\-]*$",
										"maxLength": 256,
										"example": "http_requests",
										"nullable": true
									},
									"logpull_options": {
										"description": "Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.",
										"type": "string",
										"format": "uri-reference",
										"maxLength": 4096,
										"example": "fields=RayID,ClientIP,EdgeStartTimestamp&timestamps=rfc3339",
										"nullable": true
									},
									"destination_conf": {
										"description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.",
										"type": "string",
										"format": "uri",
										"maxLength": 4096,
										"example": "s3://mybucket/logs?region=us-west-2"
									},
									"ownership_challenge": {
										"description": "Ownership challenge token to prove destination ownership.",
										"type": "string",
										"pattern": "^[a-zA-Z0-9/\\+\\.\\-_]*$",
										"maxLength": 4096,
										"example": "00000000000000000000"
									},
									"frequency": {
										"description": "The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.",
										"type": "string",
										"enum": [
											"high",
											"low"
										],
										"example": "high",
										"default": "high",
										"nullable": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/logpush/datasets/{dataset}/jobs": {
			"get": {
				"summary": "List Logpush jobs for a dataset",
				"description": "Lists Logpush jobs for a zone for a dataset.",
				"parameters": [
					{
						"name": "dataset",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Dataset to be pulled.",
							"type": "string",
							"pattern": "^[a-zA-Z0-9_\\-]*$",
							"maxLength": 256,
							"example": "http_requests",
							"nullable": true
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Logpush jobs for a dataset response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"nullable": true
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/logpush/datasets/{dataset}/fields": {
			"get": {
				"summary": "List fields",
				"description": "Lists all fields available for a dataset. The response result is an object with key-value pairs, where keys are field names, and values are descriptions.",
				"parameters": [
					{
						"name": "dataset",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Dataset to be pulled.",
							"type": "string",
							"pattern": "^[a-zA-Z0-9_\\-]*$",
							"maxLength": 256,
							"example": "http_requests",
							"nullable": true
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List fields response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"items": {
														"type": "object",
														"properties": {
															"key": {
																"type": "string",
																"example": "value"
															}
														},
														"nullable": true
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/logpush/ownership": {
			"post": {
				"summary": "Get ownership challenge",
				"description": "Gets a new ownership challenge sent to your destination.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get ownership challenge response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"filename": {
															"type": "string",
															"example": "logs/challenge-filename.txt"
														},
														"valid": {
															"type": "boolean",
															"example": true
														},
														"message": {
															"type": "string",
															"example": ""
														}
													},
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"destination_conf"
								],
								"properties": {
									"destination_conf": {
										"description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.",
										"type": "string",
										"format": "uri",
										"maxLength": 4096,
										"example": "s3://mybucket/logs?region=us-west-2"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/logpush/ownership/validate": {
			"post": {
				"summary": "Validate ownership challenge",
				"description": "Validates ownership challenge of the destination.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Validate ownership challenge response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"valid": {
															"type": "boolean",
															"example": true
														}
													},
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"destination_conf",
									"ownership_challenge"
								],
								"properties": {
									"destination_conf": {
										"description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.",
										"type": "string",
										"format": "uri",
										"maxLength": 4096,
										"example": "s3://mybucket/logs?region=us-west-2"
									},
									"ownership_challenge": {
										"description": "Ownership challenge token to prove destination ownership.",
										"type": "string",
										"pattern": "^[a-zA-Z0-9/\\+\\.\\-_]*$",
										"maxLength": 4096,
										"example": "00000000000000000000"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/logpush/validate/origin": {
			"post": {
				"summary": "Validate origin",
				"description": "Validates logpull origin with logpull_options.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Validate origin response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"valid": {
															"type": "boolean",
															"example": true
														},
														"message": {
															"type": "string",
															"example": ""
														}
													},
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"logpull_options"
								],
								"properties": {
									"logpull_options": {
										"description": "Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.",
										"type": "string",
										"format": "uri-reference",
										"maxLength": 4096,
										"example": "fields=RayID,ClientIP,EdgeStartTimestamp&timestamps=rfc3339",
										"nullable": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/logpush/jobs/{job_identifier}": {
			"get": {
				"summary": "Get Logpush job details",
				"description": "Gets the details of a Logpush job.",
				"parameters": [
					{
						"name": "job_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Unique id of the job.",
							"type": "integer",
							"minimum": 1
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Logpush job details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Logpush job",
				"description": "Updates a Logpush job.",
				"parameters": [
					{
						"name": "job_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1logpush~1jobs~1%7Bjob_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1logpush~1jobs~1%7Bjob_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Logpush job response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1logpush~1jobs~1%7Bjob_identifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"enabled": {
										"description": "Flag that indicates if the job was enabled.",
										"type": "boolean",
										"example": false
									},
									"logpull_options": {
										"description": "Configuration string. It specifies things like requested fields and timestamp formats. If migrating from the logpull api, copy the url (full url or just the query string) of your call here, and logpush will keep on making this call for you, setting start and end times appropriately.",
										"type": "string",
										"format": "uri-reference",
										"maxLength": 4096,
										"example": "fields=RayID,ClientIP,EdgeStartTimestamp&timestamps=rfc3339",
										"nullable": true
									},
									"destination_conf": {
										"description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.",
										"type": "string",
										"format": "uri",
										"maxLength": 4096,
										"example": "s3://mybucket/logs?region=us-west-2"
									},
									"ownership_challenge": {
										"description": "Ownership challenge token to prove destination ownership.",
										"type": "string",
										"pattern": "^[a-zA-Z0-9/\\+\\.\\-_]*$",
										"maxLength": 4096,
										"example": "00000000000000000000"
									},
									"frequency": {
										"description": "The frequency at which Cloudflare sends batches of logs to your destination. Setting frequency to high sends your logs in larger quantities of smaller files. Setting frequency to low sends logs in smaller quantities of larger files.",
										"type": "string",
										"enum": [
											"high",
											"low"
										],
										"example": "high",
										"default": "high",
										"nullable": true
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Logpush job",
				"description": "Deletes a Logpush job.",
				"parameters": [
					{
						"name": "job_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1logpush~1jobs~1%7Bjob_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1logpush~1jobs~1%7Bjob_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Logpush job response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"example": {},
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/logpush/validate/destination/exists": {
			"post": {
				"summary": "Check destination exists",
				"description": "Checks if there is an existing job with a destination.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Check destination exists response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"exists": {
															"type": "boolean",
															"example": false
														}
													},
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#logs:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"destination_conf"
								],
								"properties": {
									"destination_conf": {
										"description": "Uniquely identifies a resource (such as an s3 bucket) where data will be pushed. Additional configuration parameters supported by the destination may be included.",
										"type": "string",
										"format": "uri",
										"maxLength": 4096,
										"example": "s3://mybucket/logs?region=us-west-2"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/dns_records": {
			"get": {
				"summary": "List DNS Records",
				"description": "List, search, sort, and filter a zones' DNS records.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List DNS Records response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"oneOf": [
															{
																"title": "A Record",
																"required": [
																	"type",
																	"name",
																	"content"
																],
																"allOf": [
																	{
																		"properties": {
																			"id": {
																				"description": "DNS record identifier tag",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "372e67954025e0ba6aaa6d586b9e0b59"
																			},
																			"type": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/type"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/content"
																			},
																			"proxiable": {
																				"type": "boolean",
																				"description": "Whether the record can be proxied by Cloudflare or not",
																				"readOnly": true,
																				"example": true
																			},
																			"proxied": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/proxied"
																			},
																			"ttl": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/ttl"
																			},
																			"locked": {
																				"type": "boolean",
																				"readOnly": true,
																				"example": false,
																				"description": "Whether this record can be modified/deleted (true means it's managed by Cloudflare)"
																			},
																			"zone_id": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/parameters/0/schema"
																			},
																			"zone_name": {
																				"type": "string",
																				"description": "The domain of the record",
																				"format": "hostname",
																				"readOnly": true,
																				"example": "example.com"
																			},
																			"created_on": {
																				"type": "string",
																				"description": "When the record was created",
																				"format": "date-time",
																				"readOnly": true,
																				"example": "2014-01-01T05:20:00.123450+00:00"
																			},
																			"modified_on": {
																				"type": "string",
																				"description": "When the record was last modified",
																				"format": "date-time",
																				"readOnly": true,
																				"example": "2014-01-01T05:20:00.123450+00:00"
																			},
																			"data": {
																				"type": "object",
																				"description": "Metadata about the record",
																				"example": {}
																			},
																			"meta": {
																				"type": "object",
																				"description": "Extra Cloudflare-specific information about the record",
																				"properties": {
																					"auto_added": {
																						"type": "boolean",
																						"description": "Will exist if Cloudflare automatically added this DNS record during initial setup.",
																						"example": true
																					},
																					"source": {
																						"type": "string",
																						"description": "Where the record originated from",
																						"example": "primary"
																					}
																				}
																			}
																		}
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"A"
																				],
																				"description": "Record type",
																				"example": "A"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "A valid IPv4 address",
																				"format": "ipv4",
																				"example": "198.51.100.4"
																			}
																		}
																	}
																]
															},
															{
																"title": "AAAA Record",
																"required": [
																	"type",
																	"name",
																	"content"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"AAAA"
																				],
																				"description": "Record type",
																				"example": "AAAA"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "A valid IPv6 address",
																				"format": "ipv6",
																				"example": "2400:cb00:2049:1::173.245.59.16"
																			}
																		}
																	}
																]
															},
															{
																"title": "CNAME Record",
																"required": [
																	"type",
																	"name",
																	"content"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"CNAME"
																				],
																				"description": "Record type",
																				"example": "CNAME"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"description": "A valid hostname"
																			}
																		}
																	}
																]
															},
															{
																"title": "HTTPS Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"HTTPS"
																				],
																				"description": "Record type",
																				"example": "HTTPS"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted HTTPS content. See 'data' to set HTTPS properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a HTTPS record",
																				"properties": {
																					"priority": {
																						"type": "number",
																						"description": "priority",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 1
																					},
																					"target": {
																						"type": "string",
																						"description": "target",
																						"example": "."
																					},
																					"value": {
																						"type": "string",
																						"description": "value",
																						"example": "alpn=\"h3,h2\" ipv4hint=\"127.0.0.1\" ipv6hint=\"::1\""
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "NS Record",
																"required": [
																	"type",
																	"name",
																	"content"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"NS"
																				],
																				"description": "Record type",
																				"example": "NS"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"description": "A valid name server host name",
																				"example": "ns1.example.com"
																			}
																		}
																	}
																]
															},
															{
																"title": "MX Record",
																"required": [
																	"type",
																	"name",
																	"content",
																	"priority"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"MX"
																				],
																				"description": "Record type",
																				"example": "MX"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "A valid mail server hostname",
																				"format": "hostname",
																				"example": "mx.example.com"
																			},
																			"priority": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/priority"
																			}
																		}
																	}
																]
															},
															{
																"title": "TXT Record",
																"required": [
																	"type",
																	"name",
																	"content"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"TXT"
																				],
																				"description": "Record type",
																				"example": "TXT"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Text content for the record",
																				"example": "example text content"
																			}
																		}
																	}
																]
															},
															{
																"title": "LOC Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"LOC"
																				],
																				"description": "Record type",
																				"example": "LOC"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted LOC content. See 'data' to set LOC properties",
																				"example": "IN LOC 37 46 46 N 122 23 35 W 0m 100m 0m 0m",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a LOC record",
																				"properties": {
																					"lat_degrees": {
																						"type": "number",
																						"description": "Degrees of latitude",
																						"minimum": 0,
																						"maximum": 90,
																						"example": 37
																					},
																					"lat_minutes": {
																						"type": "number",
																						"description": "Minutes of latitude",
																						"default": 0,
																						"minimum": 0,
																						"maximum": 59,
																						"example": 46
																					},
																					"lat_seconds": {
																						"type": "number",
																						"description": "Seconds of latitude",
																						"default": 0,
																						"minimum": 0,
																						"maximum": 59.999,
																						"example": 46
																					},
																					"lat_direction": {
																						"enum": [
																							"N",
																							"S"
																						],
																						"description": "Latitude direction",
																						"example": "N"
																					},
																					"long_degrees": {
																						"type": "number",
																						"description": "Degrees of longitude",
																						"minimum": 0,
																						"maximum": 180,
																						"example": 122
																					},
																					"long_minutes": {
																						"type": "number",
																						"description": "Minutes of longitude",
																						"default": 0,
																						"minimum": 0,
																						"maximum": 59,
																						"example": 23
																					},
																					"long_seconds": {
																						"type": "number",
																						"description": "Seconds of longitude",
																						"default": 0,
																						"minimum": 0,
																						"maximum": 59.999,
																						"example": 35
																					},
																					"long_direction": {
																						"enum": [
																							"E",
																							"W"
																						],
																						"description": "Longitude direction",
																						"example": "W"
																					},
																					"altitude": {
																						"type": "number",
																						"description": "Altitude of location in meters",
																						"minimum": -100000,
																						"maximum": 42849672.95,
																						"example": 0
																					},
																					"size": {
																						"type": "number",
																						"description": "Size of location in meters",
																						"minimum": 0,
																						"maximum": 90000000,
																						"example": 100,
																						"default": 0
																					},
																					"precision_horz": {
																						"type": "number",
																						"description": "Horizontal precision of location",
																						"minimum": 0,
																						"maximum": 90000000,
																						"example": 0,
																						"default": 0
																					},
																					"precision_vert": {
																						"type": "number",
																						"description": "Vertical precision of location",
																						"minimum": 0,
																						"maximum": 90000000,
																						"example": 0,
																						"default": 0
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "SRV Record",
																"required": [
																	"type",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"SRV"
																				],
																				"description": "Record type",
																				"example": "SRV"
																			},
																			"name": {
																				"type": "string",
																				"description": "Service, protocol, and SRV name content. See 'data' for setting the individual component values",
																				"example": "_sip._tcp.example.com",
																				"maxLength": 255,
																				"readOnly": true
																			},
																			"content": {
																				"type": "string",
																				"description": "Priority, weight, port, and SRV target. See 'data' for setting the individual component values",
																				"example": "10 IN SRV 5 8806 example.com.",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a SRV record",
																				"properties": {
																					"service": {
																						"type": "string",
																						"description": "A service type, prefixed with an underscore",
																						"example": "_sip"
																					},
																					"proto": {
																						"type": "string",
																						"description": "A valid protocol",
																						"example": "_tcp"
																					},
																					"name": {
																						"type": "string",
																						"description": "A valid hostname",
																						"format": "hostname",
																						"example": "example.com"
																					},
																					"priority": {
																						"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/priority"
																					},
																					"weight": {
																						"type": "number",
																						"description": "The record weight",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 5
																					},
																					"port": {
																						"type": "number",
																						"description": "The port of the service",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 8806
																					},
																					"target": {
																						"type": "string",
																						"description": "A valid hostname",
																						"format": "hostname",
																						"example": "example.com"
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "CERT Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"CERT"
																				],
																				"description": "Record type",
																				"example": "CERT"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted CERT content. See 'data' to set CERT properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a CERT record",
																				"properties": {
																					"type": {
																						"type": "number",
																						"description": "Type",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 9
																					},
																					"key_tag": {
																						"type": "number",
																						"description": "Key Tag",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 1
																					},
																					"algorithm": {
																						"type": "number",
																						"description": "Algorithm",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 8
																					},
																					"certificate": {
																						"type": "string",
																						"description": "Certificate"
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "DNSKEY Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"DNSKEY"
																				],
																				"description": "Record type",
																				"example": "DNSKEY"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted DNSKEY content. See 'data' to set DNSKEY properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a DNSKEY record",
																				"properties": {
																					"flags": {
																						"type": "number",
																						"description": "Flags",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 1
																					},
																					"protocol": {
																						"type": "number",
																						"description": "Protocol",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 3
																					},
																					"algorithm": {
																						"type": "number",
																						"description": "Algorithm",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 5
																					},
																					"public_key": {
																						"type": "string",
																						"description": "Public Key"
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "DS Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"DS"
																				],
																				"description": "Record type",
																				"example": "DS"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted DS content. See 'data' to set DS properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a DS record",
																				"properties": {
																					"key_tag": {
																						"type": "number",
																						"description": "Key Tag",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 1
																					},
																					"algorithm": {
																						"type": "number",
																						"description": "Algorithm",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 3
																					},
																					"digest_type": {
																						"type": "number",
																						"description": "Digest Type",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 1
																					},
																					"digest": {
																						"type": "string",
																						"description": "Digest"
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "NAPTR Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"NAPTR"
																				],
																				"description": "Record type",
																				"example": "NAPTR"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted NAPTR content. See 'data' to set NAPTR properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a NAPTR record",
																				"properties": {
																					"order": {
																						"type": "number",
																						"description": "Order",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 100
																					},
																					"preference": {
																						"type": "number",
																						"description": "Preference",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 10
																					},
																					"flags": {
																						"type": "string",
																						"description": "Flags"
																					},
																					"service": {
																						"type": "string",
																						"description": "Service"
																					},
																					"regex": {
																						"type": "string",
																						"description": "Regex"
																					},
																					"replacement": {
																						"type": "string",
																						"description": "Replacement"
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "SMIMEA Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"SMIMEA"
																				],
																				"description": "Record type",
																				"example": "SMIMEA"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted SMIMEA content. See 'data' to set SMIMEA properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a SMIMEA record",
																				"properties": {
																					"usage": {
																						"type": "number",
																						"description": "Usage",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 3
																					},
																					"selector": {
																						"type": "number",
																						"description": "Selector",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 0
																					},
																					"matching_type": {
																						"type": "number",
																						"description": "Matching Type",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 0
																					},
																					"certificate": {
																						"type": "string",
																						"description": "Certificate"
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "SSHFP Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"SSHFP"
																				],
																				"description": "Record type",
																				"example": "SSHFP"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted SSHFP content. See 'data' to set SSHFP properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a SSHFP record",
																				"properties": {
																					"algorithm": {
																						"type": "number",
																						"description": "algorithm",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 2
																					},
																					"type": {
																						"type": "number",
																						"description": "type",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 1
																					},
																					"fingerprint": {
																						"type": "string",
																						"description": "fingerprint"
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "SVCB Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"SVCB"
																				],
																				"description": "Record type",
																				"example": "SVCB"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted SVCB content. See 'data' to set SVCB properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a SVCB record",
																				"properties": {
																					"priority": {
																						"type": "number",
																						"description": "priority",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 1
																					},
																					"target": {
																						"type": "string",
																						"description": "target",
																						"example": "."
																					},
																					"value": {
																						"type": "string",
																						"description": "value",
																						"example": "alpn=\"h3,h2\" ipv4hint=\"127.0.0.1\" ipv6hint=\"::1\""
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "TLSA Record",
																"required": [
																	"type",
																	"name",
																	"data"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"TLSA"
																				],
																				"description": "Record type",
																				"example": "TLSA"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted TLSA content. See 'data' to set TLSA properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a TLSA record",
																				"properties": {
																					"usage": {
																						"type": "number",
																						"description": "Usage",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 0
																					},
																					"selector": {
																						"type": "number",
																						"description": "Selector",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 0
																					},
																					"matching_type": {
																						"type": "number",
																						"description": "Matching Type",
																						"minimum": 0,
																						"maximum": 255,
																						"example": 1
																					},
																					"certificate": {
																						"type": "string",
																						"description": "certificate"
																					}
																				}
																			}
																		}
																	}
																]
															},
															{
																"title": "URI Record",
																"required": [
																	"type",
																	"name",
																	"data",
																	"priority"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"type": {
																				"enum": [
																					"URI"
																				],
																				"description": "Record type",
																				"example": "URI"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/name"
																			},
																			"content": {
																				"type": "string",
																				"description": "Formatted URI content. See 'data' to set URI properties",
																				"readOnly": true
																			},
																			"data": {
																				"type": "object",
																				"description": "Components of a URI record",
																				"properties": {
																					"weight": {
																						"type": "number",
																						"description": "The record weight",
																						"minimum": 0,
																						"maximum": 65535,
																						"example": 20
																					},
																					"content": {
																						"type": "string",
																						"description": "The record content",
																						"example": "http://example.com/example.html"
																					}
																				}
																			},
																			"priority": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/post/requestBody/content/application~1json/schema/properties/priority"
																			}
																		}
																	}
																]
															}
														],
														"required": [
															"id",
															"type",
															"name",
															"content",
															"proxiable",
															"proxied",
															"ttl",
															"locked",
															"zone_name",
															"created_on",
															"modified_on"
														],
														"x-cfLinkErrors": {
															"1000": "Invalid user",
															"1002": "Invalid or missing zone_id",
															"1003": "per_page must be a positive integer",
															"1004": "Invalid or missing zone",
															"1005": "Invalid or missing record",
															"1007": "name required",
															"1008": "content required",
															"1009": "Invalid or missing record id",
															"1010": "Invalid or missing record",
															"1011": "Zone file for '<domain name>' could not be found",
															"1012": "Zone file for '<domain name>' is not modifiable",
															"1013": "The record could not be found",
															"1014": "You do not have permission to modify this zone",
															"1015": "Unknown error",
															"1017": "Content for A record is invalid. Must be a valid IPv4 address",
															"1018": "Content for AAAA record is invalid. Must be a valid IPv6 address",
															"1019": "Content for CNAME record is invalid",
															"1024": "Invalid priority, priority must be set and be between 0 and 65535",
															"1025": "Invalid content for an MX record",
															"1027": "Invalid service value",
															"1028": "Invalid service value. Must be less than 100 characters",
															"1029": "Invalid protocol value",
															"1030": "Invalid protocol value. Must be less than 12 characters",
															"1031": "Invalid SRV name",
															"1032": "Invalid SRV name. Must be less than 90 characters",
															"1033": "Invalid weight value. Must be between 0 and 65,535",
															"1034": "Invalid port value. Must be between 0 and 65,535",
															"1037": "Invalid domain name for a SRV target host",
															"1038": "Invalid DNS record type",
															"1039": "Invalid TTL. Must be between 60 and 86400 seconds, or 1 for automatic",
															"1041": "Priority must be set for SRV record",
															"1042": "Zone file for '<domain name>' could not be found",
															"1043": "Zone file for '<domain name>' is not editable",
															"1044": "A record with these exact values already exists. Please modify or remove this record",
															"1045": "The record could not be found",
															"1046": "A record with these exact values already exists. Please modify or cancel this edit",
															"1047": "You do not have permission to modify this zone",
															"1048": "You have reached the record limit for this zone",
															"1049": "The record content is missing",
															"1050": "Could not find record",
															"1052": "You can not point a CNAME to itself",
															"1053": "Invalid lat_degrees, must be an integer between 0 and 90 inclusive",
															"1054": "Invalid lat_minutes, must be an integer between 0 and 59 inclusive",
															"1055": "Invalid lat_seconds, must be a floating point number between 0 and 60, including 0 but not including 60",
															"1056": "Invalid or missing lat_direction. Values must be N or S",
															"1057": "Invalid long_degrees, must be an integer between 0 and 180",
															"1058": "Invalid long_minutes, must be an integer between 0 and 59",
															"1059": "Invalid long_seconds, must be a floating point number between 0 and 60, including 0 but not including 60",
															"1060": "Invalid or missing long_direction. Values must be E or S",
															"1061": "Invalid altitude, must be a floating point number between -100000.00 and 42849672.95",
															"1062": "Invalid size, must be a floating point number between 0 and 90000000.00",
															"1063": "Invalid precision_horz, must be a floating point number between 0 and 90000000.00",
															"1064": "Invalid precision_vert, must be a floating point number between 0 and 90000000.00",
															"1065": "Invalid or missing data for <type> record",
															"1067": "Invalid content for a NS record",
															"1068": "Target cannot be an IP address",
															"1069": "CNAME content cannot reference itself",
															"1070": "CNAME content cannot be an IP",
															"1071": "Invalid proxied mode. Record cannot be proxied",
															"1072": "Invalid record identifier",
															"1073": "Invalid TXT record. Must be less than 255 characters",
															"1074": "Invalid TXT record. Record may only contain printable ASCII!"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create DNS Record",
				"description": "Create a new DNS record for a zone. See the record object definitions for required attributes for each record type",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create DNS Record response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"type",
									"name",
									"content",
									"ttl"
								],
								"properties": {
									"type": {
										"type": "string",
										"enum": [
											"A",
											"AAAA",
											"CNAME",
											"HTTPS",
											"TXT",
											"SRV",
											"LOC",
											"MX",
											"NS",
											"CERT",
											"DNSKEY",
											"DS",
											"NAPTR",
											"SMIMEA",
											"SSHFP",
											"SVCB",
											"TLSA",
											"URI"
										],
										"description": "DNS record type",
										"example": "A",
										"readOnly": true
									},
									"name": {
										"type": "string",
										"description": "DNS record name (or @ for the zone apex)",
										"maxLength": 255,
										"example": "example.com"
									},
									"content": {
										"type": "string",
										"description": "DNS record content",
										"example": "127.0.0.1"
									},
									"ttl": {
										"type": "number",
										"example": 3600,
										"description": "Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for 'automatic'",
										"anyOf": [
											{
												"type": "number",
												"example": 3600,
												"minimum": 60,
												"maximum": 86400
											},
											{
												"type": "number",
												"enum": [
													1
												]
											}
										]
									},
									"priority": {
										"type": "number",
										"minimum": 0,
										"maximum": 65535,
										"description": "Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred",
										"example": 10
									},
									"proxied": {
										"type": "boolean",
										"description": "Whether the record is receiving the performance and security benefits of Cloudflare",
										"example": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/dns_records/{identifier}": {
			"get": {
				"summary": "DNS Record Details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "DNS record identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b59"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "DNS Record Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update DNS Record",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update DNS Record response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"type",
									"name",
									"content",
									"ttl"
								],
								"properties": {
									"type": {
										"type": "string",
										"enum": [
											"A",
											"AAAA",
											"CNAME",
											"HTTPS",
											"TXT",
											"SRV",
											"LOC",
											"MX",
											"NS",
											"CERT",
											"DNSKEY",
											"DS",
											"NAPTR",
											"SMIMEA",
											"SSHFP",
											"SVCB",
											"TLSA",
											"URI"
										],
										"description": "DNS record type",
										"example": "A",
										"readOnly": true
									},
									"name": {
										"type": "string",
										"description": "DNS record name (or @ for the zone apex)",
										"maxLength": 255,
										"example": "example.com"
									},
									"content": {
										"type": "string",
										"description": "DNS record content",
										"example": "127.0.0.1"
									},
									"ttl": {
										"type": "number",
										"example": 3600,
										"description": "Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for 'automatic'",
										"anyOf": [
											{
												"type": "number",
												"example": 3600,
												"minimum": 60,
												"maximum": 86400
											},
											{
												"type": "number",
												"enum": [
													1
												]
											}
										]
									},
									"proxied": {
										"type": "boolean",
										"description": "Whether the record is receiving the performance and security benefits of Cloudflare",
										"example": false
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch DNS Record",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch DNS Record response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/type"
									},
									"name": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/name"
									},
									"content": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/content"
									},
									"ttl": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/ttl"
									},
									"proxied": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/proxied"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete DNS Record",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete DNS Record response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dns_records~1%7Bidentifier%7D/get/parameters/0/schema"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/dns_records/scan": {
			"post": {
				"summary": "Scan DNS Records",
				"description": "Scan for common DNS records on your domain and automatically add them to your zone. Useful if you haven't updated your nameservers yet.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Scan DNS Records response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"recs_added": {
															"type": "number",
															"description": "Number of DNS records added",
															"example": 5
														},
														"total_records_parsed": {
															"type": "number",
															"description": "Total number of DNS records parsed",
															"example": 5
														}
													}
												},
												"timing": {
													"type": "object",
													"properties": {
														"start_time": {
															"type": "string",
															"format": "date-time",
															"description": "When the file parsing started",
															"example": "2014-03-01T12:20:00+00:00"
														},
														"end_time": {
															"type": "string",
															"format": "date-time",
															"description": "When the file parsing ended",
															"example": "2014-03-01T12:20:01+00:00"
														},
														"process_time": {
															"type": "number",
															"description": "Processing time of the file in seconds",
															"example": 1
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/dns_records/import": {
			"post": {
				"summary": "Import DNS Records",
				"description": "You can upload your [BIND config](https://en.wikipedia.org/wiki/Zone_file \"Zone file\") through this endpoint. It assumes that cURL is called from a location with bind_config.txt (valid BIND config) present.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Import DNS Records response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"recs_added": {
															"type": "number",
															"description": "Number of DNS records added",
															"example": 5
														},
														"total_records_parsed": {
															"type": "number",
															"description": "Total number of DNS records parsed",
															"example": 5
														}
													}
												},
												"timing": {
													"type": "object",
													"properties": {
														"start_time": {
															"type": "string",
															"format": "date-time",
															"description": "When the file parsing started",
															"example": "2014-03-01T12:20:00+00:00"
														},
														"end_time": {
															"type": "string",
															"format": "date-time",
															"description": "When the file parsing ended",
															"example": "2014-03-01T12:20:01+00:00"
														},
														"process_time": {
															"type": "number",
															"description": "Processing time of the file in seconds",
															"example": 1
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"required": [
									"file"
								],
								"properties": {
									"file": {
										"type": "string",
										"description": "BIND config to upload",
										"example": "@bind_config.txt"
									},
									"proxied": {
										"type": "boolean",
										"description": "Whether or not proxiable records should receive the performance and security benefits of Cloudflare",
										"example": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/dns_records/export": {
			"get": {
				"summary": "Export DNS Records",
				"description": "You can export your [BIND config](https://en.wikipedia.org/wiki/Zone_file \"Zone file\") through this endpoint.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Export DNS Records response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{identifier}/dns_analytics/report": {
			"get": {
				"summary": "Table",
				"description": "Retrieves a list of summarised aggregate metrics over a given time period.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Table response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"required": [
														"rows",
														"data",
														"totals"
													],
													"properties": {
														"rows": {
															"description": "Total number of rows in the result",
															"type": "number",
															"example": 100,
															"minimum": 0
														},
														"data": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"dimensions",
																	"metrics"
																],
																"properties": {
																	"dimensions": {
																		"description": "Array of dimension values for this row",
																		"type": "array",
																		"items": {
																			"anyOf": [
																				{
																					"description": "Dimension value, may contain dimension identifier for drill down",
																					"type": "object",
																					"properties": {
																						"name": {
																							"description": "Dimension value",
																							"type": "string",
																							"example": "NODATA"
																						},
																						"id": {
																							"description": "Dimension value identifier that can be used for drill down",
																							"type": "string"
																						}
																					},
																					"required": [
																						"name"
																					]
																				},
																				{
																					"description": "Dimension value",
																					"type": "string",
																					"example": "NODATA"
																				}
																			]
																		},
																		"example": [
																			{
																				"name": "NODATA"
																			}
																		]
																	},
																	"metrics": {
																		"type": "array",
																		"items": {}
																	}
																}
															},
															"nullable": true
														},
														"totals": {
															"description": "Total results for metrics across all data"
														},
														"min": {
															"description": "Minimum results for each metric"
														},
														"max": {
															"description": "Maximum results for each metric"
														},
														"data_lag": {
															"description": "Number of seconds between current time and last processed event, in another words how many seconds of data could be missing",
															"type": "number",
															"example": 60,
															"minimum": 0
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{identifier}/dns_analytics/report/bytime": {
			"get": {
				"summary": "By Time",
				"description": "Retrieves a list of aggregate metrics grouped by time interval.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "By Time response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1dns_analytics~1report/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{zone_identifier}/dnssec": {
			"get": {
				"summary": "DNSSEC Details",
				"description": "Details about DNSSEC status and configuration",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "DNSSEC Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit DNSSEC Status",
				"description": "Enable or disable DNSSEC",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dnssec/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit DNSSEC Status response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dnssec/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"status"
								],
								"properties": {
									"status": {
										"enum": [
											"active",
											"disabled"
										],
										"description": "Status of DNSSEC, based on user-desired state and presence of necessary records",
										"example": "active"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete DNSSEC records",
				"description": "Delete DNSSEC",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1dnssec/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete DNSSEC records response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "string",
													"example": ""
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/dns_firewall": {
			"get": {
				"summary": "List DNS Firewall Clusters",
				"description": "List configured DNS Firewall clusters for an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List DNS Firewall Clusters response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name",
															"origin_ips",
															"dns_firewall_ips",
															"minimum_cache_ttl",
															"maximum_cache_ttl",
															"deprecate_any_requests",
															"ecs_fallback",
															"modified_on"
														],
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"name": {
																"description": "DNS Firewall Cluster Name",
																"type": "string",
																"maxLength": 160,
																"example": "My Awesome DNS Firewall cluster"
															},
															"origin_ips": {
																"type": "array",
																"items": {
																	"anyOf": [
																		{
																			"description": "Origin DNS Server IPv4 Address",
																			"type": "string",
																			"format": "ipv4",
																			"example": "192.0.2.1"
																		},
																		{
																			"description": "Origin DNS Server IPv6 Address",
																			"type": "string",
																			"format": "ipv6",
																			"example": "2001:DB8:100::CF"
																		}
																	]
																},
																"example": [
																	"192.0.2.1",
																	"198.51.100.1",
																	"2001:DB8:100::CF"
																]
															},
															"dns_firewall_ips": {
																"type": "array",
																"items": {
																	"anyOf": [
																		{
																			"description": "Origin DNS Server IPv4 Address",
																			"type": "string",
																			"format": "ipv4",
																			"example": "203.0.113.1"
																		},
																		{
																			"description": "Origin DNS Server IPv6 Address",
																			"type": "string",
																			"format": "ipv6",
																			"example": "2001:DB8:ab::CF"
																		}
																	]
																},
																"example": [
																	"203.0.113.1",
																	"203.0.113.254",
																	"2001:DB8:AB::CF",
																	"2001:DB8:CD::CF"
																]
															},
															"minimum_cache_ttl": {
																"description": "Minimum DNS Cache TTL",
																"type": "number",
																"minimum": 30,
																"maximum": 36000,
																"default": 60,
																"example": 60
															},
															"maximum_cache_ttl": {
																"description": "Maximum DNS Cache TTL",
																"type": "number",
																"minimum": 30,
																"maximum": 36000,
																"default": 900,
																"example": 900
															},
															"negative_cache_ttl": {
																"description": "Negative DNS Cache TTL",
																"type": "number",
																"minimum": 30,
																"maximum": 36000,
																"default": null,
																"example": 900,
																"nullable": true
															},
															"deprecate_any_requests": {
																"description": "Deprecate the response to ANY requests",
																"type": "boolean",
																"example": true
															},
															"ecs_fallback": {
																"description": "Forward client IP (resolver) subnet if no EDNS Client Subnet is sent",
																"type": "boolean",
																"example": false
															},
															"ratelimit": {
																"description": "Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).",
																"type": "number",
																"minimum": 100,
																"maximum": 1000000000,
																"default": null,
																"example": 600,
																"nullable": true
															},
															"attack_mitigation": {
																"type": "object",
																"description": "Attack mitigation settings",
																"properties": {
																	"enabled": {
																		"description": "When enabled, random-prefix attacks are automatically mitigated and the origin DNS servers protected.",
																		"type": "boolean",
																		"example": true
																	},
																	"only_when_origin_unhealthy": {
																		"description": "Only mitigate attacks when origin servers seem unhealthy.",
																		"type": "boolean",
																		"default": true,
																		"example": false
																	}
																},
																"nullable": true
															},
															"modified_on": {
																"description": "Last modification of DNS Firewall cluster",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create DNS Firewall Cluster",
				"description": "Create a configured DNS Firewall Cluster",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1dns_firewall/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create DNS Firewall Cluster response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"required": [
														"id",
														"name",
														"origin_ips",
														"dns_firewall_ips",
														"minimum_cache_ttl",
														"maximum_cache_ttl",
														"deprecate_any_requests",
														"ecs_fallback",
														"modified_on"
													],
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
														},
														"name": {
															"description": "DNS Firewall Cluster Name",
															"type": "string",
															"maxLength": 160,
															"example": "My Awesome DNS Firewall cluster"
														},
														"origin_ips": {
															"type": "array",
															"items": {
																"anyOf": [
																	{
																		"description": "Origin DNS Server IPv4 Address",
																		"type": "string",
																		"format": "ipv4",
																		"example": "192.0.2.1"
																	},
																	{
																		"description": "Origin DNS Server IPv6 Address",
																		"type": "string",
																		"format": "ipv6",
																		"example": "2001:DB8:100::CF"
																	}
																]
															},
															"example": [
																"192.0.2.1",
																"198.51.100.1",
																"2001:DB8:100::CF"
															]
														},
														"dns_firewall_ips": {
															"type": "array",
															"items": {
																"anyOf": [
																	{
																		"description": "Origin DNS Server IPv4 Address",
																		"type": "string",
																		"format": "ipv4",
																		"example": "203.0.113.1"
																	},
																	{
																		"description": "Origin DNS Server IPv6 Address",
																		"type": "string",
																		"format": "ipv6",
																		"example": "2001:DB8:ab::CF"
																	}
																]
															},
															"example": [
																"203.0.113.1",
																"203.0.113.254",
																"2001:DB8:AB::CF",
																"2001:DB8:CD::CF"
															]
														},
														"minimum_cache_ttl": {
															"description": "Minimum DNS Cache TTL",
															"type": "number",
															"minimum": 30,
															"maximum": 36000,
															"default": 60,
															"example": 60
														},
														"maximum_cache_ttl": {
															"description": "Maximum DNS Cache TTL",
															"type": "number",
															"minimum": 30,
															"maximum": 36000,
															"default": 900,
															"example": 900
														},
														"negative_cache_ttl": {
															"description": "Negative DNS Cache TTL",
															"type": "number",
															"minimum": 30,
															"maximum": 36000,
															"default": null,
															"example": 900,
															"nullable": true
														},
														"deprecate_any_requests": {
															"description": "Deprecate the response to ANY requests",
															"type": "boolean",
															"example": true
														},
														"ecs_fallback": {
															"description": "Forward client IP (resolver) subnet if no EDNS Client Subnet is sent",
															"type": "boolean",
															"example": false
														},
														"ratelimit": {
															"description": "Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).",
															"type": "number",
															"minimum": 100,
															"maximum": 1000000000,
															"default": null,
															"example": 600,
															"nullable": true
														},
														"attack_mitigation": {
															"type": "object",
															"description": "Attack mitigation settings",
															"properties": {
																"enabled": {
																	"description": "When enabled, random-prefix attacks are automatically mitigated and the origin DNS servers protected.",
																	"type": "boolean",
																	"example": true
																},
																"only_when_origin_unhealthy": {
																	"description": "Only mitigate attacks when origin servers seem unhealthy.",
																	"type": "boolean",
																	"default": true,
																	"example": false
																}
															},
															"nullable": true
														},
														"modified_on": {
															"description": "Last modification of DNS Firewall cluster",
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"example": "2014-01-01T05:20:00.123450+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"origin_ips"
								],
								"properties": {
									"name": {
										"description": "DNS Firewall Cluster Name",
										"type": "string",
										"maxLength": 160,
										"example": "My Awesome DNS Firewall cluster"
									},
									"origin_ips": {
										"type": "array",
										"items": {
											"anyOf": [
												{
													"description": "Origin DNS Server IPv4 Address",
													"type": "string",
													"format": "ipv4",
													"example": "192.0.2.1"
												},
												{
													"description": "Origin DNS Server IPv6 Address",
													"type": "string",
													"format": "ipv6",
													"example": "2001:DB8:100::CF"
												}
											]
										},
										"example": [
											"192.0.2.1",
											"198.51.100.1",
											"2001:DB8:100::CF"
										]
									},
									"minimum_cache_ttl": {
										"description": "Minimum DNS Cache TTL",
										"type": "number",
										"minimum": 30,
										"maximum": 36000,
										"default": 60,
										"example": 60
									},
									"maximum_cache_ttl": {
										"description": "Maximum DNS Cache TTL",
										"type": "number",
										"minimum": 30,
										"maximum": 36000,
										"default": 900,
										"example": 900
									},
									"negative_cache_ttl": {
										"description": "Negative DNS Cache TTL",
										"type": "number",
										"minimum": 30,
										"maximum": 36000,
										"default": null,
										"example": 900,
										"nullable": true
									},
									"deprecate_any_requests": {
										"description": "Deprecate the response to ANY requests",
										"type": "boolean",
										"example": true
									},
									"ecs_fallback": {
										"description": "Forward client IP (resolver) subnet if no EDNS Client Subnet is sent",
										"type": "boolean",
										"example": false
									},
									"ratelimit": {
										"description": "Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).",
										"type": "number",
										"minimum": 100,
										"maximum": 1000000000,
										"default": null,
										"example": 600,
										"nullable": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/dns_firewall/{identifier}": {
			"get": {
				"summary": "DNS Firewall Cluster Details",
				"description": "Show a single configured DNS Firewall cluster for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "DNS Firewall Cluster Details response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1dns_firewall/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Update DNS Firewall Cluster",
				"description": "Modify a DNS Firewall Cluster configuration",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1dns_firewall~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1dns_firewall~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update DNS Firewall Cluster response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1dns_firewall/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"allOf": [
									{
										"type": "object",
										"required": [
											"id",
											"name",
											"origin_ips",
											"dns_firewall_ips",
											"minimum_cache_ttl",
											"maximum_cache_ttl",
											"deprecate_any_requests",
											"ecs_fallback",
											"modified_on"
										],
										"properties": {
											"id": {
												"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
											},
											"name": {
												"description": "DNS Firewall Cluster Name",
												"type": "string",
												"maxLength": 160,
												"example": "My Awesome DNS Firewall cluster"
											},
											"origin_ips": {
												"type": "array",
												"items": {
													"anyOf": [
														{
															"description": "Origin DNS Server IPv4 Address",
															"type": "string",
															"format": "ipv4",
															"example": "192.0.2.1"
														},
														{
															"description": "Origin DNS Server IPv6 Address",
															"type": "string",
															"format": "ipv6",
															"example": "2001:DB8:100::CF"
														}
													]
												},
												"example": [
													"192.0.2.1",
													"198.51.100.1",
													"2001:DB8:100::CF"
												]
											},
											"dns_firewall_ips": {
												"type": "array",
												"items": {
													"anyOf": [
														{
															"description": "Origin DNS Server IPv4 Address",
															"type": "string",
															"format": "ipv4",
															"example": "203.0.113.1"
														},
														{
															"description": "Origin DNS Server IPv6 Address",
															"type": "string",
															"format": "ipv6",
															"example": "2001:DB8:ab::CF"
														}
													]
												},
												"example": [
													"203.0.113.1",
													"203.0.113.254",
													"2001:DB8:AB::CF",
													"2001:DB8:CD::CF"
												]
											},
											"minimum_cache_ttl": {
												"description": "Minimum DNS Cache TTL",
												"type": "number",
												"minimum": 30,
												"maximum": 36000,
												"default": 60,
												"example": 60
											},
											"maximum_cache_ttl": {
												"description": "Maximum DNS Cache TTL",
												"type": "number",
												"minimum": 30,
												"maximum": 36000,
												"default": 900,
												"example": 900
											},
											"negative_cache_ttl": {
												"description": "Negative DNS Cache TTL",
												"type": "number",
												"minimum": 30,
												"maximum": 36000,
												"default": null,
												"example": 900,
												"nullable": true
											},
											"deprecate_any_requests": {
												"description": "Deprecate the response to ANY requests",
												"type": "boolean",
												"example": true
											},
											"ecs_fallback": {
												"description": "Forward client IP (resolver) subnet if no EDNS Client Subnet is sent",
												"type": "boolean",
												"example": false
											},
											"ratelimit": {
												"description": "Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).",
												"type": "number",
												"minimum": 100,
												"maximum": 1000000000,
												"default": null,
												"example": 600,
												"nullable": true
											},
											"attack_mitigation": {
												"type": "object",
												"description": "Attack mitigation settings",
												"properties": {
													"enabled": {
														"description": "When enabled, random-prefix attacks are automatically mitigated and the origin DNS servers protected.",
														"type": "boolean",
														"example": true
													},
													"only_when_origin_unhealthy": {
														"description": "Only mitigate attacks when origin servers seem unhealthy.",
														"type": "boolean",
														"default": true,
														"example": false
													}
												},
												"nullable": true
											},
											"modified_on": {
												"description": "Last modification of DNS Firewall cluster",
												"type": "string",
												"format": "date-time",
												"readOnly": true,
												"example": "2014-01-01T05:20:00.123450+00:00"
											}
										}
									}
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete DNS Firewall Cluster",
				"description": "Delete a configured DNS Firewall Cluster",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1dns_firewall~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1dns_firewall~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete DNS Firewall Cluster response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1dns_firewall~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/virtual_dns": {
			"get": {
				"summary": "List DNS Firewall Clusters",
				"description": "List configured DNS Firewall clusters for an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List DNS Firewall Clusters response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name",
															"origin_ips",
															"virtual_dns_ips",
															"minimum_cache_ttl",
															"maximum_cache_ttl",
															"deprecate_any_requests",
															"ecs_fallback",
															"modified_on"
														],
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"name": {
																"description": "DNS Firewall Cluster Name",
																"type": "string",
																"maxLength": 160,
																"example": "My Awesome DNS Firewall cluster"
															},
															"origin_ips": {
																"type": "array",
																"items": {
																	"anyOf": [
																		{
																			"description": "Origin DNS Server IPv4 Address",
																			"type": "string",
																			"format": "ipv4",
																			"example": "192.0.2.1"
																		},
																		{
																			"description": "Origin DNS Server IPv6 Address",
																			"type": "string",
																			"format": "ipv6",
																			"example": "2001:DB8:100::CF"
																		}
																	]
																},
																"example": [
																	"192.0.2.1",
																	"198.51.100.1",
																	"2001:DB8:100::CF"
																]
															},
															"virtual_dns_ips": {
																"type": "array",
																"items": {
																	"anyOf": [
																		{
																			"description": "Origin DNS Server IPv4 Address",
																			"type": "string",
																			"format": "ipv4",
																			"example": "203.0.113.1"
																		},
																		{
																			"description": "Origin DNS Server IPv6 Address",
																			"type": "string",
																			"format": "ipv6",
																			"example": "2001:DB8:ab::CF"
																		}
																	]
																},
																"example": [
																	"203.0.113.1",
																	"203.0.113.254",
																	"2001:DB8:AB::CF",
																	"2001:DB8:CD::CF"
																]
															},
															"minimum_cache_ttl": {
																"description": "Minimum DNS Cache TTL",
																"type": "number",
																"minimum": 30,
																"maximum": 36000,
																"default": 60,
																"example": 60
															},
															"maximum_cache_ttl": {
																"description": "Maximum DNS Cache TTL",
																"type": "number",
																"minimum": 30,
																"maximum": 36000,
																"default": 900,
																"example": 900
															},
															"negative_cache_ttl": {
																"description": "Negative DNS Cache TTL",
																"type": "number",
																"minimum": 30,
																"maximum": 36000,
																"default": 900,
																"example": 900,
																"nullable": true
															},
															"deprecate_any_requests": {
																"description": "Deprecate the response to ANY requests",
																"type": "boolean",
																"example": true
															},
															"ecs_fallback": {
																"description": "Forward client IP (resolver) subnet if no EDNS Client Subnet is sent",
																"type": "boolean",
																"example": false
															},
															"ratelimit": {
																"description": "Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).\nNotes: A ratelimit of 0 turns off the ratelimit. Otherwise the minimum is 100.",
																"type": "number",
																"maximum": 100000000,
																"example": 600
															},
															"modified_on": {
																"description": "Last modification of DNS Firewall cluster",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create DNS Firewall Cluster",
				"description": "Create a configured DNS Firewall Cluster",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1virtual_dns/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create DNS Firewall Cluster response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"required": [
														"id",
														"name",
														"origin_ips",
														"virtual_dns_ips",
														"minimum_cache_ttl",
														"maximum_cache_ttl",
														"deprecate_any_requests",
														"ecs_fallback",
														"modified_on"
													],
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
														},
														"name": {
															"description": "DNS Firewall Cluster Name",
															"type": "string",
															"maxLength": 160,
															"example": "My Awesome DNS Firewall cluster"
														},
														"origin_ips": {
															"type": "array",
															"items": {
																"anyOf": [
																	{
																		"description": "Origin DNS Server IPv4 Address",
																		"type": "string",
																		"format": "ipv4",
																		"example": "192.0.2.1"
																	},
																	{
																		"description": "Origin DNS Server IPv6 Address",
																		"type": "string",
																		"format": "ipv6",
																		"example": "2001:DB8:100::CF"
																	}
																]
															},
															"example": [
																"192.0.2.1",
																"198.51.100.1",
																"2001:DB8:100::CF"
															]
														},
														"virtual_dns_ips": {
															"type": "array",
															"items": {
																"anyOf": [
																	{
																		"description": "Origin DNS Server IPv4 Address",
																		"type": "string",
																		"format": "ipv4",
																		"example": "203.0.113.1"
																	},
																	{
																		"description": "Origin DNS Server IPv6 Address",
																		"type": "string",
																		"format": "ipv6",
																		"example": "2001:DB8:ab::CF"
																	}
																]
															},
															"example": [
																"203.0.113.1",
																"203.0.113.254",
																"2001:DB8:AB::CF",
																"2001:DB8:CD::CF"
															]
														},
														"minimum_cache_ttl": {
															"description": "Minimum DNS Cache TTL",
															"type": "number",
															"minimum": 30,
															"maximum": 36000,
															"default": 60,
															"example": 60
														},
														"maximum_cache_ttl": {
															"description": "Maximum DNS Cache TTL",
															"type": "number",
															"minimum": 30,
															"maximum": 36000,
															"default": 900,
															"example": 900
														},
														"negative_cache_ttl": {
															"description": "Negative DNS Cache TTL",
															"type": "number",
															"minimum": 30,
															"maximum": 36000,
															"default": 900,
															"example": 900,
															"nullable": true
														},
														"deprecate_any_requests": {
															"description": "Deprecate the response to ANY requests",
															"type": "boolean",
															"example": true
														},
														"ecs_fallback": {
															"description": "Forward client IP (resolver) subnet if no EDNS Client Subnet is sent",
															"type": "boolean",
															"example": false
														},
														"ratelimit": {
															"description": "Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).\nNotes: A ratelimit of 0 turns off the ratelimit. Otherwise the minimum is 100.",
															"type": "number",
															"maximum": 100000000,
															"example": 600
														},
														"modified_on": {
															"description": "Last modification of DNS Firewall cluster",
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"example": "2014-01-01T05:20:00.123450+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"origin_ips",
									"virtual_dns_ips"
								],
								"properties": {
									"name": {
										"description": "DNS Firewall Cluster Name",
										"type": "string",
										"maxLength": 160,
										"example": "My Awesome DNS Firewall cluster"
									},
									"origin_ips": {
										"type": "array",
										"items": {
											"anyOf": [
												{
													"description": "Origin DNS Server IPv4 Address",
													"type": "string",
													"format": "ipv4",
													"example": "192.0.2.1"
												},
												{
													"description": "Origin DNS Server IPv6 Address",
													"type": "string",
													"format": "ipv6",
													"example": "2001:DB8:100::CF"
												}
											]
										},
										"example": [
											"192.0.2.1",
											"198.51.100.1",
											"2001:DB8:100::CF"
										]
									},
									"minimum_cache_ttl": {
										"description": "Minimum DNS Cache TTL",
										"type": "number",
										"minimum": 30,
										"maximum": 36000,
										"default": 60,
										"example": 60
									},
									"maximum_cache_ttl": {
										"description": "Maximum DNS Cache TTL",
										"type": "number",
										"minimum": 30,
										"maximum": 36000,
										"default": 900,
										"example": 900
									},
									"negative_cache_ttl": {
										"description": "Negative DNS Cache TTL",
										"type": "number",
										"minimum": 30,
										"maximum": 36000,
										"default": 900,
										"example": 900,
										"nullable": true
									},
									"deprecate_any_requests": {
										"description": "Deprecate the response to ANY requests",
										"type": "boolean",
										"example": true
									},
									"ecs_fallback": {
										"description": "Forward client IP (resolver) subnet if no EDNS Client Subnet is sent",
										"type": "boolean",
										"example": false
									},
									"ratelimit": {
										"description": "Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).\nNotes: A ratelimit of 0 turns off the ratelimit. Otherwise the minimum is 100.",
										"type": "number",
										"maximum": 100000000,
										"example": 600
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/virtual_dns/{identifier}": {
			"get": {
				"summary": "DNS Firewall Cluster Details",
				"description": "Show a single configured DNS Firewall cluster for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "DNS Firewall Cluster Details response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1virtual_dns/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update DNS Firewall Cluster",
				"description": "Modify a DNS Firewall Cluster configuration",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1virtual_dns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1virtual_dns~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update DNS Firewall Cluster response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1virtual_dns/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"allOf": [
									{
										"type": "object",
										"required": [
											"id",
											"name",
											"origin_ips",
											"virtual_dns_ips",
											"minimum_cache_ttl",
											"maximum_cache_ttl",
											"deprecate_any_requests",
											"ecs_fallback",
											"modified_on"
										],
										"properties": {
											"id": {
												"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
											},
											"name": {
												"description": "DNS Firewall Cluster Name",
												"type": "string",
												"maxLength": 160,
												"example": "My Awesome DNS Firewall cluster"
											},
											"origin_ips": {
												"type": "array",
												"items": {
													"anyOf": [
														{
															"description": "Origin DNS Server IPv4 Address",
															"type": "string",
															"format": "ipv4",
															"example": "192.0.2.1"
														},
														{
															"description": "Origin DNS Server IPv6 Address",
															"type": "string",
															"format": "ipv6",
															"example": "2001:DB8:100::CF"
														}
													]
												},
												"example": [
													"192.0.2.1",
													"198.51.100.1",
													"2001:DB8:100::CF"
												]
											},
											"virtual_dns_ips": {
												"type": "array",
												"items": {
													"anyOf": [
														{
															"description": "Origin DNS Server IPv4 Address",
															"type": "string",
															"format": "ipv4",
															"example": "203.0.113.1"
														},
														{
															"description": "Origin DNS Server IPv6 Address",
															"type": "string",
															"format": "ipv6",
															"example": "2001:DB8:ab::CF"
														}
													]
												},
												"example": [
													"203.0.113.1",
													"203.0.113.254",
													"2001:DB8:AB::CF",
													"2001:DB8:CD::CF"
												]
											},
											"minimum_cache_ttl": {
												"description": "Minimum DNS Cache TTL",
												"type": "number",
												"minimum": 30,
												"maximum": 36000,
												"default": 60,
												"example": 60
											},
											"maximum_cache_ttl": {
												"description": "Maximum DNS Cache TTL",
												"type": "number",
												"minimum": 30,
												"maximum": 36000,
												"default": 900,
												"example": 900
											},
											"negative_cache_ttl": {
												"description": "Negative DNS Cache TTL",
												"type": "number",
												"minimum": 30,
												"maximum": 36000,
												"default": 900,
												"example": 900,
												"nullable": true
											},
											"deprecate_any_requests": {
												"description": "Deprecate the response to ANY requests",
												"type": "boolean",
												"example": true
											},
											"ecs_fallback": {
												"description": "Forward client IP (resolver) subnet if no EDNS Client Subnet is sent",
												"type": "boolean",
												"example": false
											},
											"ratelimit": {
												"description": "Ratelimit in queries per second per datacenter (applies to DNS queries sent to the origin nameservers configured on the cluster).\nNotes: A ratelimit of 0 turns off the ratelimit. Otherwise the minimum is 100.",
												"type": "number",
												"maximum": 100000000,
												"example": 600
											},
											"modified_on": {
												"description": "Last modification of DNS Firewall cluster",
												"type": "string",
												"format": "date-time",
												"readOnly": true,
												"example": "2014-01-01T05:20:00.123450+00:00"
											}
										}
									}
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete DNS Firewall Cluster",
				"description": "Delete a configured DNS Firewall Cluster",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1virtual_dns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1virtual_dns~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete DNS Firewall Cluster response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1virtual_dns~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/dns_firewall/{identifier}/dns_analytics/report": {
			"get": {
				"summary": "Table",
				"description": "Retrieves a list of summarised aggregate metrics over a given time period.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Table response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1dns_analytics~1report/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/dns_firewall/{identifier}/dns_analytics/report/bytime": {
			"get": {
				"summary": "By Time",
				"description": "Retrieves a list of aggregate metrics grouped by time interval.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "By Time response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1dns_analytics~1report/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/virtual_dns/{identifier}/dns_analytics/report": {
			"get": {
				"summary": "Table",
				"description": "Retrieves a list of summarised aggregate metrics over a given time period.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Table response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1dns_analytics~1report/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/virtual_dns/{identifier}/dns_analytics/report/bytime": {
			"get": {
				"summary": "By Time",
				"description": "Retrieves a list of aggregate metrics grouped by time interval.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "By Time response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1dns_analytics~1report/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{identifier}/secondary_dns/incoming": {
			"get": {
				"summary": "Secondary Zone Configuration Details",
				"description": "Get secondary zone configuration for incoming zone transfers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "269d8f4853475ca241c4e730be286b20"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Secondary Zone Configuration Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/parameters/0/schema"
														},
														"name": {
															"type": "string",
															"description": "Zone name",
															"example": "www.example.com."
														},
														"peers": {
															"type": "array",
															"description": "A list of peer tags",
															"example": [
																"23ff594956f20c2a721606e94745a8aa",
																"00920f38ce07c2e2f4df50b1f61d4194"
															],
															"items": {}
														},
														"auto_refresh_seconds": {
															"type": "number",
															"description": "How often should a secondary zone auto refresh regardless of DNS NOTIFY.\nNot applicable for primary zones.",
															"example": 86400
														},
														"soa_serial": {
															"type": "number",
															"description": "The serial number of the SOA for the given zone",
															"example": 2019102400
														},
														"created_time": {
															"type": "string",
															"description": "The time for a specific event",
															"example": "2019-10-24T17:09:42.883908+01:00"
														},
														"checked_time": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/created_time"
														},
														"modified_time": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/created_time"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Secondary Zone Configuration",
				"description": "Update secondary zone configuration for incoming zone transfers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Secondary Zone Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id",
									"name",
									"peers",
									"auto_refresh_seconds"
								],
								"properties": {
									"id": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/parameters/0/schema"
									},
									"name": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/name"
									},
									"peers": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/peers"
									},
									"auto_refresh_seconds": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/auto_refresh_seconds"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Secondary Zone Configuration",
				"description": "Delete secondary zone configuration for incoming zone transfers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Secondary Zone Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"post": {
				"summary": "Create Secondary Zone Configuration",
				"description": "Create secondary zone configuration for incoming zone transfers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Secondary Zone Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1incoming/put/requestBody/content/application~1json/schema"
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/secondary_dns/force_axfr": {
			"post": {
				"summary": "Force AXFR",
				"description": "Sends AXFR zone transfer request to primary nameserver(s).",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "269d8f4853475ca241c4e730be286b20"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Force AXFR response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"description": "When force_axfr query parameter is set to true, the response is a simple string",
													"type": "string",
													"example": "OK"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/secondary_dns/outgoing": {
			"get": {
				"summary": "Primary Zone Configuration Details",
				"description": "Get primary zone configuration for outgoing zone transfers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "269d8f4853475ca241c4e730be286b20"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Primary Zone Configuration Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/parameters/0/schema"
														},
														"name": {
															"type": "string",
															"description": "Zone name",
															"example": "www.example.com."
														},
														"peers": {
															"type": "array",
															"description": "A list of peer tags",
															"example": [
																"23ff594956f20c2a721606e94745a8aa",
																"00920f38ce07c2e2f4df50b1f61d4194"
															],
															"items": {}
														},
														"soa_serial": {
															"type": "number",
															"description": "The serial number of the SOA for the given zone",
															"example": 2019102400
														},
														"created_time": {
															"type": "string",
															"description": "The time for a specific event",
															"example": "2019-10-24T17:09:42.883908+01:00"
														},
														"checked_time": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/created_time"
														},
														"last_transferred_time": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/created_time"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Primary Zone Configuration",
				"description": "Update primary zone configuration for outgoing zone transfers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Primary Zone Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id",
									"name",
									"peers"
								],
								"properties": {
									"id": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/parameters/0/schema"
									},
									"name": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/name"
									},
									"peers": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/peers"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Primary Zone Configuration",
				"description": "Delete primary zone configuration for outgoing zone transfers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Primary Zone Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"post": {
				"summary": "Create Primary Zone Configuration",
				"description": "Create primary zone configuration for outgoing zone transfers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Primary Zone Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1secondary_dns~1outgoing/put/requestBody/content/application~1json/schema"
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/secondary_dns/outgoing/enable": {
			"post": {
				"summary": "Enable Outgoing Zone Transfers",
				"description": "Enable outgoing zone transfers for primary zone",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "269d8f4853475ca241c4e730be286b20"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Enable Outgoing Zone Transfers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"description": "The zone transfer status of a primary zone",
													"type": "string",
													"example": "Enabled"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/secondary_dns/outgoing/disable": {
			"post": {
				"summary": "Disable Outgoing Zone Transfers",
				"description": "Disable outgoing zone transfers for primary zone and clears IXFR backlog of primary zone.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "269d8f4853475ca241c4e730be286b20"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Disable Outgoing Zone Transfers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"description": "The zone transfer status of a primary zone",
													"type": "string",
													"example": "Disabled"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/secondary_dns/outgoing/status": {
			"get": {
				"summary": "Get Outgoing Zone Transfer Status",
				"description": "Get primary zone transfer status",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "269d8f4853475ca241c4e730be286b20"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Outgoing Zone Transfer Status response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"description": "The zone transfer status of a primary zone",
													"type": "string",
													"example": "Enabled"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{identifier}/secondary_dns/outgoing/force_notify": {
			"post": {
				"summary": "Force DNS NOTIFY",
				"description": "Notifies the secondary nameserver(s) and clears IXFR backlog of primary zone.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "269d8f4853475ca241c4e730be286b20"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Force DNS NOTIFY response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"description": "When force_notify query parameter is set to true, the response is a simple string",
													"type": "string",
													"example": "OK"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/secondary_dns/tsigs": {
			"get": {
				"summary": "List TSIGs",
				"description": "List TSIGs",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List TSIGs response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name",
															"secret",
															"algo"
														],
														"properties": {
															"id": {
																"example": "69cd1e104af3e6ed3cb344f263fd0d5a"
															},
															"name": {
																"type": "string",
																"description": "TSIG key name",
																"example": "tsig.customer.cf."
															},
															"secret": {
																"type": "string",
																"description": "TSIG secret. ",
																"example": "caf79a7804b04337c9c66ccd7bef9190a1e1679b5dd03d8aa10f7ad45e1a9dab92b417896c15d4d007c7c14194538d2a5d0feffdecc5a7f0e1c570cfa700837c"
															},
															"algo": {
																"type": "string",
																"description": "TSIG algorithm",
																"example": "hmac-sha512."
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create TSIG",
				"description": "Create TSIG",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create TSIG response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"algo"
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/secondary_dns/tsigs/{identifier}": {
			"get": {
				"summary": "TSIG Details",
				"description": "Get TSIG",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "69cd1e104af3e6ed3cb344f263fd0d5a"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "TSIG Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update TSIG",
				"description": "Modify TSIG",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update TSIG response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id",
									"name",
									"secret",
									"algo"
								],
								"properties": {
									"id": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs~1%7Bidentifier%7D/get/parameters/0/schema"
									},
									"name": {
										"type": "string",
										"description": "TSIG key name",
										"example": "tsig.customer.cf."
									},
									"secret": {
										"type": "string",
										"description": "TSIG secret. ",
										"example": "caf79a7804b04337c9c66ccd7bef9190a1e1679b5dd03d8aa10f7ad45e1a9dab92b417896c15d4d007c7c14194538d2a5d0feffdecc5a7f0e1c570cfa700837c"
									},
									"algo": {
										"type": "string",
										"description": "TSIG algorithm",
										"example": "hmac-sha512."
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete TSIG",
				"description": "Delete TSIG",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete TSIG response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1tsigs~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/secondary_dns/peers": {
			"get": {
				"summary": "List Peers",
				"description": "List Peers",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Peers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name"
														],
														"properties": {
															"id": {
																"example": "23ff594956f20c2a721606e94745a8aa"
															},
															"ip": {
																"type": "string",
																"description": "IPv4/IPv6 address of primary or secondary nameserver, depending on what zone this peer is linked to. For primary zones this IP defines the IP of the secondary nameserver Cloudflare will NOTIFY upon zone changes. For secondary zones this IP defines the IP of the primary nameserver Cloudflare will send AXFR/IXFR requests to.",
																"example": "192.0.2.53"
															},
															"port": {
																"type": "number",
																"description": "DNS port of primary or secondary nameserver, depending on what zone this peer is linked to.",
																"example": 53
															},
															"ixfr_enable": {
																"type": "boolean",
																"description": "Enable IXFR transfer protocol, default is AXFR. Only applicable to secondary zones.",
																"example": false
															},
															"tsig_id": {
																"type": "string",
																"description": "TSIG authentication will be used for zone transfer if configured",
																"example": "69cd1e104af3e6ed3cb344f263fd0d5a"
															},
															"name": {
																"type": "string",
																"description": "The name of the peer",
																"example": "my-peer-1"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Peer",
				"description": "Create Peer",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Peer response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name"
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/secondary_dns/peers/{identifier}": {
			"get": {
				"summary": "Peer Details",
				"description": "Get Peer",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "23ff594956f20c2a721606e94745a8aa"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Peer Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Peer",
				"description": "Modify Peer",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Peer response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id",
									"name"
								],
								"properties": {
									"id": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers~1%7Bidentifier%7D/get/parameters/0/schema"
									},
									"ip": {
										"type": "string",
										"description": "IPv4/IPv6 address of primary or secondary nameserver, depending on what zone this peer is linked to. For primary zones this IP defines the IP of the secondary nameserver Cloudflare will NOTIFY upon zone changes. For secondary zones this IP defines the IP of the primary nameserver Cloudflare will send AXFR/IXFR requests to.",
										"example": "192.0.2.53"
									},
									"port": {
										"type": "number",
										"description": "DNS port of primary or secondary nameserver, depending on what zone this peer is linked to.",
										"example": 53
									},
									"ixfr_enable": {
										"type": "boolean",
										"description": "Enable IXFR transfer protocol, default is AXFR. Only applicable to secondary zones.",
										"example": false
									},
									"tsig_id": {
										"type": "string",
										"description": "TSIG authentication will be used for zone transfer if configured",
										"example": "69cd1e104af3e6ed3cb344f263fd0d5a"
									},
									"name": {
										"type": "string",
										"description": "The name of the peer",
										"example": "my-peer-1"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Peer",
				"description": "Delete Peer",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Peer response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1peers~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/secondary_dns/acls": {
			"get": {
				"summary": "List ACLs",
				"description": "List ACLs",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List ACLs response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name",
															"ip_range"
														],
														"properties": {
															"id": {
																"example": "23ff594956f20c2a721606e94745a8aa"
															},
															"ip_range": {
																"type": "string",
																"description": "Allowed IPv4/IPv6 address range of primary or secondary nameservers. This will be applied for the entire account. The IP range is used to allow additional NOTIFY IPs for secondary zones and IPs Cloudflare allows AXFR/IXFR requests from for primary zones. CIDRs are limited to a maximum of /24 for IPv4 and /64 for IPv6 respectively.",
																"example": "192.0.2.53/28"
															},
															"name": {
																"type": "string",
																"description": "The name of the acl",
																"example": "my-acl-1"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create ACL",
				"description": "Create ACL",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create ACL response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"ip_range"
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/secondary_dns/acls/{identifier}": {
			"get": {
				"summary": "ACL Details",
				"description": "Get ACL",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "23ff594956f20c2a721606e94745a8aa"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "ACL Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update ACL",
				"description": "Modify ACL",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update ACL response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id",
									"name",
									"ip_range"
								],
								"properties": {
									"id": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls~1%7Bidentifier%7D/get/parameters/0/schema"
									},
									"ip_range": {
										"type": "string",
										"description": "Allowed IPv4/IPv6 address range of primary or secondary nameservers. This will be applied for the entire account. The IP range is used to allow additional NOTIFY IPs for secondary zones and IPs Cloudflare allows AXFR/IXFR requests from for primary zones. CIDRs are limited to a maximum of /24 for IPv4 and /64 for IPv6 respectively.",
										"example": "192.0.2.53/28"
									},
									"name": {
										"type": "string",
										"description": "The name of the acl",
										"example": "my-acl-1"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete ACL",
				"description": "Delete ACL",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete ACL response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1secondary_dns~1acls~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/ips": {
			"get": {
				"summary": "Cloudflare IP Details",
				"description": "Get Cloudflare IPs",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Cloudflare IP Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"ipv4_cidrs": {
															"description": "List of Cloudflare IPv4 CIDR addresses",
															"type": "array",
															"items": {
																"type": "string",
																"description": "IPv4 CIDR",
																"example": "199.27.128.0/21"
															}
														},
														"ipv6_cidrs": {
															"description": "List of Cloudflare IPv6 CIDR addresses",
															"type": "array",
															"items": {
																"type": "string",
																"description": "IPv6 CIDR",
																"example": "2400:cb00::/32"
															}
														},
														"etag": {
															"type": "string",
															"description": "A digest of the IP data. Useful for determining if the data has changed",
															"example": "a8e453d9d129a3769407127936edfdb0"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/custom_ns": {
			"get": {
				"summary": "List Account Custom Nameservers",
				"description": "List an account's custom nameservers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b59"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Account Custom Nameservers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"title": "Custom NS",
														"description": "A single account custom nameserver",
														"required": [
															"dns_records",
															"ns_name",
															"status",
															"zone_tag"
														],
														"properties": {
															"dns_records": {
																"type": "array",
																"description": "A and AAAA records associated with the nameserver",
																"items": {
																	"properties": {
																		"type": {
																			"type": "string",
																			"description": "DNS record type",
																			"enum": [
																				"A",
																				"AAAA"
																			],
																			"example": "A"
																		},
																		"value": {
																			"type": "string",
																			"description": "DNS record contents (an IPv4 or IPv6 address)",
																			"example": "1.1.1.1"
																		}
																	}
																}
															},
															"ns_name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1custom_ns/post/requestBody/content/application~1json/schema/properties/ns_name"
															},
															"status": {
																"type": "string",
																"description": "Verification status of the nameserver",
																"enum": [
																	"moved",
																	"pending",
																	"verified"
																],
																"example": "verified"
															},
															"zone_tag": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Add Account Custom Nameserver",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1custom_ns/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add Account Custom Nameserver response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1custom_ns/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"title": "Custom NS Input",
								"required": [
									"ns_name"
								],
								"properties": {
									"ns_name": {
										"type": "string",
										"description": "The FQDN of the name server",
										"format": "hostname",
										"example": "ns1.example.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/custom_ns/verify": {
			"post": {
				"summary": "Verify Account Custom Nameserver Glue Records",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b59"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Verify Account Custom Nameserver Glue Records response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"title": "Custom NS",
														"description": "A single account custom nameserver",
														"required": [
															"dns_records",
															"ns_name",
															"status",
															"zone_tag"
														],
														"properties": {
															"dns_records": {
																"type": "array",
																"description": "A and AAAA records associated with the nameserver",
																"items": {
																	"properties": {
																		"type": {
																			"type": "string",
																			"description": "DNS record type",
																			"enum": [
																				"A",
																				"AAAA"
																			],
																			"example": "A"
																		},
																		"value": {
																			"type": "string",
																			"description": "DNS record contents (an IPv4 or IPv6 address)",
																			"example": "1.1.1.1"
																		}
																	}
																}
															},
															"ns_name": {
																"type": "string",
																"description": "The FQDN of the name server",
																"format": "hostname",
																"example": "ns1.example.com"
															},
															"status": {
																"type": "string",
																"description": "Verification status of the nameserver",
																"enum": [
																	"moved",
																	"pending",
																	"verified"
																],
																"example": "verified"
															},
															"zone_tag": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/custom_ns/{ns_name}": {
			"delete": {
				"summary": "Delete Account Custom Nameserver",
				"parameters": [
					{
						"name": "ns_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"description": "The FQDN of the name server",
							"format": "hostname",
							"example": "ns1.example.com"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b59"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Account Custom Nameserver response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"maxItems": 0,
													"items": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/custom_ns/availability": {
			"get": {
				"summary": "Get Eligible Zones for Account Custom Nameservers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b59"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Eligible Zones for Account Custom Nameservers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "string",
														"description": "Name of zone based on which account custom nameservers can be created. For example, if example.com is returned, then ns1.example.com can be used as an account custom nameserver",
														"format": "hostname",
														"readOnly": true,
														"example": "example.com"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/custom_ns": {
			"get": {
				"summary": "Get Account Custom Nameserver Related Zone Metadata",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Account Custom Nameserver Related Zone Metadata response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_ns/put/requestBody/content/application~1json/schema"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:read",
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Set Account Custom Nameserver Related Zone Metadata",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_ns/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Set Account Custom Nameserver Related Zone Metadata response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"maxItems": 0,
													"items": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#dns_records:edit",
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"enabled": {
										"type": "boolean",
										"description": "Whether zone uses account-level custom nameservers",
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/custom_pages": {
			"get": {
				"summary": "Get custom pages",
				"description": "Fetches all the custom pages at the zone level.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get custom pages response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/custom_pages/{identifier}": {
			"get": {
				"summary": "Get a custom page",
				"description": "Fetches the details of a custom page.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"enum": [
								"basic_challenge",
								"managed_challenge",
								"waf_block",
								"ratelimit_block",
								"country_challenge",
								"ip_block",
								"under_attack",
								"500_errors",
								"1000_errors"
							],
							"readOnly": true,
							"description": "The name of the custom page type.",
							"example": "basic_challenge"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a custom page response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a custom page",
				"description": "Updates the configuration of an existing custom page.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a custom page response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"url",
									"state"
								],
								"properties": {
									"url": {
										"type": "string",
										"format": "uri",
										"description": "The URL associated with the custom page.",
										"default": "",
										"example": "http://www.example.com"
									},
									"state": {
										"type": "string",
										"enum": [
											"default",
											"customized"
										],
										"description": "The custom page state.",
										"example": "default"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/custom_certificates": {
			"get": {
				"summary": "List SSL Configurations",
				"description": "List, search, and filter all of your custom SSL certificates. The higher priority will break ties across overlapping 'legacy_custom' certificates, but 'legacy_custom' certificates will always supercede 'sni_custom' certificates.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List SSL Configurations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"hosts",
															"issuer",
															"signature",
															"status",
															"bundle_method",
															"zone_id",
															"uploaded_on",
															"modified_on",
															"expires_on",
															"priority"
														],
														"properties": {
															"id": {
																"description": "Custom certificate identifier tag",
																"type": "string",
																"maxLength": 36,
																"readOnly": true,
																"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
															},
															"hosts": {
																"type": "array",
																"items": {
																	"type": "string",
																	"description": "The valid hosts for the certificates",
																	"maxLength": 253,
																	"readOnly": true,
																	"example": "example.com"
																}
															},
															"issuer": {
																"type": "string",
																"readOnly": true,
																"description": "The certificate authority that issued the certificate",
																"example": "GlobalSign"
															},
															"signature": {
																"type": "string",
																"readOnly": true,
																"description": "The type of hash used for the certificate",
																"example": "SHA256WithRSA"
															},
															"status": {
																"enum": [
																	"active",
																	"expired",
																	"deleted",
																	"pending",
																	"initializing"
																],
																"readOnly": true,
																"description": "Status of the zone's custom SSL",
																"example": "active"
															},
															"bundle_method": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates/post/requestBody/content/application~1json/schema/properties/bundle_method"
															},
															"geo_restrictions": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates/post/requestBody/content/application~1json/schema/properties/geo_restrictions"
															},
															"zone_id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates/get/parameters/0/schema"
															},
															"uploaded_on": {
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"description": "When the certificate was uploaded to Cloudflare",
																"example": "2014-01-01T05:20:00+00:00"
															},
															"modified_on": {
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"description": "When the certificate was last modified",
																"example": "2014-01-01T05:20:00+00:00"
															},
															"expires_on": {
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"description": "When the certificate from the authority expires",
																"example": "2016-01-01T05:20:00+00:00"
															},
															"priority": {
																"type": "number",
																"description": "The order/priority in which the certificate will be used in a request. The higher priority will break ties across overlapping 'legacy_custom' certificates, but 'legacy_custom' certificates will always supercede 'sni_custom' certificates.",
																"default": 20,
																"example": 1
															},
															"keyless_server": {
																"type": "object",
																"allOf": [
																	{
																		"type": "object",
																		"required": [
																			"id",
																			"name",
																			"host",
																			"port",
																			"status",
																			"enabled",
																			"permissions",
																			"created_on",
																			"modified_on"
																		],
																		"properties": {
																			"id": {
																				"description": "Keyless certificate identifier tag",
																				"type": "string",
																				"maxLength": 32,
																				"readOnly": true,
																				"example": "4d2844d2ce78891c34d0b6c0535a291e"
																			},
																			"name": {
																				"type": "string",
																				"description": "The keyless SSL name",
																				"maxLength": 180,
																				"readOnly": true,
																				"example": "example.com Keyless SSL"
																			},
																			"host": {
																				"type": "string",
																				"description": "The keyless SSL name",
																				"maxLength": 253,
																				"example": "example.com",
																				"format": "hostname"
																			},
																			"port": {
																				"type": "number",
																				"description": "The keyless SSL port used to commmunicate between Cloudflare and the client's Keyless SSL server",
																				"maxLength": 65535,
																				"default": 24008,
																				"example": 24008
																			},
																			"status": {
																				"type": "string",
																				"enum": [
																					"active",
																					"deleted"
																				],
																				"description": "Status of the Keyless SSL",
																				"readOnly": true,
																				"example": "active"
																			},
																			"enabled": {
																				"type": "boolean",
																				"description": "Whether or not the Keyless SSL is on or off",
																				"readOnly": true,
																				"example": false
																			},
																			"permissions": {
																				"description": "Available permissions for the Keyless SSL for the current user requesting the item",
																				"readOnly": true,
																				"type": "array",
																				"example": [
																					"#ssl:read",
																					"#ssl:edit"
																				],
																				"items": {}
																			},
																			"created_on": {
																				"readOnly": true,
																				"type": "string",
																				"format": "date-time",
																				"example": "2014-01-01T05:20:00+00:00",
																				"description": "When the Keyless SSL was created"
																			},
																			"modified_on": {
																				"readOnly": true,
																				"type": "string",
																				"format": "date-time",
																				"example": "2014-01-01T05:20:00+00:00",
																				"description": "When the Keyless SSL was last modified"
																			}
																		}
																	}
																]
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create SSL Configuration",
				"description": "Upload a new SSL certificate for a zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create SSL Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"certificate",
									"private_key"
								],
								"properties": {
									"certificate": {
										"type": "string",
										"description": "The zone's SSL certificate or certificate and the intermediate(s)",
										"example": "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\nMQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\nCGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\nKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\ndZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\nizNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\nGKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\nBAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\nMlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\nSvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\nYbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n-----END CERTIFICATE-----\n"
									},
									"private_key": {
										"type": "string",
										"description": "The zone's private key",
										"example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\ndtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\nabIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\ntnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\nFxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\newooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\nHBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\naxiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n+ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n+j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\nKLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n/WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\niacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\nN2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\nVAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\nvULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\nlySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\nmEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\ndFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\nPG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\nfhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\nqu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\nlv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n-----END RSA PRIVATE KEY-----\n"
									},
									"bundle_method": {
										"type": "string",
										"enum": [
											"ubiquitous",
											"optimal",
											"force"
										],
										"description": "A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.",
										"example": "ubiquitous",
										"default": "ubiquitous"
									},
									"geo_restrictions": {
										"type": "object",
										"properties": {
											"label": {
												"example": "us",
												"enum": [
													"us",
													"eu",
													"highest_security"
												]
											}
										},
										"description": "Specify the region where your private key can be held locally for optimal TLS performance. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Options allow distribution to only to U.S. data centers, only to E.U. data centers, or only to highest security data centers. Default distribution is to all Cloudflare datacenters, for optimal performance."
									},
									"type": {
										"type": "string",
										"enum": [
											"legacy_custom",
											"sni_custom"
										],
										"description": "The type 'legacy_custom' enables support for legacy clients which do not include SNI in the TLS handshake.",
										"example": "sni_custom",
										"default": "legacy_custom"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/custom_certificates/{identifier}": {
			"get": {
				"summary": "SSL Configuration Details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Custom certificate identifier tag",
							"type": "string",
							"maxLength": 36,
							"readOnly": true,
							"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SSL Configuration Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit SSL Configuration",
				"description": "Upload a new private key and/or PEM/CRT for the SSL certificate. Note: PATCHing a configuration for sni_custom certificates will result in a new resource id being returned, and the previous one being deleted.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit SSL Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"private_key": {
										"type": "string",
										"description": "The zone's private key",
										"example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\ndtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\nabIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\ntnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\nFxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\newooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\nHBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\naxiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n+ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n+j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\nKLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n/WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\niacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\nN2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\nVAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\nvULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\nlySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\nmEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\ndFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\nPG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\nfhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\nqu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\nlv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n-----END RSA PRIVATE KEY-----\n"
									},
									"certificate": {
										"type": "string",
										"description": "The zone's SSL certificate or certificate and the intermediate(s)",
										"example": "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\nMQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\nCGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\nKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\ndZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\nizNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\nGKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\nBAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\nMlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\nSvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\nYbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n-----END CERTIFICATE-----\n"
									},
									"bundle_method": {
										"type": "string",
										"enum": [
											"ubiquitous",
											"optimal",
											"force"
										],
										"description": "A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.",
										"example": "ubiquitous",
										"default": "ubiquitous"
									},
									"geo_restrictions": {
										"type": "object",
										"properties": {
											"label": {
												"example": "us",
												"enum": [
													"us",
													"eu",
													"highest_security"
												]
											}
										},
										"description": "Specify the region where your private key can be held locally for optimal TLS performance. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Options allow distribution to only to U.S. data centers, only to E.U. data centers, or only to highest security data centers. Default distribution is to all Cloudflare datacenters, for optimal performance."
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete SSL Configuration",
				"description": "Remove a SSL certificate from a zone.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete SSL Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/custom_certificates/prioritize": {
			"put": {
				"summary": "Re-prioritize SSL Certificates",
				"description": "If a zone has multiple SSL certificates, you can set the order in which they should be used during a request. The higher priority will break ties across overlapping 'legacy_custom' certificates.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Re-prioritize SSL Certificates response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"hosts",
															"issuer",
															"signature",
															"status",
															"bundle_method",
															"zone_id",
															"uploaded_on",
															"modified_on",
															"expires_on",
															"priority"
														],
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1prioritize/put/requestBody/content/application~1json/schema/properties/certificates/items/properties/id"
															},
															"hosts": {
																"type": "array",
																"items": {
																	"type": "string",
																	"description": "The valid hosts for the certificates",
																	"maxLength": 253,
																	"readOnly": true,
																	"example": "example.com"
																}
															},
															"issuer": {
																"type": "string",
																"readOnly": true,
																"description": "The certificate authority that issued the certificate",
																"example": "GlobalSign"
															},
															"signature": {
																"type": "string",
																"readOnly": true,
																"description": "The type of hash used for the certificate",
																"example": "SHA256WithRSA"
															},
															"status": {
																"enum": [
																	"active",
																	"expired",
																	"deleted",
																	"pending",
																	"initializing"
																],
																"readOnly": true,
																"description": "Status of the zone's custom SSL",
																"example": "active"
															},
															"bundle_method": {
																"type": "string",
																"enum": [
																	"ubiquitous",
																	"optimal",
																	"force"
																],
																"description": "A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.",
																"example": "ubiquitous",
																"default": "ubiquitous"
															},
															"geo_restrictions": {
																"type": "object",
																"properties": {
																	"label": {
																		"example": "us",
																		"enum": [
																			"us",
																			"eu",
																			"highest_security"
																		]
																	}
																},
																"description": "Specify the region where your private key can be held locally for optimal TLS performance. HTTPS connections to any excluded data center will still be fully encrypted, but will incur some latency while Keyless SSL is used to complete the handshake with the nearest allowed data center. Options allow distribution to only to U.S. data centers, only to E.U. data centers, or only to highest security data centers. Default distribution is to all Cloudflare datacenters, for optimal performance."
															},
															"zone_id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1prioritize/put/parameters/0/schema"
															},
															"uploaded_on": {
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"description": "When the certificate was uploaded to Cloudflare",
																"example": "2014-01-01T05:20:00+00:00"
															},
															"modified_on": {
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"description": "When the certificate was last modified",
																"example": "2014-01-01T05:20:00+00:00"
															},
															"expires_on": {
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"description": "When the certificate from the authority expires",
																"example": "2016-01-01T05:20:00+00:00"
															},
															"priority": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates~1prioritize/put/requestBody/content/application~1json/schema/properties/certificates/items/properties/priority"
															},
															"keyless_server": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/keyless_server"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"certificates"
								],
								"properties": {
									"certificates": {
										"type": "array",
										"description": "Array of ordered certificates.",
										"example": [
											{
												"id": "5a7805061c76ada191ed06f989cc3dac",
												"priority": 2
											},
											{
												"id": "9a7806061c88ada191ed06f989cc3dac",
												"priority": 1
											}
										],
										"items": {
											"type": "object",
											"properties": {
												"id": {
													"description": "Custom certificate identifier tag",
													"type": "string",
													"maxLength": 36,
													"readOnly": true,
													"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
												},
												"priority": {
													"type": "number",
													"description": "The order/priority in which the certificate will be used in a request. The higher priority will break ties across overlapping 'legacy_custom' certificates, but 'legacy_custom' certificates will always supercede 'sni_custom' certificates.",
													"default": 20,
													"example": 1
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/custom_hostnames": {
			"get": {
				"summary": "List Custom Hostnames",
				"description": "List, search, sort, and filter all of your custom hostnames",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Custom Hostnames response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																	},
																	"hostname": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames/post/requestBody/content/application~1json/schema/properties/hostname"
																	},
																	"ssl": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/ssl"
																	},
																	"custom_metadata": {
																		"type": "object",
																		"description": "These are per-hostname (customer) settings.",
																		"anyOf": [
																			{
																				"type": "object",
																				"properties": {
																					"key": {
																						"description": "Unique metadata for this hostname",
																						"type": "string",
																						"example": "value"
																					}
																				}
																			}
																		]
																	},
																	"custom_origin_server": {
																		"type": "string",
																		"description": "a valid hostname that’s been added to your DNS zone as an A, AAAA, or CNAME record.",
																		"example": "origin2.example.com"
																	},
																	"custom_origin_sni": {
																		"type": "string",
																		"description": "A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string ':request_host_header:' which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.",
																		"example": "sni.example.com"
																	},
																	"status": {
																		"enum": [
																			"pending",
																			"active",
																			"moved",
																			"deleted"
																		],
																		"description": "Status of the hostname's activation.",
																		"example": "pending"
																	},
																	"verification_errors": {
																		"type": "array",
																		"description": "These are errors that were encountered while trying to activate a hostname.",
																		"example": [
																			"None of the A or AAAA records are owned by this account and the pre-generated ownership verification token was not found."
																		],
																		"items": {}
																	},
																	"ownership_verification": {
																		"type": "object",
																		"description": "This is a record which can be placed to activate a hostname.",
																		"oneOf": [
																			{
																				"type": "object",
																				"properties": {
																					"type": {
																						"enum": [
																							"txt"
																						],
																						"description": "DNS Record type",
																						"example": "txt"
																					},
																					"name": {
																						"type": "string",
																						"description": "DNS Name for record.",
																						"example": "_cf-custom-hostname.app.example.com"
																					},
																					"value": {
																						"type": "string",
																						"description": "Content for the record.",
																						"example": "5cc07c04-ea62-4a5a-95f0-419334a875a4"
																					}
																				}
																			}
																		]
																	},
																	"ownership_verification_http": {
																		"type": "object",
																		"description": "This presents the token to be served by the given http url to activate a hostname.",
																		"oneOf": [
																			{
																				"type": "object",
																				"properties": {
																					"http_url": {
																						"type": "string",
																						"description": "The HTTP URL that will be checked during custom hostname verification and where the customer should host the token.",
																						"example": "http://custom.test.com/.well-known/cf-custom-hostname-challenge/0d89c70d-ad9f-4843-b99f-6cc0252067e9"
																					},
																					"http_body": {
																						"type": "string",
																						"description": "Token to be served.",
																						"example": "5cc07c04-ea62-4a5a-95f0-419334a875a4"
																					}
																				}
																			}
																		]
																	},
																	"created_at": {
																		"type": "string",
																		"format": "date-time",
																		"description": "This is the time the hostname was created.",
																		"example": "2020-02-06T18:11:23.531995+00:00"
																	}
																}
															}
														],
														"required": [
															"id",
															"hostname",
															"ssl"
														],
														"properties": {
															"id": {
																"description": "Custom hostname identifier tag",
																"type": "string",
																"minLength": 36,
																"maxLength": 36,
																"readOnly": true,
																"example": "0d89c70d-ad9f-4843-b99f-6cc0252067e9"
															},
															"hostname": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames/post/requestBody/content/application~1json/schema/properties/hostname"
															},
															"ssl": {
																"type": "object",
																"description": "SSL properties for the custom hostname",
																"oneOf": [
																	{
																		"type": "object",
																		"properties": {
																			"id": {
																				"description": "Custom hostname SSL identifier tag",
																				"type": "string",
																				"minLength": 36,
																				"maxLength": 36,
																				"example": "0d89c70d-ad9f-4843-b99f-6cc0252067e9"
																			},
																			"status": {
																				"enum": [
																					"initializing",
																					"pending_validation",
																					"pending_issuance",
																					"pending_deployment",
																					"active",
																					"pending_deletion",
																					"deleted"
																				],
																				"readOnly": true,
																				"description": "Status of the hostname's SSL certificates",
																				"example": "pending_validation"
																			},
																			"method": {
																				"enum": [
																					"http",
																					"txt",
																					"email"
																				],
																				"readOnly": false,
																				"description": "Domain control validation (DCV) method used for this hostname.",
																				"example": "txt"
																			},
																			"type": {
																				"enum": [
																					"dv"
																				],
																				"readOnly": true,
																				"description": "Level of validation to be used for this hostname. Domain validation (dv) must be used.",
																				"example": "dv"
																			},
																			"validation_records": {
																				"type": "array",
																				"items": {
																					"description": "Certificate's required validation record",
																					"type": "object",
																					"properties": {
																						"txt_name": {
																							"type": "string",
																							"description": "The hostname that the certificate authority (CA) will check for a TXT record during domain validation ",
																							"example": "_acme-challenge.app.example.com"
																						},
																						"txt_value": {
																							"type": "string",
																							"description": "The TXT record that the certificate authority (CA) will check during domain validation.",
																							"example": "810b7d5f01154524b961ba0cd578acc2"
																						},
																						"http_url": {
																							"type": "string",
																							"description": "The url that will be checked during domain validation.",
																							"example": "http://app.example.com/.well-known/pki-validation/ca3-da12a1c25e7b48cf80408c6c1763b8a2.txt"
																						},
																						"http_body": {
																							"type": "string",
																							"description": "The content that the certificate authority (CA) will expect to find at the http_url during the domain validation.",
																							"example": "ca3-574923932a82475cb8592200f1a2a23d"
																						},
																						"emails": {
																							"type": "array",
																							"description": "The set of email addresses that the certificate authority (CA) will use to complete domain validation",
																							"example": [
																								"administrator@example.com",
																								"webmaster@example.com"
																							],
																							"items": {}
																						}
																					}
																				}
																			},
																			"validation_errors": {
																				"type": "array",
																				"description": "Domain validation errors that have been received by the certificate authority (CA).",
																				"items": {
																					"type": "object",
																					"properties": {
																						"message": {
																							"type": "string",
																							"description": "A domain validation error",
																							"example": "SERVFAIL looking up CAA for app.example.com"
																						}
																					}
																				}
																			},
																			"hosts": {
																				"type": "array",
																				"description": "A list of Hostnames on a custom uploaded certificate",
																				"example": [
																					"app.example.com",
																					"*.app.example.com"
																				],
																				"items": {}
																			},
																			"issuer": {
																				"type": "string",
																				"description": "The issuer on a custom uploaded certificate",
																				"example": "DigiCertInc"
																			},
																			"serial_number": {
																				"type": "string",
																				"description": "The serial number on a custom uploaded certificate.",
																				"example": "6743787633689793699141714808227354901"
																			},
																			"signature": {
																				"type": "string",
																				"description": "The signature on a custom uploaded certificate",
																				"example": "SHA256WithRSA"
																			},
																			"uploaded_on": {
																				"type": "string",
																				"format": "date-time",
																				"description": "The time the custom certificate was uploaded.",
																				"example": "2020-02-06T18:11:23.531995+00:00"
																			},
																			"expires_on": {
																				"type": "string",
																				"format": "date-time",
																				"description": "The time the custom certificate expires on.",
																				"example": "2021-02-06T18:11:23.531995+00:00"
																			},
																			"custom_csr_id": {
																				"type": "string",
																				"description": "The identifier for the Custom CSR that was used",
																				"example": "7b163417-1d2b-4c84-a38a-2fb7a0cd7752"
																			},
																			"settings": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames/post/requestBody/content/application~1json/schema/properties/ssl/oneOf/0/properties/settings"
																			},
																			"bundle_method": {
																				"type": "string",
																				"enum": [
																					"ubiquitous",
																					"optimal",
																					"force"
																				],
																				"description": "A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.",
																				"example": "ubiquitous",
																				"default": "ubiquitous"
																			},
																			"wildcard": {
																				"type": "boolean",
																				"description": "Indicates whether the certificate covers a wildcard.",
																				"example": false
																			},
																			"certificate_authority": {
																				"type": "string",
																				"enum": [
																					"digicert",
																					"google",
																					"lets_encrypt"
																				],
																				"description": "The Certificate Authority that has issued this certificate.",
																				"example": "digicert"
																			},
																			"custom_certificate": {
																				"type": "string",
																				"description": "If a custom uploaded certificate is used",
																				"example": "-----BEGIN CERTIFICATE-----\\nMIIFJDCCBAygAwIBAgIQD0ifmj/Yi5NP/2gdUySbfzANBgkqhkiG9w0BAQsFADBN\\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E...SzSHfXp5lnu/3V08I72q1QNzOCgY1XeL4GKVcj4or6cT6tX6oJH7ePPmfrBfqI/O\\nOeH8gMJ+FuwtXYEPa4hBf38M5eU5xWG7\\n-----END CERTIFICATE-----\\n"
																			},
																			"custom_key": {
																				"type": "string",
																				"description": "The key for a custom uploaded certificate",
																				"example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\ndtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\nabIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\ntnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\nFxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\newooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\nHBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\naxiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n+ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n+j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\nKLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n/WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\niacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\nN2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\nVAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\nvULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\nlySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\nmEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\ndFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\nPG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\nfhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\nqu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\nlv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n-----END RSA PRIVATE KEY-----\n"
																			}
																		}
																	}
																]
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Custom Hostname",
				"description": "Add a new custom hostname and request that an SSL certificate be issued for it. One of three validation methods—http, txt, email—should be used, with 'http' recommended if the CNAME is already in place (or will be soon). Specifying 'email' will send an email to the WHOIS contacts on file for the base domain plus hostmaster, postmaster, webmaster, admin, administrator. If http is used and the domain is not already pointing to the Managed CNAME host, the PATCH method must be used once it is (to complete validation).",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Custom Hostname response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"hostname",
									"ssl"
								],
								"properties": {
									"hostname": {
										"type": "string",
										"readOnly": true,
										"maxLength": 255,
										"description": "The custom hostname that will point to your hostname via CNAME.",
										"example": "app.example.com"
									},
									"ssl": {
										"type": "object",
										"description": "SSL properties used when creating the custom hostname",
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"method": {
														"enum": [
															"http",
															"txt",
															"email"
														],
														"readOnly": false,
														"description": "Domain control validation (DCV) method used for this hostname.",
														"example": "http"
													},
													"type": {
														"enum": [
															"dv"
														],
														"readOnly": true,
														"description": "Level of validation to be used for this hostname. Domain validation (dv) must be used.",
														"example": "dv"
													},
													"settings": {
														"type": "object",
														"description": "SSL specific settings",
														"properties": {
															"http2": {
																"enum": [
																	true,
																	false
																],
																"description": "Whether or not HTTP2 is enabled.",
																"example": true
															},
															"min_tls_version": {
																"enum": [
																	"1.0",
																	"1.1",
																	"1.2",
																	"1.3"
																],
																"description": "The minimum TLS version supported.",
																"example": "1.2"
															},
															"tls_1_3": {
																"enum": [
																	true,
																	false
																],
																"description": "Whether or not TLS 1.3 is enabled.",
																"example": true
															},
															"ciphers": {
																"type": "array",
																"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
																"example": [
																	"ECDHE-RSA-AES128-GCM-SHA256",
																	"AES128-SHA"
																],
																"uniqueItems": true,
																"items": {
																	"type": "string"
																}
															},
															"early_hints": {
																"enum": [
																	true,
																	false
																],
																"description": "Whether or not Early Hints is enabled.",
																"example": true
															}
														}
													},
													"bundle_method": {
														"type": "string",
														"enum": [
															"ubiquitous",
															"optimal",
															"force"
														],
														"description": "A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.",
														"example": "ubiquitous",
														"default": "ubiquitous"
													},
													"wildcard": {
														"type": "boolean",
														"description": "Indicates whether the certificate covers a wildcard.",
														"example": false
													},
													"custom_certificate": {
														"type": "string",
														"description": "If a custom uploaded certificate is used",
														"example": "-----BEGIN CERTIFICATE-----\\nMIIFJDCCBAygAwIBAgIQD0ifmj/Yi5NP/2gdUySbfzANBgkqhkiG9w0BAQsFADBN\\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E...SzSHfXp5lnu/3V08I72q1QNzOCgY1XeL4GKVcj4or6cT6tX6oJH7ePPmfrBfqI/O\\nOeH8gMJ+FuwtXYEPa4hBf38M5eU5xWG7\\n-----END CERTIFICATE-----\\n"
													},
													"custom_key": {
														"type": "string",
														"description": "The key for a custom uploaded certificate",
														"example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\ndtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\nabIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\ntnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\nFxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\newooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\nHBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\naxiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n+ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n+j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\nKLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n/WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\niacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\nN2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\nVAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\nvULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\nlySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\nmEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\ndFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\nPG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\nfhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\nqu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\nlv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n-----END RSA PRIVATE KEY-----\n"
													}
												}
											}
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/custom_hostnames/{identifier}": {
			"get": {
				"summary": "Custom Hostname Details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Custom hostname identifier tag",
							"type": "string",
							"minLength": 36,
							"maxLength": 36,
							"readOnly": true,
							"example": "0d89c70d-ad9f-4843-b99f-6cc0252067e9"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Custom Hostname Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit Custom Hostname",
				"description": "Modify SSL configuration for a custom hostname. When sent with SSL config that matches existing config, used to indicate that hostname should pass domain control validation (DCV). Can also be used to change validation type, e.g., from 'http' to 'email'.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit Custom Hostname response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"ssl": {
										"type": "object",
										"description": "SSL properties used when creating the custom hostname",
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"method": {
														"enum": [
															"http",
															"txt",
															"email"
														],
														"readOnly": false,
														"description": "Domain control validation (DCV) method used for this hostname.",
														"example": "http"
													},
													"type": {
														"enum": [
															"dv"
														],
														"readOnly": true,
														"description": "Level of validation to be used for this hostname. Domain validation (dv) must be used.",
														"example": "dv"
													},
													"settings": {
														"type": "object",
														"description": "SSL specific settings",
														"properties": {
															"http2": {
																"enum": [
																	true,
																	false
																],
																"description": "Whether or not HTTP2 is enabled.",
																"example": true
															},
															"min_tls_version": {
																"enum": [
																	"1.0",
																	"1.1",
																	"1.2",
																	"1.3"
																],
																"description": "The minimum TLS version supported.",
																"example": "1.2"
															},
															"tls_1_3": {
																"enum": [
																	true,
																	false
																],
																"description": "Whether or not TLS 1.3 is enabled.",
																"example": true
															},
															"ciphers": {
																"type": "array",
																"description": "An allowlist of ciphers for TLS termination. These ciphers must be in the BoringSSL format.",
																"example": [
																	"ECDHE-RSA-AES128-GCM-SHA256",
																	"AES128-SHA"
																],
																"uniqueItems": true,
																"items": {
																	"type": "string"
																}
															},
															"early_hints": {
																"enum": [
																	true,
																	false
																],
																"description": "Whether or not Early Hints is enabled.",
																"example": true
															}
														}
													},
													"bundle_method": {
														"type": "string",
														"enum": [
															"ubiquitous",
															"optimal",
															"force"
														],
														"description": "A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.",
														"example": "ubiquitous",
														"default": "ubiquitous"
													},
													"wildcard": {
														"type": "boolean",
														"description": "Indicates whether the certificate covers a wildcard.",
														"example": false
													},
													"custom_certificate": {
														"type": "string",
														"description": "If a custom uploaded certificate is used",
														"example": "-----BEGIN CERTIFICATE-----\\nMIIFJDCCBAygAwIBAgIQD0ifmj/Yi5NP/2gdUySbfzANBgkqhkiG9w0BAQsFADBN\\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMScwJQYDVQQDEx5E...SzSHfXp5lnu/3V08I72q1QNzOCgY1XeL4GKVcj4or6cT6tX6oJH7ePPmfrBfqI/O\\nOeH8gMJ+FuwtXYEPa4hBf38M5eU5xWG7\\n-----END CERTIFICATE-----\\n"
													},
													"custom_key": {
														"type": "string",
														"description": "The key for a custom uploaded certificate",
														"example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\ndtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\nabIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\ntnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\nFxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\newooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\nHBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\naxiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n+ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n+j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\nKLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n/WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\niacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\nN2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\nVAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\nvULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\nlySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\nmEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\ndFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\nPG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\nfhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\nqu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\nlv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n-----END RSA PRIVATE KEY-----\n"
													}
												}
											}
										]
									},
									"custom_metadata": {
										"type": "object",
										"description": "These are per-hostname (customer) settings.",
										"anyOf": [
											{
												"type": "object",
												"properties": {
													"key": {
														"description": "Unique metadata for this hostname",
														"type": "string",
														"example": "value"
													}
												}
											}
										]
									},
									"custom_origin_server": {
										"type": "string",
										"description": "a valid hostname that’s been added to your DNS zone as an A, AAAA, or CNAME record.",
										"example": "origin2.example.com"
									},
									"custom_origin_sni": {
										"type": "string",
										"description": "A hostname that will be sent to your custom origin server as SNI for TLS handshake. This can be a valid subdomain of the zone or custom origin server name or the string ':request_host_header:' which will cause the host header in the request to be used as SNI. Not configurable with default/fallback origin server.",
										"example": "sni.example.com"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Custom Hostname (and any issued SSL certificates)",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Custom Hostname (and any issued SSL certificates) response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1%7Bidentifier%7D/get/parameters/0/schema"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/custom_hostnames/fallback_origin": {
			"get": {
				"summary": "Get Fallback Origin for Custom Hostnames",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Fallback Origin for Custom Hostnames response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Fallback Origin for Custom Hostnames",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1fallback_origin/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Fallback Origin for Custom Hostnames response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1fallback_origin/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"origin"
								],
								"properties": {
									"origin": {
										"type": "string",
										"readOnly": false,
										"maxLength": 255,
										"description": "Your origin hostname that requests to your custom hostnames will be sent to.",
										"example": "fallback.example.com"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Fallback Origin for Custom Hostnames",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1fallback_origin/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Fallback Origin for Custom Hostnames response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_hostnames~1fallback_origin/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/keyless_certificates": {
			"get": {
				"summary": "List Keyless SSL Configurations",
				"description": "List all Keyless SSL configurations for a given zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Keyless SSL Configurations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"type": "object",
																"required": [
																	"id",
																	"name",
																	"host",
																	"port",
																	"status",
																	"enabled",
																	"permissions",
																	"created_on",
																	"modified_on"
																],
																"properties": {
																	"id": {
																		"description": "Keyless certificate identifier tag",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "4d2844d2ce78891c34d0b6c0535a291e"
																	},
																	"name": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates/post/requestBody/content/application~1json/schema/properties/name"
																	},
																	"host": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates/post/requestBody/content/application~1json/schema/properties/host"
																	},
																	"port": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates/post/requestBody/content/application~1json/schema/properties/port"
																	},
																	"status": {
																		"type": "string",
																		"enum": [
																			"active",
																			"deleted"
																		],
																		"description": "Status of the Keyless SSL",
																		"readOnly": true,
																		"example": "active"
																	},
																	"enabled": {
																		"type": "boolean",
																		"description": "Whether or not the Keyless SSL is on or off",
																		"readOnly": true,
																		"example": false
																	},
																	"permissions": {
																		"description": "Available permissions for the Keyless SSL for the current user requesting the item",
																		"readOnly": true,
																		"type": "array",
																		"example": [
																			"#ssl:read",
																			"#ssl:edit"
																		],
																		"items": {}
																	},
																	"created_on": {
																		"readOnly": true,
																		"type": "string",
																		"format": "date-time",
																		"example": "2014-01-01T05:20:00+00:00",
																		"description": "When the Keyless SSL was created"
																	},
																	"modified_on": {
																		"readOnly": true,
																		"type": "string",
																		"format": "date-time",
																		"example": "2014-01-01T05:20:00+00:00",
																		"description": "When the Keyless SSL was last modified"
																	}
																}
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Keyless SSL Configuration",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Keyless SSL Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"host",
									"port",
									"certificate"
								],
								"properties": {
									"host": {
										"type": "string",
										"description": "The keyless SSL name",
										"maxLength": 253,
										"example": "example.com",
										"format": "hostname"
									},
									"port": {
										"type": "number",
										"description": "The keyless SSL port used to commmunicate between Cloudflare and the client's Keyless SSL server",
										"maxLength": 65535,
										"default": 24008,
										"example": 24008
									},
									"name": {
										"type": "string",
										"description": "The keyless SSL name",
										"maxLength": 180,
										"readOnly": true,
										"example": "example.com Keyless SSL"
									},
									"certificate": {
										"type": "string",
										"description": "The zone's SSL certificate or SSL certificate and intermediate(s)",
										"example": "-----BEGIN CERTIFICATE----- MIIDtTCCAp2gAwIBAgIJAM15n7fdxhRtMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV BAYTAlVTMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX aWRnaXRzIFB0eSBMdGQwHhcNMTQwMzExMTkyMTU5WhcNMTQwNDEwMTkyMTU5WjBF MQswCQYDVQQGEwJVUzETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50 ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB CgKCAQEAvq3sKsHpeduJHimOK+fvQdKsI8z8A05MZyyLp2/R/GE8FjNv+hkVY1WQ LIyTNNQH7CJecE1nbTfo8Y56S7x/rhxC6/DJ8MIulapFPnorq46KU6yRxiM0MQ3N nTJHlHA2ozZta6YBBfVfhHWl1F0IfNbXCLKvGwWWMbCx43OfW6KTkbRnE6gFWKuO fSO5h2u5TaWVuSIzBvYs7Vza6m+gtYAvKAJV2nSZ+eSEFPDo29corOy8+huEOUL8 5FAw4BFPsr1TlrlGPFitduQUHGrSL7skk1ESGza0to3bOtrodKei2s9bk5MXm7lZ qI+WZJX4Zu9+mzZhc9pCVi8r/qlXuQIDAQABo4GnMIGkMB0GA1UdDgQWBBRvavf+ sWM4IwKiH9X9w1vl6nUVRDB1BgNVHSMEbjBsgBRvavf+sWM4IwKiH9X9w1vl6nUV RKFJpEcwRTELMAkGA1UEBhMCVVMxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV BAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAM15n7fdxhRtMAwGA1UdEwQF MAMBAf8wDQYJKoZIhvcNAQEFBQADggEBABY2ZzBaW0dMsAAT7tPJzrVWVzQx6KU4 UEBLudIlWPlkAwTnINCWR/8eNjCCmGA4heUdHmazdpPa8RzwOmc0NT1NQqzSyktt vTqb4iHD7+8f9MqJ9/FssCfTtqr/Qst/hGH4Wmdf1EJ/6FqYAAb5iRlPgshFZxU8 uXtA8hWn6fK6eISD9HBdcAFToUvKNZ1BIDPvh9f95Ine8ar6yGd56TUNrHR8eHBs ESxz5ddVR/oWRysNJ+aGAyYqHS8S/ttmC7r4XCAHqXptkHPCGRqkAhsterYhd4I8 /cBzejUobNCjjHFbtkAL/SjxZOLW+pNkZwfeYdM8iPkD54Uua1v2tdw= -----END CERTIFICATE-----"
									},
									"bundle_method": {
										"type": "string",
										"enum": [
											"ubiquitous",
											"optimal",
											"force"
										],
										"description": "A ubiquitous bundle has the highest probability of being verified everywhere, even by clients using outdated or unusual trust stores. An optimal bundle uses the shortest chain and newest intermediates. And the force bundle verifies the chain, but does not otherwise modify it.",
										"example": "ubiquitous",
										"default": "ubiquitous"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/keyless_certificates/{identifier}": {
			"get": {
				"summary": "Get Keyless SSL Configuration",
				"description": "Get details for one Keyless SSL configuration",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Keyless certificate identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "4d2844d2ce78891c34d0b6c0535a291e"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Keyless SSL Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit Keyless SSL Configuration",
				"description": "This will update attributes of a Keyless SSL. Consists of one or more of the following:  host,name,port,certificate,enabled",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit Keyless SSL Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"host": {
										"type": "string",
										"description": "The keyless SSL name",
										"maxLength": 253,
										"example": "example.com",
										"format": "hostname"
									},
									"name": {
										"type": "string",
										"description": "The keyless SSL name",
										"maxLength": 180,
										"readOnly": true,
										"example": "example.com Keyless SSL"
									},
									"port": {
										"type": "number",
										"description": "The keyless SSL port used to commmunicate between Cloudflare and the client's Keyless SSL server",
										"maxLength": 65535,
										"default": 24008,
										"example": 24008
									},
									"enabled": {
										"type": "boolean",
										"description": "Whether or not the Keyless SSL is on or off",
										"readOnly": true,
										"example": false
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Keyless SSL Configuration",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Keyless SSL Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/ssl/analyze": {
			"post": {
				"summary": "Analyze Certificate",
				"description": "Returns the set of hostnames, the signature algorithm, and the expiration date of the certificate.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Analyze Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"certificate": {
										"type": "string",
										"description": "The zone's SSL certificate or certificate and the intermediate(s)",
										"example": "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\nMQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\nCGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\nKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\ndZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\nizNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\nGKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\nBAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\nMlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\nSvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\nYbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n-----END CERTIFICATE-----\n"
									},
									"bundle_method": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1keyless_certificates/post/requestBody/content/application~1json/schema/properties/bundle_method"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/ssl/certificate_packs": {
			"get": {
				"summary": "List Certificate Packs",
				"description": "For a given zone, list all active certificate packs",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Certificate Packs response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Order Certificate Pack",
				"description": "For a given zone, order a certificate pack with a list of hostnames",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Order Certificate Pack response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read",
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"hosts": {
										"type": "array",
										"items": {
											"type": "string"
										},
										"description": "Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.",
										"example": [
											"example.com",
											"*.example.com",
											"www.example.com"
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/ssl/certificate_packs/{identifier}": {
			"get": {
				"summary": "Get Certificate Pack",
				"description": "For a given zone, get a certificate pack",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"readOnly": true,
							"type": "string",
							"description": "The unique identifier for a certificate_pack",
							"example": "3822ff90-ea29-44df-9e55-21300bb9419b"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Certificate Pack response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Restart Validation for Advanced Certificate Manager Certificate Pack",
				"description": "For a given zone, restart validation for an advanced certificate pack.  This is only a validation operation for a Certificate Pack in a validation_timed_out status.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Restart Validation for Advanced Certificate Manager Certificate Pack response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"type": {
															"type": "string",
															"enum": [
																"advanced"
															],
															"description": "Type of certificate pack",
															"example": "advanced"
														},
														"hosts": {
															"type": "array",
															"items": {
																"type": "string"
															},
															"description": "Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.",
															"example": [
																"example.com",
																"*.example.com",
																"www.example.com"
															]
														},
														"status": {
															"type": "string",
															"enum": [
																"initializing",
																"pending_validation",
																"pending_issuance",
																"pending_deployment",
																"active",
																"pending_deletion",
																"pending_expiration",
																"expired",
																"deleted",
																"initializing_timed_out",
																"validation_timed_out",
																"issuance_timed_out",
																"deployment_timed_out",
																"deletion_timed_out",
																"pending_cleanup"
															],
															"description": "Status of certificate pack",
															"example": "initializing"
														},
														"validation_method": {
															"type": "string",
															"enum": [
																"txt",
																"http",
																"email"
															],
															"description": "Validation Method selected for the order",
															"example": "txt"
														},
														"validity_days": {
															"type": "integer",
															"enum": [
																14,
																30,
																90,
																365
															],
															"description": "Validity Days selected for the order"
														},
														"certificate_authority": {
															"type": "string",
															"enum": [
																"digicert",
																"google",
																"lets_encrypt"
															],
															"description": "Certificate Authority selected for the order.  Selecting Let's Encrypt will reduce customization of other fields: validation_method must be 'txt', validity_days must be 90, cloudflare_branding must be omitted, and hosts must contain only 2 entries, one for the zone name and one for the subdomain wildcard of the zone name (e.g. example.com, *.example.com).",
															"example": "digicert"
														},
														"cloudflare_branding": {
															"type": "boolean",
															"description": "Whether or not to add Cloudflare Branding for the order.  This will add sni.cloudflaressl.com as the Common Name if set true",
															"example": false
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read",
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"delete": {
				"summary": "Delete Advanced Certificate Manager Certificate Pack",
				"description": "For a given zone, delete an advanced certificate pack",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Advanced Certificate Manager Certificate Pack response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read",
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/ssl/certificate_packs/quota": {
			"get": {
				"summary": "Get Certificate Pack Quotas",
				"description": "For a given zone, list certificate pack quotas",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Certificate Pack Quotas response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"advanced": {
															"type": "object",
															"properties": {
																"allocated": {
																	"type": "integer",
																	"description": "Quantity Allocated"
																},
																"used": {
																	"type": "integer",
																	"description": "Quantity Used"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/ssl/certificate_packs/order": {
			"post": {
				"summary": "Order Advanced Certificate Manager Certificate Pack",
				"description": "For a given zone, order an advanced certificate pack",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Order Advanced Certificate Manager Certificate Pack response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"readOnly": true,
															"type": "string",
															"description": "The unique identifier for a certificate_pack",
															"example": "3822ff90-ea29-44df-9e55-21300bb9419b"
														},
														"type": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1order/post/requestBody/content/application~1json/schema/properties/type"
														},
														"hosts": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1order/post/requestBody/content/application~1json/schema/properties/hosts"
														},
														"status": {
															"type": "string",
															"enum": [
																"initializing",
																"pending_validation",
																"pending_issuance",
																"pending_deployment",
																"active",
																"pending_deletion",
																"pending_expiration",
																"expired",
																"deleted",
																"initializing_timed_out",
																"validation_timed_out",
																"issuance_timed_out",
																"deployment_timed_out",
																"deletion_timed_out",
																"pending_cleanup"
															],
															"description": "Status of certificate pack",
															"example": "initializing"
														},
														"validation_method": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1order/post/requestBody/content/application~1json/schema/properties/validation_method"
														},
														"validity_days": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1order/post/requestBody/content/application~1json/schema/properties/validity_days"
														},
														"certificate_authority": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1order/post/requestBody/content/application~1json/schema/properties/certificate_authority"
														},
														"cloudflare_branding": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1certificate_packs~1order/post/requestBody/content/application~1json/schema/properties/cloudflare_branding"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read",
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"type",
									"hosts",
									"validation_method",
									"validity_days",
									"certificate_authority"
								],
								"properties": {
									"type": {
										"type": "string",
										"enum": [
											"advanced"
										],
										"description": "Type of certificate pack",
										"example": "advanced"
									},
									"hosts": {
										"type": "array",
										"items": {
											"type": "string"
										},
										"description": "Comma separated list of valid host names for the certificate packs. Must contain the zone apex, may not contain more than 50 hosts, and may not be empty.",
										"example": [
											"example.com",
											"*.example.com",
											"www.example.com"
										]
									},
									"validation_method": {
										"type": "string",
										"enum": [
											"txt",
											"http",
											"email"
										],
										"description": "Validation Method selected for the order",
										"example": "txt"
									},
									"validity_days": {
										"type": "integer",
										"enum": [
											14,
											30,
											90,
											365
										],
										"description": "Validity Days selected for the order"
									},
									"certificate_authority": {
										"type": "string",
										"enum": [
											"digicert",
											"google",
											"lets_encrypt"
										],
										"description": "Certificate Authority selected for the order.  Selecting Let's Encrypt will reduce customization of other fields: validation_method must be 'txt', validity_days must be 90, cloudflare_branding must be omitted, and hosts must contain only 2 entries, one for the zone name and one for the subdomain wildcard of the zone name (e.g. example.com, *.example.com).",
										"example": "digicert"
									},
									"cloudflare_branding": {
										"type": "boolean",
										"description": "Whether or not to add Cloudflare Branding for the order.  This will add sni.cloudflaressl.com as the Common Name if set true",
										"example": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/ssl/recommendation": {
			"get": {
				"summary": "SSL/TLS Recommendation",
				"description": "Retrieve the SSL/TLS Recommender's recommendation for a zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SSL/TLS Recommendation response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"type": "string",
															"example": "ssl_recommendation",
															"description": "Identifier of a recommedation result"
														},
														"value": {
															"type": "string",
															"enum": [
																"flexible",
																"full",
																"strict"
															],
															"example": "strict"
														},
														"modified_on": {
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"example": "2014-01-01T05:20:00.123450+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/ssl/verification": {
			"get": {
				"summary": "SSL Verification Details",
				"description": "Get SSL Verification Info for a Zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "SSL Verification Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"certificate_status"
														],
														"properties": {
															"certificate_status": {
																"description": "Current status of certificate",
																"type": "string",
																"enum": [
																	"initializing",
																	"authorizing",
																	"active",
																	"expired",
																	"issuing",
																	"timing_out",
																	"pending_deployment"
																],
																"example": "active"
															},
															"signature": {
																"description": "Certificate's signature algorithm",
																"type": "string",
																"enum": [
																	"ECDSAWithSHA256",
																	"SHA1WithRSA",
																	"SHA256WithRSA"
																]
															},
															"verification_type": {
																"description": "Method of verification",
																"type": "string",
																"enum": [
																	"cname",
																	"meta tag"
																],
																"example": "cname"
															},
															"verification_status": {
																"description": "Status of the required verification information, omitted if verification status is unknown.",
																"type": "boolean",
																"example": true
															},
															"verification_info": {
																"description": "Certificate's required verification information",
																"type": "object",
																"properties": {
																	"record_name": {
																		"type": "string",
																		"description": "Name of CNAME record",
																		"format": "hostname",
																		"example": "b3b90cfedd89a3e487d3e383c56c4267.example.com"
																	},
																	"record_target": {
																		"description": "Target of CNAME record",
																		"type": "string",
																		"format": "hostname",
																		"example": "6979be7e4cfc9e5c603e31df7efac9cc60fee82d.comodoca.com"
																	}
																},
																"enum": [
																	"record_name",
																	"record_value",
																	"http_url",
																	"http_body",
																	"cname",
																	"cname_target",
																	"txt_name",
																	"txt_value"
																]
															},
															"brand_check": {
																"description": "Certificate Authority is manually reviewing the order",
																"type": "boolean",
																"example": false
															},
															"validation_method": {
																"description": "Validation method in use for a certificate pack order.",
																"type": "string",
																"enum": [
																	"http",
																	"cname",
																	"txt"
																],
																"example": "txt"
															},
															"cert_pack_uuid": {
																"description": "Certificate Pack UUID",
																"type": "string",
																"example": "a77f8bd7-3b47-46b4-a6f1-75cf98109948"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/ssl/verification/{cert_pack_uuid}": {
			"patch": {
				"summary": "Edit SSL Certificate Pack Validation Method",
				"description": "Edit SSL validation method for a certificate pack. A PATCH request will request an immediate validation check on any certificate, and return the updated status. If a validation method is provided, the validation will be immediately attempted using that method.",
				"parameters": [
					{
						"name": "cert_pack_uuid",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Certificate Pack UUID",
							"type": "string",
							"example": "a77f8bd7-3b47-46b4-a6f1-75cf98109948"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit SSL Certificate Pack Validation Method response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"validation_method": {
															"description": "Desired validation method",
															"type": "string",
															"enum": [
																"http",
																"cname",
																"txt",
																"email"
															],
															"example": "txt"
														},
														"status": {
															"description": "Result status",
															"type": "string",
															"example": "pending_validation"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read",
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"validation_method"
								],
								"properties": {
									"validation_method": {
										"description": "Desired validation method",
										"type": "string",
										"enum": [
											"http",
											"cname",
											"txt",
											"email"
										],
										"example": "txt"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/ssl/universal/settings": {
			"get": {
				"summary": "Universal SSL Settings Details",
				"description": "Get Universal SSL Settings for a Zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Universal SSL Settings Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"enabled": {
															"description": "Disabling Universal SSL removes any currently active Universal SSL certificates for your zone from the edge and prevents any future Universal SSL certificates from being ordered. If there are no dedicated certificates or custom certificates uploaded for the domain, visitors will be unable to access the domain over HTTPS.\n\nBy disabling Universal SSL, you understand that the following Cloudflare settings and preferences will result in visitors being unable to visit your domain unless you have uploaded a custom certificate or purchased a dedicated certificate.\n\n* HSTS\n* Always Use HTTPS\n* Opportunistic Encryption\n* Onion Routing\n* Any Page Rules redirecting traffic to HTTPS\n\nSimilarly, any HTTP redirect to HTTPS at the origin while the Cloudflare proxy is enabled will result in users being unable to visit your site without a valid certificate at Cloudflare's edge.\n\nIf you do not have a valid custom or dedicated certificate at Cloudflare's edge and are unsure if any of the above Cloudflare settings are enabled, or if any HTTP redirects exist at your origin, we advise leaving Universal SSL enabled for your domain.",
															"type": "boolean",
															"example": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit Universal SSL Settings",
				"description": "Patch Universal SSL Settings for a Zone",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1universal~1settings/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit Universal SSL Settings response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1universal~1settings/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read",
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"enabled": {
										"description": "Disabling Universal SSL removes any currently active Universal SSL certificates for your zone from the edge and prevents any future Universal SSL certificates from being ordered. If there are no dedicated certificates or custom certificates uploaded for the domain, visitors will be unable to access the domain over HTTPS.\n\nBy disabling Universal SSL, you understand that the following Cloudflare settings and preferences will result in visitors being unable to visit your domain unless you have uploaded a custom certificate or purchased a dedicated certificate.\n\n* HSTS\n* Always Use HTTPS\n* Opportunistic Encryption\n* Onion Routing\n* Any Page Rules redirecting traffic to HTTPS\n\nSimilarly, any HTTP redirect to HTTPS at the origin while the Cloudflare proxy is enabled will result in users being unable to visit your site without a valid certificate at Cloudflare's edge.\n\nIf you do not have a valid custom or dedicated certificate at Cloudflare's edge and are unsure if any of the above Cloudflare settings are enabled, or if any HTTP redirects exist at your origin, we advise leaving Universal SSL enabled for your domain.",
										"type": "boolean",
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/certificates": {
			"get": {
				"summary": "List Certificates",
				"description": "List all existing Origin CA certificates for a given zone. Use your Origin CA Key as your User Service Key when calling this endpoint ([see above](#requests)).",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Certificates response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"hostnames",
															"csr",
															"requested_validity",
															"request_type"
														],
														"properties": {
															"id": {
																"readOnly": true,
																"type": "string",
																"description": "The x509 serial number of the Origin CA certificate",
																"example": "328578533902268680212849205732770752308931942346"
															},
															"certificate": {
																"readOnly": true,
																"type": "string",
																"description": "The Origin CA certificate. Will be newline-encoded.",
																"example": "-----BEGIN CERTIFICATE-----\nMIICvDCCAaQCAQAwdzELMAkGA1UEBhMCVVMxDTALBgNVBAgMBFV0YWgxDzANBgNV\nBAcMBkxpbmRvbjEWMBQGA1UECgwNRGlnaUNlcnQgSW5jLjERMA8GA1UECwwIRGln\naUNlcnQxHTAbBgNVBAMMFGV4YW1wbGUuZGlnaWNlcnQuY29tMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8+To7d+2kPWeBv/orU3LVbJwDrSQbeKamCmo\nwp5bqDxIwV20zqRb7APUOKYoVEFFOEQs6T6gImnIolhbiH6m4zgZ/CPvWBOkZc+c\n1Po2EmvBz+AD5sBdT5kzGQA6NbWyZGldxRthNLOs1efOhdnWFuhI162qmcflgpiI\nWDuwq4C9f+YkeJhNn9dF5+owm8cOQmDrV8NNdiTqin8q3qYAHHJRW28glJUCZkTZ\nwIaSR6crBQ8TbYNE0dc+Caa3DOIkz1EOsHWzTx+n0zKfqcbgXi4DJx+C1bjptYPR\nBPZL8DAeWuA8ebudVT44yEp82G96/Ggcf7F33xMxe0yc+Xa6owIDAQABoAAwDQYJ\nKoZIhvcNAQEFBQADggEBAB0kcrFccSmFDmxox0Ne01UIqSsDqHgL+XmHTXJwre6D\nhJSZwbvEtOK0G3+dr4Fs11WuUNt5qcLsx5a8uk4G6AKHMzuhLsJ7XZjgmQXGECpY\nQ4mC3yT3ZoCGpIXbw+iP3lmEEXgaQL0Tx5LFl/okKbKYwIqNiyKWOMj7ZR/wxWg/\nZDGRs55xuoeLDJ/ZRFf9bI+IaCUd1YrfYcHIl3G87Av+r49YVwqRDT0VDV7uLgqn\n29XI1PpVUNCPQGn9p/eX6Qo7vpDaPybRtA2R7XLKjQaF9oXWeCUqy1hvJac9QFO2\n97Ob1alpHPoZ7mWiEuJwjBPii6a9M9G30nUo39lBi1w=\n-----END CERTIFICATE-----"
															},
															"hostnames": {
																"$ref": "#/paths/~1certificates/post/requestBody/content/application~1json/schema/properties/hostnames"
															},
															"expires_on": {
																"readOnly": true,
																"type": "string",
																"format": "date-time",
																"example": "2014-01-01T05:20:00.123450+00:00",
																"description": "When the certificate will expire"
															},
															"request_type": {
																"$ref": "#/paths/~1certificates/post/requestBody/content/application~1json/schema/properties/request_type"
															},
															"requested_validity": {
																"$ref": "#/paths/~1certificates/post/requestBody/content/application~1json/schema/properties/requested_validity"
															},
															"csr": {
																"$ref": "#/paths/~1certificates/post/requestBody/content/application~1json/schema/properties/csr"
															}
														},
														"x-cfLinkErrors": {
															"1000": "API errors encountered",
															"1001": "Request had no Authorization header",
															"1002": "Unsupported request_type",
															"1003": "Failed to read contents of HTTP request",
															"1004": "Failed to parse request JSON",
															"1005": "Too many hostnames requested - you may only request up to 100 per certificate",
															"1006": "One or more hostnames were duplicated in the request and have been removed prior to certificate generation",
															"1007": "CSR parsed as empty",
															"1008": "Error creating request to CA",
															"1009": "Permitted values for the 'requested_validity' parameter (specified in days) are: 7, 30, 90, 365, 730, 1095, and 5475 (default)",
															"1010": "Failed to validate SAN <hostname>: <reason for failure>",
															"1011": "Failed to parse CSR",
															"1012": "Please provide a zone id when requesting a stored certificate, or fetch by serial number",
															"1013": "Please provide a certificate serial number when operating on a single certificate",
															"1014": "Certificate already revoked",
															"1100": "Failed to write certificate to database",
															"1101": "Failed to read certificate from database",
															"1200": "API Error: Failed to generate CA request",
															"1201": "CA signing failure. Could not parse returned certificate",
															"1300": "Failed to fetch keyless servers from API",
															"1301": "key server didn't activate correctly",
															"1302": "Could not get keyless server port for server <server>",
															"1303": "invalid hostname: <hostname>"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"user_service_key": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Certificate",
				"description": "Create an Origin CA certificate. Use your Origin CA Key as your User Service Key when calling this endpoint ([see above](#requests)).",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"user_service_key": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"hostnames": {
										"type": "array",
										"description": "Array of hostnames or wildcard names (e.g., *.example.com) bound to the certificate",
										"example": [
											"example.com",
											"*.example.com"
										],
										"items": {}
									},
									"requested_validity": {
										"type": "number",
										"enum": [
											7,
											30,
											90,
											365,
											730,
											1095,
											5475
										],
										"default": 5475,
										"description": "The number of days for which the certificate should be valid",
										"example": 5475
									},
									"request_type": {
										"type": "string",
										"enum": [
											"origin-rsa",
											"origin-ecc",
											"keyless-certificate"
										],
										"description": "Signature type desired on certificate (\"origin-rsa\" (rsa), \"origin-ecc\" (ecdsa), or \"keyless-certificate\" (for Keyless SSL servers)",
										"example": "origin-rsa"
									},
									"csr": {
										"type": "string",
										"description": "The Certificate Signing Request (CSR). Must be newline-encoded.",
										"example": "-----BEGIN CERTIFICATE REQUEST-----\nMIICxzCCAa8CAQAwSDELMAkGA1UEBhMCVVMxFjAUBgNVBAgTDVNhbiBGcmFuY2lz\nY28xCzAJBgNVBAcTAkNBMRQwEgYDVQQDEwtleGFtcGxlLm5ldDCCASIwDQYJKoZI\nhvcNAQEBBQADggEPADCCAQoCggEBALxejtu4b+jPdFeFi6OUsye8TYJQBm3WfCvL\nHu5EvijMO/4Z2TImwASbwUF7Ir8OLgH+mGlQZeqyNvGoSOMEaZVXcYfpR1hlVak8\n4GGVr+04IGfOCqaBokaBFIwzclGZbzKmLGwIQioNxGfqFm6RGYGA3be2Je2iseBc\nN8GV1wYmvYE0RR+yWweJCTJ157exyRzu7sVxaEW9F87zBQLyOnwXc64rflXslRqi\ng7F7w5IaQYOl8yvmk/jEPCAha7fkiUfEpj4N12+oPRiMvleJF98chxjD4MH39c5I\nuOslULhrWunfh7GB1jwWNA9y44H0snrf+xvoy2TcHmxvma9Eln8CAwEAAaA6MDgG\nCSqGSIb3DQEJDjErMCkwJwYDVR0RBCAwHoILZXhhbXBsZS5uZXSCD3d3dy5leGFt\ncGxlLm5ldDANBgkqhkiG9w0BAQsFAAOCAQEAcBaX6dOnI8ncARrI9ZSF2AJX+8mx\npTHY2+Y2C0VvrVDGMtbBRH8R9yMbqWtlxeeNGf//LeMkSKSFa4kbpdx226lfui8/\nauRDBTJGx2R1ccUxmLZXx4my0W5iIMxunu+kez+BDlu7bTT2io0uXMRHue4i6quH\nyc5ibxvbJMjR7dqbcanVE10/34oprzXQsJ/VmSuZNXtjbtSKDlmcpw6To/eeAJ+J\nhXykcUihvHyG4A1m2R6qpANBjnA0pHexfwM/SgfzvpbvUg0T1ubmer8BgTwCKIWs\ndcWYTthM51JIqRBfNqy4QcBnX+GY05yltEEswQI55wdiS3CjTTA67sdbcQ==\n-----END CERTIFICATE REQUEST-----"
									}
								}
							}
						}
					}
				}
			}
		},
		"/certificates/{identifier}": {
			"get": {
				"summary": "Get Certificate",
				"description": "Get an existing Origin CA certificate by its serial number. Use your Origin CA Key as your User Service Key when calling this endpoint ([see above](#requests)).",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"readOnly": true,
							"type": "string",
							"description": "The x509 serial number of the Origin CA certificate",
							"example": "328578533902268680212849205732770752308931942346"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"user_service_key": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Revoke Certificate",
				"description": "Revoke an existing Origin CA certificate by its serial number. Use your Origin CA Key as your User Service Key when calling this endpoint ([see above](#requests)).",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1certificates~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Revoke Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1certificates~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1certificates~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"user_service_key": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/origin_tls_client_auth/settings": {
			"get": {
				"summary": "Get Enablement Setting for Zone",
				"description": "Get whether zone-level authenticated origin pulls is enabled or not. It is false by default.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Enablement Setting for Zone response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"enabled": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1settings/put/requestBody/content/application~1json/schema/properties/enabled"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Set Enablement for Zone",
				"description": "Enable or disable zone-level authenticated origin pulls. 'enabled' should be set true either before/after the certificate is uploaded to see the certificate in use.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1settings/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Set Enablement for Zone response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1settings/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"enabled"
								],
								"properties": {
									"enabled": {
										"type": "boolean",
										"description": "Indicates whether zone-level authenticated origin pulls is enabled",
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/origin_tls_client_auth": {
			"post": {
				"summary": "Upload Certificate",
				"description": "Upload your own certificate you want Cloudflare to use for edge-to-origin communication to override the shared certificate. Please note that it is important to keep only one certificate active. Also, make sure to enable zone-level authenticated origin pulls by making a PUT call to settings endpoint to see the uploaded certificate in use.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Upload Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"certificate",
									"private_key"
								],
								"properties": {
									"certificate": {
										"type": "string",
										"description": "The zone's leaf certificate",
										"example": "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\nMQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\nCGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\nKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\ndZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\nizNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\nGKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\nBAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\nMlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\nSvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\nYbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n-----END CERTIFICATE-----\n"
									},
									"private_key": {
										"type": "string",
										"description": "The zone's private key",
										"example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\ndtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\nabIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\ntnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\nFxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\newooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\nHBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\naxiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n+ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n+j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\nKLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n/WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\niacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\nN2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\nVAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\nvULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\nlySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\nmEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\ndFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\nPG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\nfhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\nqu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\nlv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n-----END RSA PRIVATE KEY-----\n"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Certificates",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Certificates response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																	},
																	"certificate": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth/post/requestBody/content/application~1json/schema/properties/certificate"
																	},
																	"issuer": {
																		"type": "string",
																		"readOnly": true,
																		"description": "The certificate authority that issued the certificate",
																		"example": "GlobalSign"
																	},
																	"signature": {
																		"type": "string",
																		"readOnly": true,
																		"description": "The type of hash used for the certificate",
																		"example": "SHA256WithRSA"
																	},
																	"expires_on": {
																		"type": "string",
																		"format": "date-time",
																		"readOnly": true,
																		"description": "When the certificate from the authority expires",
																		"example": "2100-01-01T05:20:00+00:00"
																	},
																	"status": {
																		"enum": [
																			"initializing",
																			"pending_deployment",
																			"pending_deletion",
																			"active",
																			"deleted",
																			"deployment_timed_out",
																			"deletion_timed_out"
																		],
																		"description": "Status of the certificate activation.",
																		"example": "active"
																	},
																	"uploaded_on": {
																		"type": "string",
																		"format": "date-time",
																		"description": "This is the time the certificate was uploaded.",
																		"example": "2019-10-28T18:11:23.374110+00:00"
																	}
																}
															}
														],
														"properties": {
															"id": {
																"description": "Certificate identifier tag",
																"type": "string",
																"maxLength": 36,
																"readOnly": true,
																"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
															},
															"certificate": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth/post/requestBody/content/application~1json/schema/properties/certificate"
															},
															"private_key": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth/post/requestBody/content/application~1json/schema/properties/private_key"
															},
															"enabled": {
																"type": "boolean",
																"description": "Indicates whether zone-level authenticated origin pulls is enabled",
																"example": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/origin_tls_client_auth/{identifier}": {
			"get": {
				"summary": "Get Certificate Details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Certificate identifier tag",
							"type": "string",
							"maxLength": 36,
							"readOnly": true,
							"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Certificate Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Delete Certificate",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/origin_tls_client_auth/hostnames/certificates": {
			"post": {
				"summary": "Upload a Hostname Client Certificate",
				"description": "Upload a certificate to be used for client authentication on a hostname. 10 hostname certificates per zone are allowed",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Upload a Hostname Client Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "Certificate identifier tag",
															"type": "string",
															"maxLength": 36,
															"readOnly": true,
															"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
														},
														"certificate": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/requestBody/content/application~1json/schema/properties/certificate"
														},
														"issuer": {
															"type": "string",
															"readOnly": true,
															"description": "The certificate authority that issued the certificate",
															"example": "GlobalSign"
														},
														"signature": {
															"type": "string",
															"readOnly": true,
															"description": "The type of hash used for the certificate",
															"example": "SHA256WithRSA"
														},
														"serial_number": {
															"type": "string",
															"description": "The serial number on the uploaded certificate",
															"example": "6743787633689793699141714808227354901"
														},
														"expires_on": {
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"description": "The date when the certificate expires",
															"example": "2100-01-01T05:20:00+00:00"
														},
														"status": {
															"enum": [
																"initializing",
																"pending_deployment",
																"pending_deletion",
																"active",
																"deleted",
																"deployment_timed_out",
																"deletion_timed_out"
															],
															"readOnly": true,
															"description": "Status of the certificate or the association",
															"example": "active"
														},
														"uploaded_on": {
															"type": "string",
															"format": "date-time",
															"description": "The time when the certificate was uploaded",
															"example": "2019-10-28T18:11:23.374110+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"certificate",
									"private_key"
								],
								"properties": {
									"certificate": {
										"type": "string",
										"description": "The hostname certificate",
										"example": "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\nMQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\nCGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\nKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\ndZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\nizNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\nGKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\nBAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\nMlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\nSvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\nYbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n-----END CERTIFICATE-----\n"
									},
									"private_key": {
										"type": "string",
										"description": "The hostname certificate's private key",
										"example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\ndtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\nabIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\ntnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\nFxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\newooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\nHBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\naxiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n+ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n+j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\nKLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n/WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\niacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\nN2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\nVAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\nvULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\nlySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\nmEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\ndFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\nPG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\nfhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\nqu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\nlv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n-----END RSA PRIVATE KEY-----\n"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Certificates",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Certificates response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"properties": {
																	"hostname": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/hostname"
																	},
																	"cert_id": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
																	},
																	"enabled": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/enabled"
																	},
																	"status": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/status"
																	},
																	"created_at": {
																		"type": "string",
																		"format": "date-time",
																		"readOnly": true,
																		"description": "The time when the certificate was created",
																		"example": "2100-01-01T05:20:00+00:00"
																	},
																	"updated_at": {
																		"type": "string",
																		"format": "date-time",
																		"readOnly": true,
																		"description": "The time when the certificate was updated",
																		"example": "2100-01-01T05:20:00+00:00"
																	},
																	"cert_status": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/status"
																	},
																	"issuer": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/issuer"
																	},
																	"signature": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/signature"
																	},
																	"serial_number": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/serial_number"
																	},
																	"certificate": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/requestBody/content/application~1json/schema/properties/certificate"
																	},
																	"cert_uploaded_on": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/uploaded_on"
																	},
																	"cert_updated_at": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/properties/updated_at"
																	},
																	"expires_on": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/expires_on"
																	}
																}
															}
														],
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
															},
															"certificate": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/requestBody/content/application~1json/schema/properties/certificate"
															},
															"private_key": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/requestBody/content/application~1json/schema/properties/private_key"
															},
															"enabled": {
																"type": "boolean",
																"description": "Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association",
																"example": true,
																"nullable": true
															},
															"hostname": {
																"type": "string",
																"maxLength": 255,
																"description": "The hostname on the origin for which the client certificate uploaded will be used",
																"example": "app.example.com"
															},
															"cert_id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/origin_tls_client_auth/hostnames/certificates/{identifier}": {
			"get": {
				"summary": "Get the Hostname Client Certificate",
				"description": "Get the certificate by ID to be used for client authentication on a hostname",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Certificate identifier tag",
							"type": "string",
							"maxLength": 36,
							"readOnly": true,
							"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get the Hostname Client Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"certificate": {
															"type": "string",
															"description": "The hostname certificate",
															"example": "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\nMQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\nCGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\nKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\ndZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\nizNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\nGKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\nBAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\nMlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\nSvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\nYbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n-----END CERTIFICATE-----\n"
														},
														"issuer": {
															"type": "string",
															"readOnly": true,
															"description": "The certificate authority that issued the certificate",
															"example": "GlobalSign"
														},
														"signature": {
															"type": "string",
															"readOnly": true,
															"description": "The type of hash used for the certificate",
															"example": "SHA256WithRSA"
														},
														"serial_number": {
															"type": "string",
															"description": "The serial number on the uploaded certificate",
															"example": "6743787633689793699141714808227354901"
														},
														"expires_on": {
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"description": "The date when the certificate expires",
															"example": "2100-01-01T05:20:00+00:00"
														},
														"status": {
															"enum": [
																"initializing",
																"pending_deployment",
																"pending_deletion",
																"active",
																"deleted",
																"deployment_timed_out",
																"deletion_timed_out"
															],
															"readOnly": true,
															"description": "Status of the certificate or the association",
															"example": "active"
														},
														"uploaded_on": {
															"type": "string",
															"format": "date-time",
															"description": "The time when the certificate was uploaded",
															"example": "2019-10-28T18:11:23.374110+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Delete Hostname Client Certificate",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Hostname Client Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1certificates~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/origin_tls_client_auth/hostnames": {
			"put": {
				"summary": "Enable or Disable a Hostname for Client Authentication",
				"description": "Associate a hostname to a certificate and enable, disable or invalidate the association. If disabled, client certificate will not be sent to the hostname even if activated at the zone level. 100 maximum associations on a single certificate are allowed. Note: Use a null value for parameter *enabled* to invalidate the association",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Enable or Disable a Hostname for Client Authentication response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"properties": {
																	"hostname": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/hostname"
																	},
																	"cert_id": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																	},
																	"enabled": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/enabled"
																	},
																	"status": {
																		"enum": [
																			"initializing",
																			"pending_deployment",
																			"pending_deletion",
																			"active",
																			"deleted",
																			"deployment_timed_out",
																			"deletion_timed_out"
																		],
																		"readOnly": true,
																		"description": "Status of the certificate or the association",
																		"example": "active"
																	},
																	"created_at": {
																		"type": "string",
																		"format": "date-time",
																		"readOnly": true,
																		"description": "The time when the certificate was created",
																		"example": "2100-01-01T05:20:00+00:00"
																	},
																	"updated_at": {
																		"type": "string",
																		"format": "date-time",
																		"readOnly": true,
																		"description": "The time when the certificate was updated",
																		"example": "2100-01-01T05:20:00+00:00"
																	},
																	"cert_status": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/properties/status"
																	},
																	"issuer": {
																		"type": "string",
																		"readOnly": true,
																		"description": "The certificate authority that issued the certificate",
																		"example": "GlobalSign"
																	},
																	"signature": {
																		"type": "string",
																		"readOnly": true,
																		"description": "The type of hash used for the certificate",
																		"example": "SHA256WithRSA"
																	},
																	"serial_number": {
																		"type": "string",
																		"description": "The serial number on the uploaded certificate",
																		"example": "6743787633689793699141714808227354901"
																	},
																	"certificate": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/certificate"
																	},
																	"cert_uploaded_on": {
																		"type": "string",
																		"format": "date-time",
																		"description": "The time when the certificate was uploaded",
																		"example": "2019-10-28T18:11:23.374110+00:00"
																	},
																	"cert_updated_at": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/properties/updated_at"
																	},
																	"expires_on": {
																		"type": "string",
																		"format": "date-time",
																		"readOnly": true,
																		"description": "The date when the certificate expires",
																		"example": "2100-01-01T05:20:00+00:00"
																	}
																}
															}
														],
														"properties": {
															"id": {
																"description": "Certificate identifier tag",
																"type": "string",
																"maxLength": 36,
																"readOnly": true,
																"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
															},
															"certificate": {
																"type": "string",
																"description": "The hostname certificate",
																"example": "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\nMQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\nCGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\nKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\ndZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\nizNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\nGKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\nBAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\nMlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\nSvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\nYbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n-----END CERTIFICATE-----\n"
															},
															"private_key": {
																"type": "string",
																"description": "The hostname certificate's private key",
																"example": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmG\ndtcGbg/1CGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKn\nabIRuGvBKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpid\ntnKX/a+50GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+py\nFxIXjbEIdZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pE\newooaeO2izNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABAoIBACbhTYXBZYKmYPCb\nHBR1IBlCQA2nLGf0qRuJNJZg5iEzXows/6tc8YymZkQE7nolapWsQ+upk2y5Xdp/\naxiuprIs9JzkYK8Ox0r+dlwCG1kSW+UAbX0bQ/qUqlsTvU6muVuMP8vZYHxJ3wmb\n+ufRBKztPTQ/rYWaYQcgC0RWI20HTFBMxlTAyNxYNWzX7RKFkGVVyB9RsAtmcc8g\n+j4OdosbfNoJPS0HeIfNpAznDfHKdxDk2Yc1tV6RHBrC1ynyLE9+TaflIAdo2MVv\nKLMLq51GqYKtgJFIlBRPQqKoyXdz3fGvXrTkf/WY9QNq0J1Vk5ERePZ54mN8iZB7\n9lwy/AkCgYEA6FXzosxswaJ2wQLeoYc7ceaweX/SwTvxHgXzRyJIIT0eJWgx13Wo\n/WA3Iziimsjf6qE+SI/8laxPp2A86VMaIt3Z3mJN/CqSVGw8LK2AQst+OwdPyDMu\niacE8lj/IFGC8mwNUAb9CzGU3JpU4PxxGFjS/eMtGeRXCWkK4NE+G08CgYEA1Kp9\nN2JrVlqUz+gAX+LPmE9OEMAS9WQSQsfCHGogIFDGGcNf7+uwBM7GAaSJIP01zcoe\nVAgWdzXCv3FLhsaZoJ6RyLOLay5phbu1iaTr4UNYm5WtYTzMzqh8l1+MFFDl9xDB\nvULuCIIrglM5MeS/qnSg1uMoH2oVPj9TVst/ir8CgYEAxrI7Ws9Zc4Bt70N1As+U\nlySjaEVZCMkqvHJ6TCuVZFfQoE0r0whdLdRLU2PsLFP+q7qaeZQqgBaNSKeVcDYR\n9B+nY/jOmQoPewPVsp/vQTCnE/R81spu0mp0YI6cIheT1Z9zAy322svcc43JaWB7\nmEbeqyLOP4Z4qSOcmghZBSECgYACvR9Xs0DGn+wCsW4vze/2ei77MD4OQvepPIFX\ndFZtlBy5ADcgE9z0cuVB6CiL8DbdK5kwY9pGNr8HUCI03iHkW6Zs+0L0YmihfEVe\nPG19PSzK9CaDdhD9KFZSbLyVFmWfxOt50H7YRTTiPMgjyFpfi5j2q348yVT0tEQS\nfhRqaQKBgAcWPokmJ7EbYQGeMbS7HC8eWO/RyamlnSffdCdSc7ue3zdVJxpAkQ8W\nqu80pEIF6raIQfAf8MXiiZ7auFOSnHQTXUbhCpvDLKi0Mwq3G8Pl07l+2s6dQG6T\nlv6XTQaMyf6n1yjzL+fzDrH3qXMxHMO/b13EePXpDMpY7HQpoLDi\n-----END RSA PRIVATE KEY-----\n"
															},
															"enabled": {
																"type": "boolean",
																"description": "Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association",
																"example": true,
																"nullable": true
															},
															"hostname": {
																"type": "string",
																"maxLength": 255,
																"description": "The hostname on the origin for which the client certificate uploaded will be used",
																"example": "app.example.com"
															},
															"cert_id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"config"
								],
								"properties": {
									"config": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"hostname": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/hostname"
												},
												"cert_id": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
												},
												"enabled": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames/put/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/enabled"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/origin_tls_client_auth/hostnames/{hostname}": {
			"get": {
				"summary": "Get the Hostname Status for Client Authentication",
				"parameters": [
					{
						"name": "hostname",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 255,
							"description": "The hostname on the origin for which the client certificate uploaded will be used",
							"example": "app.example.com"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get the Hostname Status for Client Authentication response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"hostname": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1%7Bhostname%7D/get/parameters/0/schema"
														},
														"cert_id": {
															"description": "Certificate identifier tag",
															"type": "string",
															"maxLength": 36,
															"readOnly": true,
															"example": "2458ce5a-0c35-4c7f-82c7-8e9487d3ff60"
														},
														"enabled": {
															"type": "boolean",
															"description": "Indicates whether hostname-level authenticated origin pulls is enabled. A null value voids the association",
															"example": true,
															"nullable": true
														},
														"status": {
															"enum": [
																"initializing",
																"pending_deployment",
																"pending_deletion",
																"active",
																"deleted",
																"deployment_timed_out",
																"deletion_timed_out"
															],
															"readOnly": true,
															"description": "Status of the certificate or the association",
															"example": "active"
														},
														"created_at": {
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"description": "The time when the certificate was created",
															"example": "2100-01-01T05:20:00+00:00"
														},
														"updated_at": {
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"description": "The time when the certificate was updated",
															"example": "2100-01-01T05:20:00+00:00"
														},
														"cert_status": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1%7Bhostname%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/status"
														},
														"issuer": {
															"type": "string",
															"readOnly": true,
															"description": "The certificate authority that issued the certificate",
															"example": "GlobalSign"
														},
														"signature": {
															"type": "string",
															"readOnly": true,
															"description": "The type of hash used for the certificate",
															"example": "SHA256WithRSA"
														},
														"serial_number": {
															"type": "string",
															"description": "The serial number on the uploaded certificate",
															"example": "6743787633689793699141714808227354901"
														},
														"certificate": {
															"type": "string",
															"description": "The hostname certificate",
															"example": "-----BEGIN CERTIFICATE-----\nMIIDtTCCAp2gAwIBAgIJAMHAwfXZ5/PWMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\nBAYTAkFVMRMwEQYDVQQIEwpTb21lLVN0YXRlMSEwHwYDVQQKExhJbnRlcm5ldCBX\naWRnaXRzIFB0eSBMdGQwHhcNMTYwODI0MTY0MzAxWhcNMTYxMTIyMTY0MzAxWjBF\nMQswCQYDVQQGEwJBVTETMBEGA1UECBMKU29tZS1TdGF0ZTEhMB8GA1UEChMYSW50\nZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\nCgKCAQEAwQHoetcl9+5ikGzV6cMzWtWPJHqXT3wpbEkRU9Yz7lgvddmGdtcGbg/1\nCGZu0jJGkMoppoUo4c3dts3iwqRYmBikUP77wwY2QGmDZw2FvkJCJlKnabIRuGvB\nKwzESIXgKk2016aTP6/dAjEHyo6SeoK8lkIySUvK0fyOVlsiEsCmOpidtnKX/a+5\n0GjB79CJH4ER2lLVZnhePFR/zUOyPxZQQ4naHf7yu/b5jhO0f8fwt+pyFxIXjbEI\ndZliWRkRMtzrHOJIhrmJ2A1J7iOrirbbwillwjjNVUWPf3IJ3M12S9pEewooaeO2\nizNTERcG9HzAacbVRn2Y2SWIyT/18QIDAQABo4GnMIGkMB0GA1UdDgQWBBT/LbE4\n9rWf288N6sJA5BRb6FJIGDB1BgNVHSMEbjBsgBT/LbE49rWf288N6sJA5BRb6FJI\nGKFJpEcwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgTClNvbWUtU3RhdGUxITAfBgNV\nBAoTGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZIIJAMHAwfXZ5/PWMAwGA1UdEwQF\nMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHHFwl0tH0quUYZYO0dZYt4R7SJ0pCm2\n2satiyzHl4OnXcHDpekAo7/a09c6Lz6AU83cKy/+x3/djYHXWba7HpEu0dR3ugQP\nMlr4zrhd9xKZ0KZKiYmtJH+ak4OM4L3FbT0owUZPyjLSlhMtJVcoRp5CJsjAMBUG\nSvD8RX+T01wzox/Qb+lnnNnOlaWpqu8eoOenybxKp1a9ULzIVvN/LAcc+14vioFq\n2swRWtmocBAs8QR9n4uvbpiYvS8eYueDCWMM4fvFfBhaDZ3N9IbtySh3SpFdQDhw\nYbjM2rxXiyLGxB4Bol7QTv4zHif7Zt89FReT/NBy4rzaskDJY5L6xmY=\n-----END CERTIFICATE-----\n"
														},
														"cert_uploaded_on": {
															"type": "string",
															"format": "date-time",
															"description": "The time when the certificate was uploaded",
															"example": "2019-10-28T18:11:23.374110+00:00"
														},
														"cert_updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1origin_tls_client_auth~1hostnames~1%7Bhostname%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/updated_at"
														},
														"expires_on": {
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"description": "The date when the certificate expires",
															"example": "2100-01-01T05:20:00+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#ssl:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_identifier}/stream/copy": {
			"post": {
				"summary": "Upload a video from a URL",
				"description": "Link to a video and it will be downloaded and made available on Stream.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Upload a video from a URL response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"url"
								],
								"properties": {
									"url": {
										"description": "URL to the video. Server must be publicly routable and support HTTP HEAD requests and HTTP GET range requests. Server should respond to HTTP HEAD requests with a content-range header with the size of the file.",
										"example": "https://example.com/myvideo.mp4",
										"format": "uri",
										"type": "string"
									},
									"creator": {
										"description": "User-defined identifier of the media creator",
										"example": "creator-id_abcde12345",
										"maxLength": 64,
										"type": "string"
									},
									"thumbnailTimestampPct": {
										"description": "Timestamp location of thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image will be from 0s of the video.",
										"example": 0.529241,
										"default": 0,
										"minimum": 0,
										"maximum": 1,
										"type": "number"
									},
									"allowedOrigins": {
										"description": "List which origins should be allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty array will allow the video to be viewed on any origin.",
										"type": "array",
										"example": [
											"example.com"
										],
										"items": {
											"type": "string"
										}
									},
									"requireSignedURLs": {
										"description": "Indicates whether the video can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the video.",
										"type": "boolean",
										"readOnly": true,
										"default": false,
										"example": true
									},
									"watermark": {
										"type": "object",
										"properties": {
											"uid": {
												"description": "Watermark profile unique identifier.",
												"example": "ea95132c15732412d22c1476fa83f27a",
												"maxLength": 32,
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream": {
			"post": {
				"summary": "Initiate a Video Upload using TUS",
				"description": "Initiate a video upload using the TUS protocol. On success, server will response with status code 201 (Created) and include a 'location' header indicating where the video content should be uploaded to. See https://tus.io for protocol details.",
				"parameters": [
					{
						"in": "header",
						"name": "Tus-Resumable",
						"schema": {
							"description": "This header specifies the TUS protocol version. This header must be included in every upload request.\nNotes: The only supported version of TUS protocol is 1.0.0.",
							"type": "string",
							"enum": [
								"1.0.0"
							],
							"example": "1.0.0"
						},
						"required": true
					},
					{
						"in": "header",
						"name": "Upload-Creator",
						"schema": {
							"description": "User-defined identifier of the media creator",
							"example": "creator-id_abcde12345",
							"maxLength": 64,
							"type": "string"
						},
						"required": true
					},
					{
						"in": "header",
						"name": "Upload-Length",
						"schema": {
							"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
							"type": "integer",
							"minimum": 0
						},
						"required": true
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Initiate a Video Upload using TUS response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"get": {
				"summary": "List videos",
				"description": "Up to 1000 videos can be listed with one request, use optional parameters below to get a specific range of videos.\n\nPlease note that Cloudflare Stream does not use pagination, instead it uses a cursor pattern to list more than 1000 videos. In order to list all videos, make multiple requests to the API using the created date-time of the last item in the previous request as the `before` or `after` parameter.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream/post/parameters/3/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List videos response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object",
														"properties": {
															"allowedOrigins": {
																"description": "List which origins should be allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty array will allow the video to be viewed on any origin.",
																"type": "array",
																"example": [
																	"example.com"
																],
																"items": {
																	"type": "string"
																}
															},
															"created": {
																"description": "When the media item was created.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"duration": {
																"description": "Duration of the video in seconds. A value of `-1` means the duration is unknown. The duration becomes available after the upload, before the video is ready.",
																"type": "integer",
																"readOnly": true
															},
															"input": {
																"type": "object",
																"readOnly": true,
																"properties": {
																	"height": {
																		"description": "Height of the video in pixels. A value of `-1` means the height is unknown. Value becomes available after the upload, before the video is ready.",
																		"type": "integer",
																		"readOnly": true
																	},
																	"width": {
																		"description": "Width of the video in seconds. A value of `-1` means the width is unknown. Value becomes available after the upload, before the video is ready.",
																		"type": "integer",
																		"readOnly": true
																	}
																}
															},
															"maxDurationSeconds": {
																"description": "Maximum duration for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploaded that exceed this duration will fail during processing. A value of `-1` means the value is unknown.",
																"type": "integer"
															},
															"meta": {
																"description": "User modifyable key-value store. Can use used for keeping references to another system of record for managing videos.",
																"example": {},
																"type": "object"
															},
															"modified": {
																"description": "When the media item was last modified.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"uploadExpiry": {
																"description": "Date at which the video upload URL is no longer valid for direct user uploads.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"type": "string"
															},
															"playback": {
																"type": "object",
																"readOnly": true,
																"properties": {
																	"hls": {
																		"type": "string",
																		"readOnly": true,
																		"description": "HLS manifest for the video",
																		"example": "https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8"
																	},
																	"dash": {
																		"type": "string",
																		"readOnly": true,
																		"description": "DASH Media Presentation Description for the video",
																		"example": "https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd"
																	}
																}
															},
															"preview": {
																"description": "URI of preview page for video. Omitted until encoding is complete.",
																"example": "https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a",
																"format": "uri",
																"readOnly": true,
																"type": "string"
															},
															"readyToStream": {
																"description": "Indicates whether the video is ready for viewing.",
																"type": "boolean",
																"readOnly": true,
																"example": true
															},
															"requireSignedURLs": {
																"description": "Indicates whether the video can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the video.",
																"type": "boolean",
																"readOnly": true,
																"default": false,
																"example": true
															},
															"size": {
																"description": "Size of the media item in bytes.",
																"example": 4190963,
																"readOnly": true,
																"type": "number"
															},
															"status": {
																"description": "Object specifying more fine-grained status for this video item. If \"state\" is \"inprogress\" or \"error\", \"step\" will be one of \"encoding\" or \"manifest\". When \"state\" is \"inprogress\", \"pctComplete\" will be a number between 0 and 100 indicating the approximate percent of that step that has been completed. If the \"state\" is \"error\", \"errorReasonCode\" and \"errorReasonText\" will contain additional details.",
																"properties": {
																	"state": {
																		"description": "Specifies the processing status of the video.",
																		"type": "string",
																		"enum": [
																			"pendingupload",
																			"downloading",
																			"queued",
																			"inprogress",
																			"ready",
																			"error"
																		],
																		"readOnly": true,
																		"example": "inprogress"
																	},
																	"pctComplete": {
																		"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
																		"type": "integer",
																		"minimum": 0,
																		"maximum": 100,
																		"readOnly": true
																	},
																	"errorReasonCode": {
																		"description": "Provides an error code on why this video failed to encode. Empty if the state is not in \"error\". This field should be preferred for programmatic use.",
																		"type": "string",
																		"readOnly": true,
																		"example": "ERR_NON_VIDEO"
																	},
																	"errorReasonText": {
																		"description": "Provides a reason in English on why this video failed to encode. Empty if the state is not in \"error\".",
																		"type": "string",
																		"readOnly": true,
																		"example": "The file was not recognized as a valid video file."
																	}
																},
																"readOnly": true
															},
															"thumbnail": {
																"description": "URI to thumbnail for a media item. Omitted until encoding is complete.",
																"example": "https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg",
																"format": "uri",
																"readOnly": true,
																"type": "string"
															},
															"thumbnailTimestampPct": {
																"description": "Timestamp location of thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image will be from 0s of the video.",
																"example": 0.529241,
																"default": 0,
																"minimum": 0,
																"maximum": 1,
																"type": "number"
															},
															"uid": {
																"description": "Media item unique identifier",
																"example": "ea95132c15732412d22c1476fa83f27a",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"creator": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream/post/parameters/1/schema"
															},
															"liveInput": {
																"description": "Live input ID that was used to upload this video with Stream Live.",
																"example": "fc0a8dc887b16759bfd9ad922230a014",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"uploaded": {
																"description": "When the media item was uploaded.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"watermark": {
																"type": "object",
																"properties": {
																	"uid": {
																		"description": "Watermark profile unique identifier.",
																		"example": "ea95132c15732412d22c1476fa83f27a",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string"
																	},
																	"size": {
																		"description": "The size of the image in bytes.",
																		"example": 29472,
																		"readOnly": true,
																		"type": "number"
																	},
																	"height": {
																		"description": "Height of the image in pixels.",
																		"type": "integer",
																		"readOnly": true
																	},
																	"width": {
																		"description": "Width of the image in pixels.",
																		"type": "integer",
																		"readOnly": true
																	},
																	"created": {
																		"description": "When the watermark profile was created.",
																		"example": "2014-01-02T02:20:00+00:00",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string"
																	},
																	"downloadedFrom": {
																		"description": "The source URL to the image where it was downloaded from. If the watermark profile was created via direct upload, this field will be null.",
																		"example": "https://company.com/logo.png",
																		"readOnly": true,
																		"type": "string"
																	},
																	"name": {
																		"description": "A short description for the profile.",
																		"default": "",
																		"example": "Marketing Videos",
																		"readOnly": true,
																		"type": "string"
																	},
																	"opacity": {
																		"description": "Translucency of the image. 0.0 means completely transparent, and 1.0 means completely opaque. Note that if the image is already semi-transparent, setting this to 1.0 will not make it completely opaque.",
																		"default": 1,
																		"example": 0.75,
																		"minimum": 0,
																		"maximum": 1,
																		"readOnly": true,
																		"type": "number"
																	},
																	"padding": {
																		"description": "Whitespace between the adjacent edges (determined by position) of the video and the image. 0.0 means no padding, and 1.0 means padded full video width or length, determined by the algorithm.",
																		"default": 0.05,
																		"example": 0.1,
																		"minimum": 0,
																		"maximum": 1,
																		"readOnly": true,
																		"type": "number"
																	},
																	"scale": {
																		"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. 0.0 means no scaling (use the size of the image as-is), and 1.0 fills the entire video.",
																		"default": 0.15,
																		"example": 0.1,
																		"minimum": 0,
																		"maximum": 1,
																		"readOnly": true,
																		"type": "number"
																	},
																	"position": {
																		"description": "Location of the image. Valid positions are: \"upperRight\", \"upperLeft\", \"lowerLeft\", \"lowerRight\", and \"center\". Note that \"center\" will ignore the \"padding\" parameter. ",
																		"default": "upperRight",
																		"example": "center",
																		"readOnly": true,
																		"type": "string"
																	}
																},
																"x-cfLinkErrors": {
																	"10020": "Invalid Percentage Range for Opacity",
																	"10021": "Invalid Percentage Range for Padding",
																	"10022": "Invalid Percentage Range for Scale",
																	"10023": "Invalid Value for Position",
																	"10024": "Forbidden: Allowed watermark count exceeded"
																}
															},
															"nft": {
																"type": "object",
																"readOnly": true,
																"properties": {
																	"contract": {
																		"readOnly": true,
																		"description": "ERC-721 compatible contract address",
																		"example": "0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85",
																		"maxLength": 42,
																		"minLength": 42,
																		"type": "string"
																	},
																	"token": {
																		"readOnly": true,
																		"description": "Token ID for the NFT",
																		"type": "integer"
																	}
																}
															}
														},
														"x-cfLinkErrors": {
															"10000": "Internal Server Error",
															"10001": "Authentication Failure",
															"10002": "Authorization Failure: Credential not authorized",
															"10003": "Not Found: Resource not found",
															"10004": "Decoding Error: Cannot decode request body",
															"10005": "Bad Request",
															"10006": "Beta Access Error",
															"10007": "Forbidden: Copy upload not enabled",
															"10008": "Invalid Duration",
															"10009": "Forbidden: Allowed key count exceeded",
															"10010": "Invalid URL",
															"10011": "File size too large",
															"10012": "Forbidden: Webhook feature not enabled",
															"10014": "File size too large",
															"10015": "Chunk size is too small",
															"10016": "Too Many Requests",
															"10017": "Expiration for upload has passed",
															"10018": "Video already uploaded",
															"10019": "Invalid Percentage Range",
															"100013": "Conflict: Media has been modified since last request"
														}
													},
													"type": "array"
												}
											}
										},
										{
											"properties": {
												"total": {
													"description": "Total number of videos that match the provided filters",
													"example": 35586,
													"readOnly": true,
													"type": "integer"
												},
												"range": {
													"description": "Total number of remaining videos based on cursor position",
													"example": 1000,
													"readOnly": true,
													"type": "integer"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/stream/direct_upload": {
			"post": {
				"summary": "Create a video and get authenticated direct upload URL",
				"description": "Direct uploads allow users to upload videos without API keys. A common place to use direct uploads is on web apps, client side applications, or on mobile devices where users upload content directly to Stream.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a video and get authenticated direct upload URL response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"uploadURL": {
															"type": "string",
															"description": "The URL the unauthenticated upload can be performed to using a single HTTP POST (multipart/form-data) request.",
															"example": "www.example.com/samplepath"
														},
														"uid": {
															"description": "Media item unique identifier",
															"example": "ea95132c15732412d22c1476fa83f27a",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"watermark": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/watermark"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"maxDurationSeconds"
								],
								"properties": {
									"maxDurationSeconds": {
										"type": "integer",
										"description": "Direct uploads occupy minutes of videos on your Stream account until they are expired. This value will be used to calculate the duration the video will occupy before the video is uploaded. After upload, the duration of the uploaded will be used instead. If a video longer than this value is uploaded, the video will result in an error.",
										"minimum": 1,
										"maximum": 21600
									},
									"expiry": {
										"description": "The date after upload will not be accepted",
										"example": "2021-01-02T02:20:00+00:00",
										"format": "date-time",
										"default": "Now + 30 minutes",
										"type": "string"
									},
									"creator": {
										"description": "User-defined identifier of the media creator",
										"example": "creator-id_abcde12345",
										"maxLength": 64,
										"type": "string"
									},
									"thumbnailTimestampPct": {
										"description": "Timestamp location of thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image will be from 0s of the video.",
										"example": 0.529241,
										"default": 0,
										"minimum": 0,
										"maximum": 1,
										"type": "number"
									},
									"allowedOrigins": {
										"description": "List which origins should be allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty array will allow the video to be viewed on any origin.",
										"type": "array",
										"example": [
											"example.com"
										],
										"items": {
											"type": "string"
										}
									},
									"requireSignedURLs": {
										"description": "Indicates whether the video can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the video.",
										"type": "boolean",
										"readOnly": true,
										"default": false,
										"example": true
									},
									"watermark": {
										"type": "object",
										"properties": {
											"uid": {
												"description": "Watermark profile unique identifier.",
												"example": "ea95132c15732412d22c1476fa83f27a",
												"maxLength": 32,
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream/{identifier}": {
			"get": {
				"summary": "Video details",
				"description": "Fetch details of a single video.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Media item unique identifier",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Video details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete video",
				"description": "Delete a video on Cloudflare Stream. On success, all copies of the video are deleted.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete video response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"post": {
				"summary": "Associate video to an NFT",
				"description": "By associating a token ID and contract address on Stream videos, you make it possible to transfer admin rights on a video. If a change in ownership of the ERC-721 token happens on the Ethereum blockchain, the new owner of the token may claim control over of the video.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Associate video to an NFT response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object",
														"properties": {
															"allowedOrigins": {
																"description": "List which origins should be allowed to display the video. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty array will allow the video to be viewed on any origin.",
																"type": "array",
																"example": [
																	"example.com"
																],
																"items": {
																	"type": "string"
																}
															},
															"created": {
																"description": "When the media item was created.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"duration": {
																"description": "Duration of the video in seconds. A value of `-1` means the duration is unknown. The duration becomes available after the upload, before the video is ready.",
																"type": "integer",
																"readOnly": true
															},
															"input": {
																"type": "object",
																"readOnly": true,
																"properties": {
																	"height": {
																		"description": "Height of the video in pixels. A value of `-1` means the height is unknown. Value becomes available after the upload, before the video is ready.",
																		"type": "integer",
																		"readOnly": true
																	},
																	"width": {
																		"description": "Width of the video in seconds. A value of `-1` means the width is unknown. Value becomes available after the upload, before the video is ready.",
																		"type": "integer",
																		"readOnly": true
																	}
																}
															},
															"maxDurationSeconds": {
																"description": "Maximum duration for a video upload. Can be set for a video that is not yet uploaded to limit its duration. Uploaded that exceed this duration will fail during processing. A value of `-1` means the value is unknown.",
																"type": "integer"
															},
															"meta": {
																"description": "User modifyable key-value store. Can use used for keeping references to another system of record for managing videos.",
																"example": {},
																"type": "object"
															},
															"modified": {
																"description": "When the media item was last modified.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"uploadExpiry": {
																"description": "Date at which the video upload URL is no longer valid for direct user uploads.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"type": "string"
															},
															"playback": {
																"type": "object",
																"readOnly": true,
																"properties": {
																	"hls": {
																		"type": "string",
																		"readOnly": true,
																		"description": "HLS manifest for the video",
																		"example": "https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.m3u8"
																	},
																	"dash": {
																		"type": "string",
																		"readOnly": true,
																		"description": "DASH Media Presentation Description for the video",
																		"example": "https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/manifest/video.mpd"
																	}
																}
															},
															"preview": {
																"description": "URI of preview page for video. Omitted until encoding is complete.",
																"example": "https://watch.cloudflarestream.com/ea95132c15732412d22c1476fa83f27a",
																"format": "uri",
																"readOnly": true,
																"type": "string"
															},
															"readyToStream": {
																"description": "Indicates whether the video is ready for viewing.",
																"type": "boolean",
																"readOnly": true,
																"example": true
															},
															"requireSignedURLs": {
																"description": "Indicates whether the video can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the video.",
																"type": "boolean",
																"readOnly": true,
																"default": false,
																"example": true
															},
															"size": {
																"description": "Size of the media item in bytes.",
																"example": 4190963,
																"readOnly": true,
																"type": "number"
															},
															"status": {
																"description": "Object specifying more fine-grained status for this video item. If \"state\" is \"inprogress\" or \"error\", \"step\" will be one of \"encoding\" or \"manifest\". When \"state\" is \"inprogress\", \"pctComplete\" will be a number between 0 and 100 indicating the approximate percent of that step that has been completed. If the \"state\" is \"error\", \"errorReasonCode\" and \"errorReasonText\" will contain additional details.",
																"properties": {
																	"state": {
																		"description": "Specifies the processing status of the video.",
																		"type": "string",
																		"enum": [
																			"pendingupload",
																			"downloading",
																			"queued",
																			"inprogress",
																			"ready",
																			"error"
																		],
																		"readOnly": true,
																		"example": "inprogress"
																	},
																	"pctComplete": {
																		"description": "Indicates the size of the entire upload in bytes. The value must be a non-negative integer.",
																		"type": "integer",
																		"minimum": 0,
																		"maximum": 100,
																		"readOnly": true
																	},
																	"errorReasonCode": {
																		"description": "Provides an error code on why this video failed to encode. Empty if the state is not in \"error\". This field should be preferred for programmatic use.",
																		"type": "string",
																		"readOnly": true,
																		"example": "ERR_NON_VIDEO"
																	},
																	"errorReasonText": {
																		"description": "Provides a reason in English on why this video failed to encode. Empty if the state is not in \"error\".",
																		"type": "string",
																		"readOnly": true,
																		"example": "The file was not recognized as a valid video file."
																	}
																},
																"readOnly": true
															},
															"thumbnail": {
																"description": "URI to thumbnail for a media item. Omitted until encoding is complete.",
																"example": "https://videodelivery.net/ea95132c15732412d22c1476fa83f27a/thumbnails/thumbnail.jpg",
																"format": "uri",
																"readOnly": true,
																"type": "string"
															},
															"thumbnailTimestampPct": {
																"description": "Timestamp location of thumbnail image calculated as a percentage value of the video's duration. To convert from a second-wise timestamp to a percentage, divide the desired timestamp by the total duration of the video.  If this value is not set, the default thumbnail image will be from 0s of the video.",
																"example": 0.529241,
																"default": 0,
																"minimum": 0,
																"maximum": 1,
																"type": "number"
															},
															"uid": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bidentifier%7D/get/parameters/0/schema"
															},
															"creator": {
																"description": "User-defined identifier of the media creator",
																"example": "creator-id_abcde12345",
																"maxLength": 64,
																"type": "string"
															},
															"liveInput": {
																"description": "Live input ID that was used to upload this video with Stream Live.",
																"example": "fc0a8dc887b16759bfd9ad922230a014",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"uploaded": {
																"description": "When the media item was uploaded.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"watermark": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/watermark"
															},
															"nft": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bidentifier%7D/post/requestBody/content/application~1json/schema"
															}
														},
														"x-cfLinkErrors": {
															"10000": "Internal Server Error",
															"10001": "Authentication Failure",
															"10002": "Authorization Failure: Credential not authorized",
															"10003": "Not Found: Resource not found",
															"10004": "Decoding Error: Cannot decode request body",
															"10005": "Bad Request",
															"10006": "Beta Access Error",
															"10007": "Forbidden: Copy upload not enabled",
															"10008": "Invalid Duration",
															"10009": "Forbidden: Allowed key count exceeded",
															"10010": "Invalid URL",
															"10011": "File size too large",
															"10012": "Forbidden: Webhook feature not enabled",
															"10014": "File size too large",
															"10015": "Chunk size is too small",
															"10016": "Too Many Requests",
															"10017": "Expiration for upload has passed",
															"10018": "Video already uploaded",
															"10019": "Invalid Percentage Range",
															"100013": "Conflict: Media has been modified since last request"
														}
													},
													"type": "array"
												}
											}
										},
										{
											"properties": {
												"total": {
													"description": "Total number of videos that match the provided filters",
													"example": 35586,
													"readOnly": true,
													"type": "integer"
												},
												"range": {
													"description": "Total number of remaining videos based on cursor position",
													"example": 1000,
													"readOnly": true,
													"type": "integer"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"readOnly": true,
								"properties": {
									"contract": {
										"readOnly": true,
										"description": "ERC-721 compatible contract address",
										"example": "0x57f1887a8bf19b14fc0d912b9b2acc9af147ea85",
										"maxLength": 42,
										"minLength": 42,
										"type": "string"
									},
									"token": {
										"readOnly": true,
										"description": "Token ID for the NFT",
										"type": "integer"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream/{identifier}/embed": {
			"get": {
				"summary": "Embed Code HTML",
				"description": "Fetch an HTML code snippet that can be used to embed the video in a web page that is delivered through Cloudflare. On success returns an HTML fragment (not a full document) that can be included on a web page to display the video. On failure returns a JSON response body (see Error Response) above.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Media item unique identifier",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Embed Code HTML response",
						"content": {
							"application/json": {
								"schema": {
									"example": "<stream id=\"ea95132c15732412d22c1476fa83f27a\"></stream><script data-cfasync=\"false\" defer type=\"text/javascript\" src=\"https://embed.cloudflarestream.com/embed/we4g.fla9.latest.js\"></script>"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/stream/{identifier}/token": {
			"post": {
				"summary": "Create a signed URL token for a video",
				"description": "Create a signed URL token for a video. If no body is provided in the request, a token will be created with default values.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Media item unique identifier",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a signed URL token for a video response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"token": {
															"type": "string",
															"description": "Signed token for use with the signed URLs feature.",
															"example": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIn0.eyJzdWIiOiJlYTk1MTMyYzE1NzMyNDEyZDIyYzE0NzZmYTgzZjI3YSIsImtpZCI6ImU5ZGI5OTBhODI2NjZkZDU3MWM3N2Y5NDRhNWM1YzhkIiwiZXhwIjoiMTUzNzQ2MDM2NSIsIm5iZiI6IjE1Mzc0NTMxNjUifQ.OZhqOARADn1iubK6GKcn25hN3nU-hCFF5q9w2C4yup0C4diG7aMIowiRpP-eDod8dbAJubsiFuTKrqPcmyCKWYsiv0TQueukqbQlF7HCO1TV-oF6El5-7ldJ46eD-ZQ0XgcIYEKrQOYFF8iDQbqPm3REWd6BnjKZdeVrLzuRaiSnZ9qqFpGu5dfxIY9-nZKDubJHqCr3Imtb211VIG_b9MdtO92JjvkDS-rxT_pkEfTZSafl1OU-98A7KBGtPSJHz2dHORIrUiTA6on4eIXTj9aFhGiir4rSn-rn0OjPRTtJMWIDMoQyE_fwrSYzB7MPuzL2t82BWaEbHZTfixBm5A"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"readOnly": true,
								"properties": {
									"id": {
										"readOnly": true,
										"description": "Optional id of a Stream signing key. If present, the 'pem' field is also required.",
										"example": "ab0d4ef71g4425f8dcba9041231813000",
										"type": "string"
									},
									"pem": {
										"readOnly": true,
										"description": "Optional base64 encoded private key in PEM format associated with a Stream signing key. If present, the 'id' field is also required.",
										"example": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc284dnBvOFpEWXRkOUgzbWlPaW1qYXAzVXlVM0oyZ3kwTUYvN1R4blJuRnkwRHpDCkxqUk9naFZsQ0hPQmxsd3NVaE9GU0lyYnN4K05tUTdBeS90TFpXSGxuVGF3UWJ5WGZGOStJeDhVSnNlSHBGV1oKNVF5Z1JYd2liSjh1MVVsZ2xlcmZHMkpueldjVXpZTzEySktZN3doSkw1ajROMWgxZFJNUXQ5Q1pkZFlCQWRzOQpCdk02cjRFMDcxQkhQekhWeDMrUTI1VWtubGdUNXIwS3FiM1E1Y0dlTlBXY1JreW1ybkJEWWR0OXR4eFFMb1dPCllzNXdsMnVYWFVYL0VGcDMwajU0Nmp6czllWExLYlNDbjJjTDZFVE96Y2x3aG9DRGx2a2VQT05rUE9LMDVKNUMKTm1TdFdhMG9hV1VGRzM0MFl3cVVrWGt4OU9tNndXd1JldU1uU1FJREFRQUJBb0lCQUFJOHo1ck5kOEdtOGJBMgo1S3pxQjI1R2lOVENwbUNJeW53NXRJWHZTQmNHcEdydUcvdlN2WG9kVlFVSVY0TWdHQkVXUEFrVzdsNWVBcHI4CnA1ZFd5SkRXYTNkdklFSE9vSEpYU3dBYksxZzZEMTNVa2NkZ1EyRGpoNVhuWDhHZCtBY2c2SmRTQWgxOWtYSHEKMk54RUtBVDB6Ri83a1g2MkRkREFBcWxmQkpGSXJodVIvZUdEVWh4L2piTTRhQ2JCcFdiM0pnRE9OYm5tS1ZoMwpxS2ZwZmRZZENZU1lzWUxrNTlxRDF2VFNwUVFUQ0VadW9VKzNzRVNhdkJzaUs1bU0vTzY5ZkRMRXNURG1MeTVQCmhEK3BMQXI0SlhNNjFwRGVBS0l3cUVqWWJybXlDRHRXTUdJNnZzZ0E1eXQzUUJaME9vV2w5QUkwdWxoZ3p4dXQKZ2ZFNTRRRUNnWUVBN0F3a0lhVEEzYmQ4Nk9jSVZnNFlrWGk1cm5aNDdsM1k4V24zcjIzUmVISXhLdkllRUtSbgp5bUlFNDFtRVBBSmlGWFpLK1VPTXdkeS9EcnFJUithT1JiT2NiV01jWUg2QzgvbG1wdVJFaXE3SW1Ub3VWcnA4CnlnUkprMWprVDA4cTIvNmg4eTBEdjJqMitsaHFXNzRNOUt0cmwxcTRlWmZRUFREL01tR1NnTWtDZ1lFQXdhY04KaSttN1p6dnJtL3NuekF2VlZ5SEtwZHVUUjNERk1naC9maC9tZ0ZHZ1RwZWtUOVV5b3FleGNYQXdwMVlhL01iQQoyNTVJVDZRbXZZTm5yNXp6Wmxic2tMV0hsYllvbWhmWnVXTHhXR3hRaEFORWdaMFVVdUVTRGMvbWx2UXZHbEtSCkZoaGhBUWlVSmdDamhPaHk1SlBiNGFldGRKd0UxK09lVWRFaE1vRUNnWUVBNG8yZ25CM1o4ck5xa3NzemlBek4KYmNuMlJVbDJOaW9pejBwS3JMaDFaT29NNE5BekpQdjJsaHRQMzdtS0htS1hLMHczRjFqTEgwSTBxZmxFVmVZbQpSU1huakdHazJjUnpBYUVzOGgrQzNheDE0Z01pZUtGU3BqNUpNOEFNbVVZOXQ1cUVhN2FYc3o0V1ZoOUlMYmVTCkRiNzlhKzVwd21LQVBrcnBsTHhyZFdrQ2dZQlNNSHVBWVdBbmJYZ1BDS2FZWklGVWJNUWNacmY0ZnpWQ2lmYksKYWZHampvRlNPZXdEOGdGK3BWdWJRTGwxbkFieU44ek1xVDRaaHhybUhpcFlqMjJDaHV2NmN3RXJtbGRiSnpwQwpBMnRaVXdkTk1ESFlMUG5lUHlZeGRJWnlsUXFVeW14SGkydElUQUxNcWtLOGV3ZWdXZHpkeGhQSlJScU5JazhrCmZIVHhnUUtCZ1FEUFc2UXIxY3F3QjNUdnVWdWR4WGRqUTdIcDFodXhrNEVWaEFJZllKNFhSTW1NUE5YS28wdHUKdUt6LzE0QW14R0dvSWJxYVc1bDMzeFNteUxhem84clNUN0tSTjVKME9JSHcrZkR5SFgxdHpVSjZCTldDcEFTcwpjbWdNK0htSzVON0w2bkNaZFJQY2IwU1hGaVRQUGhCUG1PVWFDUnpER0ZMK2JYM1VwajJKbWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
										"type": "string"
									},
									"exp": {
										"readOnly": true,
										"description": "Optional unix epoch timestamp after which the token will not be accepted, up to a maximum of 24 hours from issuing time. If not set, defaults to one hour after issuing.",
										"type": "integer"
									},
									"nbf": {
										"readOnly": true,
										"description": "Optional unix epoch timestamp before which the token will not be accepted.  If not set, defaults to one hour before issuing.",
										"type": "integer"
									},
									"downloadable": {
										"readOnly": true,
										"description": "Optional boolean value which enables the signed token to be used to access mp4 download links for the video.",
										"default": false,
										"type": "boolean"
									},
									"accessRules": {
										"readOnly": true,
										"description": "Optional list of access rule constraints on the token. Access can be blocked or allowed based on an IP, IP range, or by country. Access Rules are evaluated first-to-last. If a Rule matches, the associated action is applied and no further rules are evaluated.",
										"type": "array",
										"example": [
											{
												"type": "ip.geoip.country",
												"country": [
													"US",
													"MX"
												],
												"action": "block"
											},
											{
												"type": "ip.src",
												"ip": [
													"93.184.216.0/24",
													"2400:cb00::/32"
												],
												"action": "allow"
											},
											{
												"type": "any",
												"action": "block"
											}
										],
										"items": {
											"type": "object",
											"readOnly": true,
											"description": "Access Rules allow you to define rules to have finer-grained control over your content than signed URL tokens alone. They are primarily aimed at making tokens conditionally valid based on user information. Access Rules are specified on token payloads as the accessRules property containing an array of Rule objects.",
											"properties": {
												"action": {
													"readOnly": true,
													"description": "Action to take if a request matches a rule. If the action is 'block', the signed token will block views for viewers that match this rule.",
													"type": "string",
													"enum": [
														"allow",
														"block"
													],
													"example": "allow"
												},
												"type": {
													"readOnly": true,
													"description": "Available rule types to match requests on. Type 'any' matches all requests, and may be used as a wildcard to apply a default action after other rules.",
													"type": "string",
													"enum": [
														"any",
														"ip.src",
														"ip.geoip.country"
													],
													"example": "ip.src"
												},
												"ip": {
													"readOnly": true,
													"description": "Array of IPv4 or IPV6 addresses or CIDRs to match requests on.",
													"type": "array",
													"items": {
														"type": "string"
													}
												},
												"country": {
													"readOnly": true,
													"description": "Array of 2-letter country codes in ISO 3166-1 Alpha-2 format to match requests on.",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream/keys": {
			"post": {
				"summary": "Create a Signing Key",
				"description": "Upon creation you will get a RSA private key in PEM and JWK formats. Keys are created, used and deleted independently of videos. Every key can sign any of your videos. Key files are displayed only once upon creation.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a Signing Key response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1keys/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														},
														"pem": {
															"description": "Key in PEM format",
															"example": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMFRqd2pPaVpXbUo0M3ZmM1RvNERvWG1YV3RKR05HeVhmaHl0dExhQmdGMStFUVdRCkRLaG9LYm9hS21xakNBc21za3V0YkxVN1BVOGRrUU5ER1p3S3VWczA4elNaNGt4aTR0RWdQUFp5dDdkWEMrbFkKUllveXJBR0Y0QVhoeTMyOWJIQ1AxSWxyQkIvQWtHZ25kTEFndW54WTByUmdjdk96aWF3NktKeEZuYzJVSzBXVQo4YjBwNEtLSEdwMUtMOWRrMFdUOGRWWXFiZVJpSmpDbFVFbWg4eXY5Q2xPVmFTNEt4aVg2eFRRNERadzZEYUpmCklWM1F0Tmd2cG1ieWxOSmFQSG5zc3JodDJHS1A5NjJlS2poUVJsaWd2SFhKTE9uSm9KZkxlSUVIWitpeFdmY1QKRE1IOTJzR3ZvdzFET2p4TGlDTjF6SEsraDdiTG9YVGlMZ2M0a3dJREFRQUJBb0lCQVFEQ0lCclNJMTlteGNkdwoycExVaUdCR0N4T3NhVDVLbGhkYUpESG9ZdzUxbEVuTWNXVGUyY01NTkdqaXdsN1NyOFlQMkxmcERaOFJtNzdMCk5rT2tGMnk3M3l5YUhFeEw5S1FyMys0Um9ubCtqTlp2YnV0QVdxSDVodEE0dER4MUd3NE85OEg4YWlTcGh1eWQKRUliTGRrQm54OGlDZUdxbFBnbHZ6Q1dLV0xVZlhGbXplMkF5UjBzaWMyYXZRLzZyclYwb3pDdGQ1T0Vod093agphaCs3N1dZV1l0bkEraDhXZVZreWcvdG44UTJJOXo5ZVJYdlZxR2sxMDZLcWRtZFdiU2tIZzA4cFRUSGhVM2paCnMvZGNjdEdOMWFFanlUQWY0QzdHT2lrcUd1MGFTaW1aeDFOM2RWQzBobngySjJtdlhNQ0VtZ0g3TjVnZUxWUFAKOWdkQjdBQkJBb0dCQU5sT2hGQVhaTHV6Y0Ftczl1K3AxM05STWRFOHpIK2ZFaFBrbk9zZ21Xb3VqUzkxQTRtZgpuK01oN3d5bTZoVU1DbDk2WUNMNGtPM0RUMmlYWlRqTXZuMHBoVEx1MXNYcGxWNDJuamRnZGd3cFBEM0FnL1Y5ClVvV2hxdVhoa1I3RFpsUGg5Nmk1aEE0M1BvbTVPQm9BektJbEcrT3ZKUkhhZEVveC9jSmZScFd2QW9HQkFQWjUKNnNmWDdESElCNEtBczRmMWRuNGZJUkMweUF2WVdCL1R3UzZHUWVoNFRFbDVuSkQwWk9ZRVdUbVVBK3pPanZTNApuM09tZ2xNQTU5SGd1ZW13QXVRcEtwWFBOcFUvTERJaThtNnpmTUpvL3E5M0NOQlFQZngzZGh4ZVh4OXE2Mzg3Cm84QWxkOE42RGs4TThjRis3SlNaeUVJODJzLzdpdGRseXA2bFdLaGRBb0dCQUtnU0VrUGYxQWxZdjA2OGVFRGwKRzc0VkRuTEdrMlFobzltKzk1N2psOFNJUEtwMzFrU2JNUTU3TUdpWXNIT1czRzc4TjE3VTRVTUR6R2NZc1RFOQpLaGVrQldGZldMMjU2OHp5Y1d4akx1bzQrbDdJaDBkWHBudTBqbms5L1AvT0lWYS9iczBRcnhKUHFBN2RNb2JxCkYxdFJXRURCTmVxWkMxaFhVZTBEdzVRQkFvR0JBSjdBQ2NNcnhKcVBycDZVakkyK1FOS2M5Q3dSZEdPRXRjWFMKR3JQL2owWE83YnZKVTFsZHYvc1N3L0U4NzRZL3lIM0F5QnF5SFhDZXZiRkZZQmt1MzczYThlM0pwK3RhNC9scQozdUVFUkEvbmxscW5mWXJHbEJZZlQzaVlKQVpWVkZiL3I4bWJtRmJVTDVFazBqV0JyWmxNcjFwU1hkRGx3QmhhCkhMWXY0em1WQW9HQkFLQmw0cFNnbkNSTEJMUU9jWjhXQmhRSjAwZDZieFNrTGNpZ0xUNFJvY3RwNTY1SHJPMDAKSVFLdElTaEg1a2s3SVRHdUYvOERXZEN2djBMYnhvZVBJc2NFaStTaXk5WDZwWENPaS8xa2FyYVU5U3BpZ3czago3YjVlUVV0UlovTkIycVJwc3EzMEdCUENqanhudEVmK2lqelhUS0xNRndyUDhBMTlQNzRONGVTMAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
															"readOnly": true,
															"type": "string"
														},
														"jwk": {
															"description": "Key in JWK format",
															"readOnly": true,
															"example": "eyJ1c2UiOiJzaWciLCJrdHkiOiJSU0EiLCJraWQiOiI1MjEzY2ZhMTIxZjcwYjhjMTM4MDY4NmZmYzM3MWJhMyIsImFsZyI6IlJTMjU2IiwibiI6IjBUandqT2laV21KNDN2ZjNUbzREb1htWFd0SkdOR3lYZmh5dHRMYUJnRjEtRVFXUURLaG9LYm9hS21xakNBc21za3V0YkxVN1BVOGRrUU5ER1p3S3VWczA4elNaNGt4aTR0RWdQUFp5dDdkWEMtbFlSWW95ckFHRjRBWGh5MzI5YkhDUDFJbHJCQl9Ba0dnbmRMQWd1bnhZMHJSZ2N2T3ppYXc2S0p4Rm5jMlVLMFdVOGIwcDRLS0hHcDFLTDlkazBXVDhkVllxYmVSaUpqQ2xVRW1oOHl2OUNsT1ZhUzRLeGlYNnhUUTREWnc2RGFKZklWM1F0Tmd2cG1ieWxOSmFQSG5zc3JodDJHS1A5NjJlS2poUVJsaWd2SFhKTE9uSm9KZkxlSUVIWi1peFdmY1RETUg5MnNHdm93MURPanhMaUNOMXpISy1oN2JMb1hUaUxnYzRrdyIsImUiOiJBUUFCIiwiZCI6IndpQWEwaU5mWnNYSGNOcVMxSWhnUmdzVHJHay1TcFlYV2lReDZHTU9kWlJKekhGazN0bkRERFJvNHNKZTBxX0dEOWkzNlEyZkVadS15elpEcEJkc3U5OHNtaHhNU19Ta0s5X3VFYUo1Zm96V2IyN3JRRnFoLVliUU9MUThkUnNPRHZmQl9Hb2txWWJzblJDR3kzWkFaOGZJZ25ocXBUNEpiOHdsaWxpMUgxeFpzM3RnTWtkTEluTm1yMFAtcTYxZEtNd3JYZVRoSWNEc0kyb2Z1LTFtRm1MWndQb2ZGbmxaTW9QN1pfRU5pUGNfWGtWNzFhaHBOZE9pcW5ablZtMHBCNE5QS1UweDRWTjQyYlAzWEhMUmpkV2hJOGt3SC1BdXhqb3BLaHJ0R2tvcG1jZFRkM1ZRdElaOGRpZHByMXpBaEpvQi16ZVlIaTFUel9ZSFFld0FRUSIsInAiOiIyVTZFVUJka3U3TndDYXoyNzZuWGMxRXgwVHpNZjU4U0UtU2M2eUNaYWk2TkwzVURpWi1mNHlIdkRLYnFGUXdLWDNwZ0l2aVE3Y05QYUpkbE9NeS1mU21GTXU3V3hlbVZYamFlTjJCMkRDazhQY0NEOVgxU2hhR3E1ZUdSSHNObVUtSDNxTG1FRGpjLWliazRHZ0RNb2lVYjQ2OGxFZHAwU2pIOXdsOUdsYTgiLCJxIjoiOW5ucXg5ZnNNY2dIZ29DemhfVjJmaDhoRUxUSUM5aFlIOVBCTG9aQjZIaE1TWG1ja1BSazVnUlpPWlFEN002TzlMaWZjNmFDVXdEbjBlQzU2YkFDNUNrcWxjODJsVDhzTWlMeWJyTjh3bWotcjNjSTBGQTlfSGQySEY1ZkgycnJmenVqd0NWM3czb09Ud3p4d1g3c2xKbklRanphel91SzEyWEtucVZZcUYwIiwiZHAiOiJxQklTUTlfVUNWaV9Ucng0UU9VYnZoVU9jc2FUWkNHajJiNzNudU9YeElnOHFuZldSSnN4RG5zd2FKaXdjNWJjYnZ3M1h0VGhRd1BNWnhpeE1UMHFGNlFGWVY5WXZibnJ6UEp4YkdNdTZqajZYc2lIUjFlbWU3U09lVDM4Xzg0aFZyOXV6UkN2RWstb0R0MHlodW9YVzFGWVFNRTE2cGtMV0ZkUjdRUERsQUUiLCJkcSI6Im5zQUp3eXZFbW8tdW5wU01qYjVBMHB6MExCRjBZNFMxeGRJYXNfLVBSYzd0dThsVFdWMl8teExEOFR6dmhqX0lmY0RJR3JJZGNKNjlzVVZnR1M3ZnZkcng3Y21uNjFyai1XcmU0UVJFRC1lV1dxZDlpc2FVRmg5UGVKZ2tCbFZVVnYtdnladVlWdFF2a1NUU05ZR3RtVXl2V2xKZDBPWEFHRm9jdGlfak9aVSIsInFpIjoib0dYaWxLQ2NKRXNFdEE1eG54WUdGQW5UUjNwdkZLUXR5S0F0UGhHaHkybm5ya2VzN1RRaEFxMGhLRWZtU1RzaE1hNFhfd05aMEstX1F0dkdoNDhpeHdTTDVLTEwxZnFsY0k2TF9XUnF0cFQxS21LRERlUHR2bDVCUzFGbjgwSGFwR215cmZRWUU4S09QR2UwUl82S1BOZE1vc3dYQ3Nfd0RYMF92ZzNoNUxRIn0=",
															"type": "string"
														},
														"created": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1keys/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"get": {
				"summary": "List Signing Keys",
				"description": "",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1keys/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Signing Keys response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "5213cfa121f70b8c1380686ffc371ba3"
															},
															"created": {
																"description": "When the key was created",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/stream/keys/{identifier}": {
			"delete": {
				"summary": "Delete key",
				"description": "Deleting a key revokes all signed URLs generated with the key.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "5213cfa121f70b8c1380686ffc371ba3"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete key response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"example": "",
													"type": "string"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream/{video_identifier}/downloads": {
			"post": {
				"summary": "Create downloads",
				"description": "Create downloads for a video, this can only be done if the video is ready to view.",
				"parameters": [
					{
						"name": "video_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Media item unique identifier",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create downloads response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"get": {
				"summary": "List downloads",
				"description": "View the downloads created for this video",
				"parameters": [
					{
						"name": "video_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bvideo_identifier%7D~1downloads/post/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bvideo_identifier%7D~1downloads/post/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List downloads response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bvideo_identifier%7D~1downloads/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/stream/{video_identifier}/captions/{language}": {
			"put": {
				"summary": "Upload a caption/subtitle",
				"description": "Upload the file to the endpoint for a specific BCP47 language. One caption/subtitle per language is allowed.",
				"parameters": [
					{
						"name": "language",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Language in BCP 47 format",
							"example": "tr",
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "video_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Media item unique identifier",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Upload a caption/subtitle response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"required": [
									"file"
								],
								"properties": {
									"file": {
										"type": "string",
										"description": "WebVTT file to upload",
										"example": "@/Users/kyle/Desktop/tr.vtt"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a caption/subtitle",
				"description": "Remove the caption or subtitle from a video",
				"parameters": [
					{
						"name": "language",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bvideo_identifier%7D~1captions~1%7Blanguage%7D/put/parameters/0/schema"
						}
					},
					{
						"name": "video_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bvideo_identifier%7D~1captions~1%7Blanguage%7D/put/parameters/1/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1%7Bvideo_identifier%7D~1captions~1%7Blanguage%7D/put/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a caption/subtitle response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "string",
													"example": ""
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream/{video_identifier}/captions": {
			"get": {
				"summary": "List captions/subtitles",
				"description": "View the currently available captions for a specific video.",
				"parameters": [
					{
						"name": "video_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Media item unique identifier",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List captions/subtitles response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object",
														"properties": {
															"label": {
																"description": "Language label in the native language to be displayed to the user",
																"readOnly": true,
																"example": "Türkçe",
																"type": "string"
															},
															"language": {
																"description": "Language in BCP 47 format",
																"example": "tr",
																"readOnly": true,
																"type": "string"
															}
														}
													},
													"type": "array"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/stream/webhook": {
			"put": {
				"summary": "Create a webhook",
				"description": "",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a webhook response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"notificationUrl"
								],
								"properties": {
									"notificationUrl": {
										"description": "The URL the webhooks will be sent to",
										"example": "https://example.com",
										"format": "uri",
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "View the webhook",
				"description": "",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1webhook/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "View the webhook response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1webhook/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete the webhook",
				"description": "",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1webhook/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete the webhook response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"example": "",
													"type": "string"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream/watermarks": {
			"post": {
				"summary": "Create a Watermark Profile via Basic Upload",
				"description": "You can create a watermark profile using a single HTTP POST (multipart/form-data) request.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a Watermark Profile via Basic Upload response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"required": [
									"file"
								],
								"properties": {
									"file": {
										"type": "string",
										"description": "Image file to upload",
										"example": "@/Users/rchen/Downloads/watermark.png"
									},
									"name": {
										"description": "A short description for the profile.",
										"default": "",
										"example": "Marketing Videos",
										"readOnly": true,
										"type": "string"
									},
									"opacity": {
										"description": "Translucency of the image. 0.0 means completely transparent, and 1.0 means completely opaque. Note that if the image is already semi-transparent, setting this to 1.0 will not make it completely opaque.",
										"default": 1,
										"example": 0.75,
										"minimum": 0,
										"maximum": 1,
										"readOnly": true,
										"type": "number"
									},
									"padding": {
										"description": "Whitespace between the adjacent edges (determined by position) of the video and the image. 0.0 means no padding, and 1.0 means padded full video width or length, determined by the algorithm.",
										"default": 0.05,
										"example": 0.1,
										"minimum": 0,
										"maximum": 1,
										"readOnly": true,
										"type": "number"
									},
									"scale": {
										"description": "The size of the image relative to the overall size of the video. This parameter will adapt to horizontal and vertical videos automatically. 0.0 means no scaling (use the size of the image as-is), and 1.0 fills the entire video.",
										"default": 0.15,
										"example": 0.1,
										"minimum": 0,
										"maximum": 1,
										"readOnly": true,
										"type": "number"
									},
									"position": {
										"description": "Location of the image. Valid positions are: \"upperRight\", \"upperLeft\", \"lowerLeft\", \"lowerRight\", and \"center\". Note that \"center\" will ignore the \"padding\" parameter. ",
										"default": "upperRight",
										"example": "center",
										"readOnly": true,
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Watermark Profiles",
				"description": "List all the watermark profiles under your account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1watermarks/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Watermark Profiles response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object",
														"properties": {
															"uid": {
																"description": "Watermark profile unique identifier.",
																"example": "ea95132c15732412d22c1476fa83f27a",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"size": {
																"description": "The size of the image in bytes.",
																"example": 29472,
																"readOnly": true,
																"type": "number"
															},
															"height": {
																"description": "Height of the image in pixels.",
																"type": "integer",
																"readOnly": true
															},
															"width": {
																"description": "Width of the image in pixels.",
																"type": "integer",
																"readOnly": true
															},
															"created": {
																"description": "When the watermark profile was created.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"downloadedFrom": {
																"description": "The source URL to the image where it was downloaded from. If the watermark profile was created via direct upload, this field will be null.",
																"example": "https://company.com/logo.png",
																"readOnly": true,
																"type": "string"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1watermarks/post/requestBody/content/multipart~1form-data/schema/properties/name"
															},
															"opacity": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1watermarks/post/requestBody/content/multipart~1form-data/schema/properties/opacity"
															},
															"padding": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1watermarks/post/requestBody/content/multipart~1form-data/schema/properties/padding"
															},
															"scale": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1watermarks/post/requestBody/content/multipart~1form-data/schema/properties/scale"
															},
															"position": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1watermarks/post/requestBody/content/multipart~1form-data/schema/properties/position"
															}
														},
														"x-cfLinkErrors": {
															"10020": "Invalid Percentage Range for Opacity",
															"10021": "Invalid Percentage Range for Padding",
															"10022": "Invalid Percentage Range for Scale",
															"10023": "Invalid Value for Position",
															"10024": "Forbidden: Allowed watermark count exceeded"
														}
													},
													"type": "array"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/stream/watermarks/{identifier}": {
			"get": {
				"summary": "Watermark Profile Details",
				"description": "Fetch details of a single watermark profile.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Watermark profile unique identifier.",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Watermark Profile Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete Watermark Profile",
				"description": "Mark a watermark profile as deleted",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1watermarks~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1watermarks~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Watermark Profile response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "string",
													"example": ""
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream/live_inputs": {
			"post": {
				"summary": "Create a live input",
				"description": "Create a live input that can be streamed to. Add an output in order to direct traffic.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a live input response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"meta": {
										"description": "User modifyable key-value store. Can use used for keeping references to another system of record for managing live inputs.",
										"example": {
											"name": "test stream 1"
										},
										"type": "object"
									},
									"recording": {
										"description": "Control recording the input to a Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied.",
										"properties": {
											"mode": {
												"description": "Specifies the recording behavior of the live input. 'off' indicates no recording will be made. 'automatic' indicates a recording should be made, and that the recording should transition to on-demand after Stream Live stops receiving input.",
												"type": "string",
												"enum": [
													false,
													"automatic"
												],
												"default": false,
												"example": "automatic"
											},
											"requireSignedURLs": {
												"description": "Indicates whether videos created using this Live Input has the requireSignedURLs property set. This enforces access controls on any video created with the live input.",
												"type": "boolean",
												"default": false,
												"example": true
											},
											"allowedOrigins": {
												"description": "List of which origins should be allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty array will allow the video to be viewed on any origin.",
												"type": "array",
												"example": [
													"example.com"
												],
												"items": {
													"type": "string"
												}
											},
											"timeoutSeconds": {
												"description": "Duration a live input configured in 'automatic' mode waits before determining a recording should transition from live to on-demand. A value of 0 indicates the platform default should be used. 0 is recommended for most use cases.",
												"type": "integer",
												"default": 0
											}
										},
										"example": {
											"mode": false,
											"requireSignedURLs": false,
											"timeoutSeconds": 0
										},
										"type": "object"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List live inputs",
				"description": "View the live inputs that have been created on this account. Some information is not included on list requests, such as the URL to stream to. To get that information, request a single live input.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List live inputs response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"properties": {
															"uid": {
																"description": "Live input unique identifier",
																"example": "66be4bf738797e01e1fca35a7bdecdcd",
																"maxLength": 32,
																"readOnly": true,
																"type": "string"
															},
															"meta": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs/post/requestBody/content/application~1json/schema/properties/meta"
															},
															"created": {
																"description": "When the live input was created.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															},
															"modified": {
																"description": "When the live input was last modified.",
																"example": "2014-01-02T02:20:00+00:00",
																"format": "date-time",
																"readOnly": true,
																"type": "string"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/stream/live_inputs/{live_input_identifier}": {
			"get": {
				"summary": "Live input details",
				"description": "Fetch details about a single live input",
				"parameters": [
					{
						"name": "live_input_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Live input unique identifier",
							"example": "66be4bf738797e01e1fca35a7bdecdcd",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Live input details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update live input details",
				"description": "Update details about a single live input",
				"parameters": [
					{
						"name": "live_input_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update live input details response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"meta": {
										"description": "User modifyable key-value store. Can use used for keeping references to another system of record for managing live inputs.",
										"example": {
											"name": "test stream 1"
										},
										"type": "object"
									},
									"recording": {
										"description": "Control recording the input to a Stream video. Behavior depends on the mode. In most cases, the video will initially be viewable as a live video and transition to on-demand after a condition is satisfied.",
										"properties": {
											"mode": {
												"description": "Specifies the recording behavior of the live input. 'off' indicates no recording will be made. 'automatic' indicates a recording should be made, and that the recording should transition to on-demand after Stream Live stops receiving input.",
												"type": "string",
												"enum": [
													false,
													"automatic"
												],
												"default": false,
												"example": "automatic"
											},
											"requireSignedURLs": {
												"description": "Indicates whether videos created using this Live Input has the requireSignedURLs property set. This enforces access controls on any video created with the live input.",
												"type": "boolean",
												"default": false,
												"example": true
											},
											"allowedOrigins": {
												"description": "List of which origins should be allowed to display videos created with this input. Enter allowed origin domains in an array and use `*` for wildcard subdomains. Empty array will allow the video to be viewed on any origin.",
												"type": "array",
												"example": [
													"example.com"
												],
												"items": {
													"type": "string"
												}
											},
											"timeoutSeconds": {
												"description": "Duration a live input configured in 'automatic' mode waits before determining a recording should transition from live to on-demand. A value of 0 indicates the platform default should be used. 0 is recommended for most use cases.",
												"type": "integer",
												"default": 0
											}
										},
										"example": {
											"mode": false,
											"requireSignedURLs": false,
											"timeoutSeconds": 0
										},
										"type": "object"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete live input",
				"description": "Prevent a live input from being streamed to. This makes the live input inaccessible to any future API calls or RTMPS transmission",
				"parameters": [
					{
						"name": "live_input_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete live input response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/stream/live_inputs/{live_input_identifier}/outputs": {
			"post": {
				"summary": "Add an output to a live input",
				"description": "Create a new output which will be restreamed to by a live input",
				"parameters": [
					{
						"name": "live_input_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Live input unique identifier",
							"example": "66be4bf738797e01e1fca35a7bdecdcd",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add an output to a live input response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"uid": {
															"description": "Output item unique identifier",
															"example": "baea4d9c515887b80289d5c33cf01145",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"url": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D~1outputs/post/requestBody/content/application~1json/schema/properties/url"
														},
														"streamKey": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D~1outputs/post/requestBody/content/application~1json/schema/properties/streamKey"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"url",
									"streamKey"
								],
								"properties": {
									"url": {
										"description": "The URL a output will restream to",
										"example": "rtmp://a.rtmp.youtube.com/live2",
										"readOnly": true,
										"type": "string"
									},
									"streamKey": {
										"description": "The streamKey used to authenticate against a output's target",
										"example": "uzya-f19y-g2g9-a2ee-51j2",
										"readOnly": true,
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List outputs associated with a live input",
				"description": "Create a new output to restream to when a live input receives data",
				"parameters": [
					{
						"name": "live_input_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D~1outputs/post/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D~1outputs/post/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List outputs associated with a live input response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1stream~1live_inputs~1%7Blive_input_identifier%7D~1outputs/post/responses/200/content/application~1json/schema/allOf/1/properties/result"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/stream/live_inputs/{live_input_identifier}/outputs/{output_identifier}": {
			"delete": {
				"summary": "Remove an output from a live input",
				"description": "Remove an output from a live input",
				"parameters": [
					{
						"name": "output_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Output item unique identifier",
							"example": "baea4d9c515887b80289d5c33cf01145",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "live_input_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Live input unique identifier",
							"example": "66be4bf738797e01e1fca35a7bdecdcd",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Remove an output from a live input response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/images/v1": {
			"post": {
				"summary": "Upload an image using a single HTTP request",
				"description": "Upload an image with up to 10 Megabytes using a single HTTP POST (multipart/form-data) request.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Upload an image using a single HTTP request response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"items": {
														"allOf": [
															{
																"type": "object",
																"properties": {
																	"id": {
																		"description": "Image unique identifier",
																		"example": "ZxR0pLaXRldlBtaFhhO2FiZGVnaA",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string"
																	},
																	"filename": {
																		"description": "Image file name",
																		"example": "avatar.png",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string"
																	},
																	"metadata": {
																		"description": "User modifyable key-value store. Can be used for keeping references to another system of record for managing images. Metadata must not exceed 1024 bytes.",
																		"example": {
																			"meta": "metaID"
																		},
																		"type": "object"
																	},
																	"requireSignedURLs": {
																		"description": "Indicates whether the image can be a accessed only using it's UID. If set to true, a signed token needs to be generated with a signing key to view the image.",
																		"type": "boolean",
																		"default": false,
																		"example": true
																	},
																	"variants": {
																		"description": "Object specifying available variants for an image.",
																		"properties": {
																			"thumbnail": {
																				"description": "URI to thumbnail variant for an image.",
																				"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/ZxR0pLaXRldlBtaFhhO2FiZGVnaA/thumbnail",
																				"format": "uri",
																				"readOnly": true,
																				"type": "string"
																			},
																			"hero": {
																				"description": "URI to hero variant for an image.",
																				"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/ZxR0pLaXRldlBtaFhhO2FiZGVnaA/hero",
																				"format": "uri",
																				"readOnly": true,
																				"type": "string"
																			},
																			"original": {
																				"description": "URI to original variant for an image.",
																				"example": "https://imagedelivery.net/MTt4OTd0b0w5aj/ZxR0pLaXRldlBtaFhhO2FiZGVnaA/original",
																				"format": "uri",
																				"readOnly": true,
																				"type": "string"
																			}
																		},
																		"readOnly": true
																	},
																	"uploaded": {
																		"description": "When the media item was uploaded.",
																		"example": "2014-01-02T02:20:00+00:00",
																		"format": "date-time",
																		"readOnly": true,
																		"type": "string"
																	}
																},
																"x-cfDeprecations": {
																	"direct_upload_v1_deprecation": {
																		"id": "direct_upload_v1_deprecation",
																		"description": "Use direct_upload v2 instead: https://api.cloudflare.com/#cloudflare-images-create-authenticated-direct-upload-url-v2. It allows you to control metadata, access policy, and returns the same image ID an image will be accessible with.",
																		"eol": "2022-07-01",
																		"display": true
																	}
																},
																"x-cfLinkErrors": {
																	"5400": "Bad Request.",
																	"5401": "Variant <name> not found.",
																	"5403": "The given account is not valid or is not authorized to access this service.",
																	"5404": "Image not found.",
																	"5408": "Client was sending upload too slowly.",
																	"5413": "Maximum image size of 10 MB is reached",
																	"5415": "Images must be uploaded as a form, not as raw image data. Please use multipart/form-data format.",
																	"5433": "Request has been aborted by the client.",
																	"5450": "Error while receiving upload.",
																	"5453": "The given account has reached a service limit.",
																	"5455": "Unsupported image format.",
																	"5500": "Internal Server Error.",
																	"5503": "Server Unavailable.",
																	"5540": "Error received from the storage.",
																	"5541": "Error while purging cache.",
																	"5542": "Error while loading account.",
																	"5543": "Error during audit.",
																	"5544": "Error during abuse operation.",
																	"5550": "Internal Server Error."
																}
															}
														]
													},
													"type": "array"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"required": [
									"file"
								],
								"properties": {
									"file": {
										"type": "string",
										"description": "Image file to upload.",
										"example": "@/Users/kyle/Desktop/logo.png"
									},
									"requireSignedURLs": {
										"type": "boolean",
										"description": "Indicates whether the image requires a signature token for the access.",
										"example": true,
										"default": false
									},
									"metadata": {
										"description": "User modifyable key-value store. Can use used for keeping references to another system of record for managing images.",
										"type": "object"
									},
									"url": {
										"type": "string",
										"description": "A URL to fetch an image from origin. Mutually exclusive with `file` parameter.",
										"example": "https://example.com/path/to/image.jpeg",
										"default": false
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List images",
				"description": "List up to 100 images with one request. Use the optional parameters below to get a specific range of images.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List images response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1/post/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
													},
													"type": "array"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/images/v1/{identifier}": {
			"patch": {
				"summary": "Update image",
				"description": "Update image access control. On access control change, all copies of the image are purged from cache.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Image unique identifier",
							"example": "ZxR0pLaXRldlBtaFhhO2FiZGVnaA",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update image response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"requireSignedURLs": {
										"description": "Indicates whether the image can be accessed using only its UID. If set to `true`, a signed token needs to be generated with a signing key to view the image. Returns a new UID on a change. No change if not specified.",
										"type": "boolean",
										"example": true
									},
									"metadata": {
										"description": "User modifiable key-value store. Can be used for keeping references to another system of record for managing images. No change if not specified.",
										"type": "object"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Image details",
				"description": "Fetch details for a single image.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1%7Bidentifier%7D/patch/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1%7Bidentifier%7D/patch/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Image details response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1%7Bidentifier%7D/patch/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete image",
				"description": "Delete an image on Cloudflare Images. On success, all copies of the image are deleted and purged from cache.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1%7Bidentifier%7D/patch/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1%7Bidentifier%7D/patch/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete image response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/images/v1/direct_upload": {
			"post": {
				"summary": "Create authenticated direct upload URL",
				"description": "Direct uploads allow users to upload images without API keys. A common use case are web apps, client-side applications, or mobile devices where users upload content directly to Cloudflare Images.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create authenticated direct upload URL response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"uploadURL": {
															"type": "string",
															"description": "The URL the unauthenticated upload can be performed to using a single HTTP POST (multipart/form-data) request.",
															"example": "https://upload.imagedelivery.net/e22e9e6b-c02b-42fd-c405-6c32af5fe623"
														},
														"id": {
															"description": "Image unique identifier",
															"example": "ZxR0pLaXRldlBtaFhhO2FiZGVnaA",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"id": "direct_upload_v1_deprecation",
					"description": "Use direct_upload v2 instead: https://api.cloudflare.com/#cloudflare-images-create-authenticated-direct-upload-url-v2. It allows you to control metadata, access policy, and returns the same image ID an image will be accessible with.",
					"eol": "2022-07-01",
					"display": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"expiry": {
										"description": "The date after which the upload will not be accepted. Minimum: Now + 2 minutes. Maximum: Now + 6 hours.",
										"example": "2021-01-02T02:20:00+00:00",
										"format": "date-time",
										"default": "Now + 30 minutes",
										"type": "string"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/images/v2/direct_upload": {
			"post": {
				"summary": "Create authenticated direct upload URL V2",
				"description": "Direct uploads allow users to upload images without API keys. A common use case are web apps, client-side applications, or mobile devices where users upload content directly to Cloudflare Images. This method creates a draft record for a future image. It returns an upload URL and an image identifier. To verify if the image itself has been uploaded, send an image details request (accounts/:account_identifier/images/v1/:identifier), and check that the `draft: true` property is not present.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create authenticated direct upload URL V2 response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"uploadURL": {
															"type": "string",
															"description": "The URL the unauthenticated upload can be performed to using a single HTTP POST (multipart/form-data) request.",
															"example": "https://upload.imagedelivery.net/FxUufywByo0m2v3xhKSiU8/e22e9e6b-c02b-42fd-c405-6c32af5fe600"
														},
														"id": {
															"type": "string",
															"description": "Image unique identifier",
															"example": "e22e9e6b-c02b-42fd-c405-6c32af5fe600",
															"maxLength": 32,
															"readOnly": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"requireSignedURLs": {
										"type": "boolean",
										"description": "Indicates whether the image requires a signature token to be accessed.",
										"example": true,
										"default": false
									},
									"metadata": {
										"description": "User modifiable key-value store. Can be used for keeping references to another system of record, for managing images.",
										"type": "object"
									},
									"expiry": {
										"description": "The date after which the upload will not be accepted. Minimum: Now + 2 minutes. Maximum: Now + 6 hours.",
										"example": "2021-01-02T02:20:00+00:00",
										"format": "date-time",
										"default": "Now + 30 minutes",
										"type": "string"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/images/v1/{identifier}/blob": {
			"get": {
				"summary": "Base image",
				"description": "Fetch base image. For most images this will be the originally uploaded file. For larger images it can be a near-lossless version of the original.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Image unique identifier",
							"example": "ZxR0pLaXRldlBtaFhhO2FiZGVnaA",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Base image response",
						"content": {
							"application/json": {
								"schema": {
									"example": "<image blob data>",
									"anyOf": [
										{
											"type": "string"
										},
										{
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/images/v1/stats": {
			"get": {
				"summary": "Images usage statistics",
				"description": "Fetch usage statistics details for Cloudflare Images.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Account identifier tag",
							"example": "023e105f4ecef8ad9ca31a8372d0c353",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Images usage statistics response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"count": {
											"type": "object",
											"properties": {
												"current": {
													"description": "Cloudflare Images current usage",
													"example": 1000,
													"readOnly": true,
													"type": "number"
												},
												"allowed": {
													"description": "Cloudflare Images allowed usage",
													"example": 100000,
													"readOnly": true,
													"type": "number"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/images/v1/variants": {
			"post": {
				"summary": "Create a variant",
				"description": "Specify variants that allow you to resize images for different use cases.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a variant response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants/post/requestBody/content/application~1json/schema/properties/id"
														},
														"options": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants/post/requestBody/content/application~1json/schema/properties/options"
														},
														"neverRequireSignedURLs": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants/post/requestBody/content/application~1json/schema/properties/neverRequireSignedURLs"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"id": {
										"example": "name-of-the-variant"
									},
									"options": {
										"description": "Allows you to define image resizing sizes for different use cases.",
										"type": "object",
										"required": [
											"fit",
											"metadata",
											"width",
											"height"
										],
										"properties": {
											"fit": {
												"description": "The fit property describes how the width and height dimensions should be interpreted.",
												"type": "string",
												"enum": [
													"scale-down",
													"contain",
													"cover",
													"crop",
													"pad"
												],
												"example": "scale-down"
											},
											"metadata": {
												"description": "What EXIF data should be preserved in the output image.",
												"type": "string",
												"enum": [
													"keep",
													"copyright",
													"none"
												],
												"example": "none"
											},
											"width": {
												"type": "number",
												"minimum": 1,
												"description": "Maximum width in image pixels.",
												"example": 1366
											},
											"height": {
												"type": "number",
												"minimum": 1,
												"description": "Maximum height in image pixels.",
												"example": 768
											}
										}
									},
									"neverRequireSignedURLs": {
										"type": "boolean",
										"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
										"example": true,
										"default": false
									}
								},
								"required": [
									"id",
									"options"
								]
							}
						}
					}
				}
			},
			"get": {
				"summary": "List variants",
				"description": "Lists existing variants.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List variants response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"variants": {
											"type": "object",
											"properties": {
												"name-of-the-variant": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants/post/requestBody/content/application~1json/schema"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/images/v1/variants/{identifier}": {
			"get": {
				"summary": "Variant details",
				"description": "Fetch details for a single variant.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "name-of-the-variant"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Variant details response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"variant": {
											"type": "object",
											"properties": {
												"id": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/get/parameters/0/schema"
												},
												"options": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/options"
												},
												"neverRequireSignedURLs": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/neverRequireSignedURLs"
												}
											},
											"required": [
												"id",
												"options"
											]
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"patch": {
				"summary": "Update a variant",
				"description": "Updating a variant purges the cache for all images associated with the variant.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a variant response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"options": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/options"
														},
														"neverRequireSignedURLs": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/neverRequireSignedURLs"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"options": {
										"description": "Allows you to define image resizing sizes for different use cases.",
										"type": "object",
										"required": [
											"fit",
											"metadata",
											"width",
											"height"
										],
										"properties": {
											"fit": {
												"description": "The fit property describes how the width and height dimensions should be interpreted.",
												"type": "string",
												"enum": [
													"scale-down",
													"contain",
													"cover",
													"crop",
													"pad"
												],
												"example": "scale-down"
											},
											"metadata": {
												"description": "What EXIF data should be preserved in the output image.",
												"type": "string",
												"enum": [
													"keep",
													"copyright",
													"none"
												],
												"example": "none"
											},
											"width": {
												"type": "number",
												"minimum": 1,
												"description": "Maximum width in image pixels.",
												"example": 1366
											},
											"height": {
												"type": "number",
												"minimum": 1,
												"description": "Maximum height in image pixels.",
												"example": 768
											}
										}
									},
									"neverRequireSignedURLs": {
										"type": "boolean",
										"description": "Indicates whether the variant can access an image without a signature, regardless of image access control.",
										"example": true,
										"default": false
									}
								},
								"required": [
									"options"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a variant",
				"description": "Deleting a variant purges the cache for all images associated with the variant.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1images~1v1~1variants~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a variant response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"example": "",
													"type": "string"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/images/v1/keys": {
			"get": {
				"summary": "List Signing Keys",
				"description": "Lists your signing keys. These can be found on your Cloudflare Images dashboard.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Signing Keys response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"name": {
																"description": "Key name",
																"example": "default",
																"readOnly": true,
																"type": "string"
															},
															"value": {
																"description": "Key value",
																"example": "Oix0bbNaT8Rge9PuyxUBrjI6zrgnsyJ5=",
																"readOnly": true,
																"type": "string"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/:account_id/pages/projects": {
			"get": {
				"summary": "Get projects",
				"description": "Fetch a list of all user projects",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get projects response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result_info": {
													"type": "object",
													"properties": {
														"page": {
															"example": 1
														},
														"per_page": {
															"example": 100
														},
														"count": {
															"example": 1
														},
														"total_count": {
															"example": 1
														}
													}
												}
											}
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create project",
				"description": "Make a new project",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create project response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"description": "Name of the project",
										"type": "string",
										"example": "NextJS Blog"
									},
									"id": {
										"description": "Id of the project",
										"type": "string",
										"readOnly": true,
										"example": "7b162ea7-7367-4d67-bcde-1160995d5"
									},
									"created_on": {
										"description": "When the project was created",
										"type": "string",
										"format": "date-time",
										"readOnly": true,
										"example": "2017-01-01T00:00:00+00:00"
									},
									"subdomain": {
										"description": "The Cloudflare subdomain associated with the project",
										"type": "string",
										"readOnly": true,
										"example": "helloworld.pages.dev"
									},
									"domains": {
										"description": "A list of associated custom domains for the project",
										"type": "array",
										"readOnly": true,
										"example": [
											"customdomain.com",
											"customdomain.org"
										],
										"items": {}
									},
									"source": {
										"readOnly": true
									},
									"build_config": {
										"description": "Configs for the project build process",
										"type": "object",
										"properties": {
											"build_command": {
												"description": "Command used to build project",
												"type": "string",
												"example": "npm run build"
											},
											"destination_dir": {
												"description": "Output directory of the build",
												"type": "string",
												"example": "build"
											},
											"root_dir": {
												"description": "Directory to run the command",
												"type": "string",
												"example": "/"
											},
											"web_analytics_tag": {
												"description": "The classifying tag for analytics",
												"type": "string",
												"example": "cee1c73f6e4743d0b5e6bb1a0bcaabcc"
											},
											"web_analytics_token": {
												"description": "The auth token for analytics",
												"type": "string",
												"example": "021e1057c18547eca7b79f2516f06o7x"
											}
										}
									},
									"deployment_configs": {
										"description": "Configs for deployments in a project",
										"type": "object",
										"properties": {
											"preview": {
												"description": "Configs for preview deploys",
												"type": "object",
												"properties": {
													"env_vars": {
														"description": "Environment variables for build configs",
														"type": "object",
														"properties": {
															"BUILD_VERSION": {
																"description": "Environment variable",
																"type": "object",
																"properties": {
																	"value": {
																		"description": "Environment variable value",
																		"type": "string",
																		"example": "3.3"
																	}
																},
																"example": {
																	"value": "3.3"
																}
															}
														}
													}
												}
											},
											"production": {
												"description": "Configs for production deploys",
												"type": "object",
												"properties": {
													"env_vars": {
														"description": "Environment variables for build configs",
														"type": "object",
														"properties": {
															"BUILD_VERSION": {
																"description": "Environment variable",
																"type": "object",
																"properties": {
																	"value": {
																		"description": "Environment variable value",
																		"type": "string",
																		"example": "3.3"
																	}
																},
																"example": {
																	"value": "3.3"
																}
															}
														}
													}
												}
											}
										}
									},
									"latest_deployment": {
										"description": "Most recent deployment to the repo",
										"readOnly": true
									},
									"canonical_deployment": {
										"description": "Most recent deployment to the repo",
										"readOnly": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/:account_id/pages/projects/:project_name": {
			"get": {
				"summary": "Get project",
				"description": "Fetch a project by name",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get project response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result_info": {
													"type": "object",
													"properties": {
														"page": {
															"example": 1
														},
														"per_page": {
															"example": 100
														},
														"count": {
															"example": 1
														},
														"total_count": {
															"example": 1
														}
													}
												}
											}
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete project",
				"description": "Destroy a project by name",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Delete project response",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"result": null,
										"success": true,
										"errors": [],
										"messages": []
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"patch": {
				"summary": "Update project",
				"description": "Set new attributes for an existing project. Modify environment variables. To delete an environment variable, set the key to null.",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Update project response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"deployment_configs": {
										"production": {
											"env_vars": {
												"delete_this_env_var": null,
												"BUILD_VERSION": {
													"value": "3.3"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/:account_id/pages/projects/:project_name/deployments": {
			"get": {
				"summary": "Get deployments",
				"description": "Fetch a list of deployments from a project",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get deployments response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"description": "Id of the deployment",
															"type": "string",
															"readOnly": true,
															"example": "f64788e9-fccd-4d4a-a28a-cb84f88f6"
														},
														"short_id": {
															"description": "Short Id (8 character) of the deployment",
															"type": "string",
															"readOnly": true,
															"example": "f64788e9"
														},
														"project_id": {
															"description": "Id of the project",
															"type": "string",
															"readOnly": true,
															"example": "7b162ea7-7367-4d67-bcde-1160995d5"
														},
														"project_name": {
															"readOnly": true,
															"description": "Name of the project",
															"type": "string",
															"example": "ninjakittens"
														},
														"environment": {
															"description": "Type of deploy",
															"type": "string",
															"readOnly": true,
															"pattern": "preview|prediction",
															"example": "preview"
														},
														"url": {
															"description": "The live URL to view this deployment",
															"type": "string",
															"readOnly": true,
															"example": "https://f64788e9.ninjakittens.pages.dev"
														},
														"created_on": {
															"description": "When the deployment was created",
															"format": "date-time",
															"type": "string",
															"readOnly": true,
															"example": "2021-03-09T00:55:03.923456+00:00"
														},
														"modified_on": {
															"description": "When the deployment was last modified",
															"format": "date-time",
															"type": "string",
															"readOnly": true,
															"example": "2021-03-09T00:58:59.045655"
														},
														"aliases": {
															"type": "array",
															"description": "A list of alias URLs pointing to this deployment",
															"readOnly": true,
															"example": [
																"https://branchname.projectname.pages.dev"
															],
															"items": {}
														},
														"latest_stage": {
															"readOnly": true
														},
														"env_vars": {
															"type": "object",
															"description": "A dict of env variables to build this deploy",
															"readOnly": true,
															"example": {
																"BUILD_VERSION": {
																	"value": "3.3"
																},
																"ENV": {
																	"value": "STAGING"
																}
															}
														},
														"deployment_trigger": {
															"description": "Info about what caused the deployment",
															"type": "object",
															"properties": {
																"type": {
																	"description": "What caused the deployment",
																	"type": "string",
																	"pattern": "push|ad_hoc",
																	"readOnly": true,
																	"example": "ad_hoc"
																},
																"metadata": {
																	"description": "Additional info about the trigger",
																	"type": "object",
																	"properties": {
																		"branch": {
																			"description": "Where the trigger happened",
																			"type": "string",
																			"readOnly": true,
																			"example": "main"
																		},
																		"commit_hash": {
																			"description": "Hash of the deployment trigger commit",
																			"type": "string",
																			"readOnly": true,
																			"example": "ad9ccd918a81025731e10e40267e11273a263421"
																		},
																		"commit_message": {
																			"description": "Message of the deployment trigger commit",
																			"type": "string",
																			"readOnly": true,
																			"example": "Update index.html"
																		}
																	}
																}
															},
															"readOnly": true
														},
														"stages": {
															"readOnly": true,
															"description": "List of past stages",
															"type": "array",
															"example": [
																{
																	"name": "queued",
																	"started_on": "2021-06-03T15:38:15.608194+00:00",
																	"ended_on": "2021-06-03T15:39:03.134378+00:00",
																	"status": "active"
																},
																{
																	"name": "initialize",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "clone_repo",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "build",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "deploy",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																}
															],
															"items": {
																"description": "The status of the deployment",
																"type": "object",
																"readOnly": true,
																"properties": {
																	"name": {
																		"description": "The current build stage",
																		"type": "string",
																		"pattern": "queued|initialize|clone_repo|build|deploy",
																		"example": "deploy"
																	},
																	"started_on": {
																		"description": "When the stage started",
																		"format": "date-time",
																		"type": "string",
																		"readOnly": true,
																		"example": "2021-03-09T00:55:03.923456+00:00"
																	},
																	"ended_on": {
																		"description": "When the stage ended",
																		"format": "date-time",
																		"type": "string",
																		"readOnly": true,
																		"example": "2021-03-09T00:58:59.045655"
																	},
																	"status": {
																		"description": "State of the current stage",
																		"type": "string",
																		"pattern": "success|idle|active|failure|canceled",
																		"readOnly": true,
																		"example": "success"
																	}
																}
															}
														},
														"build_config": {
															"readOnly": true
														},
														"source": {
															"readOnly": true
														}
													},
													"x-cfDeprecations": {
														"logs_v1_deprecated": {
															"id": "logs_v1_deprecated",
															"description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
															"eol": "2022-09-19",
															"display": true
														}
													},
													"x-cfLinkErrors": {
														"8000000": "An unknown error occurred",
														"8000001": "A project already exists for this repo",
														"8000002": "A project with this name already exists",
														"8000003": "Invalid project name",
														"8000004": "Account not authorized for the requested repo",
														"8000005": "Required field missing",
														"8000006": "Unable to parse request",
														"8000007": "Project not found",
														"8000008": "No installation found",
														"8000009": "Deployment not found",
														"8000010": "User is not authorized for provided GitHub Installation ID",
														"8000011": "User has no linked GitHub accounts matching the provided username",
														"8000012": "User has no linked GitHub repositories matching the provided name",
														"8000013": "Authorization failed",
														"8000014": "Deployment type not found",
														"8000015": "Domain is invalid",
														"8000016": "Unicode domains are not supported",
														"8000017": "An operation is already in progress for this domain",
														"8000018": "Domain is unavailable",
														"8000019": "Project has reached the maximum number of allowed domains",
														"8000020": "No deployment stage found for the provided name",
														"8000021": "Domain not found",
														"8000022": "Invalid PATCH operation requested",
														"8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
														"8000024": "Invalid list options provided",
														"8000025": "Domain is not registered",
														"8000026": "Coming soon",
														"8000027": "Too many projects",
														"8000028": "Must delete custom domains before deleting project",
														"8000029": "Subdomain is unavailable",
														"8000030": "Subdomain is blocked",
														"8000031": "Unable to cancel completed deployment",
														"8000032": "Unable to find a branch with the provided name",
														"8000033": "Production branch must be set",
														"8000034": "Cannot delete active production deployment",
														"8000035": "Cannot delete aliased deployment",
														"8000036": "Account has been blocked"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create deployment",
				"description": "Start a new deployment from production. The repo/account must have been authorized through the Pages UI dash before.",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create deployment response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%3Aaccount_id~1pages~1projects~1%3Aproject_name~1deployments/get/responses/200/content/application~1json/schema/allOf/1/properties/result"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id": {
			"get": {
				"summary": "Get deployment info",
				"description": "Fetch a deployment",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get deployment info response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"description": "Id of the deployment",
															"type": "string",
															"readOnly": true,
															"example": "f64788e9-fccd-4d4a-a28a-cb84f88f6"
														},
														"short_id": {
															"description": "Short Id (8 character) of the deployment",
															"type": "string",
															"readOnly": true,
															"example": "f64788e9"
														},
														"project_id": {
															"description": "Id of the project",
															"type": "string",
															"readOnly": true,
															"example": "7b162ea7-7367-4d67-bcde-1160995d5"
														},
														"project_name": {
															"readOnly": true,
															"description": "Name of the project",
															"type": "string",
															"example": "ninjakittens"
														},
														"environment": {
															"description": "Type of deploy",
															"type": "string",
															"readOnly": true,
															"pattern": "preview|prediction",
															"example": "preview"
														},
														"url": {
															"description": "The live URL to view this deployment",
															"type": "string",
															"readOnly": true,
															"example": "https://f64788e9.ninjakittens.pages.dev"
														},
														"created_on": {
															"description": "When the deployment was created",
															"format": "date-time",
															"type": "string",
															"readOnly": true,
															"example": "2021-03-09T00:55:03.923456+00:00"
														},
														"modified_on": {
															"description": "When the deployment was last modified",
															"format": "date-time",
															"type": "string",
															"readOnly": true,
															"example": "2021-03-09T00:58:59.045655"
														},
														"aliases": {
															"type": "array",
															"description": "A list of alias URLs pointing to this deployment",
															"readOnly": true,
															"example": [
																"https://branchname.projectname.pages.dev"
															],
															"items": {}
														},
														"latest_stage": {
															"readOnly": true
														},
														"env_vars": {
															"type": "object",
															"description": "A dict of env variables to build this deploy",
															"readOnly": true,
															"example": {
																"BUILD_VERSION": {
																	"value": "3.3"
																},
																"ENV": {
																	"value": "STAGING"
																}
															}
														},
														"deployment_trigger": {
															"description": "Info about what caused the deployment",
															"type": "object",
															"properties": {
																"type": {
																	"description": "What caused the deployment",
																	"type": "string",
																	"pattern": "push|ad_hoc",
																	"readOnly": true,
																	"example": "ad_hoc"
																},
																"metadata": {
																	"description": "Additional info about the trigger",
																	"type": "object",
																	"properties": {
																		"branch": {
																			"description": "Where the trigger happened",
																			"type": "string",
																			"readOnly": true,
																			"example": "main"
																		},
																		"commit_hash": {
																			"description": "Hash of the deployment trigger commit",
																			"type": "string",
																			"readOnly": true,
																			"example": "ad9ccd918a81025731e10e40267e11273a263421"
																		},
																		"commit_message": {
																			"description": "Message of the deployment trigger commit",
																			"type": "string",
																			"readOnly": true,
																			"example": "Update index.html"
																		}
																	}
																}
															},
															"readOnly": true
														},
														"stages": {
															"readOnly": true,
															"description": "List of past stages",
															"type": "array",
															"example": [
																{
																	"name": "queued",
																	"started_on": "2021-06-03T15:38:15.608194+00:00",
																	"ended_on": "2021-06-03T15:39:03.134378+00:00",
																	"status": "active"
																},
																{
																	"name": "initialize",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "clone_repo",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "build",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "deploy",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																}
															],
															"items": {
																"description": "The status of the deployment",
																"type": "object",
																"readOnly": true,
																"properties": {
																	"name": {
																		"description": "The current build stage",
																		"type": "string",
																		"pattern": "queued|initialize|clone_repo|build|deploy",
																		"example": "deploy"
																	},
																	"started_on": {
																		"description": "When the stage started",
																		"format": "date-time",
																		"type": "string",
																		"readOnly": true,
																		"example": "2021-03-09T00:55:03.923456+00:00"
																	},
																	"ended_on": {
																		"description": "When the stage ended",
																		"format": "date-time",
																		"type": "string",
																		"readOnly": true,
																		"example": "2021-03-09T00:58:59.045655"
																	},
																	"status": {
																		"description": "State of the current stage",
																		"type": "string",
																		"pattern": "success|idle|active|failure|canceled",
																		"readOnly": true,
																		"example": "success"
																	}
																}
															}
														},
														"build_config": {
															"readOnly": true
														},
														"source": {
															"readOnly": true
														}
													},
													"x-cfDeprecations": {
														"logs_v1_deprecated": {
															"id": "logs_v1_deprecated",
															"description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
															"eol": "2022-09-19",
															"display": true
														}
													},
													"x-cfLinkErrors": {
														"8000000": "An unknown error occurred",
														"8000001": "A project already exists for this repo",
														"8000002": "A project with this name already exists",
														"8000003": "Invalid project name",
														"8000004": "Account not authorized for the requested repo",
														"8000005": "Required field missing",
														"8000006": "Unable to parse request",
														"8000007": "Project not found",
														"8000008": "No installation found",
														"8000009": "Deployment not found",
														"8000010": "User is not authorized for provided GitHub Installation ID",
														"8000011": "User has no linked GitHub accounts matching the provided username",
														"8000012": "User has no linked GitHub repositories matching the provided name",
														"8000013": "Authorization failed",
														"8000014": "Deployment type not found",
														"8000015": "Domain is invalid",
														"8000016": "Unicode domains are not supported",
														"8000017": "An operation is already in progress for this domain",
														"8000018": "Domain is unavailable",
														"8000019": "Project has reached the maximum number of allowed domains",
														"8000020": "No deployment stage found for the provided name",
														"8000021": "Domain not found",
														"8000022": "Invalid PATCH operation requested",
														"8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
														"8000024": "Invalid list options provided",
														"8000025": "Domain is not registered",
														"8000026": "Coming soon",
														"8000027": "Too many projects",
														"8000028": "Must delete custom domains before deleting project",
														"8000029": "Subdomain is unavailable",
														"8000030": "Subdomain is blocked",
														"8000031": "Unable to cancel completed deployment",
														"8000032": "Unable to find a branch with the provided name",
														"8000033": "Production branch must be set",
														"8000034": "Cannot delete active production deployment",
														"8000035": "Cannot delete aliased deployment",
														"8000036": "Account has been blocked"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete deployment",
				"description": "Destroy a deployment",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Delete deployment response",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"result": null,
										"success": true,
										"errors": [],
										"messages": []
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/:deployment_stage_name/logs": {
			"get": {
				"summary": "Get deployment stage logs",
				"description": "Fetch deploy logs",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get deployment stage logs response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"example": {
														"name": "build",
														"started_on": "2021-04-20T19:35:58.238757+00:00",
														"ended_on": "2021-04-20T19:36:06.388890+00:00",
														"status": "success",
														"start": 0,
														"end": 37,
														"total": 37,
														"data": [
															{
																"id": 15,
																"timestamp": "2021-04-20T19:35:59.074981+00:00",
																"message": "Installing dependencies"
															},
															{
																"id": 16,
																"timestamp": "2021-04-20T19:35:59.093120+00:00",
																"message": "Python version set to 2.7"
															},
															{
																"id": 17,
																"timestamp": "2021-04-20T19:36:02.236950+00:00",
																"message": "v12.18.0 is already installed."
															},
															{
																"id": 18,
																"timestamp": "2021-04-20T19:36:02.602888+00:00",
																"message": "Now using node v12.18.0 (npm v6.14.4)"
															},
															{
																"id": 19,
																"timestamp": "2021-04-20T19:36:02.624555+00:00",
																"message": "Started restoring cached build plugins"
															},
															{
																"id": 20,
																"timestamp": "2021-04-20T19:36:02.634068+00:00",
																"message": "Finished restoring cached build plugins"
															},
															{
																"id": 21,
																"timestamp": "2021-04-20T19:36:02.963095+00:00",
																"message": "Attempting ruby version 2.7.1, read from environment"
															},
															{
																"id": 22,
																"timestamp": "2021-04-20T19:36:04.223608+00:00",
																"message": "Using ruby version 2.7.1"
															},
															{
																"id": 23,
																"timestamp": "2021-04-20T19:36:04.545015+00:00",
																"message": "Using PHP version 5.6"
															},
															{
																"id": 24,
																"timestamp": "2021-04-20T19:36:04.574050+00:00",
																"message": "5.2 is already installed."
															},
															{
																"id": 25,
																"timestamp": "2021-04-20T19:36:04.577035+00:00",
																"message": "Using Swift version 5.2"
															},
															{
																"id": 26,
																"timestamp": "2021-04-20T19:36:04.577161+00:00",
																"message": "Installing Hugo 0.54.0"
															},
															{
																"id": 27,
																"timestamp": "2021-04-20T19:36:05.478686+00:00",
																"message": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
															},
															{
																"id": 28,
																"timestamp": "2021-04-20T19:36:05.479436+00:00",
																"message": "Started restoring cached go cache"
															},
															{
																"id": 29,
																"timestamp": "2021-04-20T19:36:05.481977+00:00",
																"message": "Finished restoring cached go cache"
															},
															{
																"id": 30,
																"timestamp": "2021-04-20T19:36:05.904977+00:00",
																"message": "go version go1.14.4 linux/amd64"
															},
															{
																"id": 31,
																"timestamp": "2021-04-20T19:36:05.908605+00:00",
																"message": "go version go1.14.4 linux/amd64"
															},
															{
																"id": 32,
																"timestamp": "2021-04-20T19:36:05.916356+00:00",
																"message": "Installing missing commands"
															},
															{
																"id": 33,
																"timestamp": "2021-04-20T19:36:05.916393+00:00",
																"message": "Verify run directory"
															},
															{
																"id": 34,
																"timestamp": "2021-04-20T19:36:05.916463+00:00",
																"message": "Executing user command: echo \"skipping build step: no build command specified\""
															},
															{
																"id": 35,
																"timestamp": "2021-04-20T19:36:05.916508+00:00",
																"message": "skipping build step: no build command specified"
															},
															{
																"id": 36,
																"timestamp": "2021-04-20T19:36:05.917412+00:00",
																"message": "Finished"
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"id": "logs_v1_deprecated",
					"description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
					"eol": "2022-09-19",
					"display": true
				}
			}
		},
		"/accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/history/logs": {
			"get": {
				"summary": "Get deployment logs",
				"description": "Fetch deploy logs",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get deployment logs response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"example": {
														"total": 30,
														"includes_container_logs": true,
														"data": [
															{
																"ts": "2021-04-20T19:35:29.074981+00:00",
																"line": "Cloning repository..."
															},
															{
																"ts": "2021-04-20T19:35:30.074981+00:00",
																"line": "From https://github.com/cloudflare/example"
															},
															{
																"ts": "2021-04-20T19:35:30.074981+00:00",
																"line": " * branch            209c5bb11d89533f426b2f8469bcae12fdccf71b -> FETCH_HEAD"
															},
															{
																"ts": "2021-04-20T19:35:30.074981+00:00",
																"line": ""
															},
															{
																"ts": "2021-04-20T19:35:30.074981+00:00",
																"line": "HEAD is now at 209c5bb Update index.html"
															},
															{
																"ts": "2021-04-20T19:35:30.074981+00:00",
																"line": ""
															},
															{
																"ts": "2021-04-20T19:35:30.074981+00:00",
																"line": ""
															},
															{
																"ts": "2021-04-20T19:35:30.074981+00:00",
																"line": "Success: Finished cloning repository files"
															},
															{
																"ts": "2021-04-20T19:35:59.074981+00:00",
																"line": "Installing dependencies"
															},
															{
																"ts": "2021-04-20T19:35:59.093120+00:00",
																"line": "Python version set to 2.7"
															},
															{
																"ts": "2021-04-20T19:36:02.236950+00:00",
																"line": "v12.18.0 is already installed."
															},
															{
																"ts": "2021-04-20T19:36:02.602888+00:00",
																"line": "Now using node v12.18.0 (npm v6.14.4)"
															},
															{
																"ts": "2021-04-20T19:36:02.624555+00:00",
																"line": "Started restoring cached build plugins"
															},
															{
																"ts": "2021-04-20T19:36:02.634068+00:00",
																"line": "Finished restoring cached build plugins"
															},
															{
																"ts": "2021-04-20T19:36:02.963095+00:00",
																"line": "Attempting ruby version 2.7.1, read from environment"
															},
															{
																"ts": "2021-04-20T19:36:04.223608+00:00",
																"line": "Using ruby version 2.7.1"
															},
															{
																"ts": "2021-04-20T19:36:04.545015+00:00",
																"line": "Using PHP version 5.6"
															},
															{
																"ts": "2021-04-20T19:36:04.574050+00:00",
																"line": "5.2 is already installed."
															},
															{
																"ts": "2021-04-20T19:36:04.577035+00:00",
																"line": "Using Swift version 5.2"
															},
															{
																"ts": "2021-04-20T19:36:04.577161+00:00",
																"line": "Installing Hugo 0.54.0"
															},
															{
																"ts": "2021-04-20T19:36:05.478686+00:00",
																"line": "Hugo Static Site Generator v0.54.0-B1A82C61A/extended linux/amd64 BuildDate: 2019-02-01T10:04:38Z"
															},
															{
																"ts": "2021-04-20T19:36:05.479436+00:00",
																"line": "Started restoring cached go cache"
															},
															{
																"ts": "2021-04-20T19:36:05.481977+00:00",
																"line": "Finished restoring cached go cache"
															},
															{
																"ts": "2021-04-20T19:36:05.904977+00:00",
																"line": "go version go1.14.4 linux/amd64"
															},
															{
																"ts": "2021-04-20T19:36:05.908605+00:00",
																"line": "go version go1.14.4 linux/amd64"
															},
															{
																"ts": "2021-04-20T19:36:05.916356+00:00",
																"line": "Installing missing commands"
															},
															{
																"ts": "2021-04-20T19:36:05.916393+00:00",
																"line": "Verify run directory"
															},
															{
																"ts": "2021-04-20T19:36:05.916463+00:00",
																"line": "Executing user command: echo \"skipping build step: no build command specified\""
															},
															{
																"ts": "2021-04-20T19:36:05.916508+00:00",
																"line": "skipping build step: no build command specified"
															},
															{
																"ts": "2021-04-20T19:36:05.917412+00:00",
																"line": "Finished"
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/retry": {
			"post": {
				"summary": "Retry deployment",
				"description": "Retry a previous deployment",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Retry deployment response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"description": "Id of the deployment",
															"type": "string",
															"readOnly": true,
															"example": "f64788e9-fccd-4d4a-a28a-cb84f88f6"
														},
														"short_id": {
															"description": "Short Id (8 character) of the deployment",
															"type": "string",
															"readOnly": true,
															"example": "f64788e9"
														},
														"project_id": {
															"description": "Id of the project",
															"type": "string",
															"readOnly": true,
															"example": "7b162ea7-7367-4d67-bcde-1160995d5"
														},
														"project_name": {
															"readOnly": true,
															"description": "Name of the project",
															"type": "string",
															"example": "ninjakittens"
														},
														"environment": {
															"description": "Type of deploy",
															"type": "string",
															"readOnly": true,
															"pattern": "preview|prediction",
															"example": "preview"
														},
														"url": {
															"description": "The live URL to view this deployment",
															"type": "string",
															"readOnly": true,
															"example": "https://f64788e9.ninjakittens.pages.dev"
														},
														"created_on": {
															"description": "When the deployment was created",
															"format": "date-time",
															"type": "string",
															"readOnly": true,
															"example": "2021-03-09T00:55:03.923456+00:00"
														},
														"modified_on": {
															"description": "When the deployment was last modified",
															"format": "date-time",
															"type": "string",
															"readOnly": true,
															"example": "2021-03-09T00:58:59.045655"
														},
														"aliases": {
															"type": "array",
															"description": "A list of alias URLs pointing to this deployment",
															"readOnly": true,
															"example": [
																"https://branchname.projectname.pages.dev"
															],
															"items": {}
														},
														"latest_stage": {
															"readOnly": true
														},
														"env_vars": {
															"type": "object",
															"description": "A dict of env variables to build this deploy",
															"readOnly": true,
															"example": {
																"BUILD_VERSION": {
																	"value": "3.3"
																},
																"ENV": {
																	"value": "STAGING"
																}
															}
														},
														"deployment_trigger": {
															"description": "Info about what caused the deployment",
															"type": "object",
															"properties": {
																"type": {
																	"description": "What caused the deployment",
																	"type": "string",
																	"pattern": "push|ad_hoc",
																	"readOnly": true,
																	"example": "ad_hoc"
																},
																"metadata": {
																	"description": "Additional info about the trigger",
																	"type": "object",
																	"properties": {
																		"branch": {
																			"description": "Where the trigger happened",
																			"type": "string",
																			"readOnly": true,
																			"example": "main"
																		},
																		"commit_hash": {
																			"description": "Hash of the deployment trigger commit",
																			"type": "string",
																			"readOnly": true,
																			"example": "ad9ccd918a81025731e10e40267e11273a263421"
																		},
																		"commit_message": {
																			"description": "Message of the deployment trigger commit",
																			"type": "string",
																			"readOnly": true,
																			"example": "Update index.html"
																		}
																	}
																}
															},
															"readOnly": true
														},
														"stages": {
															"readOnly": true,
															"description": "List of past stages",
															"type": "array",
															"example": [
																{
																	"name": "queued",
																	"started_on": "2021-06-03T15:38:15.608194+00:00",
																	"ended_on": "2021-06-03T15:39:03.134378+00:00",
																	"status": "active"
																},
																{
																	"name": "initialize",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "clone_repo",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "build",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "deploy",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																}
															],
															"items": {
																"description": "The status of the deployment",
																"type": "object",
																"readOnly": true,
																"properties": {
																	"name": {
																		"description": "The current build stage",
																		"type": "string",
																		"pattern": "queued|initialize|clone_repo|build|deploy",
																		"example": "deploy"
																	},
																	"started_on": {
																		"description": "When the stage started",
																		"format": "date-time",
																		"type": "string",
																		"readOnly": true,
																		"example": "2021-03-09T00:55:03.923456+00:00"
																	},
																	"ended_on": {
																		"description": "When the stage ended",
																		"format": "date-time",
																		"type": "string",
																		"readOnly": true,
																		"example": "2021-03-09T00:58:59.045655"
																	},
																	"status": {
																		"description": "State of the current stage",
																		"type": "string",
																		"pattern": "success|idle|active|failure|canceled",
																		"readOnly": true,
																		"example": "success"
																	}
																}
															}
														},
														"build_config": {
															"readOnly": true
														},
														"source": {
															"readOnly": true
														}
													},
													"x-cfDeprecations": {
														"logs_v1_deprecated": {
															"id": "logs_v1_deprecated",
															"description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
															"eol": "2022-09-19",
															"display": true
														}
													},
													"x-cfLinkErrors": {
														"8000000": "An unknown error occurred",
														"8000001": "A project already exists for this repo",
														"8000002": "A project with this name already exists",
														"8000003": "Invalid project name",
														"8000004": "Account not authorized for the requested repo",
														"8000005": "Required field missing",
														"8000006": "Unable to parse request",
														"8000007": "Project not found",
														"8000008": "No installation found",
														"8000009": "Deployment not found",
														"8000010": "User is not authorized for provided GitHub Installation ID",
														"8000011": "User has no linked GitHub accounts matching the provided username",
														"8000012": "User has no linked GitHub repositories matching the provided name",
														"8000013": "Authorization failed",
														"8000014": "Deployment type not found",
														"8000015": "Domain is invalid",
														"8000016": "Unicode domains are not supported",
														"8000017": "An operation is already in progress for this domain",
														"8000018": "Domain is unavailable",
														"8000019": "Project has reached the maximum number of allowed domains",
														"8000020": "No deployment stage found for the provided name",
														"8000021": "Domain not found",
														"8000022": "Invalid PATCH operation requested",
														"8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
														"8000024": "Invalid list options provided",
														"8000025": "Domain is not registered",
														"8000026": "Coming soon",
														"8000027": "Too many projects",
														"8000028": "Must delete custom domains before deleting project",
														"8000029": "Subdomain is unavailable",
														"8000030": "Subdomain is blocked",
														"8000031": "Unable to cancel completed deployment",
														"8000032": "Unable to find a branch with the provided name",
														"8000033": "Production branch must be set",
														"8000034": "Cannot delete active production deployment",
														"8000035": "Cannot delete aliased deployment",
														"8000036": "Account has been blocked"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/:account_id/pages/projects/:project_name/deployments/:deployment_id/rollback": {
			"post": {
				"summary": "Rollback deployment",
				"description": "Rollback the production deployment to a previous deploy. You can only rollback to succesful builds on production.",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Rollback deployment response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"description": "Id of the deployment",
															"type": "string",
															"readOnly": true,
															"example": "f64788e9-fccd-4d4a-a28a-cb84f88f6"
														},
														"short_id": {
															"description": "Short Id (8 character) of the deployment",
															"type": "string",
															"readOnly": true,
															"example": "f64788e9"
														},
														"project_id": {
															"description": "Id of the project",
															"type": "string",
															"readOnly": true,
															"example": "7b162ea7-7367-4d67-bcde-1160995d5"
														},
														"project_name": {
															"readOnly": true,
															"description": "Name of the project",
															"type": "string",
															"example": "ninjakittens"
														},
														"environment": {
															"description": "Type of deploy",
															"type": "string",
															"readOnly": true,
															"pattern": "preview|prediction",
															"example": "preview"
														},
														"url": {
															"description": "The live URL to view this deployment",
															"type": "string",
															"readOnly": true,
															"example": "https://f64788e9.ninjakittens.pages.dev"
														},
														"created_on": {
															"description": "When the deployment was created",
															"format": "date-time",
															"type": "string",
															"readOnly": true,
															"example": "2021-03-09T00:55:03.923456+00:00"
														},
														"modified_on": {
															"description": "When the deployment was last modified",
															"format": "date-time",
															"type": "string",
															"readOnly": true,
															"example": "2021-03-09T00:58:59.045655"
														},
														"aliases": {
															"type": "array",
															"description": "A list of alias URLs pointing to this deployment",
															"readOnly": true,
															"example": [
																"https://branchname.projectname.pages.dev"
															],
															"items": {}
														},
														"latest_stage": {
															"readOnly": true
														},
														"env_vars": {
															"type": "object",
															"description": "A dict of env variables to build this deploy",
															"readOnly": true,
															"example": {
																"BUILD_VERSION": {
																	"value": "3.3"
																},
																"ENV": {
																	"value": "STAGING"
																}
															}
														},
														"deployment_trigger": {
															"description": "Info about what caused the deployment",
															"type": "object",
															"properties": {
																"type": {
																	"description": "What caused the deployment",
																	"type": "string",
																	"pattern": "push|ad_hoc",
																	"readOnly": true,
																	"example": "ad_hoc"
																},
																"metadata": {
																	"description": "Additional info about the trigger",
																	"type": "object",
																	"properties": {
																		"branch": {
																			"description": "Where the trigger happened",
																			"type": "string",
																			"readOnly": true,
																			"example": "main"
																		},
																		"commit_hash": {
																			"description": "Hash of the deployment trigger commit",
																			"type": "string",
																			"readOnly": true,
																			"example": "ad9ccd918a81025731e10e40267e11273a263421"
																		},
																		"commit_message": {
																			"description": "Message of the deployment trigger commit",
																			"type": "string",
																			"readOnly": true,
																			"example": "Update index.html"
																		}
																	}
																}
															},
															"readOnly": true
														},
														"stages": {
															"readOnly": true,
															"description": "List of past stages",
															"type": "array",
															"example": [
																{
																	"name": "queued",
																	"started_on": "2021-06-03T15:38:15.608194+00:00",
																	"ended_on": "2021-06-03T15:39:03.134378+00:00",
																	"status": "active"
																},
																{
																	"name": "initialize",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "clone_repo",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "build",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																},
																{
																	"name": "deploy",
																	"started_on": null,
																	"ended_on": null,
																	"status": "idle"
																}
															],
															"items": {
																"description": "The status of the deployment",
																"type": "object",
																"readOnly": true,
																"properties": {
																	"name": {
																		"description": "The current build stage",
																		"type": "string",
																		"pattern": "queued|initialize|clone_repo|build|deploy",
																		"example": "deploy"
																	},
																	"started_on": {
																		"description": "When the stage started",
																		"format": "date-time",
																		"type": "string",
																		"readOnly": true,
																		"example": "2021-03-09T00:55:03.923456+00:00"
																	},
																	"ended_on": {
																		"description": "When the stage ended",
																		"format": "date-time",
																		"type": "string",
																		"readOnly": true,
																		"example": "2021-03-09T00:58:59.045655"
																	},
																	"status": {
																		"description": "State of the current stage",
																		"type": "string",
																		"pattern": "success|idle|active|failure|canceled",
																		"readOnly": true,
																		"example": "success"
																	}
																}
															}
														},
														"build_config": {
															"readOnly": true
														},
														"source": {
															"readOnly": true
														}
													},
													"x-cfDeprecations": {
														"logs_v1_deprecated": {
															"id": "logs_v1_deprecated",
															"description": "Use \"Get deployment logs\" instead: https://api.cloudflare.com/#pages-deployment-get-deployment-logs.",
															"eol": "2022-09-19",
															"display": true
														}
													},
													"x-cfLinkErrors": {
														"8000000": "An unknown error occurred",
														"8000001": "A project already exists for this repo",
														"8000002": "A project with this name already exists",
														"8000003": "Invalid project name",
														"8000004": "Account not authorized for the requested repo",
														"8000005": "Required field missing",
														"8000006": "Unable to parse request",
														"8000007": "Project not found",
														"8000008": "No installation found",
														"8000009": "Deployment not found",
														"8000010": "User is not authorized for provided GitHub Installation ID",
														"8000011": "User has no linked GitHub accounts matching the provided username",
														"8000012": "User has no linked GitHub repositories matching the provided name",
														"8000013": "Authorization failed",
														"8000014": "Deployment type not found",
														"8000015": "Domain is invalid",
														"8000016": "Unicode domains are not supported",
														"8000017": "An operation is already in progress for this domain",
														"8000018": "Domain is unavailable",
														"8000019": "Project has reached the maximum number of allowed domains",
														"8000020": "No deployment stage found for the provided name",
														"8000021": "Domain not found",
														"8000022": "Invalid PATCH operation requested",
														"8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
														"8000024": "Invalid list options provided",
														"8000025": "Domain is not registered",
														"8000026": "Coming soon",
														"8000027": "Too many projects",
														"8000028": "Must delete custom domains before deleting project",
														"8000029": "Subdomain is unavailable",
														"8000030": "Subdomain is blocked",
														"8000031": "Unable to cancel completed deployment",
														"8000032": "Unable to find a branch with the provided name",
														"8000033": "Production branch must be set",
														"8000034": "Cannot delete active production deployment",
														"8000035": "Cannot delete aliased deployment",
														"8000036": "Account has been blocked"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/:account_id/pages/projects/:project_name/domains": {
			"get": {
				"summary": "Get domains",
				"description": "Fetch a list of all domains",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get domains response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "Id of the domain",
																"type": "string",
																"readOnly": true,
																"example": "8232210c-6818-4e34-8d95-cc386874b8d2"
															},
															"name": {
																"description": "Custom domain",
																"type": "string",
																"readOnly": true,
																"example": "example.com"
															},
															"status": {
																"description": "Status of the custom domain",
																"type": "string",
																"readOnly": true,
																"example": "pending"
															},
															"verification_data": {
																"description": "",
																"type": "object",
																"readOnly": true,
																"properties": {
																	"status": {
																		"description": "Status of the stage",
																		"type": "string",
																		"readOnly": true,
																		"example": "active"
																	}
																}
															},
															"validation_data": {
																"description": "",
																"type": "object",
																"readOnly": true,
																"properties": {
																	"status": {
																		"description": "Status of the stage",
																		"type": "string",
																		"readOnly": true,
																		"example": "active"
																	},
																	"method": {
																		"description": "Method of validation",
																		"type": "string",
																		"readOnly": true,
																		"example": "http"
																	}
																}
															},
															"zone_tag": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
															},
															"created_on": {
																"description": "When the domain was added",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2017-01-01T00:00:00+00:00"
															}
														},
														"x-cfLinkErrors": {
															"8000000": "An unknown error occurred",
															"8000001": "A project already exists for this repo",
															"8000002": "A project with this name already exists",
															"8000003": "Invalid project name",
															"8000004": "Account not authorized for the requested repo",
															"8000005": "Required field missing",
															"8000006": "Unable to parse request",
															"8000007": "Project not found",
															"8000008": "No installation found",
															"8000009": "Deployment not found",
															"8000010": "User is not authorized for provided GitHub Installation ID",
															"8000011": "User has no linked GitHub accounts matching the provided username",
															"8000012": "User has no linked GitHub repositories matching the provided name",
															"8000013": "Authorization failed",
															"8000014": "Deployment type not found",
															"8000015": "Domain is invalid",
															"8000016": "Unicode domains are not supported",
															"8000017": "An operation is already in progress for this domain",
															"8000018": "Domain is unavailable",
															"8000019": "Project has reached the maximum number of allowed domains",
															"8000020": "No deployment stage found for the provided name",
															"8000021": "Domain not found",
															"8000022": "Invalid PATCH operation requested",
															"8000023": "Attempt to add duplicate environment variable, or replace or delete nonexistent variable",
															"8000024": "Invalid list options provided",
															"8000025": "Domain is not registered",
															"8000026": "Coming soon",
															"8000027": "Too many projects",
															"8000028": "Must delete custom domains before deleting project",
															"8000029": "Subdomain is unavailable",
															"8000030": "Subdomain is blocked",
															"8000031": "Unable to cancel completed deployment",
															"8000032": "Unable to find a branch with the provided name",
															"8000033": "Production branch must be set",
															"8000034": "Cannot delete active production deployment",
															"8000035": "Cannot delete aliased deployment",
															"8000036": "Account has been blocked"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Add domain",
				"description": "Add a new domain for the Pages project",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Add domain response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"example": {
									"name": "example.com"
								}
							}
						}
					}
				}
			}
		},
		"/accounts/:account_id/pages/projects/:project_name/domains/:domain_name": {
			"get": {
				"summary": "Get domain",
				"description": "Fetch a single domain",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get domain response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"patch": {
				"summary": "Patch domain",
				"description": "Retry the validation status of a single domain",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Patch domain response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%3Aaccount_id~1pages~1projects~1%3Aproject_name~1domains~1%3Adomain_name/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"delete": {
				"summary": "Delete domain",
				"description": "Delete a domain",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Delete domain response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/r2/buckets/{bucket_name}": {
			"post": {
				"summary": "Create Bucket",
				"description": "Creates a new R2 bucket.",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Name of the bucket. The name must be greater than 2 and less than 64 characters.",
							"type": "string",
							"pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]",
							"example": "example-bucket"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Bucket response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.r2.bucket.create"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"example": "{'name': 'example-bucket'}"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Bucket",
				"description": "Deletes an existing R2 bucket.",
				"parameters": [
					{
						"name": "bucket_name",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1r2~1buckets~1%7Bbucket_name%7D/post/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1r2~1buckets~1%7Bbucket_name%7D/post/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Bucket response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1r2~1buckets~1%7Bbucket_name%7D/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.r2.bucket.delete"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/workers/scripts/{script_name}": {
			"put": {
				"summary": "Upload Worker Module",
				"description": "Upload a worker module.",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Name of the script, used in URLs and route configuration",
							"type": "string",
							"pattern": "^[a-z0-9_][a-z0-9-_]*$",
							"example": "this-is_my_script-01"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Upload Worker Module response",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"result": {
											"id": "this-is_my_script-01",
											"etag": "777f24a43bef5f69174aa69ceaf1dea67968d510a31d1vw3e49d34a0187c06d1",
											"handlers": [
												"fetch"
											],
											"modified_on": "2022-05-20T19:02:56.446492+00:00",
											"created_on": "2022-05-05T05:15:11.602148+00:00",
											"usage_model": "bundled"
										},
										"success": true,
										"errors": [],
										"messages": []
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.create"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"properties": {
									"metadata": {
										"description": "Metadata for script such as bindings. Main module needs to be specified with `main_module`.",
										"type": "string",
										"example": "{\"main_module\": \"worker.js\", \"some_binding\": \"stuff\"}"
									},
									"\"worker.js\"": {
										"description": "Worker script",
										"type": "string",
										"example": "@worker.js;type=application/javascript+module"
									},
									"\"second-file.js\"": {
										"description": "Worker script",
										"type": "string",
										"example": "@second-file.js;type=application/javascript+module"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Download Worker",
				"description": "Fetch raw script content for your worker. Note this is the original script content, not JSON encoded.",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D/put/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Download Worker response",
						"content": {
							"undefined": {
								"schema": {
									"example": "addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.read"
					]
				}
			},
			"delete": {
				"summary": "Delete Worker",
				"description": "Delete your worker. This call has no response body on a successful delete.\n\n**Query paramaters**:\n\n1.  `force`: boolean;   If set to true, delete will not be stopped by associated service binding, durable object, or other binding. Any of these associated bindings/durable objects will be deleted along with the script.",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D/put/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Worker response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.delete"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/workers/scripts": {
			"get": {
				"summary": "List Workers",
				"description": "Fetch a list of uploaded workers.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Workers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"properties": {
															"id": {
																"readOnly": true
															},
															"etag": {
																"readOnly": true
															},
															"usage_model": {
																"readOnly": true
															},
															"created_on": {
																"readOnly": true
															},
															"modified_on": {
																"readOnly": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.list"
					]
				}
			}
		},
		"/accounts/{account_identifier}/workers/scripts/{script_name}/usage-model": {
			"put": {
				"summary": "Update Usage Model",
				"description": "Updates the Usage Model for a given Worker. Requires a Workers Paid subscription.",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Name of the script, used in URLs and route configuration",
							"type": "string",
							"pattern": "^[a-z0-9_][a-z0-9-_]*$",
							"example": "this-is_my_script-01"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Usage Model response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"usage_model": {
															"readOnly": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.create"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"example": "{'usage_model': 'unbound'}"
							}
						}
					}
				}
			},
			"get": {
				"summary": "Fetch Usage Model",
				"description": "Fetches the Usage Model for a given Worker.",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1usage-model/put/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1usage-model/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Fetch Usage Model response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1usage-model/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.read"
					]
				}
			}
		},
		"/zones/{zone_id}/workers/routes": {
			"post": {
				"summary": "Create Route",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Route response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.route.create"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"pattern"
								],
								"properties": {
									"pattern": {
										"title": "Route pattern",
										"type": "string",
										"example": "example.net/*"
									},
									"script": {
										"description": "Name of the script to apply when the route is matched. The route is skipped when this is blank/missing.",
										"type": "string",
										"pattern": "^[a-z0-9_][a-z0-9-_]*$",
										"example": "this-is_my_script-01"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "List Routes",
				"description": "",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Routes response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"pattern": {
																"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes/post/requestBody/content/application~1json/schema/properties/pattern"
															},
															"script": {
																"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes/post/requestBody/content/application~1json/schema/properties/script"
															}
														},
														"required": [
															"id",
															"pattern",
															"script"
														],
														"x-cfLinkErrors": {
															"10001": "Unsupported or unexpected Content Type",
															"10002": "Unexpected internal server error",
															"10003": "Missing required URL parameter",
															"10004": "Malformed URL parameter",
															"10007": "Resource not found (similar to HTTP 404)",
															"10014": "Internal error while attempting authorization checks",
															"10015": "The current account is not authorized to use workers",
															"10020": "Attempted to create a route for a pattern that already exists",
															"10022": "Route pattern was invalid",
															"10023": "Unauthorized access attempt",
															"10026": "Route pattern was unparseable"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.route.list"
					]
				}
			}
		},
		"/zones/{zone_id}/workers/routes/{route_id}": {
			"get": {
				"summary": "Get Route",
				"description": "",
				"parameters": [
					{
						"name": "route_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Route response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
														},
														"pattern": {
															"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes~1%7Broute_id%7D/put/requestBody/content/application~1json/schema/properties/pattern"
														},
														"script": {
															"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes~1%7Broute_id%7D/put/requestBody/content/application~1json/schema/properties/script"
														}
													},
													"required": [
														"id",
														"pattern",
														"script"
													],
													"x-cfLinkErrors": {
														"10001": "Unsupported or unexpected Content Type",
														"10002": "Unexpected internal server error",
														"10003": "Missing required URL parameter",
														"10004": "Malformed URL parameter",
														"10007": "Resource not found (similar to HTTP 404)",
														"10014": "Internal error while attempting authorization checks",
														"10015": "The current account is not authorized to use workers",
														"10020": "Attempted to create a route for a pattern that already exists",
														"10022": "Route pattern was invalid",
														"10023": "Unauthorized access attempt",
														"10026": "Route pattern was unparseable"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.route.read"
					]
				}
			},
			"put": {
				"summary": "Update Route",
				"parameters": [
					{
						"name": "route_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes~1%7Broute_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes~1%7Broute_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Route response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes~1%7Broute_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.route.update"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"pattern"
								],
								"properties": {
									"pattern": {
										"title": "Route pattern",
										"type": "string",
										"example": "example.net/*"
									},
									"script": {
										"description": "Name of the script to apply when the route is matched. The route is skipped when this is blank/missing.",
										"type": "string",
										"pattern": "^[a-z0-9_][a-z0-9-_]*$",
										"example": "this-is_my_script-01"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Route",
				"parameters": [
					{
						"name": "route_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes~1%7Broute_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1routes~1%7Broute_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Route response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.route.delete"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/storage/kv/namespaces": {
			"get": {
				"summary": "List Namespaces",
				"description": "Returns the namespaces owned by an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Namespaces response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"title"
														],
														"properties": {
															"id": {
																"description": "Namespace identifier tag.",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "0f2ac74b498b48028cb68387c421e279"
															},
															"title": {
																"type": "string",
																"description": "A human-readable string name for a Namespace.",
																"example": "My Own Namespace"
															},
															"supports_url_encoding": {
																"type": "boolean",
																"description": "True if keys written on the URL will be URL-decoded before storing. For example, if set to \"true\", a key written on the URL as \"%3F\" will be stored as \"?\".",
																"readOnly": true,
																"example": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.namespace.list"
					]
				}
			},
			"post": {
				"summary": "Create a Namespace",
				"description": "Creates a namespace under the given title. A 400 is returned if the account already owns a namespace with this title. A namespace must be explicitly deleted to be replaced.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a Namespace response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.namespace.create"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"title"
								],
								"properties": {
									"title": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/title"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}": {
			"delete": {
				"summary": "Remove a Namespace",
				"description": "Deletes the namespace corresponding to the given ID.",
				"parameters": [
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Namespace identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "0f2ac74b498b48028cb68387c421e279"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Remove a Namespace response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.namespace.delete"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"put": {
				"summary": "Rename a Namespace",
				"description": "Modifies a namespace's title.",
				"parameters": [
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces~1%7Bnamespace_identifier%7D/delete/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces~1%7Bnamespace_identifier%7D/delete/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Rename a Namespace response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.namespace.delete"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"title"
								],
								"properties": {
									"title": {
										"type": "string",
										"description": "A human-readable string name for a Namespace.",
										"example": "My Own Namespace"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/keys": {
			"get": {
				"summary": "List a Namespace's Keys",
				"description": "Lists a namespace's keys.",
				"parameters": [
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Namespace identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "0f2ac74b498b48028cb68387c421e279"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List a Namespace's Keys response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"description": "A name for a value. A value stored under a given key may be retrieved via the same key.",
														"type": "object",
														"required": [
															"name"
														],
														"properties": {
															"name": {
																"type": "string",
																"description": "A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.",
																"maxLength": 512,
																"example": "My-Key"
															},
															"expiration": {
																"type": "number",
																"description": "The time, measured in number of seconds since the UNIX epoch, at which the key will expire. This property is omitted for keys that will not expire.",
																"example": 1577836800
															},
															"metadata": {
																"type": "object",
																"description": "Arbitrary JSON that is associated with a key",
																"example": {
																	"someMetadataKey": "someMetadataValue"
																}
															}
														}
													}
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total results returned based on your list parameters",
															"type": "number",
															"example": 1
														},
														"cursor": {
															"description": "Opaque token indicating the position from which to continue when requesting the next set of records if the amount of list results was limited by the limit parameter. A valid value for the cursor can be obtained from the cursors object in the result_info structure.",
															"type": "string",
															"example": "6Ck1la0VxJ0djhidm1MdX2FyDGxLKVeeHZZmORS_8XeSuhz9SjIJRaSa2lnsF01tQOHrfTGAP3R5X1Kv5iVUuMbNKhWNAXHOl6ePB0TUL8nw"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.key.list"
					]
				}
			}
		},
		"/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/values/{key_name}": {
			"get": {
				"summary": "Read key-value pair",
				"description": "Returns the value associated with the given key in the given namespace. Use URL-encoding to use special characters (e.g. :, !, %) in the key name. If the KV-pair is set to expire at some point, the expiration time as measured in seconds since the UNIX epoch will be returned in the \"Expiration\" response header.",
				"parameters": [
					{
						"name": "key_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"description": "A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.",
							"maxLength": 512,
							"example": "My-Key"
						}
					},
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Namespace identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "0f2ac74b498b48028cb68387c421e279"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Read key-value pair response",
						"content": {
							"application/json": {
								"schema": {
									"description": "A byte sequence to be stored, up to 10 MB in length.",
									"type": "string",
									"example": "Some Value"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.key.read"
					]
				}
			},
			"delete": {
				"summary": "Delete key-value pair",
				"description": "Remove a KV pair from the Namespace. Use URL-encoding to use special characters (e.g. :, !, %) in the key name.",
				"parameters": [
					{
						"name": "key_name",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces~1%7Bnamespace_identifier%7D~1values~1%7Bkey_name%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces~1%7Bnamespace_identifier%7D~1values~1%7Bkey_name%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces~1%7Bnamespace_identifier%7D~1values~1%7Bkey_name%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete key-value pair response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.key.delete"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/metadata/{key_name}": {
			"get": {
				"summary": "Read the metadata for a key",
				"description": "Returns the metadata associated with the given key in the given namespace. Use URL-encoding to use special characters (e.g. :, !, %) in the key name.",
				"parameters": [
					{
						"name": "key_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"description": "A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.",
							"maxLength": 512,
							"example": "My-Key"
						}
					},
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Namespace identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "0f2ac74b498b48028cb68387c421e279"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Read the metadata for a key response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"description": "Arbitrary JSON that is associated with a key",
													"example": {
														"someMetadataKey": "someMetadataValue"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.key.read"
					]
				}
			}
		},
		"/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/values/{key_name}?expiration={expiration}&expiration_ttl={expiration_ttl}": {
			"put": {
				"summary": "Write key-value pair with metadata",
				"description": "Write a value identified by a key. Use URL-encoding to use special characters (e.g. :, !, %) in the key name. Body should be the value to be stored along with json metadata to be associated with the key/value pair. Existing values, expirations and metadata will be overwritten. If neither `expiration` nor `expiration_ttl` is specified, the key-value pair will never expire. If both are set, `expiration_ttl` is used and `expiration` is ignored.",
				"parameters": [
					{
						"name": "expiration_ttl",
						"in": "path",
						"required": true,
						"schema": {
							"type": "number",
							"description": "The number of seconds for which the key should be visible before it expires. At least 60.",
							"example": 300
						}
					},
					{
						"name": "expiration",
						"in": "path",
						"required": true,
						"schema": {
							"type": "number",
							"description": "The time, measured in number of seconds since the UNIX epoch, at which the key should expire.",
							"example": 1578435000
						}
					},
					{
						"name": "key_name",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"description": "A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid. Use percent-encoding to define key names as part of a URL.",
							"maxLength": 512,
							"example": "My-Key"
						}
					},
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Namespace identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "0f2ac74b498b48028cb68387c421e279"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Write key-value pair with metadata response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.key.update"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"required": [
									"value",
									"metadata"
								],
								"properties": {
									"value": {
										"description": "A byte sequence to be stored, up to 10 MB in length.",
										"type": "string",
										"example": "Some Value"
									},
									"metadata": {
										"type": "string",
										"description": "Arbitrary JSON to be associated with a key/value pair",
										"example": "{\"someMetadataKey\": \"someMetadataValue\"}"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/storage/kv/namespaces/{namespace_identifier}/bulk": {
			"put": {
				"summary": "Write multiple key-value pairs",
				"description": "Write multiple keys and values at once. Body should be an array of up to 10,000 key-value pairs to be stored, along with optional expiration information. Existing values and expirations will be overwritten. If neither expiration nor expiration_ttl is specified, the key-value pair will never expire. If both are set, `expiration_ttl` is used and `expiration` is ignored. The entire request size must be 100 megabytes or less.",
				"parameters": [
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Namespace identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "0f2ac74b498b48028cb68387c421e279"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Write multiple key-value pairs response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.key.update"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"required": [
									"key",
									"value"
								],
								"items": {
									"type": "object",
									"properties": {
										"key": {
											"type": "string",
											"description": "A key's name. The name may be at most 512 bytes. All printable, non-whitespace characters are valid.",
											"maxLength": 512,
											"example": "My-Key"
										},
										"value": {
											"description": "A UTF-8 encoded string to be stored, up to 10 MB in length.",
											"type": "string",
											"example": "Some string",
											"maxLength": 10485760
										},
										"expiration": {
											"type": "number",
											"description": "The time, measured in number of seconds since the UNIX epoch, at which the key should expire.",
											"example": 1578435000
										},
										"expiration_ttl": {
											"type": "number",
											"description": "The number of seconds for which the key should be visible before it expires. At least 60.",
											"example": 300
										},
										"metadata": {
											"type": "object",
											"description": "Arbitrary JSON that is associated with a key",
											"example": {
												"someMetadataKey": "someMetadataValue"
											}
										},
										"base64": {
											"description": "Whether or not the server should base64 decode the value before storing it. Useful for writing values that wouldn't otherwise be valid JSON strings, such as images.",
											"default": false,
											"type": "boolean"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete multiple key-value pairs",
				"description": "Remove multiple KV pairs from the Namespace. Body should be an array of up to 10,000 keys to be removed.",
				"parameters": [
					{
						"name": "namespace_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces~1%7Bnamespace_identifier%7D~1bulk/put/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces~1%7Bnamespace_identifier%7D~1bulk/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete multiple key-value pairs response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.storage.kv.key.delete"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1kv~1namespaces~1%7Bnamespace_identifier%7D~1bulk/put/requestBody/content/application~1json/schema/items/properties/key"
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/storage/analytics": {
			"get": {
				"summary": "Query Request Analytics",
				"description": "Retrieves Workers KV request metrics for the given account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Query Request Analytics response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"allOf": [
														{
															"description": "Metrics on Workers KV requests.",
															"type": "object",
															"required": [
																"rows",
																"data",
																"data_lag",
																"min",
																"max",
																"totals",
																"query"
															],
															"properties": {
																"rows": {
																	"description": "Total number of rows in the result",
																	"type": "number",
																	"example": 2,
																	"minimum": 0
																},
																"data": {
																	"type": "array",
																	"items": {
																		"type": "object",
																		"required": [
																			"metrics"
																		],
																		"properties": {
																			"metrics": {
																				"type": "array",
																				"description": "List of metrics returned by the query.",
																				"items": {}
																			}
																		}
																	},
																	"nullable": true
																},
																"data_lag": {
																	"description": "Number of seconds between current time and last processed event, i.e. how many seconds of data could be missing.",
																	"type": "number",
																	"example": 0,
																	"minimum": 0
																},
																"min": {
																	"description": "Minimum results for each metric."
																},
																"max": {
																	"description": "Maximum results for each metric."
																},
																"totals": {
																	"description": "Total results for metrics across all data."
																},
																"query": {
																	"description": "For specifying result metrics.",
																	"type": "object",
																	"properties": {
																		"limit": {
																			"description": "Limit number of returned metrics.",
																			"type": "integer",
																			"default": 10000
																		},
																		"since": {
																			"description": "Start of time interval to query, defaults to 6 hours before request received.",
																			"default": "<6 hours ago>",
																			"example": "2019-01-02T02:20:00+00:00",
																			"format": "date-time",
																			"type": "string"
																		},
																		"until": {
																			"description": "End of time interval to query, defaults to current time.",
																			"default": "<now>",
																			"example": "2019-01-02T03:20:00+00:00",
																			"format": "date-time",
																			"type": "string"
																		},
																		"metrics": {
																			"description": "One or more metrics to compute.",
																			"items": {
																				"description": "A quantitative measurement of KV usage.",
																				"type": "string"
																			},
																			"type": "array"
																		},
																		"dimensions": {
																			"description": "Can be used to break down the data by given attributes.",
																			"items": {
																				"description": "For drilling down on metrics.",
																				"type": "string"
																			},
																			"type": "array",
																			"default": "[]"
																		},
																		"sort": {
																			"description": "Array of dimensions or metrics to sort by, each dimension/metric may be prefixed by - (descending) or + (ascending)",
																			"type": "array",
																			"default": "[]",
																			"items": {}
																		},
																		"filters": {
																			"description": "Used to filter rows by one or more dimensions. Filters can be combined using OR and AND boolean logic. AND takes precedence over OR in all the expressions. The OR operator is defined using a comma (,) or OR keyword surrounded by whitespace. The AND operator is defined using a semicolon (;) or AND keyword surrounded by whitespace. Note that the semicolon is a reserved character in URLs (rfc1738) and needs to be percent-encoded as %3B. Comparison options are: \n\nOperator                  | Name                            | URL Encoded\n--------------------------|---------------------------------|--------------------------\n==                        | Equals                          | %3D%3D\n!=                        | Does not equals                 | !%3D\n>                        | Greater Than                    | %3E\n<                         | Less Than                       | %3C\n>=                       | Greater than or equal to        | %3E%3D\n<=                        | Less than or equal to           | %3C%3D     ",
																			"type": "string",
																			"default": "\"\""
																		}
																	}
																}
															}
														},
														{
															"properties": {
																"data": {
																	"example": [
																		{
																			"metrics": [
																				[
																					2,
																					4
																				],
																				[
																					16,
																					32
																				]
																			]
																		}
																	]
																},
																"min": {
																	"example": {
																		"requests": 2,
																		"readKiB": 16
																	}
																},
																"max": {
																	"example": {
																		"requests": 4,
																		"readKiB": 32
																	}
																},
																"totals": {
																	"example": {
																		"requests": 6,
																		"readKiB": 48
																	}
																},
																"query": {
																	"allOf": [
																		{
																			"description": "For specifying result metrics.",
																			"type": "object",
																			"properties": {
																				"limit": {
																					"description": "Limit number of returned metrics.",
																					"type": "integer",
																					"default": 10000
																				},
																				"since": {
																					"description": "Start of time interval to query, defaults to 6 hours before request received.",
																					"default": "<6 hours ago>",
																					"example": "2019-01-02T02:20:00+00:00",
																					"format": "date-time",
																					"type": "string"
																				},
																				"until": {
																					"description": "End of time interval to query, defaults to current time.",
																					"default": "<now>",
																					"example": "2019-01-02T03:20:00+00:00",
																					"format": "date-time",
																					"type": "string"
																				},
																				"metrics": {
																					"description": "One or more metrics to compute.",
																					"items": {
																						"description": "A quantitative measurement of KV usage.",
																						"type": "string"
																					},
																					"type": "array"
																				},
																				"dimensions": {
																					"description": "Can be used to break down the data by given attributes.",
																					"items": {
																						"description": "For drilling down on metrics.",
																						"type": "string"
																					},
																					"type": "array",
																					"default": "[]"
																				},
																				"sort": {
																					"description": "Array of dimensions or metrics to sort by, each dimension/metric may be prefixed by - (descending) or + (ascending)",
																					"type": "array",
																					"default": "[]",
																					"items": {}
																				},
																				"filters": {
																					"description": "Used to filter rows by one or more dimensions. Filters can be combined using OR and AND boolean logic. AND takes precedence over OR in all the expressions. The OR operator is defined using a comma (,) or OR keyword surrounded by whitespace. The AND operator is defined using a semicolon (;) or AND keyword surrounded by whitespace. Note that the semicolon is a reserved character in URLs (rfc1738) and needs to be percent-encoded as %3B. Comparison options are: \n\nOperator                  | Name                            | URL Encoded\n--------------------------|---------------------------------|--------------------------\n==                        | Equals                          | %3D%3D\n!=                        | Does not equals                 | !%3D\n>                        | Greater Than                    | %3E\n<                         | Less Than                       | %3C\n>=                       | Greater than or equal to        | %3E%3D\n<=                        | Less than or equal to           | %3C%3D     ",
																					"type": "string",
																					"default": "\"\""
																				}
																			}
																		},
																		{
																			"properties": {
																				"metrics": {
																					"default": "[\"requests\"]",
																					"example": [
																						"requests",
																						"readKiB"
																					],
																					"items": {
																						"enum": [
																							"requests",
																							"writeKiB",
																							"readKiB"
																						]
																					}
																				},
																				"dimensions": {
																					"example": [
																						"accountId",
																						"responseCode"
																					],
																					"items": {
																						"enum": [
																							"accountId",
																							"responseCode",
																							"requestType"
																						]
																					}
																				},
																				"sort": {
																					"example": [
																						"+requests",
																						"-responseCode"
																					]
																				},
																				"filters": {
																					"example": "requestType==read AND responseCode!=200"
																				}
																			}
																		}
																	]
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/storage/analytics/stored": {
			"get": {
				"summary": "Query Stored Data Analytics",
				"description": "Retrieves Workers KV stored data metrics for the given account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Query Stored Data Analytics response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1analytics/get/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
														},
														{
															"properties": {
																"data": {
																	"example": [
																		{
																			"metrics": [
																				[
																					2,
																					4
																				],
																				[
																					16,
																					32
																				]
																			]
																		}
																	]
																},
																"min": {
																	"example": {
																		"storedKeys": 2,
																		"storedBytes": 16
																	}
																},
																"max": {
																	"example": {
																		"storedKeys": 4,
																		"storedBytes": 32
																	}
																},
																"totals": {
																	"example": {
																		"storedKeys": 6,
																		"storedBytes": 48
																	}
																},
																"query": {
																	"allOf": [
																		{
																			"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1storage~1analytics/get/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/query/allOf/0"
																		},
																		{
																			"properties": {
																				"metrics": {
																					"default": "[\"storedBytes\"]",
																					"example": [
																						"storedBytes",
																						"storedKeys"
																					],
																					"items": {
																						"enum": [
																							"storedBytes",
																							"storedKeys"
																						]
																					}
																				},
																				"dimensions": {
																					"example": [
																						"namespaceId"
																					],
																					"items": {
																						"enum": [
																							"namespaceId"
																						]
																					}
																				},
																				"sort": {
																					"example": [
																						"+storedBytes",
																						"-namespaceId"
																					]
																				},
																				"filters": {
																					"example": "namespaceId==a4e8cbb7-1b58-4990-925e-e026d40c4c64"
																				}
																			}
																		}
																	]
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{zone_identifier}/workers/script": {
			"get": {
				"summary": "Download Worker",
				"description": "Fetch raw script content for your worker. Note this is the original script content, not JSON encoded.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Download Worker response",
						"content": {
							"undefined": {
								"schema": {
									"example": "addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete Worker",
				"description": "Delete your worker. This call has no response body on a successful delete.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1workers~1script/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Worker response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"put": {
				"summary": "Upload Worker",
				"description": "Upload a worker, or a new version of a worker.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1workers~1script/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Upload Worker response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/javascript": {
							"schema": {
								"example": "addEventListener('fetch', event => { event.respondWith(fetch(event.request)) })"
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/workers/script/bindings": {
			"get": {
				"summary": "List Bindings",
				"description": "List the bindings for a Workers script.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Bindings response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"oneOf": [
															{
																"type": "object",
																"required": [
																	"name",
																	"type",
																	"namespace_id"
																],
																"properties": {
																	"name": {
																		"description": "A JavaScript variable name for the binding.",
																		"type": "string",
																		"readOnly": true,
																		"example": "myBinding"
																	},
																	"type": {
																		"description": "The class of resource that the binding provides.",
																		"type": "string",
																		"enum": [
																			"kv_namespace"
																		],
																		"example": "kv_namespace"
																	},
																	"namespace_id": {
																		"description": "Namespace identifier tag.",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "0f2ac74b498b48028cb68387c421e279"
																	}
																}
															},
															{
																"type": "object",
																"required": [
																	"name",
																	"type"
																],
																"properties": {
																	"name": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1workers~1script~1bindings/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/properties/name"
																	},
																	"type": {
																		"description": "The class of resource that the binding provides.",
																		"type": "string",
																		"enum": [
																			"wasm_module"
																		],
																		"example": "wasm_module"
																	}
																}
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{zone_id}/workers/filters": {
			"get": {
				"summary": "List Filters",
				"description": "",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Filters response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"pattern": {
																"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1filters/post/requestBody/content/application~1json/schema/properties/pattern"
															},
															"enabled": {
																"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1filters/post/requestBody/content/application~1json/schema/properties/enabled"
															}
														},
														"required": [
															"id",
															"pattern",
															"enabled"
														],
														"x-cfLinkErrors": {
															"10001": "Unsupported or unexpected Content Type",
															"10002": "Unexpected internal server error",
															"10003": "Missing required URL parameter",
															"10004": "Malformed URL parameter",
															"10007": "Resource not found (similar to HTTP 404)",
															"10014": "Internal error while attempting authorization checks",
															"10015": "The current account is not authorized to use workers",
															"10020": "Attempted to create a filter for a pattern that already exists",
															"10022": "Filter pattern was invalid",
															"10023": "Unauthorized access attempt",
															"10026": "Filter pattern was unparseable"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Filter",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1filters/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Filter response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"pattern",
									"enabled"
								],
								"properties": {
									"pattern": {
										"title": "Filter pattern",
										"type": "string",
										"example": "example.net/*"
									},
									"enabled": {
										"title": "Whether or not this filter will run a script",
										"type": "boolean",
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_id}/workers/filters/{filter_id}": {
			"put": {
				"summary": "Update Filter",
				"parameters": [
					{
						"name": "filter_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Filter response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
														},
														"pattern": {
															"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1filters~1%7Bfilter_id%7D/put/requestBody/content/application~1json/schema/properties/pattern"
														},
														"enabled": {
															"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1filters~1%7Bfilter_id%7D/put/requestBody/content/application~1json/schema/properties/enabled"
														}
													},
													"required": [
														"id",
														"pattern",
														"enabled"
													],
													"x-cfLinkErrors": {
														"10001": "Unsupported or unexpected Content Type",
														"10002": "Unexpected internal server error",
														"10003": "Missing required URL parameter",
														"10004": "Malformed URL parameter",
														"10007": "Resource not found (similar to HTTP 404)",
														"10014": "Internal error while attempting authorization checks",
														"10015": "The current account is not authorized to use workers",
														"10020": "Attempted to create a filter for a pattern that already exists",
														"10022": "Filter pattern was invalid",
														"10023": "Unauthorized access attempt",
														"10026": "Filter pattern was unparseable"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"pattern",
									"enabled"
								],
								"properties": {
									"pattern": {
										"title": "Filter pattern",
										"type": "string",
										"example": "example.net/*"
									},
									"enabled": {
										"title": "Whether or not this filter will run a script",
										"type": "boolean",
										"example": true
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Filter",
				"parameters": [
					{
						"name": "filter_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1filters~1%7Bfilter_id%7D/put/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1workers~1filters~1%7Bfilter_id%7D/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Filter response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/workers/scripts/{script_name}/schedules": {
			"put": {
				"summary": "Update Cron Triggers",
				"description": "Updates Cron Triggers for a Worker.",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Name of the script, used in URLs and route configuration",
							"type": "string",
							"pattern": "^[a-z0-9_][a-z0-9-_]*$",
							"example": "this-is_my_script-01"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Cron Triggers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"schedules": {
															"type": "array",
															"items": {
																"properties": {
																	"cron": {
																		"readOnly": true
																	},
																	"created_on": {
																		"readOnly": true
																	},
																	"modified_on": {
																		"readOnly": true
																	}
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.cron.trigger.update"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"example": "[{'cron': '*/30 * * * *'}]"
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Cron Triggers",
				"description": "Fetches Cron Triggers for a Worker.",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1schedules/put/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1schedules/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Cron Triggers response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1schedules/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.cron.trigger.read"
					]
				}
			}
		},
		"/accounts/{account_identifier}/workers/scripts/{script_name}/tails": {
			"post": {
				"summary": "Start Tail",
				"description": "Starts a tail that receives logs and exception from a Worker",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Name of the script, used in URLs and route configuration",
							"type": "string",
							"pattern": "^[a-z0-9_][a-z0-9-_]*$",
							"example": "this-is_my_script-01"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Start Tail response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"readOnly": true
														},
														"url": {
															"readOnly": true
														},
														"expires_at": {
															"readOnly": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.read",
						"com.cloudflare.edge.worker.tail.create"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"get": {
				"summary": "List Tails",
				"description": "Get list of tails currently deployed on a worker",
				"parameters": [
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1tails/post/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1tails/post/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Tails response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1scripts~1%7Bscript_name%7D~1tails/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.read"
					]
				}
			}
		},
		"/accounts/{account_identifier}/workers/scripts/{script_name}/tails/{id}": {
			"delete": {
				"summary": "Delete Tail",
				"description": "Deletes a tail from a Worker",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Identifier for the tail",
							"type": "string",
							"example": "03dc9f77817b488fb26c5861ec18f791"
						}
					},
					{
						"name": "script_name",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Name of the script, used in URLs and route configuration",
							"type": "string",
							"pattern": "^[a-z0-9_][a-z0-9-_]*$",
							"example": "this-is_my_script-01"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Tail response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.script.read",
						"com.cloudflare.edge.worker.tail.create"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/workers/domains": {
			"get": {
				"summary": "List Domains",
				"description": "Lists all Worker Domains.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "9a7806061c88ada191ed06f989cc3dac"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Domains response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "Identifer of the Worker Domain",
																"example": "dbe10b4bc17c295377eabd600e1787fd"
															},
															"zone_id": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains/put/requestBody/content/application~1json/schema/properties/zone_id"
															},
															"zone_name": {
																"type": "string",
																"description": "Name of the zone",
																"example": "example.com"
															},
															"hostname": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains/put/requestBody/content/application~1json/schema/properties/hostname"
															},
															"service": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains/put/requestBody/content/application~1json/schema/properties/service"
															},
															"environment": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains/put/requestBody/content/application~1json/schema/properties/environment"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.domain.list"
					]
				}
			},
			"put": {
				"summary": "Attach to Domain",
				"description": "Attaches a worker to a zone and hostname.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Attach to Domain response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.domain.update"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"zone_id",
									"hostname",
									"service",
									"environment"
								],
								"properties": {
									"zone_id": {
										"description": "Identifier of the zone",
										"example": "593c9c94de529bbbfaac7c53ced0447d"
									},
									"hostname": {
										"type": "string",
										"description": "Hostname of the Worker Domain",
										"example": "foo.example.com"
									},
									"service": {
										"type": "string",
										"description": "Worker service associated with the zone and hostname",
										"example": "foo"
									},
									"environment": {
										"type": "string",
										"description": "Worker environment associated with the zone and hostname",
										"example": "production"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/workers/domains/{domain_identifier}": {
			"get": {
				"summary": "Get a Domain",
				"description": "Gets a Worker Domain.",
				"parameters": [
					{
						"name": "domain_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Identifer of the Worker Domain",
							"example": "dbe10b4bc17c295377eabd600e1787fd"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "9a7806061c88ada191ed06f989cc3dac"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a Domain response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains~1%7Bdomain_identifier%7D/get/parameters/0/schema"
														},
														"zone_id": {
															"description": "Identifier of the zone",
															"example": "593c9c94de529bbbfaac7c53ced0447d"
														},
														"zone_name": {
															"type": "string",
															"description": "Name of the zone",
															"example": "example.com"
														},
														"hostname": {
															"type": "string",
															"description": "Hostname of the Worker Domain",
															"example": "foo.example.com"
														},
														"service": {
															"type": "string",
															"description": "Worker service associated with the zone and hostname",
															"example": "foo"
														},
														"environment": {
															"type": "string",
															"description": "Worker environment associated with the zone and hostname",
															"example": "production"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.domain.read"
					]
				}
			},
			"delete": {
				"summary": "Detach from Domain",
				"description": "Detaches a worker from a zone and hostname.",
				"parameters": [
					{
						"name": "domain_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains~1%7Bdomain_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1domains~1%7Bdomain_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Detach from Domain response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.domain.delete"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/workers/subdomain": {
			"put": {
				"summary": "Create Subdomain",
				"description": "Creates a Workers subdomain for an account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Subdomain response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"name": {
															"readOnly": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.cron.subdomain.create"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"example": "{'subdomain': 'example-subdomain'}"
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Subdomain",
				"description": "Returns a Workers subdomain for an account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1subdomain/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Subdomain response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1subdomain/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.cron.subdomain.read"
					]
				}
			}
		},
		"/accounts/{account_identifier}/workers/account-settings": {
			"put": {
				"summary": "Create Worker Account Settings",
				"description": "Creates Worker Account Settings for an account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Worker Account Settings response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"default_usage_model": {
															"readOnly": true
														},
														"green_compute": {
															"readOnly": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.account.update"
					]
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"example": "{'default_usage_model': 'unbound'}"
							}
						}
					}
				}
			},
			"get": {
				"summary": "Fetch Worker Account Settings",
				"description": "Fetches Worker Account Settings for an account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1account-settings/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Fetch Worker Account Settings response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1workers~1account-settings/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.api.account.read"
					]
				}
			}
		},
		"/accounts/{account_identifier}/workers/durable_objects/namespaces": {
			"get": {
				"summary": "List Namespaces",
				"description": "Returns the namespaces owned by an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Namespaces response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"readOnly": true
															},
															"name": {
																"readOnly": true
															},
															"script": {
																"readOnly": true
															},
															"class": {
																"readOnly": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.durable-object.class.list"
					]
				}
			}
		},
		"/accounts/{account_identifier}/workers/durable_objects/namespaces/{id}/objects": {
			"get": {
				"summary": "List Objects",
				"description": "Returns the Durable Objects in a given namespace",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "ID of the namespace",
							"type": "string",
							"example": "5fd1cafff895419c8bcc647fc64ab8f0"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Objects response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "ID of the Durable Object",
																"type": "string",
																"readOnly": true,
																"example": "fe7803fc55b964e09d94666545aab688d360c6bda69ba349ced1e5f28d2fc2c8"
															},
															"hasStoredData": {
																"description": "Whether the Durable Object has stored data",
																"type": "boolean",
																"readOnly": true,
																"example": true
															}
														}
													}
												},
												"result_info": {
													"properties": {
														"count": {
															"description": "Total results returned based on your list parameters",
															"type": "number",
															"example": 1
														},
														"cursor": {
															"description": "Opaque token indicating the position from which to continue when requesting the next set of records. A valid value for the cursor can be obtained from the cursors object in the result_info structure.",
															"type": "string",
															"example": "AAAAANuhDN7SjacTnSVsDu3WW1Lvst6dxJGTjRY5BhxPXdf6L6uTcpd_NVtjhn11OUYRsVEykxoUwF-JQU4dn6QylZSKTOJuG0indrdn_MlHpMRtsxgXjs-RPdHYIVm3odE_uvEQ_dTQGFm8oikZMohns34DLBgrQpc"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"com.cloudflare.edge.worker.durable-object.class.read"
					]
				}
			}
		},
		"/zones/{zone}/spectrum/apps": {
			"get": {
				"summary": "List Spectrum applications",
				"description": "Retrieves a list of currently existing Spectrum applications inside a zone.",
				"parameters": [
					{
						"name": "zone",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Spectrum applications response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Spectrum application using a name for the origin",
				"description": "Creates a new Spectrum application from a configuration using a name for the origin.",
				"parameters": [
					{
						"name": "zone",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Spectrum application using a name for the origin response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "Application identifier.",
															"example": "ea95132c15732412d22c1476fa83f27a",
															"maxLength": 32,
															"readOnly": true,
															"type": "string"
														},
														"protocol": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/protocol"
														},
														"dns": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/dns"
														},
														"origin_dns": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/origin_dns"
														},
														"origin_port": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/origin_port"
														},
														"proxy_protocol": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/proxy_protocol"
														},
														"ip_firewall": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/ip_firewall"
														},
														"tls": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/tls"
														},
														"edge_ips": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/edge_ips"
														},
														"traffic_type": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/traffic_type"
														},
														"argo_smart_routing": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps/post/requestBody/content/application~1json/schema/properties/argo_smart_routing"
														},
														"created_on": {
															"description": "When the Application was created.",
															"example": "2014-01-02T02:20:00+00:00",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"modified_on": {
															"description": "When the Application was last modified.",
															"example": "2014-01-02T02:20:00+00:00",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"protocol",
									"dns",
									"origin_dns",
									"origin_port"
								],
								"properties": {
									"protocol": {
										"description": "The port configuration at Cloudflare’s edge. May specify a single port, for example `\"tcp/1000\"`, or a range of ports, for example `\"tcp/1000-2000\"`.",
										"example": "tcp/22",
										"type": "string"
									},
									"dns": {
										"description": "The name and type of DNS record for the Spectrum application.",
										"properties": {
											"type": {
												"description": "The type of DNS record associated with the application.",
												"type": "string",
												"example": "CNAME",
												"enum": [
													"CNAME",
													"ADDRESS"
												]
											},
											"name": {
												"description": "The name of the DNS record associated with the application.",
												"type": "string",
												"example": "ssh.example.com",
												"format": "hostname"
											}
										},
										"type": "object"
									},
									"origin_dns": {
										"description": "The name and type of DNS record for the Spectrum application.",
										"properties": {
											"type": {
												"description": "The type of DNS record associated with the origin. \"\" is used to specify a combination of A/AAAA records.",
												"type": "string",
												"example": "",
												"enum": [
													"",
													"A",
													"AAAA",
													"SRV"
												]
											},
											"name": {
												"description": "The name of the DNS record associated with the origin.",
												"type": "string",
												"example": "origin.example.com",
												"format": "hostname"
											},
											"ttl": {
												"description": "The TTL of our resolution of your DNS record in seconds.",
												"type": "integer",
												"minimum": 600
											}
										},
										"type": "object"
									},
									"origin_port": {
										"description": "The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `\"1000-2000\"`\nNotes: If specifying a port range, the number of ports in the range must match the number of ports specified in the \"protocol\" field.",
										"example": 22,
										"minimum": 1,
										"maximum": 65535,
										"anyOf": [
											{
												"type": "integer"
											},
											{
												"type": "string"
											}
										]
									},
									"proxy_protocol": {
										"description": "Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.",
										"type": "string",
										"example": false,
										"default": false,
										"enum": [
											false,
											"v1",
											"v2",
											"simple"
										]
									},
									"ip_firewall": {
										"description": "Enables IP Access Rules for this application.\nNotes: Only available for TCP applications.",
										"type": "boolean",
										"example": true
									},
									"tls": {
										"description": "The type of TLS termination associated with the application.",
										"type": "string",
										"example": "full",
										"enum": [
											false,
											"flexible",
											"full",
											"strict"
										]
									},
									"edge_ips": {
										"description": "The anycast edge IP configuration for the hostname of this application.",
										"default": {
											"type": "dynamic",
											"connectivity": "all"
										},
										"oneOf": [
											{
												"properties": {
													"type": {
														"description": "The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.",
														"type": "string",
														"example": "dynamic",
														"enum": [
															"dynamic"
														]
													},
													"connectivity": {
														"description": "The IP versions supported for inbound connections on Spectrum anycast IPs.",
														"type": "string",
														"example": "all",
														"enum": [
															"all",
															"ipv4",
															"ipv6"
														]
													}
												},
												"type": "object"
											},
											{
												"properties": {
													"type": {
														"description": "The type of edge IP configuration specified. Statically allocated edge IPs use customer IPs in accordance with the ips array you specify. Only valid with ADDRESS DNS names.",
														"type": "string",
														"example": "static",
														"enum": [
															"static"
														]
													},
													"ips": {
														"description": "The array of customer owned IPs we broadcast via anycast for this hostname and application.",
														"example": [
															"192.0.2.1"
														],
														"items": {
															"description": "Edge anycast IPs",
															"example": "192.0.2.1",
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										]
									},
									"traffic_type": {
										"description": "Determines how data travels from the edge to your origin. When set to \"direct\", Spectrum will send traffic directly to your origin, and the application's type is derived from the `protocol`. When set to \"http\" or \"https\", Spectrum will apply Cloudflare's HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.",
										"type": "string",
										"example": "direct",
										"default": "direct",
										"enum": [
											"direct",
											"http",
											"https"
										]
									},
									"argo_smart_routing": {
										"description": "Enables Argo Smart Routing for this application.\nNotes: Only available for TCP applications with traffic_type set to \"direct\".",
										"type": "boolean",
										"default": false,
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone}/spectrum/apps/{app_id}": {
			"get": {
				"summary": "Get Spectrum application configuration",
				"description": "Gets the application configuration of a specific application inside a zone.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Application identifier.",
							"example": "ea95132c15732412d22c1476fa83f27a",
							"maxLength": 32,
							"readOnly": true,
							"type": "string"
						}
					},
					{
						"name": "zone",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Spectrum application configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Spectrum application configuration using a name for the origin",
				"description": "Updates a previously existing application's configuration that uses a name for the origin.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Spectrum application configuration using a name for the origin response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/get/parameters/0/schema"
														},
														"protocol": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/protocol"
														},
														"dns": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/dns"
														},
														"origin_dns": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/origin_dns"
														},
														"origin_port": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/origin_port"
														},
														"proxy_protocol": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/proxy_protocol"
														},
														"ip_firewall": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/ip_firewall"
														},
														"tls": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/tls"
														},
														"edge_ips": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/edge_ips"
														},
														"traffic_type": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/traffic_type"
														},
														"argo_smart_routing": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/put/requestBody/content/application~1json/schema/properties/argo_smart_routing"
														},
														"created_on": {
															"description": "When the Application was created.",
															"example": "2014-01-02T02:20:00+00:00",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														},
														"modified_on": {
															"description": "When the Application was last modified.",
															"example": "2014-01-02T02:20:00+00:00",
															"format": "date-time",
															"readOnly": true,
															"type": "string"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"protocol",
									"dns",
									"origin_dns",
									"origin_port"
								],
								"properties": {
									"protocol": {
										"description": "The port configuration at Cloudflare’s edge. May specify a single port, for example `\"tcp/1000\"`, or a range of ports, for example `\"tcp/1000-2000\"`.",
										"example": "tcp/22",
										"type": "string"
									},
									"dns": {
										"description": "The name and type of DNS record for the Spectrum application.",
										"properties": {
											"type": {
												"description": "The type of DNS record associated with the application.",
												"type": "string",
												"example": "CNAME",
												"enum": [
													"CNAME",
													"ADDRESS"
												]
											},
											"name": {
												"description": "The name of the DNS record associated with the application.",
												"type": "string",
												"example": "ssh.example.com",
												"format": "hostname"
											}
										},
										"type": "object"
									},
									"origin_dns": {
										"description": "The name and type of DNS record for the Spectrum application.",
										"properties": {
											"type": {
												"description": "The type of DNS record associated with the origin. \"\" is used to specify a combination of A/AAAA records.",
												"type": "string",
												"example": "",
												"enum": [
													"",
													"A",
													"AAAA",
													"SRV"
												]
											},
											"name": {
												"description": "The name of the DNS record associated with the origin.",
												"type": "string",
												"example": "origin.example.com",
												"format": "hostname"
											},
											"ttl": {
												"description": "The TTL of our resolution of your DNS record in seconds.",
												"type": "integer",
												"minimum": 600
											}
										},
										"type": "object"
									},
									"origin_port": {
										"description": "The destination port at the origin. Only specified in conjunction with origin_dns. May use an integer to specify a single origin port, for example `1000`, or a string to specify a range of origin ports, for example `\"1000-2000\"`\nNotes: If specifying a port range, the number of ports in the range must match the number of ports specified in the \"protocol\" field.",
										"example": 22,
										"minimum": 1,
										"maximum": 65535,
										"anyOf": [
											{
												"type": "integer"
											},
											{
												"type": "string"
											}
										]
									},
									"proxy_protocol": {
										"description": "Enables Proxy Protocol to the origin. Refer to [Enable Proxy protocol](https://developers.cloudflare.com/spectrum/getting-started/proxy-protocol/) for implementation details on PROXY Protocol V1, PROXY Protocol V2, and Simple Proxy Protocol.",
										"type": "string",
										"example": false,
										"default": false,
										"enum": [
											false,
											"v1",
											"v2",
											"simple"
										]
									},
									"ip_firewall": {
										"description": "Enables IP Access Rules for this application.\nNotes: Only available for TCP applications.",
										"type": "boolean",
										"example": true
									},
									"tls": {
										"description": "The type of TLS termination associated with the application.",
										"type": "string",
										"example": "full",
										"enum": [
											false,
											"flexible",
											"full",
											"strict"
										]
									},
									"edge_ips": {
										"description": "The anycast edge IP configuration for the hostname of this application.",
										"default": {
											"type": "dynamic",
											"connectivity": "all"
										},
										"oneOf": [
											{
												"properties": {
													"type": {
														"description": "The type of edge IP configuration specified. Dynamically allocated edge IPs use Spectrum anycast IPs in accordance with the connectivity you specify. Only valid with CNAME DNS names.",
														"type": "string",
														"example": "dynamic",
														"enum": [
															"dynamic"
														]
													},
													"connectivity": {
														"description": "The IP versions supported for inbound connections on Spectrum anycast IPs.",
														"type": "string",
														"example": "all",
														"enum": [
															"all",
															"ipv4",
															"ipv6"
														]
													}
												},
												"type": "object"
											},
											{
												"properties": {
													"type": {
														"description": "The type of edge IP configuration specified. Statically allocated edge IPs use customer IPs in accordance with the ips array you specify. Only valid with ADDRESS DNS names.",
														"type": "string",
														"example": "static",
														"enum": [
															"static"
														]
													},
													"ips": {
														"description": "The array of customer owned IPs we broadcast via anycast for this hostname and application.",
														"example": [
															"192.0.2.1"
														],
														"items": {
															"description": "Edge anycast IPs",
															"example": "192.0.2.1",
															"type": "string"
														},
														"type": "array"
													}
												},
												"type": "object"
											}
										]
									},
									"traffic_type": {
										"description": "Determines how data travels from the edge to your origin. When set to \"direct\", Spectrum will send traffic directly to your origin, and the application's type is derived from the `protocol`. When set to \"http\" or \"https\", Spectrum will apply Cloudflare's HTTP/HTTPS features as it sends traffic to your origin, and the application type matches this property exactly.",
										"type": "string",
										"example": "direct",
										"default": "direct",
										"enum": [
											"direct",
											"http",
											"https"
										]
									},
									"argo_smart_routing": {
										"description": "Enables Argo Smart Routing for this application.\nNotes: Only available for TCP applications with traffic_type set to \"direct\".",
										"type": "boolean",
										"default": false,
										"example": true
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Spectrum application",
				"description": "Deletes a previously existing application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Spectrum application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1apps~1%7Bapp_id%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone}/spectrum/analytics/events/summary": {
			"get": {
				"summary": "Get analytics summary",
				"description": "Retrieves a list of summarised aggregate metrics over a given time period.",
				"parameters": [
					{
						"name": "zone",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get analytics summary response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{zone}/spectrum/analytics/events/bytime": {
			"get": {
				"summary": "Get analytics by time",
				"description": "Retrieves a list of aggregate metrics grouped by time interval.",
				"parameters": [
					{
						"name": "zone",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get analytics by time response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone%7D~1spectrum~1analytics~1events~1summary/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{zone}/spectrum/analytics/aggregate/current": {
			"get": {
				"summary": "Get current aggregated analytics",
				"description": "Retrieves analytics aggregated from the last minute of usage on Spectrum applications underneath a given zone.",
				"parameters": [
					{
						"name": "zone",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get current aggregated analytics response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{zone_identifier}/pagerules": {
			"get": {
				"summary": "Get Page Rules",
				"description": "Fetches Page Rules in a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Page Rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"targets",
															"actions",
															"priority",
															"status",
															"modified_on",
															"created_on"
														],
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"targets": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules/post/requestBody/content/application~1json/schema/properties/targets"
															},
															"actions": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules/post/requestBody/content/application~1json/schema/properties/actions"
															},
															"priority": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules/post/requestBody/content/application~1json/schema/properties/priority"
															},
															"status": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules/post/requestBody/content/application~1json/schema/properties/status"
															},
															"modified_on": {
																"readOnly": true,
																"type": "string",
																"format": "date-time",
																"example": "2014-01-01T05:20:00.123450+00:00",
																"description": "The timestamp of when the Page Rule was last modified."
															},
															"created_on": {
																"readOnly": true,
																"type": "string",
																"format": "date-time",
																"example": "2014-01-01T05:20:00.123450+00:00",
																"description": "The timestamp of when the Page Rule was created."
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create a Page Rule",
				"description": "Creates a new Page Rule.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a Page Rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"targets",
									"actions"
								],
								"properties": {
									"targets": {
										"type": "array",
										"description": "The rule targets to evaluate on each request.",
										"items": {
											"description": "A request condition target.",
											"required": [
												"target",
												"constraint"
											],
											"oneOf": [
												{
													"type": "object",
													"description": "URL target",
													"properties": {
														"target": {
															"enum": [
																"url"
															],
															"description": "A target based on the URL of the request.",
															"example": "url"
														},
														"constraint": {
															"type": "object",
															"description": "The constraint of a target.",
															"allOf": [
																{
																	"description": "String constraint",
																	"type": "object",
																	"required": [
																		"operator",
																		"value"
																	],
																	"properties": {
																		"operator": {
																			"description": "The matches operator can use asterisks and pipes as wildcard and 'or' operators",
																			"enum": [
																				"matches",
																				"contains",
																				"equals",
																				"not_equal",
																				"not_contain"
																			],
																			"default": "contains"
																		},
																		"value": {
																			"description": "The value to apply the operator to",
																			"type": "string"
																		}
																	}
																},
																{
																	"properties": {
																		"value": {
																			"type": "string",
																			"pattern": "^(https?://)?(([-a-zA-Z0-9*]*\\.)+[-a-zA-Z0-9]{2,20})(:(8080|8443|443|80))?(/[\\S]+)?$",
																			"description": "The URL pattern to match against the current request. The pattern may contain up to four asterisks ('*') as placeholders.",
																			"example": "*example.com/images/*"
																		}
																	}
																}
															]
														}
													}
												}
											]
										},
										"example": [
											{
												"target": "url",
												"constraint": {
													"operator": "matches",
													"value": "*example.com/images/*"
												}
											}
										]
									},
									"actions": {
										"type": "array",
										"description": "The set of actions to perform if the targets of this rule match the request. Actions can redirect to another URL or override settings, but not both.",
										"items": {
											"oneOf": [
												{
													"type": "object",
													"properties": {
														"name": {
															"enum": [
																"forward_url"
															],
															"description": "The type of route.",
															"example": "forward_url"
														},
														"value": {
															"properties": {
																"type": {
																	"enum": [
																		"temporary",
																		"permanent"
																	],
																	"description": "The response type for the URL redirect.",
																	"example": "temporary"
																},
																"url": {
																	"type": "string",
																	"description": "The URL to redirect the request to.\nNotes: ${num} refers to the position of '*' in the constraint value.",
																	"example": "http://www.example.com/somewhere/$1/astring/$2/anotherstring/$3"
																}
															}
														},
														"modified_on": {
															"type": "string",
															"readOnly": true,
															"format": "date-time",
															"description": "The timestamp of when the override was last modified.",
															"example": "2014-01-01T05:20:00.123450+00:00"
														}
													}
												}
											]
										},
										"example": [
											{
												"id": "browser_check",
												"value": true
											}
										]
									},
									"priority": {
										"type": "integer",
										"description": "The priority of the rule, used to define which Page Rule is processed over another. A higher number indicates a higher priority. For example, if you have a catch-all Page Rule (rule A: `/images/*`) but want a more specific Page Rule to take precedence (rule B: `/images/special/*`), specify a higher priority for rule B so it overrides rule A.",
										"default": 1
									},
									"status": {
										"type": "string",
										"enum": [
											"active",
											"disabled"
										],
										"description": "The status of the Page Rule.",
										"example": "active",
										"default": "disabled"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/pagerules/{identifier}": {
			"get": {
				"summary": "Get a Page Rule",
				"description": "Fetches the details of a Page Rule.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a Page Rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a Page Rule",
				"description": "Replaces the configuration of an existing Page Rule. The configuration of the updated Page Rule will exactly match the data passed in the API request.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a Page Rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"targets",
									"actions"
								],
								"properties": {
									"targets": {
										"type": "array",
										"description": "The rule targets to evaluate on each request.",
										"items": {
											"description": "A request condition target.",
											"required": [
												"target",
												"constraint"
											],
											"oneOf": [
												{
													"type": "object",
													"description": "URL target",
													"properties": {
														"target": {
															"enum": [
																"url"
															],
															"description": "A target based on the URL of the request.",
															"example": "url"
														},
														"constraint": {
															"type": "object",
															"description": "The constraint of a target.",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules/post/requestBody/content/application~1json/schema/properties/targets/items/oneOf/0/properties/constraint/allOf/0"
																},
																{
																	"properties": {
																		"value": {
																			"type": "string",
																			"pattern": "^(https?://)?(([-a-zA-Z0-9*]*\\.)+[-a-zA-Z0-9]{2,20})(:(8080|8443|443|80))?(/[\\S]+)?$",
																			"description": "The URL pattern to match against the current request. The pattern may contain up to four asterisks ('*') as placeholders.",
																			"example": "*example.com/images/*"
																		}
																	}
																}
															]
														}
													}
												}
											]
										},
										"example": [
											{
												"target": "url",
												"constraint": {
													"operator": "matches",
													"value": "*example.com/images/*"
												}
											}
										]
									},
									"actions": {
										"type": "array",
										"description": "The set of actions to perform if the targets of this rule match the request. Actions can redirect to another URL or override settings, but not both.",
										"items": {
											"oneOf": [
												{
													"type": "object",
													"properties": {
														"name": {
															"enum": [
																"forward_url"
															],
															"description": "The type of route.",
															"example": "forward_url"
														},
														"value": {
															"properties": {
																"type": {
																	"enum": [
																		"temporary",
																		"permanent"
																	],
																	"description": "The response type for the URL redirect.",
																	"example": "temporary"
																},
																"url": {
																	"type": "string",
																	"description": "The URL to redirect the request to.\nNotes: ${num} refers to the position of '*' in the constraint value.",
																	"example": "http://www.example.com/somewhere/$1/astring/$2/anotherstring/$3"
																}
															}
														},
														"modified_on": {
															"type": "string",
															"readOnly": true,
															"format": "date-time",
															"description": "The timestamp of when the override was last modified.",
															"example": "2014-01-01T05:20:00.123450+00:00"
														}
													}
												}
											]
										},
										"example": [
											{
												"id": "browser_check",
												"value": true
											}
										]
									},
									"priority": {
										"type": "integer",
										"description": "The priority of the rule, used to define which Page Rule is processed over another. A higher number indicates a higher priority. For example, if you have a catch-all Page Rule (rule A: `/images/*`) but want a more specific Page Rule to take precedence (rule B: `/images/special/*`), specify a higher priority for rule B so it overrides rule A.",
										"default": 1
									},
									"status": {
										"type": "string",
										"enum": [
											"active",
											"disabled"
										],
										"description": "The status of the Page Rule.",
										"example": "active",
										"default": "disabled"
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Edit a Page Rule",
				"description": "Updates one or more fields of an existing Page Rule.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit a Page Rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"targets": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/targets"
									},
									"actions": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/actions"
									},
									"priority": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/priority"
									},
									"status": {
										"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/status"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a Page Rule",
				"description": "Deletes an existing Page Rule.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1pagerules~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a Page Rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/pagerules/settings": {
			"get": {
				"summary": "Get available Page Rules settings",
				"description": "Returns a list of settings (and their details) that Page Rules can apply to matching requests.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get available Page Rules settings response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"description": "Settings available for the zone.",
													"items": {
														"type": "object"
													},
													"example": [
														{
															"id": "browser_check",
															"properties": [
																{
																	"name": "value",
																	"type": "toggle"
																}
															]
														},
														{
															"id": "browser_cache_ttl",
															"properties": [
																{
																	"name": "value",
																	"type": "range",
																	"min": 1800,
																	"max": 31536000,
																	"suggested_values": [
																		1800,
																		3600,
																		7200,
																		10800,
																		14400,
																		18000,
																		28800,
																		43200,
																		57600,
																		72000,
																		86400,
																		172800,
																		259200,
																		345600,
																		432000,
																		691200,
																		1382400,
																		2073600,
																		2678400,
																		5356800,
																		16070400,
																		31536000
																	]
																}
															]
														},
														{
															"id": "browser_check",
															"properties": [
																{
																	"name": "value",
																	"type": "toggle"
																}
															]
														},
														{
															"id": "cache_key_fields",
															"properties": [
																{
																	"name": "value",
																	"type": "object",
																	"properties": [
																		{
																			"name": "query_string",
																			"type": "select",
																			"multiple": false,
																			"allowEmpty": true,
																			"choices": [
																				"include",
																				"exclude"
																			]
																		},
																		{
																			"name": "header",
																			"type": "select",
																			"multiple": true,
																			"allowEmpty": true,
																			"choices": [
																				"include",
																				"exclude",
																				"check_presence"
																			]
																		},
																		{
																			"name": "host",
																			"type": "select",
																			"multiple": true,
																			"allowEmpty": false,
																			"choices": [
																				"resolved"
																			]
																		},
																		{
																			"name": "cookie",
																			"type": "select",
																			"multiple": true,
																			"allowEmpty": true,
																			"choices": [
																				"include",
																				"check_presence"
																			]
																		},
																		{
																			"name": "user",
																			"type": "select",
																			"multiple": true,
																			"allowEmpty": false,
																			"choices": [
																				"device_type",
																				"geo",
																				"lang"
																			]
																		}
																	]
																}
															]
														},
														{
															"id": "cache_deception_armor",
															"properties": [
																{
																	"name": "value",
																	"type": "toggle"
																}
															]
														},
														{
															"id": "cache_level",
															"properties": [
																{
																	"name": "value",
																	"type": "select",
																	"multiple": false,
																	"choices": [
																		"bypass",
																		"basic",
																		"simplified",
																		"aggressive",
																		"cache_everything"
																	]
																}
															]
														},
														{
															"id": "cache_ttl_by_status",
															"properties": [
																{
																	"name": "value",
																	"type": "object",
																	"allowEmpty": false
																}
															]
														},
														{
															"id": "disable_apps",
															"properties": []
														},
														{
															"id": "disable_performance",
															"properties": []
														},
														{
															"id": "disable_security",
															"properties": []
														},
														{
															"id": "edge_cache_ttl",
															"properties": [
																{
																	"name": "value",
																	"type": "range",
																	"min": 7200,
																	"max": 2419200,
																	"suggested_values": [
																		7200,
																		10800,
																		14400,
																		18000,
																		28800,
																		43200,
																		57600,
																		72000,
																		86400,
																		172800,
																		259200,
																		345600,
																		432000,
																		518400,
																		604800,
																		1209600,
																		2419200
																	]
																}
															]
														},
														{
															"id": "email_obfuscation",
															"properties": [
																{
																	"name": "value",
																	"type": "toggle"
																}
															]
														},
														{
															"id": "forwarding_url",
															"properties": [
																{
																	"name": "status_code",
																	"type": "choice",
																	"multiple": false,
																	"choices": [
																		301,
																		302
																	]
																},
																{
																	"name": "url",
																	"type": "forwardingUrl"
																}
															]
														},
														{
															"id": "ip_geolocation",
															"properties": [
																{
																	"name": "value",
																	"type": "toggle"
																}
															]
														},
														{
															"id": "minify",
															"properties": [
																{
																	"name": "value",
																	"type": "select",
																	"multiple": true,
																	"allowEmpty": true,
																	"choices": [
																		"html",
																		"css",
																		"js"
																	]
																}
															]
														},
														{
															"id": "explicit_cache_control",
															"properties": [
																{
																	"name": "value",
																	"type": "toggle"
																}
															]
														},
														{
															"id": "rocket_loader",
															"properties": [
																{
																	"name": "value",
																	"type": "toggle"
																}
															]
														},
														{
															"id": "security_level",
															"properties": [
																{
																	"name": "value",
																	"type": "select",
																	"multiple": false,
																	"choices": [
																		"essentially_off",
																		"low",
																		"medium",
																		"high",
																		"under_attack"
																	]
																}
															]
														},
														{
															"id": "server_side_exclude",
															"properties": [
																{
																	"name": "value",
																	"type": "toggle"
																}
															]
														},
														{
															"id": "ssl",
															"properties": [
																{
																	"name": "value",
																	"type": "choice",
																	"multiple": false,
																	"choices": [
																		false,
																		"flexible",
																		"full",
																		"strict"
																	]
																}
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/rate_limits": {
			"get": {
				"summary": "Get rate limits",
				"description": "Fetches the rate limits for a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get rate limits response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"properties": {
																	"id": {
																		"description": "The unique identifier of the rate limit.",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "372e67954025e0ba6aaa6d586b9e0b59"
																	},
																	"disabled": {
																		"type": "boolean",
																		"description": "When true, indicates that the rate limit is currently disabled.",
																		"example": false
																	},
																	"description": {
																		"type": "string",
																		"description": "An informative summary of the rate limit. This value is sanitized and any tags will be removed.",
																		"maxLength": 1024,
																		"example": "Prevent multiple login failures to mitigate brute force attacks"
																	},
																	"match": {
																		"type": "object",
																		"description": "Determines which traffic the rate limit counts towards the threshold.",
																		"oneOf": [
																			{
																				"type": "object",
																				"properties": {
																					"request": {
																						"type": "object",
																						"properties": {
																							"methods": {
																								"type": "array",
																								"description": "The HTTP methods to match. You can specify a subset (for example, `['POST','PUT']`) or all methods (`['_ALL_']`). This field is optional when creating a rate limit.",
																								"items": {
																									"type": "string",
																									"description": "An HTTP method or `_ALL_` to indicate all methods.",
																									"example": "GET",
																									"enum": [
																										"GET",
																										"POST",
																										"PUT",
																										"DELETE",
																										"PATCH",
																										"HEAD",
																										"_ALL_"
																									]
																								},
																								"example": [
																									"GET",
																									"POST"
																								]
																							},
																							"schemes": {
																								"type": "array",
																								"description": "The HTTP schemes to match. You can specify one scheme (`['HTTPS']`), both schemes (`['HTTP','HTTPS']`), or all schemes (`['_ALL_']`). This field is optional.",
																								"items": {
																									"type": "string",
																									"description": "An HTTP scheme or `_ALL_` to indicate all schemes.",
																									"example": "HTTPS"
																								},
																								"example": [
																									"HTTP",
																									"HTTPS"
																								]
																							},
																							"url": {
																								"type": "string",
																								"description": "The URL pattern to match, composed of a host and a path such as `example.org/path*`. Normalization is applied before the pattern is matched. `*` wildcards are expanded to match applicable traffic. Query strings are not matched. Set the value to `*` to match all traffic to your zone.",
																								"maxLength": 1024,
																								"example": "*.example.org/path*"
																							}
																						}
																					},
																					"response": {
																						"type": "object",
																						"properties": {
																							"origin_traffic": {
																								"type": "boolean",
																								"description": "When true, only the uncached traffic served from your origin servers will count towards rate limiting. In this case, any cached traffic served by Cloudflare will not count towards rate limiting. This field is optional.\nNotes: This field is deprecated. Instead, use response headers and set \"origin_traffic\" to \"false\" to avoid legacy behaviour interacting with the \"response_headers\" property."
																							}
																						}
																					},
																					"headers": {
																						"type": "array",
																						"items": {
																							"type": "object",
																							"properties": {
																								"name": {
																									"type": "string",
																									"description": "The name of the response header to match.",
																									"example": "Cf-Cache-Status"
																								},
																								"op": {
																									"type": "string",
																									"description": "The operator used when matching: `eq` means \"equal\" and `ne` means \"not equal\".",
																									"example": "ne",
																									"enum": [
																										"eq",
																										"ne"
																									]
																								},
																								"value": {
																									"type": "string",
																									"description": "The value of the response header, which must match exactly.",
																									"example": "HIT"
																								}
																							}
																						}
																					}
																				}
																			}
																		]
																	},
																	"bypass": {
																		"type": "array",
																		"description": "Criteria specifying when the current rate limit should be bypassed. You can specify that the rate limit should not apply to one or more URLs.",
																		"items": {
																			"type": "object",
																			"properties": {
																				"name": {
																					"type": "string",
																					"enum": [
																						"url"
																					],
																					"example": "url"
																				},
																				"value": {
																					"type": "string",
																					"description": "The URL to bypass.",
																					"example": "api.example.com/*"
																				}
																			}
																		}
																	},
																	"threshold": {
																		"type": "number",
																		"description": "The threshold that will trigger the configured mitigation action. Configure this value along with the `period` property to establish a threshold per period.",
																		"minimum": 1,
																		"example": 60
																	},
																	"period": {
																		"type": "number",
																		"description": "The time in seconds (an integer value) to count matching traffic. If the count exceeds the configured threshold within this period, Cloudflare will perform the configured action.",
																		"minimum": 10,
																		"maximum": 86400,
																		"example": 900
																	},
																	"action": {
																		"type": "object",
																		"description": "The action to perform when the threshold of matched traffic within the configured period is exceeded.",
																		"anyOf": [
																			{
																				"type": "object",
																				"properties": {
																					"mode": {
																						"type": "string",
																						"description": "The action to perform.",
																						"example": "challenge",
																						"enum": [
																							"simulate",
																							"ban",
																							"challenge",
																							"js_challenge",
																							"managed_challenge"
																						]
																					},
																					"timeout": {
																						"type": "number",
																						"description": "The time in seconds during which Cloudflare will perform the mitigation action. Must be an integer value greater than or equal to the period.\nNotes: If \"mode\" is \"challenge\", \"managed_challenge\", or \"js_challenge\", Cloudflare will use the zone's Challenge Passage time and you should not provide this value.",
																						"minimum": 1,
																						"maximum": 86400,
																						"example": 86400
																					},
																					"response": {
																						"type": "object",
																						"description": "A custom content type and reponse to return when the threshold is exceeded. The custom response configured in this object will override the custom error for the zone. This object is optional.\nNotes: If you omit this object, Cloudflare will use the default HTML error page. If \"mode\" is \"challenge\", \"managed_challenge\", or \"js_challenge\", Cloudflare will use the zone challenge pages and you should not provide the \"response\" object.",
																						"anyOf": [
																							{
																								"type": "object",
																								"properties": {
																									"content_type": {
																										"type": "string",
																										"description": "The content type of the body. Must be one of the following: `text/plain`, `text/xml`, or `application/json`.",
																										"maxLength": 50,
																										"example": "text/xml"
																									},
																									"body": {
																										"type": "string",
																										"description": "The response body to return. The value must conform to the configured content type.",
																										"maxLength": 10240,
																										"example": "<error>This request has been rate-limited.</error>"
																									}
																								}
																							}
																						]
																					}
																				}
																			}
																		]
																	}
																}
															}
														],
														"x-cfLinkErrors": {
															"10000": "Invalid user",
															"10001": "Rate limit not found",
															"10002": "Rate limit not unique (edit the existing rather than adding a new)",
															"10004": "Invalid data submitted",
															"10006": "Auth missing",
															"10007": "Auth corrupt",
															"10008": "Auth expired",
															"10009": "Unauthorized",
															"10010": "Time param not valid",
															"10011": "Pagination results in empty page",
															"10012": "URL Param incorrect format",
															"10013": "Patch values not valid",
															"10014": "Patch operation not valid",
															"10015": "Patch value not valid for given context",
															"10016": "Patch not valid"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create a rate limit",
				"description": "Creates a new rate limit for a zone. Refer to the object definition for a list of required attributes.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1rate_limits/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a rate limit response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"match",
									"threshold",
									"period",
									"action"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/rate_limits/{id}": {
			"get": {
				"summary": "Get a rate limit",
				"description": "Fetches the details of a rate limit.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the rate limit.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b59"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a rate limit response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a rate limit",
				"description": "Updates an existing rate limit.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1rate_limits~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1rate_limits~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a rate limit response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1rate_limits~1%7Bid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id",
									"match",
									"threshold",
									"period",
									"action"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a rate limit",
				"description": "Deletes an existing rate limit.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1rate_limits~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1rate_limits~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a rate limit response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1rate_limits~1%7Bid%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1rate_limits~1%7Bid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/user/firewall/access_rules/rules": {
			"get": {
				"summary": "Get IP Access rules",
				"description": "Fetches IP Access rules of the user. You can filter the results using several optional parameters.",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Get IP Access rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"mode",
															"allowed_modes",
															"configuration"
														],
														"properties": {
															"id": {
																"description": "The unique identifier of the IP Access rule.",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "92f17202ed8bd63d69a66b86a49a8f6b"
															},
															"notes": {
																"type": "string",
																"description": "An informative summary of the rule, typically used as a reminder or explanation.",
																"example": "This rule is enabled because of an event that occurred on date X."
															},
															"allowed_modes": {
																"type": "array",
																"readOnly": true,
																"description": "The available actions that a rule can apply to a matched request.",
																"example": [
																	"whitelist",
																	"block",
																	"challenge",
																	"js_challenge",
																	"managed_challenge"
																],
																"items": {
																	"type": "string",
																	"enum": [
																		"block",
																		"challenge",
																		"whitelist",
																		"js_challenge",
																		"managed_challenge"
																	],
																	"example": "challenge",
																	"description": "The action to apply to a matched request."
																}
															},
															"mode": {
																"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/allowed_modes/items"
															},
															"configuration": {
																"type": "object",
																"description": "The rule configuration.",
																"oneOf": [
																	{
																		"title": "An IP address configuration.",
																		"properties": {
																			"target": {
																				"enum": [
																					"ip"
																				],
																				"description": "The configuration target. You must set the target to `ip` when specifying an IP address in the rule.",
																				"example": "ip"
																			},
																			"value": {
																				"type": "string",
																				"description": "The IP address to match. This address will be compared to the IP address of incoming requests.",
																				"example": "198.51.100.4"
																			}
																		}
																	},
																	{
																		"title": "An IPv6 address configuration.",
																		"properties": {
																			"target": {
																				"enum": [
																					"ip6"
																				],
																				"description": "The configuration target. You must set the target to `ip6` when specifying an IPv6 address in the rule.",
																				"example": "ip6"
																			},
																			"value": {
																				"type": "string",
																				"description": "The IPv6 address to match.",
																				"example": "2001:DB8:100::CF"
																			}
																		}
																	},
																	{
																		"title": "An IP address range configuration.",
																		"properties": {
																			"target": {
																				"enum": [
																					"ip_range"
																				],
																				"description": "The configuration target. You must set the target to `ip_range` when specifying an IP address range in the rule.",
																				"example": "ip_range"
																			},
																			"value": {
																				"type": "string",
																				"description": "The IP address range to match. You can only use prefix lengths `/16` and `/24` for IPv4 ranges, and prefix lengths `/32`, `/48`, and `/64` for IPv6 ranges.",
																				"example": "198.51.100.4/16"
																			}
																		}
																	},
																	{
																		"title": "An ASN configuration.",
																		"properties": {
																			"target": {
																				"enum": [
																					"asn"
																				],
																				"description": "The configuration target. You must set the target to `asn` when specifying an Autonomous System Number (ASN) in the rule.",
																				"example": "asn"
																			},
																			"value": {
																				"type": "string",
																				"description": "The AS number to match.",
																				"example": "AS12345"
																			}
																		}
																	},
																	{
																		"title": "A country configuration.",
																		"properties": {
																			"target": {
																				"enum": [
																					"country"
																				],
																				"description": "The configuration target. You must set the target to `country` when specifying a country code in the rule.",
																				"example": "country"
																			},
																			"value": {
																				"type": "string",
																				"description": "The two-letter ISO-3166-1 alpha-2 code to match. For more information, refer to [IP Access rules: Parameters](https://developers.cloudflare.com/waf/tools/ip-access-rules/parameters/#country).",
																				"example": "US"
																			}
																		}
																	}
																]
															},
															"created_on": {
																"type": "string",
																"description": "The timestamp of when the rule was created.",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															},
															"modified_on": {
																"type": "string",
																"description": "The timestamp of when the rule was last modified.",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create an IP Access rule",
				"description": "Creates a new IP Access rule for all zones owned by the current user.\n\nNote: To create an IP Access rule that applies to a specific zone, refer to the [IP Access rules for a zone](#ip-access-rules-for-a-zone) endpoints.",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"required": [
														"id",
														"mode",
														"allowed_modes",
														"configuration"
													],
													"properties": {
														"id": {
															"description": "The unique identifier of the IP Access rule.",
															"type": "string",
															"maxLength": 32,
															"readOnly": true,
															"example": "92f17202ed8bd63d69a66b86a49a8f6b"
														},
														"notes": {
															"type": "string",
															"description": "An informative summary of the rule, typically used as a reminder or explanation.",
															"example": "This rule is enabled because of an event that occurred on date X."
														},
														"allowed_modes": {
															"type": "array",
															"readOnly": true,
															"description": "The available actions that a rule can apply to a matched request.",
															"example": [
																"whitelist",
																"block",
																"challenge",
																"js_challenge",
																"managed_challenge"
															],
															"items": {
																"type": "string",
																"enum": [
																	"block",
																	"challenge",
																	"whitelist",
																	"js_challenge",
																	"managed_challenge"
																],
																"example": "challenge",
																"description": "The action to apply to a matched request."
															}
														},
														"mode": {
															"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/allowed_modes/items"
														},
														"configuration": {
															"type": "object",
															"description": "The rule configuration.",
															"oneOf": [
																{
																	"title": "An IP address configuration.",
																	"properties": {
																		"target": {
																			"enum": [
																				"ip"
																			],
																			"description": "The configuration target. You must set the target to `ip` when specifying an IP address in the rule.",
																			"example": "ip"
																		},
																		"value": {
																			"type": "string",
																			"description": "The IP address to match. This address will be compared to the IP address of incoming requests.",
																			"example": "198.51.100.4"
																		}
																	}
																},
																{
																	"title": "An IPv6 address configuration.",
																	"properties": {
																		"target": {
																			"enum": [
																				"ip6"
																			],
																			"description": "The configuration target. You must set the target to `ip6` when specifying an IPv6 address in the rule.",
																			"example": "ip6"
																		},
																		"value": {
																			"type": "string",
																			"description": "The IPv6 address to match.",
																			"example": "2001:DB8:100::CF"
																		}
																	}
																},
																{
																	"title": "An IP address range configuration.",
																	"properties": {
																		"target": {
																			"enum": [
																				"ip_range"
																			],
																			"description": "The configuration target. You must set the target to `ip_range` when specifying an IP address range in the rule.",
																			"example": "ip_range"
																		},
																		"value": {
																			"type": "string",
																			"description": "The IP address range to match. You can only use prefix lengths `/16` and `/24` for IPv4 ranges, and prefix lengths `/32`, `/48`, and `/64` for IPv6 ranges.",
																			"example": "198.51.100.4/16"
																		}
																	}
																},
																{
																	"title": "An ASN configuration.",
																	"properties": {
																		"target": {
																			"enum": [
																				"asn"
																			],
																			"description": "The configuration target. You must set the target to `asn` when specifying an Autonomous System Number (ASN) in the rule.",
																			"example": "asn"
																		},
																		"value": {
																			"type": "string",
																			"description": "The AS number to match.",
																			"example": "AS12345"
																		}
																	}
																},
																{
																	"title": "A country configuration.",
																	"properties": {
																		"target": {
																			"enum": [
																				"country"
																			],
																			"description": "The configuration target. You must set the target to `country` when specifying a country code in the rule.",
																			"example": "country"
																		},
																		"value": {
																			"type": "string",
																			"description": "The two-letter ISO-3166-1 alpha-2 code to match. For more information, refer to [IP Access rules: Parameters](https://developers.cloudflare.com/waf/tools/ip-access-rules/parameters/#country).",
																			"example": "US"
																		}
																	}
																}
															]
														},
														"created_on": {
															"type": "string",
															"description": "The timestamp of when the rule was created.",
															"format": "date-time",
															"readOnly": true,
															"example": "2014-01-01T05:20:00.123450+00:00"
														},
														"modified_on": {
															"type": "string",
															"description": "The timestamp of when the rule was last modified.",
															"format": "date-time",
															"readOnly": true,
															"example": "2014-01-01T05:20:00.123450+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"mode",
									"configuration"
								],
								"properties": {
									"mode": {
										"type": "string",
										"enum": [
											"block",
											"challenge",
											"whitelist",
											"js_challenge",
											"managed_challenge"
										],
										"example": "challenge",
										"description": "The action to apply to a matched request."
									},
									"configuration": {
										"type": "object",
										"description": "The rule configuration.",
										"oneOf": [
											{
												"title": "An IP address configuration.",
												"properties": {
													"target": {
														"enum": [
															"ip"
														],
														"description": "The configuration target. You must set the target to `ip` when specifying an IP address in the rule.",
														"example": "ip"
													},
													"value": {
														"type": "string",
														"description": "The IP address to match. This address will be compared to the IP address of incoming requests.",
														"example": "198.51.100.4"
													}
												}
											},
											{
												"title": "An IPv6 address configuration.",
												"properties": {
													"target": {
														"enum": [
															"ip6"
														],
														"description": "The configuration target. You must set the target to `ip6` when specifying an IPv6 address in the rule.",
														"example": "ip6"
													},
													"value": {
														"type": "string",
														"description": "The IPv6 address to match.",
														"example": "2001:DB8:100::CF"
													}
												}
											},
											{
												"title": "An IP address range configuration.",
												"properties": {
													"target": {
														"enum": [
															"ip_range"
														],
														"description": "The configuration target. You must set the target to `ip_range` when specifying an IP address range in the rule.",
														"example": "ip_range"
													},
													"value": {
														"type": "string",
														"description": "The IP address range to match. You can only use prefix lengths `/16` and `/24` for IPv4 ranges, and prefix lengths `/32`, `/48`, and `/64` for IPv6 ranges.",
														"example": "198.51.100.4/16"
													}
												}
											},
											{
												"title": "An ASN configuration.",
												"properties": {
													"target": {
														"enum": [
															"asn"
														],
														"description": "The configuration target. You must set the target to `asn` when specifying an Autonomous System Number (ASN) in the rule.",
														"example": "asn"
													},
													"value": {
														"type": "string",
														"description": "The AS number to match.",
														"example": "AS12345"
													}
												}
											},
											{
												"title": "A country configuration.",
												"properties": {
													"target": {
														"enum": [
															"country"
														],
														"description": "The configuration target. You must set the target to `country` when specifying a country code in the rule.",
														"example": "country"
													},
													"value": {
														"type": "string",
														"description": "The two-letter ISO-3166-1 alpha-2 code to match. For more information, refer to [IP Access rules: Parameters](https://developers.cloudflare.com/waf/tools/ip-access-rules/parameters/#country).",
														"example": "US"
													}
												}
											}
										]
									},
									"notes": {
										"type": "string",
										"description": "An informative summary of the rule, typically used as a reminder or explanation.",
										"example": "This rule is enabled because of an event that occurred on date X."
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/firewall/access_rules/rules/{identifier}": {
			"patch": {
				"summary": "Update an IP Access rule",
				"description": "Updates an IP Access rule defined at the user level. You can only update the rule action (`mode` parameter) and notes.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the IP Access rule.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "92f17202ed8bd63d69a66b86a49a8f6b"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"mode": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/mode"
									},
									"notes": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/notes"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an IP Access rule",
				"description": "Deletes an IP Access rule at the user level.\n\nNote: Deleting a user-level rule will affect all zones owned by the user.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"description": "The unique identifier of the IP Access rule.",
															"type": "string",
															"maxLength": 32,
															"readOnly": true,
															"example": "92f17202ed8bd63d69a66b86a49a8f6b"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/firewall/access_rules/rules": {
			"get": {
				"summary": "Get IP Access rules",
				"description": "Fetches IP Access rules of an account. These rules apply to all the zones in the account. You can filter the results using several optional parameters.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get IP Access rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#waf:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create an IP Access rule",
				"description": "Creates a new IP Access rule for an account. The rule will apply to all zones in the account.\n\nNote: To create an IP Access rule that applies to a single zone, refer to the [IP Access rules for a zone](#ip-access-rules-for-a-zone) endpoints.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#waf:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"mode",
									"configuration"
								],
								"properties": {
									"mode": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/mode"
									},
									"configuration": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/configuration"
									},
									"notes": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/notes"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/firewall/access_rules/rules/{identifier}": {
			"get": {
				"summary": "Get an IP Access rule",
				"description": "Fetches the details of an IP Access rule defined at the account level.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"x-$comment": "Must be present as a definition for URI Templating"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#waf:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Update an IP Access rule",
				"description": "Updates an IP Access rule defined at the account level.\n\nNote: This operation will affect all zones in the account.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#waf:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id",
									"mode",
									"allowed_modes",
									"configuration",
									"scope"
								],
								"allOf": [
									{
										"type": "object",
										"required": [
											"id",
											"mode",
											"allowed_modes",
											"configuration"
										],
										"properties": {
											"id": {
												"description": "The unique identifier of the IP Access rule.",
												"type": "string",
												"maxLength": 32,
												"readOnly": true,
												"example": "92f17202ed8bd63d69a66b86a49a8f6b"
											},
											"notes": {
												"type": "string",
												"description": "An informative summary of the rule, typically used as a reminder or explanation.",
												"example": "This rule is enabled because of an event that occurred on date X."
											},
											"allowed_modes": {
												"type": "array",
												"readOnly": true,
												"description": "The available actions that a rule can apply to a matched request.",
												"example": [
													"whitelist",
													"block",
													"challenge",
													"js_challenge",
													"managed_challenge"
												],
												"items": {
													"type": "string",
													"enum": [
														"block",
														"challenge",
														"whitelist",
														"js_challenge",
														"managed_challenge"
													],
													"example": "challenge",
													"description": "The action to apply to a matched request."
												}
											},
											"mode": {
												"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/allOf/0/properties/allowed_modes/items"
											},
											"configuration": {
												"type": "object",
												"description": "The rule configuration.",
												"oneOf": [
													{
														"title": "An IP address configuration.",
														"properties": {
															"target": {
																"enum": [
																	"ip"
																],
																"description": "The configuration target. You must set the target to `ip` when specifying an IP address in the rule.",
																"example": "ip"
															},
															"value": {
																"type": "string",
																"description": "The IP address to match. This address will be compared to the IP address of incoming requests.",
																"example": "198.51.100.4"
															}
														}
													},
													{
														"title": "An IPv6 address configuration.",
														"properties": {
															"target": {
																"enum": [
																	"ip6"
																],
																"description": "The configuration target. You must set the target to `ip6` when specifying an IPv6 address in the rule.",
																"example": "ip6"
															},
															"value": {
																"type": "string",
																"description": "The IPv6 address to match.",
																"example": "2001:DB8:100::CF"
															}
														}
													},
													{
														"title": "An IP address range configuration.",
														"properties": {
															"target": {
																"enum": [
																	"ip_range"
																],
																"description": "The configuration target. You must set the target to `ip_range` when specifying an IP address range in the rule.",
																"example": "ip_range"
															},
															"value": {
																"type": "string",
																"description": "The IP address range to match. You can only use prefix lengths `/16` and `/24` for IPv4 ranges, and prefix lengths `/32`, `/48`, and `/64` for IPv6 ranges.",
																"example": "198.51.100.4/16"
															}
														}
													},
													{
														"title": "An ASN configuration.",
														"properties": {
															"target": {
																"enum": [
																	"asn"
																],
																"description": "The configuration target. You must set the target to `asn` when specifying an Autonomous System Number (ASN) in the rule.",
																"example": "asn"
															},
															"value": {
																"type": "string",
																"description": "The AS number to match.",
																"example": "AS12345"
															}
														}
													},
													{
														"title": "A country configuration.",
														"properties": {
															"target": {
																"enum": [
																	"country"
																],
																"description": "The configuration target. You must set the target to `country` when specifying a country code in the rule.",
																"example": "country"
															},
															"value": {
																"type": "string",
																"description": "The two-letter ISO-3166-1 alpha-2 code to match. For more information, refer to [IP Access rules: Parameters](https://developers.cloudflare.com/waf/tools/ip-access-rules/parameters/#country).",
																"example": "US"
															}
														}
													}
												]
											},
											"created_on": {
												"type": "string",
												"description": "The timestamp of when the rule was created.",
												"format": "date-time",
												"readOnly": true,
												"example": "2014-01-01T05:20:00.123450+00:00"
											},
											"modified_on": {
												"type": "string",
												"description": "The timestamp of when the rule was last modified.",
												"format": "date-time",
												"readOnly": true,
												"example": "2014-01-01T05:20:00.123450+00:00"
											}
										}
									},
									{
										"properties": {
											"scope": {
												"type": "object",
												"properties": {
													"id": {
														"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/0/properties/result/items/properties/owner/properties/id"
													},
													"email": {
														"description": "The contact email address of the user.",
														"type": "string",
														"maxLength": 90,
														"example": "user@example.com"
													},
													"type": {
														"enum": [
															"user",
															"organization"
														],
														"description": "The scope of the rule.",
														"readOnly": true,
														"example": "user"
													}
												},
												"description": "All zones owned by the user will have the rule applied.",
												"readOnly": true
											}
										}
									}
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an IP Access rule",
				"description": "Deletes an existing IP Access rule defined at the account level.\n\nNote: This operation will affect all zones in the account.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#waf:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_id}/firewall/access_rules/rules": {
			"get": {
				"summary": "Get IP Access rules",
				"description": "Fetches IP Access rules of a zone. You can filter the results using several optional parameters.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get IP Access rules response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create an IP Access rule",
				"description": "Creates a new IP Access rule for a zone.\n\nNote: To create an IP Access rule that applies to multiple zones, refer to [IP Access rules for a user](#ip-access-rules-for-a-user) or [IP Access rules for an account](#ip-access-rules-for-an-account) as appropriate.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1access_rules~1rules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"mode",
									"configuration",
									"notes"
								],
								"properties": {
									"mode": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/mode"
									},
									"configuration": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/configuration"
									},
									"notes": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/notes"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_id}/firewall/access_rules/rules/{identifier}": {
			"patch": {
				"summary": "Update an IP Access rule",
				"description": "Updates an IP Access rule defined at the zone level. You can only update the rule action (`mode` parameter) and notes.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"mode": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/mode"
									},
									"notes": {
										"$ref": "#/paths/~1user~1firewall~1access_rules~1rules/post/requestBody/content/application~1json/schema/properties/notes"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an IP Access rule",
				"description": "Deletes an IP Access rule defined at the zone level.\n\nOptionally, you can use the `cascade` property to specify that you wish to delete similar rules in other zones managed by the same zone owner. ",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an IP Access rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1firewall~1access_rules~1rules~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"cascade": {
										"type": "string",
										"enum": [
											"none",
											"basic",
											"aggressive"
										],
										"description": "The level to attempt to delete similar rules defined for other zones with the same owner. The default value is `none`, which will only delete the current rule. Using `basic` will delete rules that match the same action (mode) and configuration, while using `aggressive` will delete rules that match the same configuration.",
										"default": "none"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/waf/packages": {
			"get": {
				"summary": "Get WAF packages",
				"description": "Fetches WAF packages for a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get WAF packages response",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"oneOf": [
															{
																"title": "Traditional WAF package",
																"required": [
																	"id",
																	"name",
																	"description",
																	"detection_mode",
																	"zone_id"
																],
																"properties": {
																	"id": {
																		"description": "The unique identifier of a WAF package.",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "a25a9a7e9c00afc1fb2e0245519d725b"
																	},
																	"name": {
																		"description": "The name of the WAF package.",
																		"type": "string",
																		"readOnly": true,
																		"example": "USER"
																	},
																	"description": {
																		"description": "A summary of the purpose/function of the WAF package.",
																		"type": "string",
																		"readOnly": true,
																		"example": "null"
																	},
																	"detection_mode": {
																		"description": "The mode that defines how rules within the package are evaluated during the course of a request. When a package uses anomaly detection mode (`anomaly` value), each rule is given a score when triggered. If the total score of all triggered rules exceeds the sensitivity defined in the WAF package, the action configured in the package will be performed. Traditional detection mode (`traditional` value) will decide the action to take when it is triggered by the request. If multiple rules are triggered, the action providing the highest protection will be applied (for example, a 'block' action will win over a 'challenge' action).",
																		"type": "string",
																		"enum": [
																			"anomaly",
																			"traditional"
																		],
																		"readOnly": true,
																		"example": "traditional"
																	},
																	"zone_id": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/parameters/0/schema"
																	},
																	"status": {
																		"type": "string",
																		"enum": [
																			"active"
																		],
																		"description": "When set to `active`, indicates that the WAF package will be applied to the zone.",
																		"default": "active",
																		"readOnly": true
																	}
																}
															},
															{
																"title": "Anomaly detection WAF package (OWASP)",
																"required": [
																	"id",
																	"name",
																	"description",
																	"zone_id",
																	"detection_mode",
																	"sensitivity",
																	"action_mode"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0"
																	},
																	{
																		"properties": {
																			"name": {
																				"description": "The name of the WAF package.",
																				"type": "string",
																				"readOnly": true,
																				"example": "OWASP ModSecurity Core Rule Set"
																			},
																			"description": {
																				"description": "A summary of the purpose/function of the WAF package.",
																				"type": "string",
																				"readOnly": true,
																				"example": "Covers OWASP Top 10 vulnerabilities and more."
																			},
																			"detection_mode": {
																				"description": "When a WAF package uses anomaly detection, each rule is given a score when triggered. If the total score of all triggered rules exceeds the sensitivity defined on the WAF package, the action defined on the package will be taken.",
																				"type": "string",
																				"readOnly": true,
																				"example": "anomaly"
																			},
																			"sensitivity": {
																				"type": "string",
																				"enum": [
																					"high",
																					"medium",
																					"low",
																					false
																				],
																				"description": "The sensitivity of the WAF package.",
																				"default": "high"
																			},
																			"action_mode": {
																				"type": "string",
																				"enum": [
																					"simulate",
																					"block",
																					"challenge"
																				],
																				"description": "The default action performed by the rules in the WAF package.",
																				"default": "challenge"
																			}
																		}
																	}
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/firewall/waf/packages/{identifier}": {
			"get": {
				"summary": "Get a WAF package",
				"description": "Fetches the details of a WAF package.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/id"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a WAF package response",
						"content": {
							"application/json": {
								"schema": {
									"oneOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Update a WAF package",
				"description": "Updates a WAF package. You can update the sensitivity and the action of an anomaly detection WAF package.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a WAF package response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"properties": {
												"result": {
													"title": "Anomaly detection WAF package (OWASP)",
													"required": [
														"id",
														"name",
														"description",
														"zone_id",
														"detection_mode",
														"sensitivity",
														"action_mode"
													],
													"allOf": [
														{
															"title": "Traditional WAF package",
															"required": [
																"id",
																"name",
																"description",
																"detection_mode",
																"zone_id"
															],
															"properties": {
																"id": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bidentifier%7D/get/parameters/0/schema"
																},
																"name": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/name"
																},
																"description": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/description"
																},
																"detection_mode": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/detection_mode"
																},
																"zone_id": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bidentifier%7D/get/parameters/1/schema"
																},
																"status": {
																	"type": "string",
																	"enum": [
																		"active"
																	],
																	"description": "When set to `active`, indicates that the WAF package will be applied to the zone.",
																	"default": "active",
																	"readOnly": true
																}
															}
														},
														{
															"properties": {
																"name": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/1/allOf/1/properties/name"
																},
																"description": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/1/allOf/1/properties/description"
																},
																"detection_mode": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/1/allOf/1/properties/detection_mode"
																},
																"sensitivity": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/sensitivity"
																},
																"action_mode": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/action_mode"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"sensitivity": {
										"type": "string",
										"enum": [
											"high",
											"medium",
											"low",
											false
										],
										"description": "The sensitivity of the WAF package.",
										"default": "high"
									},
									"action_mode": {
										"type": "string",
										"enum": [
											"simulate",
											"block",
											"challenge"
										],
										"description": "The default action performed by the rules in the WAF package.",
										"default": "challenge"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/waf/packages/{package_identifier}/groups": {
			"get": {
				"summary": "Get WAF rule groups",
				"description": "Fetches the WAF rule groups in a WAF package.",
				"parameters": [
					{
						"name": "package_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/id"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get WAF rule groups response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name",
															"description",
															"mode",
															"rules_count"
														],
														"allOf": [
															{
																"type": "object",
																"properties": {
																	"id": {
																		"description": "The unique identifier of the rule group.",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "de677e5818985db1285d0e80225f06e5"
																	},
																	"name": {
																		"description": "The name of the rule group.",
																		"type": "string",
																		"readOnly": true,
																		"example": "Project Honey Pot"
																	},
																	"description": {
																		"description": "An informative summary of what the rule group does.",
																		"type": "string",
																		"readOnly": true,
																		"example": "Group designed to protect against IP addresses that are a threat and typically used to launch DDoS attacks",
																		"nullable": true
																	},
																	"rules_count": {
																		"description": "The number of rules in the current rule group.",
																		"type": "number",
																		"readOnly": true,
																		"default": 0,
																		"example": 10
																	},
																	"modified_rules_count": {
																		"description": "The number of rules within the group that have been modified from their default configuration.",
																		"type": "number",
																		"readOnly": true,
																		"default": 0,
																		"example": 2
																	},
																	"package_id": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/id"
																	}
																}
															},
															{
																"properties": {
																	"mode": {
																		"type": "string",
																		"enum": [
																			true,
																			false
																		],
																		"default": true,
																		"description": "The state of the rules contained in the rule group. When `on`, the rules in the group are configurable/usable."
																	},
																	"allowed_modes": {
																		"type": "array",
																		"description": "The available states for the rule group.",
																		"readOnly": true,
																		"example": [
																			true,
																			false
																		],
																		"items": {
																			"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bpackage_identifier%7D~1groups/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/1/properties/mode"
																		}
																	}
																}
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/firewall/waf/packages/{package_identifier}/groups/{identifier}": {
			"get": {
				"summary": "Get a WAF rule group",
				"description": "Fetches the details of a WAF rule group.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the rule group.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "de677e5818985db1285d0e80225f06e5"
						}
					},
					{
						"name": "package_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/id"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a WAF rule group response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Update a WAF rule group",
				"description": "Updates a WAF rule group. You can update the state (`mode` parameter) of a rule group.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bpackage_identifier%7D~1groups~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "package_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bpackage_identifier%7D~1groups~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bpackage_identifier%7D~1groups~1%7Bidentifier%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a WAF rule group response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bpackage_identifier%7D~1groups~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"mode": {
										"type": "string",
										"enum": [
											true,
											false
										],
										"default": true,
										"description": "The state of the rules contained in the rule group. When `on`, the rules in the group are configurable/usable."
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_id}/firewall/waf/packages/{package_id}/rules": {
			"get": {
				"summary": "Get WAF rules",
				"description": "Fetches WAF rules in a WAF package.",
				"parameters": [
					{
						"name": "package_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/id"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get WAF rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"oneOf": [
															{
																"title": "Anomaly detection WAF rule",
																"description": "When triggered, anomaly detection WAF rules contribute to an overall threat score that will determine if a request is considered malicious. You can configure the total scoring threshold through the 'sensitivity' property of the WAF package.",
																"required": [
																	"id",
																	"description",
																	"priority",
																	"allowed_modes",
																	"mode",
																	"group",
																	"package_id"
																],
																"allOf": [
																	{
																		"allOf": [
																			{
																				"properties": {
																					"id": {
																						"description": "The unique identifier of the WAF rule.",
																						"type": "string",
																						"maxLength": 32,
																						"readOnly": true,
																						"example": "f939de3be84e66e757adcdcb87908023"
																					},
																					"description": {
																						"description": "The public description of the WAF rule.",
																						"type": "string",
																						"readOnly": true,
																						"example": "SQL injection prevention for SELECT statements"
																					},
																					"priority": {
																						"description": "The order in which the individual WAF rule is executed within its rule group.",
																						"type": "string",
																						"readOnly": true
																					},
																					"group": {
																						"description": "The rule group to which the current WAF rule belongs.",
																						"type": "object",
																						"properties": {
																							"id": {
																								"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages~1%7Bpackage_identifier%7D~1groups~1%7Bidentifier%7D/get/parameters/0/schema"
																							},
																							"name": {
																								"description": "The name of the rule group.",
																								"type": "string",
																								"readOnly": true,
																								"example": "Project Honey Pot"
																							}
																						},
																						"readOnly": true
																					},
																					"package_id": {
																						"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/id"
																					}
																				}
																			}
																		]
																	},
																	{
																		"properties": {
																			"allowed_modes": {
																				"description": "Defines the available modes for the current WAF rule. Applies to anomaly detection WAF rules.",
																				"type": "array",
																				"items": {
																					"description": "When set to `on`, the current WAF rule will be used when evaluating the request. Applies to anomaly detection WAF rules.",
																					"type": "string",
																					"enum": [
																						true,
																						false
																					],
																					"example": true
																				},
																				"readOnly": true,
																				"example": [
																					true,
																					false
																				]
																			},
																			"mode": {
																				"description": "When set to `on`, the current WAF rule will be used when evaluating the request. Applies to anomaly detection WAF rules.",
																				"type": "string",
																				"enum": [
																					true,
																					false
																				],
																				"example": true
																			}
																		}
																	}
																]
															},
															{
																"title": "Traditional (deny) WAF rule",
																"description": "When triggered, traditional WAF rules cause the firewall to immediately act upon the request based on the configuration of the rule. A 'deny' rule will immediately respond to the request based on the configured rule action/mode (for example, 'block') and no other rules will be processed.",
																"required": [
																	"id",
																	"description",
																	"priority",
																	"allowed_modes",
																	"default_mode",
																	"mode",
																	"group",
																	"package_id"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"allowed_modes": {
																				"description": "The list of possible actions of the WAF rule when it is triggered.",
																				"type": "array",
																				"items": {
																					"description": "The action that the current WAF rule will perform when triggered. Applies to traditional (deny) WAF rules.",
																					"type": "string",
																					"enum": [
																						"default",
																						"disable",
																						"simulate",
																						"block",
																						"challenge"
																					],
																					"example": "block"
																				},
																				"readOnly": true,
																				"example": [
																					"default",
																					"disable",
																					"simulate",
																					"block",
																					"challenge"
																				]
																			},
																			"mode": {
																				"description": "The action that the current WAF rule will perform when triggered. Applies to traditional (deny) WAF rules.",
																				"type": "string",
																				"enum": [
																					"default",
																					"disable",
																					"simulate",
																					"block",
																					"challenge"
																				],
																				"example": "block"
																			},
																			"default_mode": {
																				"enum": [
																					"disable",
																					"simulate",
																					"block",
																					"challenge"
																				],
																				"example": "block",
																				"description": "The default action/mode of a rule.",
																				"readOnly": true
																			}
																		}
																	}
																]
															},
															{
																"title": "Traditional (allow) WAF rule",
																"description": "When triggered, traditional WAF rules cause the firewall to immediately act on the request based on the rule configuration. An 'allow' rule will immediately allow the request and no other rules will be processed.",
																"required": [
																	"id",
																	"description",
																	"priority",
																	"allowed_modes",
																	"default_mode",
																	"mode",
																	"group",
																	"package_id"
																],
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0"
																	},
																	{
																		"properties": {
																			"allowed_modes": {
																				"description": "Defines the available modes for the current WAF rule.",
																				"type": "array",
																				"items": {
																					"description": "When set to `on`, the current rule will be used when evaluating the request. Applies to traditional (allow) WAF rules.",
																					"type": "string",
																					"enum": [
																						true,
																						false
																					],
																					"example": true
																				},
																				"readOnly": true,
																				"example": [
																					true,
																					false
																				]
																			},
																			"mode": {
																				"description": "When set to `on`, the current rule will be used when evaluating the request. Applies to traditional (allow) WAF rules.",
																				"type": "string",
																				"enum": [
																					true,
																					false
																				],
																				"example": true
																			}
																		}
																	}
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_id}/firewall/waf/packages/{package_id}/rules/{identifier}": {
			"get": {
				"summary": "Get a WAF rule",
				"description": "Fetches the details of a WAF rule in a WAF package.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the WAF rule.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "f939de3be84e66e757adcdcb87908023"
						}
					},
					{
						"name": "package_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1packages/get/responses/200/content/application~1json/schema/anyOf/1/properties/result/items/oneOf/0/properties/id"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a WAF rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Update a WAF rule",
				"description": "Updates a WAF rule. You can only update the mode/action of the rule.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "package_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules~1%7Bidentifier%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a WAF rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"properties": {
												"result": {
													"oneOf": [
														{
															"title": "Anomaly detection WAF rule",
															"description": "When triggered, anomaly detection WAF rules contribute to an overall threat score that will determine if a request is considered malicious. You can configure the total scoring threshold through the 'sensitivity' property of the WAF package.",
															"required": [
																"id",
																"description",
																"priority",
																"allowed_modes",
																"mode",
																"group",
																"package_id"
															],
															"allOf": [
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/0/allOf/0"
																		}
																	]
																},
																{
																	"properties": {
																		"allowed_modes": {
																			"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/1/properties/allowed_modes"
																		},
																		"mode": {
																			"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/allOf/1/properties/mode"
																		}
																	}
																}
															]
														},
														{
															"title": "Traditional (deny) WAF rule",
															"description": "When triggered, traditional WAF rules cause the firewall to immediately act upon the request based on the configuration of the rule. A 'deny' rule will immediately respond to the request based on the configured rule action/mode (for example, 'block') and no other rules will be processed.",
															"required": [
																"id",
																"description",
																"priority",
																"allowed_modes",
																"default_mode",
																"mode",
																"group",
																"package_id"
															],
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules~1%7Bidentifier%7D/patch/responses/200/content/application~1json/schema/allOf/1/properties/result/oneOf/0/allOf/0"
																},
																{
																	"properties": {
																		"allowed_modes": {
																			"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/1/allOf/1/properties/allowed_modes"
																		},
																		"mode": {
																			"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/1/allOf/1/properties/mode"
																		},
																		"default_mode": {
																			"enum": [
																				"disable",
																				"simulate",
																				"block",
																				"challenge"
																			],
																			"example": "block",
																			"description": "The default action/mode of a rule.",
																			"readOnly": true
																		}
																	}
																}
															]
														},
														{
															"title": "Traditional (allow) WAF rule",
															"description": "When triggered, traditional WAF rules cause the firewall to immediately act on the request based on the rule configuration. An 'allow' rule will immediately allow the request and no other rules will be processed.",
															"required": [
																"id",
																"description",
																"priority",
																"allowed_modes",
																"default_mode",
																"mode",
																"group",
																"package_id"
															],
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules~1%7Bidentifier%7D/patch/responses/200/content/application~1json/schema/allOf/1/properties/result/oneOf/0/allOf/0"
																},
																{
																	"properties": {
																		"allowed_modes": {
																			"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/2/allOf/1/properties/allowed_modes"
																		},
																		"mode": {
																			"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1firewall~1waf~1packages~1%7Bpackage_id%7D~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/2/allOf/1/properties/mode"
																		}
																	}
																}
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"mode": {
										"enum": [
											"default",
											"disable",
											"simulate",
											"block",
											"challenge",
											true,
											false
										],
										"description": "The mode/action of the rule when triggered. You must use a value from the `allowed_modes` array of the current rule.",
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/waf/overrides": {
			"get": {
				"summary": "Get WAF overrides",
				"description": "Fetches the URI-based WAF overrides in a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get WAF overrides response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"properties": {
																	"id": {
																		"description": "The unique identifier of the WAF override.",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "de677e5818985db1285d0e80225f06e5"
																	},
																	"paused": {
																		"type": "boolean",
																		"description": "When true, indicates that the WAF package is currently paused."
																	},
																	"description": {
																		"type": "string",
																		"description": "An informative summary of the current URI-based WAF override.",
																		"maxLength": 1024,
																		"example": "Enable Cloudflare Magento ruleset for shop.example.com",
																		"nullable": true
																	},
																	"urls": {
																		"type": "array",
																		"description": "The URLs to include in the current WAF override. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.",
																		"items": {
																			"type": "string",
																			"example": "shop.example.com/*"
																		}
																	},
																	"priority": {
																		"type": "number",
																		"minimum": -1000000000,
																		"maximum": 1000000000,
																		"description": "The relative priority of the current URI-based WAF override when multiple overrides match a single URL. A lower number indicates higher priority. Higher priority overrides may overwrite values set by lower priority overrides.",
																		"example": 1
																	},
																	"groups": {
																		"type": "object",
																		"description": "An object that allows you to enable or disable WAF rule groups for the current WAF override. Each key of this object must be the ID of a WAF rule group, and each value must be a valid WAF action (usually `default` or `disable`). When creating a new URI-based WAF override, you must provide a `groups` object or a `rules` object.",
																		"example": {
																			"ea8687e59929c1fd05ba97574ad43f77": "default"
																		},
																		"x-patternProperties": {
																			"^[0-9a-f]{32}$": {
																				"allOf": [
																					{
																						"description": "The WAF rule action to apply.",
																						"enum": [
																							"challenge",
																							"block",
																							"simulate",
																							"disable",
																							"default"
																						]
																					}
																				],
																				"example": "default"
																			}
																		},
																		"additionalProperties": true
																	},
																	"rules": {
																		"type": "object",
																		"description": "An object that allows you to override the action of specific WAF rules. Each key of this object must be the ID of a WAF rule, and each value must be a valid WAF action. Unless you are disabling a rule, ensure that you also enable the rule group that this WAF rule belongs to. When creating a new URI-based WAF override, you must provide a `groups` object or a `rules` object.",
																		"additionalProperties": {
																			"allOf": [
																				{
																					"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/properties/groups/x-patternProperties/%5E%5B0-9a-f%5D%7B32%7D%24/allOf/0"
																				}
																			],
																			"example": "default"
																		},
																		"example": {
																			"100015": "disable"
																		}
																	},
																	"rewrite_action": {
																		"type": "object",
																		"description": "Specifies that, when a WAF rule matches, its configured action will be replaced by the action configured in this object.",
																		"properties": {
																			"default": {
																				"example": "block"
																			},
																			"challenge": {
																				"example": "block"
																			},
																			"block": {
																				"description": "The WAF rule action to apply.",
																				"enum": [
																					"challenge",
																					"block",
																					"simulate",
																					"disable",
																					"default"
																				]
																			},
																			"simulate": {
																				"example": "disable"
																			},
																			"disable": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/properties/rewrite_action/properties/block"
																			}
																		}
																	}
																}
															},
															{
																"type": "object",
																"required": [
																	"id",
																	"paused",
																	"urls",
																	"priority"
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create a WAF override",
				"description": "Creates a URI-based WAF override for a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a WAF override response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"urls"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/waf/overrides/{id}": {
			"get": {
				"summary": "Get a WAF override",
				"description": "Fetches the details of a URI-based WAF override.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the WAF override.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "de677e5818985db1285d0e80225f06e5"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a WAF override response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/parameters/0/schema"
														},
														"paused": {
															"type": "boolean",
															"description": "When true, indicates that the WAF package is currently paused."
														},
														"description": {
															"type": "string",
															"description": "An informative summary of the current URI-based WAF override.",
															"maxLength": 1024,
															"example": "Enable Cloudflare Magento ruleset for shop.example.com",
															"nullable": true
														},
														"urls": {
															"type": "array",
															"description": "The URLs to include in the current WAF override. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.",
															"items": {
																"type": "string",
																"example": "shop.example.com/*"
															}
														},
														"priority": {
															"type": "number",
															"minimum": -1000000000,
															"maximum": 1000000000,
															"description": "The relative priority of the current URI-based WAF override when multiple overrides match a single URL. A lower number indicates higher priority. Higher priority overrides may overwrite values set by lower priority overrides.",
															"example": 1
														},
														"groups": {
															"type": "object",
															"description": "An object that allows you to enable or disable WAF rule groups for the current WAF override. Each key of this object must be the ID of a WAF rule group, and each value must be a valid WAF action (usually `default` or `disable`). When creating a new URI-based WAF override, you must provide a `groups` object or a `rules` object.",
															"example": {
																"ea8687e59929c1fd05ba97574ad43f77": "default"
															},
															"x-patternProperties": {
																"^[0-9a-f]{32}$": {
																	"allOf": [
																		{
																			"description": "The WAF rule action to apply.",
																			"enum": [
																				"challenge",
																				"block",
																				"simulate",
																				"disable",
																				"default"
																			]
																		}
																	],
																	"example": "default"
																}
															},
															"additionalProperties": true
														},
														"rules": {
															"type": "object",
															"description": "An object that allows you to override the action of specific WAF rules. Each key of this object must be the ID of a WAF rule, and each value must be a valid WAF action. Unless you are disabling a rule, ensure that you also enable the rule group that this WAF rule belongs to. When creating a new URI-based WAF override, you must provide a `groups` object or a `rules` object.",
															"additionalProperties": {
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/groups/x-patternProperties/%5E%5B0-9a-f%5D%7B32%7D%24/allOf/0"
																	}
																],
																"example": "default"
															},
															"example": {
																"100015": "disable"
															}
														},
														"rewrite_action": {
															"type": "object",
															"description": "Specifies that, when a WAF rule matches, its configured action will be replaced by the action configured in this object.",
															"properties": {
																"default": {
																	"example": "block"
																},
																"challenge": {
																	"example": "block"
																},
																"block": {
																	"description": "The WAF rule action to apply.",
																	"enum": [
																		"challenge",
																		"block",
																		"simulate",
																		"disable",
																		"default"
																	]
																},
																"simulate": {
																	"example": "disable"
																},
																"disable": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/rewrite_action/properties/block"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update WAF override",
				"description": "Updates an existing URI-based WAF override.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update WAF override response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id",
									"urls",
									"rules",
									"rewrite_action"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a WAF override",
				"description": "Deletes an existing URI-based WAF override.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a WAF override response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1waf~1overrides~1%7Bid%7D/get/parameters/0/schema"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/ua_rules": {
			"get": {
				"summary": "Get User Agent Blocking rules",
				"description": "Fetches User Agent Blocking rules in a zone. You can filter the results using several optional parameters.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get User Agent Blocking rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"allOf": [
															{
																"properties": {
																	"id": {
																		"description": "The unique identifier of the User Agent Blocking rule.",
																		"type": "string",
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "372e67954025e0ba6aaa6d586b9e0b59"
																	},
																	"paused": {
																		"type": "boolean",
																		"description": "When true, indicates that the rule is currently paused.",
																		"example": false
																	},
																	"description": {
																		"type": "string",
																		"description": "An informative summary of the rule.",
																		"maxLength": 1024,
																		"example": "Prevent access from abusive clients identified by this User Agent to mitigate a DDoS attack"
																	},
																	"mode": {
																		"enum": [
																			"block",
																			"challenge",
																			"js_challenge",
																			"managed_challenge"
																		],
																		"description": "The action to apply to a matched request.",
																		"maxLength": 12,
																		"example": "js_challenge"
																	},
																	"configuration": {
																		"type": "object",
																		"description": "The configuration object for the current rule.",
																		"properties": {
																			"target": {
																				"type": "string",
																				"description": "The configuration target for this rule. You must set the target to `ua` for User Agent Blocking rules.",
																				"example": "ua"
																			},
																			"value": {
																				"type": "string",
																				"description": "The exact user agent string to match. This value will be compared to the received `User-Agent` HTTP header value.",
																				"example": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/603.2.4 (KHTML, like Gecko) Version/10.1.1 Safari/603.2.4"
																			}
																		}
																	}
																}
															}
														],
														"x-cfLinkErrors": {
															"10000": "Invalid user",
															"10001": "UserAgent rule not found",
															"10002": "UserAgent rule not unique (edit the existing rather than adding a new)",
															"10004": "Invalid data submitted",
															"10006": "Auth missing",
															"10007": "Auth corrupt",
															"10008": "Auth expired",
															"10009": "Unauthorized",
															"10011": "Pagination results in empty page",
															"10013": "Patch values not valid",
															"10014": "Patch operation not valid",
															"10015": "Patch value not valid for given context",
															"10016": "Patch not valid"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create a User Agent Blocking rule",
				"description": "Creates a new User Agent Blocking rule in a zone.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1ua_rules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a User Agent Blocking rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"mode",
									"configuration"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/ua_rules/{id}": {
			"get": {
				"summary": "Get a User Agent Blocking rule",
				"description": "Fetches the details of a User Agent Blocking rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the User Agent Blocking rule.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b59"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a User Agent Blocking rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a User Agent Blocking rule",
				"description": "Updates an existing User Agent Blocking rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1ua_rules~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1ua_rules~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a User Agent Blocking rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1ua_rules~1%7Bid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id",
									"mode",
									"configuration"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a User Agent Blocking rule",
				"description": "Deletes an existing User Agent Blocking rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1ua_rules~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1ua_rules~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a User Agent Blocking rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1ua_rules~1%7Bid%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1ua_rules~1%7Bid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/lockdowns": {
			"get": {
				"summary": "Get Zone Lockdown rules",
				"description": "Fetches Zone Lockdown rules. You can filter the results using several optional parameters.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Zone Lockdown rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"properties": {
															"id": {
																"description": "The unique identifier of the Zone Lockdown rule.",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "372e67954025e0ba6aaa6d586b9e0b59"
															},
															"created_on": {
																"description": "The timestamp of when the rule was created.",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															},
															"modified_on": {
																"description": "The timestamp of when the rule was last modified.",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															},
															"paused": {
																"type": "boolean",
																"description": "When true, indicates that the rule is currently paused.",
																"example": false
															},
															"description": {
																"type": "string",
																"description": "An informative summary of the rule.",
																"maxLength": 1024,
																"example": "Restrict access to these endpoints to requests from a known IP address"
															},
															"urls": {
																"type": "array",
																"description": "The URLs to include in the rule definition. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.",
																"items": {
																	"type": "string",
																	"example": "api.mysite.com/some/endpoint*"
																}
															},
															"configurations": {
																"type": "array",
																"description": "A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `ip` or `ip_range` configurations.",
																"items": {
																	"anyOf": [
																		{
																			"title": "An IP address configuration.",
																			"properties": {
																				"target": {
																					"enum": [
																						"ip"
																					],
																					"description": "The configuration target. You must set the target to `ip` when specifying an IP address in the Zone Lockdown rule.",
																					"example": "ip"
																				},
																				"value": {
																					"type": "string",
																					"description": "The IP address to match. This address will be compared to the IP address of incoming requests.",
																					"example": "198.51.100.4"
																				}
																			}
																		},
																		{
																			"title": "An IP address range configuration.",
																			"properties": {
																				"target": {
																					"enum": [
																						"ip_range"
																					],
																					"description": "The configuration target. You must set the target to `ip_range` when specifying an IP address range in the Zone Lockdown rule.",
																					"example": "ip_range"
																				},
																				"value": {
																					"type": "string",
																					"description": "The IP address range to match. You can only use prefix lengths `/16` and `/24`.",
																					"example": "198.51.100.4/16"
																				}
																			}
																		}
																	]
																},
																"anyOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/configurations/items/anyOf/0"
																	},
																	{
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/configurations/items/anyOf/1"
																	}
																]
															}
														},
														"required": [
															"id",
															"created_on",
															"modified_on",
															"paused",
															"description",
															"urls",
															"configurations"
														],
														"additionalProperties": false
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create a Zone Lockdown rule",
				"description": "Creates a new Zone Lockdown rule.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a Zone Lockdown rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"urls",
									"configurations"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/lockdowns/{id}": {
			"get": {
				"summary": "Get a Zone Lockdown rule",
				"description": "Fetches the details of a Zone Lockdown rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the Zone Lockdown rule.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b59"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a Zone Lockdown rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/parameters/0/schema"
														},
														"created_on": {
															"description": "The timestamp of when the rule was created.",
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"example": "2014-01-01T05:20:00.123450+00:00"
														},
														"modified_on": {
															"description": "The timestamp of when the rule was last modified.",
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"example": "2014-01-01T05:20:00.123450+00:00"
														},
														"paused": {
															"type": "boolean",
															"description": "When true, indicates that the rule is currently paused.",
															"example": false
														},
														"description": {
															"type": "string",
															"description": "An informative summary of the rule.",
															"maxLength": 1024,
															"example": "Restrict access to these endpoints to requests from a known IP address"
														},
														"urls": {
															"type": "array",
															"description": "The URLs to include in the rule definition. You can use wildcards. Each entered URL will be escaped before use, which means you can only use simple wildcard patterns.",
															"items": {
																"type": "string",
																"example": "api.mysite.com/some/endpoint*"
															}
														},
														"configurations": {
															"type": "array",
															"description": "A list of IP addresses or CIDR ranges that will be allowed to access the URLs specified in the Zone Lockdown rule. You can include any number of `ip` or `ip_range` configurations.",
															"items": {
																"anyOf": [
																	{
																		"title": "An IP address configuration.",
																		"properties": {
																			"target": {
																				"enum": [
																					"ip"
																				],
																				"description": "The configuration target. You must set the target to `ip` when specifying an IP address in the Zone Lockdown rule.",
																				"example": "ip"
																			},
																			"value": {
																				"type": "string",
																				"description": "The IP address to match. This address will be compared to the IP address of incoming requests.",
																				"example": "198.51.100.4"
																			}
																		}
																	},
																	{
																		"title": "An IP address range configuration.",
																		"properties": {
																			"target": {
																				"enum": [
																					"ip_range"
																				],
																				"description": "The configuration target. You must set the target to `ip_range` when specifying an IP address range in the Zone Lockdown rule.",
																				"example": "ip_range"
																			},
																			"value": {
																				"type": "string",
																				"description": "The IP address range to match. You can only use prefix lengths `/16` and `/24`.",
																				"example": "198.51.100.4/16"
																			}
																		}
																	}
																]
															},
															"anyOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/configurations/items/anyOf/0"
																},
																{
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/configurations/items/anyOf/1"
																}
															]
														}
													},
													"required": [
														"id",
														"created_on",
														"modified_on",
														"paused",
														"description",
														"urls",
														"configurations"
													],
													"additionalProperties": false
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a Zone Lockdown rule",
				"description": "Updates an existing Zone Lockdown rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a Zone Lockdown rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"urls",
									"configurations"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a Zone Lockdown rule",
				"description": "Deletes an existing Zone Lockdown rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a Zone Lockdown rule response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1lockdowns~1%7Bid%7D/get/parameters/0/schema"
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/rules": {
			"get": {
				"summary": "Get firewall rules",
				"description": "Fetches firewall rules in a zone. You can filter the results using several optional parameters.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get firewall rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"type": "object",
																"allOf": [
																	{
																		"type": "object",
																		"properties": {
																			"id": {
																				"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/delete/requestBody/content/application~1json/schema/properties/id"
																			},
																			"action": {
																				"type": "string",
																				"description": "The action to apply to a matched request. The `log` action is only available on an Enterprise plan.",
																				"enum": [
																					"block",
																					"challenge",
																					"js_challenge",
																					"managed_challenge",
																					"allow",
																					"log",
																					"bypass"
																				],
																				"example": "block"
																			},
																			"products": {
																				"type": "array",
																				"items": {
																					"type": "string",
																					"description": "A list of products to bypass for a request when using the `bypass` action.",
																					"enum": [
																						"zoneLockdown",
																						"uaBlock",
																						"bic",
																						"hot",
																						"securityLevel",
																						"rateLimit",
																						"waf"
																					],
																					"example": "waf"
																				}
																			},
																			"priority": {
																				"type": "number",
																				"description": "The priority of the rule. Optional value used to define the processing order. A lower number indicates a higher priority. If not provided, rules with a defined priority will be processed before rules without a priority.",
																				"minimum": 0,
																				"maximum": 2147483647,
																				"example": 50
																			},
																			"paused": {
																				"type": "boolean",
																				"description": "When true, indicates that the firewall rule is currently paused.",
																				"example": false
																			},
																			"description": {
																				"type": "string",
																				"description": "An informative summary of the firewall rule.",
																				"maxLength": 500,
																				"example": "Blocks traffic identified during investigation for MIR-31"
																			},
																			"ref": {
																				"type": "string",
																				"description": "A short reference tag. Allows you to select related firewall rules.",
																				"example": "MIR-31",
																				"maxLength": 50
																			}
																		}
																	},
																	{
																		"properties": {
																			"filter": {
																				"oneOf": [
																					{
																						"type": "object",
																						"additionalProperties": false,
																						"properties": {
																							"id": {
																								"description": "The unique identifier of the filter.",
																								"type": "string",
																								"minLength": 32,
																								"maxLength": 32,
																								"readOnly": true,
																								"example": "372e67954025e0ba6aaa6d586b9e0b61"
																							},
																							"expression": {
																								"type": "string",
																								"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
																								"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155"
																							},
																							"paused": {
																								"type": "boolean",
																								"description": "When true, indicates that the filter is currently paused.",
																								"example": false
																							},
																							"description": {
																								"type": "string",
																								"description": "An informative summary of the filter.",
																								"maxLength": 500,
																								"example": "Restrict access from these browsers on this address range."
																							},
																							"ref": {
																								"type": "string",
																								"description": "A short reference tag. Allows you to select related filters.",
																								"example": "FIL-100",
																								"maxLength": 50
																							}
																						}
																					},
																					{
																						"additionalProperties": false,
																						"properties": {
																							"id": {
																								"description": "The unique identifier of the filter.",
																								"type": "string",
																								"minLength": 32,
																								"maxLength": 32,
																								"readOnly": true,
																								"example": "372e67954025e0ba6aaa6d586b9e0b61"
																							},
																							"deleted": {
																								"type": "boolean",
																								"description": "When true, indicates that the firewall rule was deleted.",
																								"example": true
																							}
																						},
																						"required": [
																							"id",
																							"deleted"
																						]
																					}
																				]
																			}
																		}
																	}
																]
															},
															{
																"type": "object",
																"required": [
																	"id",
																	"filter",
																	"action",
																	"paused"
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create firewall rules",
				"description": "Create one or more firewall rules.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create firewall rules response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"filter",
									"action"
								]
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update firewall rules",
				"description": "Updates one or more existing firewall rules.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update firewall rules response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id"
								]
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Update priority of firewall rules ",
				"description": "Updates the priority of existing firewall rules.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update priority of firewall rules  response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete firewall rules",
				"description": "Deletes existing firewall rules.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete firewall rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
															},
															{
																"type": "object",
																"required": [
																	"id"
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id"
								],
								"properties": {
									"id": {
										"description": "The unique identifier of the firewall rule.",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "372e67954025e0ba6aaa6d586b9e0b60"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/firewall/rules/{id}": {
			"get": {
				"summary": "Get a firewall rule",
				"description": "Fetches the details of a firewall rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the firewall rule.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b60"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a firewall rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"allOf": [
														{
															"type": "object",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"id": {
																			"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/parameters/0/schema"
																		},
																		"action": {
																			"type": "string",
																			"description": "The action to apply to a matched request. The `log` action is only available on an Enterprise plan.",
																			"enum": [
																				"block",
																				"challenge",
																				"js_challenge",
																				"managed_challenge",
																				"allow",
																				"log",
																				"bypass"
																			],
																			"example": "block"
																		},
																		"products": {
																			"type": "array",
																			"items": {
																				"type": "string",
																				"description": "A list of products to bypass for a request when using the `bypass` action.",
																				"enum": [
																					"zoneLockdown",
																					"uaBlock",
																					"bic",
																					"hot",
																					"securityLevel",
																					"rateLimit",
																					"waf"
																				],
																				"example": "waf"
																			}
																		},
																		"priority": {
																			"type": "number",
																			"description": "The priority of the rule. Optional value used to define the processing order. A lower number indicates a higher priority. If not provided, rules with a defined priority will be processed before rules without a priority.",
																			"minimum": 0,
																			"maximum": 2147483647,
																			"example": 50
																		},
																		"paused": {
																			"type": "boolean",
																			"description": "When true, indicates that the firewall rule is currently paused.",
																			"example": false
																		},
																		"description": {
																			"type": "string",
																			"description": "An informative summary of the firewall rule.",
																			"maxLength": 500,
																			"example": "Blocks traffic identified during investigation for MIR-31"
																		},
																		"ref": {
																			"type": "string",
																			"description": "A short reference tag. Allows you to select related firewall rules.",
																			"example": "MIR-31",
																			"maxLength": 50
																		}
																	}
																},
																{
																	"properties": {
																		"filter": {
																			"oneOf": [
																				{
																					"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/allOf/1/properties/filter/oneOf/0"
																				},
																				{
																					"additionalProperties": false,
																					"properties": {
																						"id": {
																							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0/allOf/1/properties/filter/oneOf/1/properties/id"
																						},
																						"deleted": {
																							"type": "boolean",
																							"description": "When true, indicates that the firewall rule was deleted.",
																							"example": true
																						}
																					},
																					"required": [
																						"id",
																						"deleted"
																					]
																				}
																			]
																		}
																	}
																}
															]
														},
														{
															"type": "object",
															"required": [
																"id",
																"filter",
																"action",
																"paused"
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a firewall rule",
				"description": "Updates an existing firewall rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a firewall rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id",
									"filter",
									"action"
								]
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Update priority of a firewall rule",
				"description": "Updates the priority of an existing firewall rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update priority of a firewall rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
															},
															{
																"type": "object",
																"required": [
																	"id",
																	"filter",
																	"action",
																	"paused"
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a firewall rule",
				"description": "Deletes an existing firewall rule.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a firewall rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1firewall~1rules~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
														},
														{
															"type": "object",
															"required": [
																"id"
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"delete_filter_if_unused": {
										"description": "When true, indicates that Cloudflare should also delete the associated filter if there are no other firewall rules referencing the filter.",
										"type": "boolean"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/filters": {
			"get": {
				"summary": "Get filters",
				"description": "Fetches filters in a zone. You can filter the results using several optional parameters.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get filters response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"type": "object",
																"additionalProperties": false,
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters/delete/requestBody/content/application~1json/schema/properties/id"
																	},
																	"expression": {
																		"type": "string",
																		"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
																		"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155"
																	},
																	"paused": {
																		"type": "boolean",
																		"description": "When true, indicates that the filter is currently paused.",
																		"example": false
																	},
																	"description": {
																		"type": "string",
																		"description": "An informative summary of the filter.",
																		"maxLength": 500,
																		"example": "Restrict access from these browsers on this address range."
																	},
																	"ref": {
																		"type": "string",
																		"description": "A short reference tag. Allows you to select related filters.",
																		"example": "FIL-100",
																		"maxLength": 50
																	}
																}
															},
															{
																"type": "object",
																"required": [
																	"id",
																	"expression",
																	"paused"
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create filters",
				"description": "Creates one or more filters.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create filters response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expression"
								]
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update filters",
				"description": "Updates one or more existing filters.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update filters response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete filters",
				"description": "Deletes one or more existing filters.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete filters response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
															},
															{
																"type": "object",
																"required": [
																	"id"
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id"
								],
								"properties": {
									"id": {
										"description": "The unique identifier of the filter.",
										"type": "string",
										"minLength": 32,
										"maxLength": 32,
										"readOnly": true,
										"example": "372e67954025e0ba6aaa6d586b9e0b61"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/filters/{id}": {
			"get": {
				"summary": "Get a filter",
				"description": "Fetches the details of a filter.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier of the filter.",
							"type": "string",
							"minLength": 32,
							"maxLength": 32,
							"readOnly": true,
							"example": "372e67954025e0ba6aaa6d586b9e0b61"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a filter response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"oneOf": [
														{
															"allOf": [
																{
																	"type": "object",
																	"additionalProperties": false,
																	"properties": {
																		"id": {
																			"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters~1%7Bid%7D/get/parameters/0/schema"
																		},
																		"expression": {
																			"type": "string",
																			"description": "The filter expression. For more information, refer to [Expressions](https://developers.cloudflare.com/ruleset-engine/rules-language/expressions/).",
																			"example": "(http.request.uri.path ~ \".*wp-login.php\" or http.request.uri.path ~ \".*xmlrpc.php\") and ip.addr ne 172.16.22.155"
																		},
																		"paused": {
																			"type": "boolean",
																			"description": "When true, indicates that the filter is currently paused.",
																			"example": false
																		},
																		"description": {
																			"type": "string",
																			"description": "An informative summary of the filter.",
																			"maxLength": 500,
																			"example": "Restrict access from these browsers on this address range."
																		},
																		"ref": {
																			"type": "string",
																			"description": "A short reference tag. Allows you to select related filters.",
																			"example": "FIL-100",
																			"maxLength": 50
																		}
																	}
																},
																{
																	"type": "object",
																	"required": [
																		"id",
																		"expression",
																		"paused"
																	]
																}
															]
														},
														{
															"nullable": true
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a filter",
				"description": "Updates an existing filter.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a filter response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters~1%7Bid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a filter",
				"description": "Deletes an existing filter.",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters~1%7Bid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters~1%7Bid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a filter response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"required": [
												"result"
											],
											"properties": {
												"result": {
													"allOf": [
														{
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1filters~1%7Bid%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/oneOf/0/allOf/0"
														},
														{
															"type": "object",
															"required": [
																"id"
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/rules/lists": {
			"get": {
				"summary": "Get lists",
				"description": "Fetches all lists in the account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get lists response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"properties": {
																	"id": {
																		"description": "The unique ID of the list.",
																		"type": "string",
																		"minLength": 32,
																		"maxLength": 32,
																		"readOnly": true,
																		"example": "2c0fc9fa937b11eaa1b71c4d701ab86e"
																	},
																	"name": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists/post/requestBody/content/application~1json/schema/properties/name"
																	},
																	"description": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists/post/requestBody/content/application~1json/schema/properties/description"
																	},
																	"kind": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists/post/requestBody/content/application~1json/schema/properties/kind"
																	},
																	"num_items": {
																		"type": "number",
																		"description": "The number of items in the list.",
																		"example": 10
																	},
																	"num_referencing_filters": {
																		"type": "number",
																		"description": "The number of [filters](#filters) referencing the list.",
																		"example": 2
																	},
																	"created_on": {
																		"type": "string",
																		"description": "The RFC 3339 timestamp of when the list was created.",
																		"example": "2020-01-01T08:00:00+00:00"
																	},
																	"modified_on": {
																		"type": "string",
																		"description": "The RFC 3339 timestamp of when the list was last modified.",
																		"example": "2020-01-10T14:00:00+00:00"
																	}
																}
															},
															{
																"type": "object",
																"required": [
																	"id",
																	"name",
																	"kind",
																	"num_items",
																	"created_on",
																	"modified_on"
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create a list",
				"description": "Creates a new list of the specified type.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a list response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/allOf/0"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "An informative name for the list. Use this name in filter and rule expressions.",
										"example": "list1",
										"maxLength": 50,
										"pattern": "^[a-zA-Z0-9_]+$"
									},
									"description": {
										"type": "string",
										"description": "An informative summary of the list.",
										"maxLength": 500,
										"example": "This is a note."
									},
									"kind": {
										"type": "string",
										"description": "The type of the list. Each type supports specific list items (IP addresses or redirects).",
										"enum": [
											"ip",
											"redirect"
										],
										"example": "ip"
									}
								},
								"required": [
									"name",
									"kind"
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/rules/lists/{list_id}": {
			"get": {
				"summary": "Get a list",
				"description": "Fetches the details of a list.",
				"parameters": [
					{
						"name": "list_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique ID of the list.",
							"type": "string",
							"minLength": 32,
							"maxLength": 32,
							"readOnly": true,
							"example": "2c0fc9fa937b11eaa1b71c4d701ab86e"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a list response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D/get/parameters/0/schema"
														},
														"name": {
															"type": "string",
															"description": "An informative name for the list. Use this name in filter and rule expressions.",
															"example": "list1",
															"maxLength": 50,
															"pattern": "^[a-zA-Z0-9_]+$"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"kind": {
															"type": "string",
															"description": "The type of the list. Each type supports specific list items (IP addresses or redirects).",
															"enum": [
																"ip",
																"redirect"
															],
															"example": "ip"
														},
														"num_items": {
															"type": "number",
															"description": "The number of items in the list.",
															"example": 10
														},
														"num_referencing_filters": {
															"type": "number",
															"description": "The number of [filters](#filters) referencing the list.",
															"example": 2
														},
														"created_on": {
															"type": "string",
															"description": "The RFC 3339 timestamp of when the list was created.",
															"example": "2020-01-01T08:00:00+00:00"
														},
														"modified_on": {
															"type": "string",
															"description": "The RFC 3339 timestamp of when the list was last modified.",
															"example": "2020-01-10T14:00:00+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a list",
				"description": "Updates the description of a list.",
				"parameters": [
					{
						"name": "list_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a list response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"description": {
										"type": "string",
										"description": "An informative summary of the list.",
										"maxLength": 500,
										"example": "This is a note."
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a list",
				"description": "Deletes a specific list and all its items.",
				"parameters": [
					{
						"name": "list_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a list response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string",
															"description": "The unique ID of the item in the List.",
															"example": "34b12448945f11eaa1b71c4d701ab86e"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/rules/lists/{list_id}/items": {
			"get": {
				"summary": "Get list items",
				"description": "Fetches all the items in the list.",
				"parameters": [
					{
						"name": "list_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique ID of the list.",
							"type": "string",
							"minLength": 32,
							"maxLength": 32,
							"readOnly": true,
							"example": "2c0fc9fa937b11eaa1b71c4d701ab86e"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get list items response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/get/parameters/0/schema"
															},
															"ip": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/post/requestBody/content/application~1json/schema/items/allOf/0/properties/ip"
															},
															"redirect": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/post/requestBody/content/application~1json/schema/items/allOf/0/properties/redirect"
															},
															"comment": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/post/requestBody/content/application~1json/schema/items/allOf/0/properties/comment"
															},
															"created_on": {
																"type": "string",
																"description": "The RFC 3339 timestamp of when the item was created.",
																"example": "2020-01-01T08:00:00+00:00",
																"readOnly": true
															},
															"modified_on": {
																"type": "string",
																"description": "The RFC 3339 timestamp of when the item was last modified.",
																"example": "2020-01-10T14:00:00+00:00",
																"readOnly": true
															}
														},
														"example": {
															"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
															"ip": "10.0.0.1",
															"comment": "Private IP address",
															"created_on": "2020-01-01T08:00:00+00:00",
															"modified_on": "2020-01-10T14:00:00+00:00"
														},
														"oneOf": [
															{
																"required": [
																	"ip"
																]
															},
															{
																"required": [
																	"redirect"
																]
															}
														]
													}
												},
												"result_info": {
													"type": "object",
													"properties": {
														"cursors": {
															"type": "object",
															"properties": {
																"before": {
																	"type": "string",
																	"example": "xxx"
																},
																"after": {
																	"type": "string",
																	"example": "yyy"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create list items",
				"description": "Appends new items to the list.\n\nThis operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.",
				"parameters": [
					{
						"name": "list_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create list items response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"operation_id": {
															"description": "The unique operation ID of the asynchronous action.",
															"type": "string",
															"readOnly": true,
															"example": "4da8780eeb215e6cb7f48dd981c4ea02"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"ip": {
													"type": "string",
													"description": "An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.",
													"example": "10.0.0.1"
												},
												"redirect": {
													"type": "object",
													"properties": {
														"source_url": {
															"type": "string",
															"example": "example.com/arch"
														},
														"target_url": {
															"type": "string",
															"example": "https://archlinux.org/"
														},
														"status_code": {
															"type": "integer",
															"default": 301,
															"enum": [
																301,
																302,
																307,
																308
															]
														},
														"include_subdomains": {
															"type": "boolean",
															"default": false
														},
														"subpath_matching": {
															"type": "boolean",
															"default": false
														},
														"preserve_query_string": {
															"type": "boolean",
															"default": false
														},
														"preserve_path_suffix": {
															"type": "boolean",
															"default": true
														}
													},
													"required": [
														"source_url",
														"target_url"
													],
													"description": "The definition of the redirect."
												},
												"comment": {
													"type": "string",
													"description": "An informative summary of the list item.",
													"example": "Private IP address"
												}
											},
											"oneOf": [
												{
													"required": [
														"ip"
													]
												},
												{
													"required": [
														"redirect"
													]
												}
											]
										}
									]
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update all list items",
				"description": "Removes all existing items from the list and adds the provided items to the list.\n\nThis operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.",
				"parameters": [
					{
						"name": "list_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update all list items response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/post/requestBody/content/application~1json/schema"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete list items",
				"description": "Removes one or more items from a list.\n\nThis operation is asynchronous. To get current the operation status, invoke the [Get bulk operation status](#lists-get-bulk-operation-status) endpoint with the returned `operation_id`.",
				"parameters": [
					{
						"name": "list_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete list items response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"items": {
										"type": "array",
										"items": {
											"properties": {
												"id": {
													"type": "string",
													"description": "The unique ID of the item in the List.",
													"example": "34b12448945f11eaa1b71c4d701ab86e"
												}
											}
										},
										"minItems": 1
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/rules/lists/{list_id}/items/{item_id}": {
			"get": {
				"summary": "Get a list item",
				"description": "Fetches a list item in the list.",
				"parameters": [
					{
						"name": "item_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"description": "The unique ID of the item in the List.",
							"example": "34b12448945f11eaa1b71c4d701ab86e"
						}
					},
					{
						"name": "list_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique ID of the list.",
							"type": "string",
							"minLength": 32,
							"maxLength": 32,
							"readOnly": true,
							"example": "2c0fc9fa937b11eaa1b71c4d701ab86e"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a list item response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1%7Blist_id%7D~1items~1%7Bitem_id%7D/get/parameters/1/schema"
														},
														"ip": {
															"type": "string",
															"description": "An IPv4 address, an IPv4 CIDR, or an IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /64.",
															"example": "10.0.0.1"
														},
														"redirect": {
															"type": "object",
															"properties": {
																"source_url": {
																	"type": "string",
																	"example": "example.com/arch"
																},
																"target_url": {
																	"type": "string",
																	"example": "https://archlinux.org/"
																},
																"status_code": {
																	"type": "integer",
																	"default": 301,
																	"enum": [
																		301,
																		302,
																		307,
																		308
																	]
																},
																"include_subdomains": {
																	"type": "boolean",
																	"default": false
																},
																"subpath_matching": {
																	"type": "boolean",
																	"default": false
																},
																"preserve_query_string": {
																	"type": "boolean",
																	"default": false
																},
																"preserve_path_suffix": {
																	"type": "boolean",
																	"default": true
																}
															},
															"required": [
																"source_url",
																"target_url"
															],
															"description": "The definition of the redirect."
														},
														"comment": {
															"type": "string",
															"description": "An informative summary of the list item.",
															"example": "Private IP address"
														},
														"created_on": {
															"type": "string",
															"description": "The RFC 3339 timestamp of when the item was created.",
															"example": "2020-01-01T08:00:00+00:00",
															"readOnly": true
														},
														"modified_on": {
															"type": "string",
															"description": "The RFC 3339 timestamp of when the item was last modified.",
															"example": "2020-01-10T14:00:00+00:00",
															"readOnly": true
														}
													},
													"example": {
														"id": "2c0fc9fa937b11eaa1b71c4d701ab86e",
														"ip": "10.0.0.1",
														"comment": "Private IP address",
														"created_on": "2020-01-01T08:00:00+00:00",
														"modified_on": "2020-01-10T14:00:00+00:00"
													},
													"oneOf": [
														{
															"required": [
																"ip"
															]
														},
														{
															"required": [
																"redirect"
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_identifier}/rules/lists/bulk_operations/{operation_id}": {
			"get": {
				"summary": "Get bulk operation status",
				"description": "Gets the current status of an asynchronous operation on a list.\n\nThe `status` property can have one of the following values: `pending`, `running`, `completed`, or `failed`. If the status is `failed`, the `error` property will contain a message describing the error.",
				"parameters": [
					{
						"name": "operation_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique operation ID of the asynchronous action.",
							"type": "string",
							"readOnly": true,
							"example": "4da8780eeb215e6cb7f48dd981c4ea02"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get bulk operation status response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1rules~1lists~1bulk_operations~1%7Boperation_id%7D/get/parameters/0/schema"
														},
														"status": {
															"type": "string",
															"enum": [
																"pending",
																"running",
																"completed",
																"failed"
															],
															"description": "The current status of the asynchronous operation.",
															"example": "failed",
															"readOnly": true
														},
														"error": {
															"type": "string",
															"description": "A message describing the error when the status is `failed`.",
															"example": "This list is at the maximum number of items",
															"readOnly": true
														},
														"completed": {
															"type": "string",
															"description": "The RFC 3339 timestamp of when the operation was completed.",
															"example": "2020-01-01T08:00:00+00:00",
															"readOnly": true
														}
													},
													"required": [
														"id",
														"status"
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_id}/rulesets": {
			"get": {
				"summary": "List account rulesets",
				"description": "List all rulesets for an account",
				"parameters": [
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List account rulesets response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create account ruleset",
				"description": "Create an account ruleset",
				"parameters": [
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create account ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"description": "The human readable name for the ruleset",
											"type": "string"
										},
										"description": {
											"description": "The description of the ruleset",
											"type": "string"
										},
										"kind": {
											"description": "The kind of ruleset",
											"type": "string",
											"enum": [
												"custom",
												"managed",
												"root",
												"schema",
												"zone"
											]
										},
										"phase": {
											"description": "The phase when the ruleset is executed",
											"type": "string",
											"enum": [
												"ddos_l4",
												"ddos_l7",
												"magic_transit",
												"http_request_sanitize",
												"http_request_transform",
												"http_request_firewall_custom",
												"http_ratelimit",
												"http_request_firewall_managed",
												"http_request_late_transform",
												"http_response_firewall_managed"
											]
										},
										"rules": {
											"type": "array",
											"items": {
												"properties": {
													"action": {
														"description": "The action to take when the expression matches",
														"type": "string",
														"enum": [
															"block",
															"challenge",
															"ddos_dynamic",
															"execute",
															"force_connection_close",
															"js_challenge",
															"managed_challenge",
															"log",
															"score",
															"skip",
															"rewrite",
															"redirect"
														]
													},
													"expression": {
														"description": "The expression",
														"type": "string"
													},
													"description": {
														"description": "The description of the rule",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters to configure the action",
														"type": "object",
														"oneOf": [
															{
																"description": "The action parameters for the bypass action",
																"properties": {
																	"products": {
																		"description": "Bypass one or more of the following products",
																		"type": "array",
																		"default": [],
																		"minLength": 1,
																		"items": {
																			"type": "string",
																			"enum": [
																				"bic",
																				"hot",
																				"ratelimit",
																				"securityLevel",
																				"uablock",
																				"waf",
																				"zonelockdown"
																			]
																		}
																	}
																}
															},
															{
																"description": "The action parameters for the execute action",
																"properties": {
																	"id": {
																		"description": "The ID of the ruleset to execute",
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the rewrite action",
																"properties": {
																	"uri": {
																		"description": "Rewrite the path, query string, or both for the origin",
																		"type": "object",
																		"properties": {
																			"path": {
																				"description": "The new path for the origin"
																			},
																			"query": {
																				"description": "The new query string for the origin"
																			}
																		}
																	}
																}
															},
															{
																"description": "The action parameters for the score action",
																"properties": {
																	"increment": {
																		"description": "The score increment",
																		"type": "number"
																	},
																	"id": {
																		"description": "The ID of the rule",
																		"type": "string"
																	},
																	"version": {
																		"description": "The version of the rule",
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the skip action",
																"properties": {
																	"ruleset": {
																		"description": "Skip execution of these rulesets",
																		"enum": [
																			"current"
																		],
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the redirect action",
																"properties": {
																	"from_list": {
																		"description": "Applies a redirect based on a redirect list",
																		"type": "object",
																		"properties": {
																			"name": {
																				"type": "string",
																				"description": "The name of the redirect list",
																				"example": "my_redirect_list"
																			},
																			"key": {
																				"type": "string",
																				"description": "Key to use to lookup the redirect in the list",
																				"example": "http.request.full_uri"
																			}
																		}
																	}
																}
															}
														]
													}
												}
											}
										},
										"shareable_entitlement_name": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_id}/rulesets/{ruleset_id}": {
			"get": {
				"summary": "Get an account ruleset",
				"description": "Get an account ruleset",
				"parameters": [
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The ID of the ruleset",
							"type": "string",
							"minLength": 32,
							"maxLength": 32
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an account ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"example": "2f2feab2026849078ba485f918791bdc"
										},
										"name": {
											"example": "My Magic Transit ruleset"
										},
										"description": {
											"description": "The description of the ruleset",
											"type": "string"
										},
										"kind": {
											"example": "root"
										},
										"phase": {
											"example": "phase_magic_transit"
										},
										"rules": {
											"description": "The rules for this ruleset",
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"example": "3a03d665bac047339bb530ecb439a90d"
													},
													"version": {
														"example": "1"
													},
													"action": {
														"example": "block"
													},
													"expression": {
														"example": "not ip.src in {10.20.30.40}"
													},
													"description": {
														"example": "Block all traffic except 10.20.30.40"
													},
													"action_parameters": {
														"description": "The parameters to configure the action",
														"type": "object",
														"oneOf": [
															{
																"description": "The action parameters for the bypass action",
																"properties": {
																	"products": {
																		"description": "Bypass one or more of the following products",
																		"type": "array",
																		"default": [],
																		"minLength": 1,
																		"items": {
																			"type": "string",
																			"enum": [
																				"bic",
																				"hot",
																				"ratelimit",
																				"securityLevel",
																				"uablock",
																				"waf",
																				"zonelockdown"
																			]
																		}
																	}
																}
															},
															{
																"description": "The action parameters for the execute action",
																"properties": {
																	"id": {
																		"description": "The ID of the ruleset to execute",
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the rewrite action",
																"properties": {
																	"uri": {
																		"description": "Rewrite the path, query string, or both for the origin",
																		"type": "object",
																		"properties": {
																			"path": {
																				"description": "The new path for the origin"
																			},
																			"query": {
																				"description": "The new query string for the origin"
																			}
																		}
																	}
																}
															},
															{
																"description": "The action parameters for the score action",
																"properties": {
																	"increment": {
																		"description": "The score increment",
																		"type": "number"
																	},
																	"id": {
																		"description": "The ID of the rule",
																		"type": "string"
																	},
																	"version": {
																		"description": "The version of the rule",
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the skip action",
																"properties": {
																	"ruleset": {
																		"description": "Skip execution of these rulesets",
																		"enum": [
																			"current"
																		],
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the redirect action",
																"properties": {
																	"from_list": {
																		"description": "Applies a redirect based on a redirect list",
																		"type": "object",
																		"properties": {
																			"name": {
																				"type": "string",
																				"description": "The name of the redirect list",
																				"example": "my_redirect_list"
																			},
																			"key": {
																				"type": "string",
																				"description": "Key to use to lookup the redirect in the list",
																				"example": "http.request.full_uri"
																			}
																		}
																	}
																}
															}
														]
													},
													"score_threshold": {
														"description": "Rule score threshold",
														"type": "number"
													},
													"logging": {
														"example": "logging: { enabled: true }"
													}
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Delete account ruleset",
				"description": "Delete all versions of the account ruleset",
				"parameters": [
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete account ruleset response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"put": {
				"summary": "Update account ruleset",
				"description": "Update an existing account ruleset",
				"parameters": [
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update account ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"rules": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"description": "The ID of the rule",
														"type": "string"
													},
													"action": {
														"description": "The action to take when the expression matches",
														"type": "string",
														"enum": [
															"block",
															"challenge",
															"ddos_dynamic",
															"execute",
															"force_connection_close",
															"js_challenge",
															"managed_challenge",
															"log",
															"score",
															"skip",
															"rewrite",
															"redirect"
														]
													},
													"expression": {
														"description": "The expression",
														"type": "string"
													},
													"description": {
														"description": "The description of the rule",
														"type": "string"
													},
													"action_parameters": {
														"description": "The parameters to configure the action",
														"type": "object",
														"oneOf": [
															{
																"description": "The action parameters for the bypass action",
																"properties": {
																	"products": {
																		"description": "Bypass one or more of the following products",
																		"type": "array",
																		"default": [],
																		"minLength": 1,
																		"items": {
																			"type": "string",
																			"enum": [
																				"bic",
																				"hot",
																				"ratelimit",
																				"securityLevel",
																				"uablock",
																				"waf",
																				"zonelockdown"
																			]
																		}
																	}
																}
															},
															{
																"description": "The action parameters for the execute action",
																"properties": {
																	"id": {
																		"description": "The ID of the ruleset to execute",
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the rewrite action",
																"properties": {
																	"uri": {
																		"description": "Rewrite the path, query string, or both for the origin",
																		"type": "object",
																		"properties": {
																			"path": {
																				"description": "The new path for the origin"
																			},
																			"query": {
																				"description": "The new query string for the origin"
																			}
																		}
																	}
																}
															},
															{
																"description": "The action parameters for the score action",
																"properties": {
																	"increment": {
																		"description": "The score increment",
																		"type": "number"
																	},
																	"id": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/put/responses/200/content/application~1json/schema/properties/rules/items/properties/id"
																	},
																	"version": {
																		"description": "The version of the rule",
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the skip action",
																"properties": {
																	"ruleset": {
																		"description": "Skip execution of these rulesets",
																		"enum": [
																			"current"
																		],
																		"type": "string"
																	}
																}
															},
															{
																"description": "The action parameters for the redirect action",
																"properties": {
																	"from_list": {
																		"description": "Applies a redirect based on a redirect list",
																		"type": "object",
																		"properties": {
																			"name": {
																				"type": "string",
																				"description": "The name of the redirect list",
																				"example": "my_redirect_list"
																			},
																			"key": {
																				"type": "string",
																				"description": "Key to use to lookup the redirect in the list",
																				"example": "http.request.full_uri"
																			}
																		}
																	}
																}
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_id}/rulesets/{ruleset_id}/versions": {
			"get": {
				"summary": "List versions of an account ruleset",
				"description": "List versions of an account ruleset",
				"parameters": [
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List versions of an account ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
										},
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"kind": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/kind"
										},
										"version": {
											"description": "The version of the ruleset",
											"type": "string"
										},
										"shareable_entitlement_name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/shareable_entitlement_name"
										},
										"last_updated": {
											"description": "The timestamp of the last ruleset execution",
											"type": "string"
										},
										"phase": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_id}/rulesets/{ruleset_id}/versions/{ruleset_version}": {
			"get": {
				"summary": "Get an account ruleset version",
				"description": "Get an account ruleset version",
				"parameters": [
					{
						"name": "ruleset_version",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
						}
					},
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an account ruleset version response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
										},
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"kind": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/kind"
										},
										"version": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
										},
										"rules": {
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"description": "The ID of the rule",
														"type": "string"
													},
													"version": {
														"description": "The version of the rule",
														"type": "string"
													},
													"action": {
														"description": "The action to take when the expression matches",
														"type": "string",
														"enum": [
															"block",
															"challenge",
															"ddos_dynamic",
															"execute",
															"force_connection_close",
															"js_challenge",
															"managed_challenge",
															"log",
															"score",
															"skip",
															"rewrite",
															"redirect"
														]
													},
													"expression": {
														"description": "The expression",
														"type": "string"
													},
													"score_threshold": {
														"description": "Rule score threshold",
														"type": "number"
													},
													"last_updated": {
														"description": "Last time the rule was updated",
														"type": "string"
													},
													"ref": {
														"description": "Rule reference",
														"type": "string"
													},
													"enabled": {
														"description": "Rule activation",
														"type": "boolean"
													},
													"logging": {
														"description": "The parameters to configure how the rule generates logs",
														"type": "object",
														"properties": {
															"enabled": {
																"description": "Override the default logging behavior when a rule is matched",
																"type": "boolean"
															}
														}
													}
												}
											}
										},
										"last_updated": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/last_updated"
										},
										"phase": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Delete a version of an account ruleset",
				"description": "Delete a version of an account ruleset",
				"parameters": [
					{
						"name": "ruleset_version",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a version of an account ruleset response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_id}/rulesets/phases/{ruleset_phase}/entrypoint": {
			"get": {
				"summary": "Get entrypoint ruleset",
				"description": "Get entrypoint ruleset",
				"parameters": [
					{
						"name": "ruleset_phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get entrypoint ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update entrypoint ruleset",
				"description": "Update or create entrypoint ruleset",
				"parameters": [
					{
						"name": "ruleset_phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1phases~1%7Bruleset_phase%7D~1entrypoint/get/parameters/0/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1phases~1%7Bruleset_phase%7D~1entrypoint/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update entrypoint ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"rules": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/put/responses/200/content/application~1json/schema/properties/rules/items"
											}
										},
										"shareable_entitlement_name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/shareable_entitlement_name"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions/{ruleset_version}": {
			"get": {
				"summary": "Get an entrypoint ruleset version",
				"description": "Get an entrypoint ruleset version",
				"parameters": [
					{
						"name": "ruleset_version",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
						}
					},
					{
						"name": "ruleset_phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an entrypoint ruleset version response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
										},
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"kind": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/kind"
										},
										"version": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
										},
										"rules": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/responses/200/content/application~1json/schema/properties/rules/items"
											}
										},
										"last_updated": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/last_updated"
										},
										"phase": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions": {
			"get": {
				"summary": "List versions of an entrypoint ruleset",
				"description": "List versions of an entrypoint ruleset",
				"parameters": [
					{
						"name": "ruleset_phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List versions of an entrypoint ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
										},
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"kind": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/kind"
										},
										"version": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
										},
										"shareable_entitlement_name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/shareable_entitlement_name"
										},
										"last_updated": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/last_updated"
										},
										"phase": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_id}/rulesets/{ruleset_id}/rules": {
			"post": {
				"summary": "Add an individual rule",
				"description": "Add a new individual rule a the ruleset",
				"parameters": [
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add an individual rule response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_id}/rulesets/{ruleset_id}/rules/{rule_id}": {
			"patch": {
				"summary": "Patch an individual rule",
				"description": "Patch an individual rule in a ruleset",
				"parameters": [
					{
						"name": "rule_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The ID of the rule",
							"type": "string"
						}
					},
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch an individual rule response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"delete": {
				"summary": "Delete an individual rule",
				"description": "Delete an individual rule from a ruleset",
				"parameters": [
					{
						"name": "rule_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1rules~1%7Brule_id%7D/patch/parameters/0/schema"
						}
					},
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1rules~1%7Brule_id%7D/patch/parameters/1/schema"
						}
					},
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1rules~1%7Brule_id%7D/patch/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an individual rule response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_id}/rulesets": {
			"get": {
				"summary": "List zone rulesets",
				"description": "List all rulesets",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List zone rulesets response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create zone ruleset",
				"description": "Create a zone ruleset",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create zone ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"kind": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/kind"
										},
										"phase": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
										},
										"rules": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/rules/items"
											}
										},
										"shareable_entitlement_name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/shareable_entitlement_name"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_id}/rulesets/{ruleset_id}": {
			"get": {
				"summary": "Get a zone ruleset",
				"description": "Get a zone ruleset",
				"parameters": [
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a zone ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Delete zone ruleset",
				"description": "Delete all versions of the zone ruleset",
				"parameters": [
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete zone ruleset response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"put": {
				"summary": "Update a zone ruleset",
				"description": "Update an existing zone ruleset",
				"parameters": [
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a zone ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"rules": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/put/responses/200/content/application~1json/schema/properties/rules/items"
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_id}/rulesets/{ruleset_id}/versions/{ruleset_version}": {
			"get": {
				"summary": "Get a zone ruleset version",
				"description": "Get a zone ruleset version",
				"parameters": [
					{
						"name": "ruleset_version",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
						}
					},
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a zone ruleset version response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
										},
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"kind": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/kind"
										},
										"version": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
										},
										"rules": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/responses/200/content/application~1json/schema/properties/rules/items"
											}
										},
										"last_updated": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/last_updated"
										},
										"phase": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Delete a version of a zone ruleset",
				"description": "Delete a version of a zone ruleset",
				"parameters": [
					{
						"name": "ruleset_version",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "ruleset_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a version of a zone ruleset response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint": {
			"get": {
				"summary": "Get entrypoint ruleset",
				"description": "Get entrypoint ruleset",
				"parameters": [
					{
						"name": "ruleset_phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get entrypoint ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update entrypoint ruleset",
				"description": "Update entrypoint ruleset",
				"parameters": [
					{
						"name": "ruleset_phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1phases~1%7Bruleset_phase%7D~1entrypoint/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1phases~1%7Bruleset_phase%7D~1entrypoint/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update entrypoint ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"rules": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/put/responses/200/content/application~1json/schema/properties/rules/items"
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions/{ruleset_version}": {
			"get": {
				"summary": "Get an entrypoint ruleset version",
				"description": "Get an entrypoint ruleset version",
				"parameters": [
					{
						"name": "ruleset_version",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
						}
					},
					{
						"name": "ruleset_phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an entrypoint ruleset version response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
										},
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"kind": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/kind"
										},
										"version": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
										},
										"rules": {
											"type": "array",
											"items": {
												"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions~1%7Bruleset_version%7D/get/responses/200/content/application~1json/schema/properties/rules/items"
											}
										},
										"last_updated": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/last_updated"
										},
										"phase": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_id}/rulesets/phases/{ruleset_phase}/entrypoint/versions": {
			"get": {
				"summary": "List versions of an entrypoint ruleset",
				"description": "List versions of an entrypoint ruleset",
				"parameters": [
					{
						"name": "ruleset_phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List versions of an entrypoint ruleset response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/get/parameters/0/schema"
										},
										"name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/name"
										},
										"description": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
										},
										"kind": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/kind"
										},
										"version": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/version"
										},
										"shareable_entitlement_name": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/shareable_entitlement_name"
										},
										"last_updated": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D~1versions/get/responses/200/content/application~1json/schema/properties/last_updated"
										},
										"phase": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/phase"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_id}/rulesets/phases/{phase}/entrypoint": {
			"get": {
				"summary": "Get Transform Rules",
				"description": "Fetches all Transform Rules in a zone.",
				"parameters": [
					{
						"name": "phase",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The phase where the ruleset is executed.",
							"type": "string",
							"enum": [
								"http_request_transform",
								"http_request_late_transform",
								"http_response_headers_transform"
							]
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Transform Rules response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"id": {
											"example": "2f2feab2026849078ba485f918791bdc"
										},
										"name": {
											"example": "default"
										},
										"description": {
											"example": ""
										},
										"kind": {
											"example": "zone"
										},
										"phase": {
											"example": "http_request_transform"
										},
										"rules": {
											"description": "The rules in the ruleset.",
											"type": "array",
											"items": {
												"properties": {
													"id": {
														"example": "3a03d665bac047339bb530ecb439a90d"
													},
													"version": {
														"example": "1"
													},
													"action": {
														"example": "rewrite"
													},
													"expression": {
														"example": "ip.geoip.country eq \"AL\""
													},
													"description": {
														"example": "change request based on ip location"
													},
													"action_parameters": {
														"description": "The parameters configuring the action.",
														"type": "object",
														"oneOf": [
															{
																"description": "The configuration parameters for the rewrite action.",
																"properties": {
																	"uri": {
																		"description": "The URI rewrite configuration to rewrite the URI path, the query string, or both.",
																		"type": "object",
																		"properties": {
																			"path": {
																				"description": "The new URI path sent to the origin."
																			},
																			"query": {
																				"description": "The new query string sent to the origin."
																			}
																		}
																	}
																}
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Transform Rules",
				"description": "Updates the Transform Rules of a zone.",
				"parameters": [
					{
						"name": "phase",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1phases~1%7Bphase%7D~1entrypoint/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1rulesets~1phases~1%7Bphase%7D~1entrypoint/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Transform Rules response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"description": {
										"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets/post/responses/200/content/application~1json/schema/properties/description"
									},
									"rules": {
										"type": "array",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1rulesets~1%7Bruleset_id%7D/put/responses/200/content/application~1json/schema/properties/rules/items"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_id}/managed_headers": {
			"get": {
				"summary": "List Managed Transforms",
				"description": "Fetches a list of all Managed Transforms.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Managed Transforms response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"managed_request_headers": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"description": "Human-readable identifier of the Managed Transform.",
														"type": "string",
														"example": "add_cf-bot-score_header"
													},
													"enabled": {
														"description": "When true, the Managed Transform is enabled.",
														"type": "boolean",
														"example": true
													}
												}
											}
										},
										"managed_response_headers": {
											"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1managed_headers/get/responses/200/content/application~1json/schema/properties/managed_request_headers"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Update status of Managed Transforms",
				"description": "Updates the status of one or more Managed Transforms.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1managed_headers/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update status of Managed Transforms response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"managed_request_headers": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1managed_headers/get/responses/200/content/application~1json/schema/properties/managed_request_headers/items/properties/id"
													},
													"enabled": {
														"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1managed_headers/get/responses/200/content/application~1json/schema/properties/managed_request_headers/items/properties/enabled"
													},
													"available": {
														"description": "When true, the Managed Transform is available in the current Cloudflare plan.",
														"type": "boolean",
														"example": true
													}
												}
											}
										},
										"managed_response_headers": {
											"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1managed_headers/patch/responses/200/content/application~1json/schema/properties/managed_request_headers"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"managed_request_headers": {
										"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1managed_headers/get/responses/200/content/application~1json/schema/properties/managed_request_headers"
									},
									"managed_response_headers": {
										"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1managed_headers/get/responses/200/content/application~1json/schema/properties/managed_request_headers"
									}
								},
								"required": [
									"managed_request_headers",
									"managed_response_headers"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_id}/url_normalization": {
			"get": {
				"summary": "Get URL normalization settings",
				"description": "Fetches the current URL normalization settings.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get URL normalization settings response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"type": {
											"description": "The type of URL normalization performed by Cloudflare.",
											"type": "string",
											"example": "cloudflare"
										},
										"scope": {
											"description": "The scope of the URL normalization.",
											"type": "string",
											"example": "incoming"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update URL normalization settings",
				"description": "Updates the URL normalization settings.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1url_normalization/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update URL normalization settings response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1url_normalization/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"type": {
										"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1url_normalization/get/responses/200/content/application~1json/schema/properties/type"
									},
									"scope": {
										"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1url_normalization/get/responses/200/content/application~1json/schema/properties/scope"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_id}/script_monitor": {
			"get": {
				"summary": "Get Page Shield status",
				"description": "Fetches the Page Shield status.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Page Shield status response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"properties": {
														"enabled": {
															"description": "When true, indicates that Page Shield is enabled.",
															"type": "boolean"
														},
														"updated_at": {
															"description": "The timestamp of when Page Shield was last updated.",
															"type": "string"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Page Shield status",
				"description": "Updates the status of Page Shield.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1script_monitor/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Page Shield status response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1script_monitor/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"enabled": {
															"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1script_monitor/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/enabled"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_id%7D~1script_monitor/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/updated_at"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_id}/script_monitor/scripts": {
			"get": {
				"summary": "List Page Shield scripts",
				"description": "Lists all scripts detected by Page Shield.",
				"parameters": [
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Page Shield scripts response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"properties": {
															"script_id": {
																"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
															},
															"script_url": {
																"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
															},
															"added_at": {
																"example": "2021-08-18T10:51:10.096150+00:00"
															},
															"first_seen_at": {
																"example": "2021-08-18T10:51:08+00:00"
															},
															"last_seen_at": {
																"example": "2021-09-02T09:57:54+00:00"
															},
															"host": {
																"example": "blog.cloudflare.com"
															},
															"domain_reported_malicious": {
																"example": false
															},
															"seen_on_first": {
																"example": "blog.cloudflare.com/page"
															},
															"seen_on": {
																"example": [
																	"blog.cloudflare.com/page1",
																	"blog.cloudflare.com/page2"
																]
															},
															"count": {
																"example": 4
															},
															"appears_in_cdn_cgi_path": {
																"example": false
															},
															"hash": {
																"example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
															},
															"js_integrity_score": {
																"example": 10
															},
															"fetched_at": {
																"example": "2021-09-02T10:17:54+00:00"
															}
														}
													}
												},
												"result_info": {
													"type": "object",
													"properties": {
														"page": {
															"description": "Current page within paginated list of results",
															"type": "number",
															"example": 1
														},
														"per_page": {
															"description": "Number of results per page of results",
															"type": "number",
															"example": 20
														},
														"count": {
															"description": "Total results returned based on your search parameters",
															"type": "number",
															"example": 1
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"type": "number",
															"example": 2000
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_id}/script_monitor/scripts/{script_id}": {
			"get": {
				"summary": "Get a Page Shield script",
				"description": "Fetches a script detected by Page Shield by script ID.",
				"parameters": [
					{
						"name": "script_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The ID of the script.",
							"type": "string",
							"minLength": 32,
							"maxLength": 32,
							"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
						}
					},
					{
						"name": "zone_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a Page Shield script response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"properties": {
												"script_id": {
													"example": "c9ef84a6bf5e47138c75d95e2f933e8f"
												},
												"script_url": {
													"example": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
												},
												"added_at": {
													"example": "2021-08-18T10:51:10.096150+00:00"
												},
												"first_seen_at": {
													"example": "2021-08-18T10:51:08+00:00"
												},
												"last_seen_at": {
													"example": "2021-09-02T09:57:54+00:00"
												},
												"host": {
													"example": "blog.cloudflare.com"
												},
												"domain_reported_malicious": {
													"example": false
												},
												"seen_on_first": {
													"example": "blog.cloudflare.com/page"
												},
												"seen_on": {
													"example": [
														"blog.cloudflare.com/page1",
														"blog.cloudflare.com/page2"
													]
												},
												"count": {
													"example": 4
												},
												"appears_in_cdn_cgi_path": {
													"example": false
												},
												"hash": {
													"example": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
												},
												"js_integrity_score": {
													"example": 10
												},
												"fetched_at": {
													"example": "2021-09-02T10:17:54+00:00"
												}
											}
										},
										{
											"properties": {
												"versions": {
													"type": "array",
													"items": {
														"type": "object",
														"description": "The version of the analyzed script.",
														"properties": {
															"hash": {
																"description": "The computed hash of the analyzed script.",
																"type": "string",
																"minLength": 64,
																"maxLength": 64,
																"nullable": true
															},
															"js_integrity_score": {
																"description": "The integrity score of the JavaScript content.",
																"type": "integer",
																"minimum": 1,
																"maximum": 99,
																"nullable": true
															},
															"fetched_at": {
																"description": "The timestamp of when the script was last fetched.",
																"type": "string",
																"nullable": true
															}
														}
													},
													"example": [
														{
															"hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b423",
															"js_integrity_score": 2,
															"fetched_at": "2021-08-18T10:51:08+00:00"
														}
													],
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/user/load_balancers/monitors": {
			"get": {
				"summary": "List Monitors",
				"description": "List configured monitors for a user",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Monitors response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
															},
															"created_on": {
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"type": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/type"
															},
															"description": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/description"
															},
															"method": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/method"
															},
															"path": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/path"
															},
															"header": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/header"
															},
															"port": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/port"
															},
															"timeout": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/timeout"
															},
															"retries": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/retries"
															},
															"interval": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/interval"
															},
															"expected_body": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/expected_body"
															},
															"expected_codes": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/expected_codes"
															},
															"follow_redirects": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/follow_redirects"
															},
															"allow_insecure": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/allow_insecure"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Monitor",
				"description": "Create a configured monitor",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expected_codes"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
										"enum": [
											"http",
											"https",
											"tcp",
											"udp_icmp",
											"icmp_ping",
											"smtp"
										],
										"example": "https",
										"default": "http"
									},
									"description": {
										"type": "string",
										"description": "Object description",
										"example": "Login page monitor"
									},
									"method": {
										"type": "string",
										"description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
										"example": "GET",
										"default": "GET"
									},
									"path": {
										"type": "string",
										"description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "/health",
										"default": "/"
									},
									"header": {
										"type": "object",
										"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": {
											"Host": [
												"example.com"
											],
											"X-App-ID": [
												"abc123"
											]
										}
									},
									"port": {
										"type": "integer",
										"description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
										"default": 0
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"interval": {
										"type": "integer",
										"description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.",
										"default": 60
									},
									"expected_body": {
										"type": "string",
										"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "alive"
									},
									"expected_codes": {
										"type": "string",
										"description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "2xx",
										"default": "200"
									},
									"follow_redirects": {
										"type": "boolean",
										"description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"allow_insecure": {
										"type": "boolean",
										"description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"probe_zone": {
										"type": "string",
										"description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "example.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/load_balancers/monitors/{identifier}": {
			"get": {
				"summary": "Monitor Details",
				"description": "List a single configured monitor for a user",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Monitor Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"type": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/type"
														},
														"description": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"method": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/method"
														},
														"path": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/path"
														},
														"header": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/header"
														},
														"port": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/port"
														},
														"timeout": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/timeout"
														},
														"retries": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/retries"
														},
														"interval": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/interval"
														},
														"expected_body": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/expected_body"
														},
														"expected_codes": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/expected_codes"
														},
														"follow_redirects": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/follow_redirects"
														},
														"allow_insecure": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/allow_insecure"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Monitor",
				"description": "Modify a configured monitor",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expected_codes"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
										"enum": [
											"http",
											"https",
											"tcp",
											"udp_icmp",
											"icmp_ping",
											"smtp"
										],
										"example": "https",
										"default": "http"
									},
									"description": {
										"type": "string",
										"description": "Object description",
										"example": "Login page monitor"
									},
									"method": {
										"type": "string",
										"description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
										"example": "GET",
										"default": "GET"
									},
									"path": {
										"type": "string",
										"description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "/health",
										"default": "/"
									},
									"header": {
										"type": "object",
										"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": {
											"Host": [
												"example.com"
											],
											"X-App-ID": [
												"abc123"
											]
										}
									},
									"port": {
										"type": "integer",
										"description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
										"default": 0
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"interval": {
										"type": "integer",
										"description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.",
										"default": 60
									},
									"expected_body": {
										"type": "string",
										"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "alive"
									},
									"expected_codes": {
										"type": "string",
										"description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "2xx",
										"default": "200"
									},
									"follow_redirects": {
										"type": "boolean",
										"description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"allow_insecure": {
										"type": "boolean",
										"description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"probe_zone": {
										"type": "string",
										"description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "example.com"
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch Monitor",
				"description": "Apply changes to an existing monitor, overwriting the supplied properties.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"type": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/type"
									},
									"description": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
									},
									"method": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/method"
									},
									"path": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/path"
									},
									"header": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/header"
									},
									"port": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/port"
									},
									"timeout": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/timeout"
									},
									"retries": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/retries"
									},
									"interval": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/interval"
									},
									"expected_body": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/expected_body"
									},
									"expected_codes": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/expected_codes"
									},
									"follow_redirects": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/follow_redirects"
									},
									"allow_insecure": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/allow_insecure"
									},
									"probe_zone": {
										"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/probe_zone"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Monitor",
				"description": "Delete a configured monitor",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/user/load_balancers/monitors/{identifier}/preview": {
			"post": {
				"summary": "Preview Monitor",
				"description": "Preview pools using the specified monitor with provided monitor details. The returned preview_id can be used in the preview endpoint to retrieve the results.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Preview Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"preview_id": {
															"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
														},
														"pools": {
															"type": "object",
															"example": {
																"abwlnp5jbqn45ecgxd03erbgtxtqai0d": "WNAM Datacenter",
																"ve8h9lrcip5n5bbga9yqmdws28ay5d0l": "EEU Datacenter"
															},
															"x-patternProperties": {
																"^[a-z0-9]{32}$": {
																	"type": "string"
																}
															},
															"additionalProperties": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expected_codes"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
										"enum": [
											"http",
											"https",
											"tcp",
											"udp_icmp",
											"icmp_ping",
											"smtp"
										],
										"example": "https",
										"default": "http"
									},
									"method": {
										"type": "string",
										"description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
										"example": "GET",
										"default": "GET"
									},
									"path": {
										"type": "string",
										"description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "/health",
										"default": "/"
									},
									"header": {
										"type": "object",
										"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": {
											"Host": [
												"example.com"
											],
											"X-App-ID": [
												"abc123"
											]
										}
									},
									"port": {
										"type": "integer",
										"description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
										"default": 0
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"expected_body": {
										"type": "string",
										"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "alive"
									},
									"expected_codes": {
										"type": "string",
										"description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "2xx",
										"default": "200"
									},
									"follow_redirects": {
										"type": "boolean",
										"description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"allow_insecure": {
										"type": "boolean",
										"description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/load_balancers/preview/{preview_id}": {
			"get": {
				"summary": "Preview Result",
				"description": "Get the result of a previous preview operation using the provided preview_id",
				"parameters": [
					{
						"name": "preview_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Preview Result response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"description": "Resulting health data from a preview operation",
											"example": {
												"abwlnp5jbqn45ecgxd03erbgtxtqai0d": {
													"healthy": true,
													"origins": [
														{
															"originone.example.com.": {
																"healthy": true,
																"rtt": "66ms",
																"failure_reason": "No failures",
																"response_code": 200
															}
														}
													]
												}
											},
											"x-patternProperties": {
												"^[a-z0-9]{32}$": {
													"type": "object",
													"properties": {
														"healthy": {
															"type": "boolean"
														},
														"origins": {
															"type": "array",
															"items": [
																{
																	"type": "object",
																	"description": "The origin ipv4/ipv6 address or domain name mapped to it's health data",
																	"minProperties": 1,
																	"maxProperties": 1,
																	"additionalProperties": {
																		"type": "object",
																		"properties": {
																			"healthy": {
																				"type": "boolean"
																			},
																			"rtt": {
																				"type": "string"
																			},
																			"failure_reason": {
																				"type": "string"
																			},
																			"response_code": {
																				"type": "number"
																			}
																		},
																		"example": {
																			"healthy": true,
																			"rtt": "66ms",
																			"failure_reason": "No failures",
																			"response_code": 200
																		}
																	}
																}
															]
														}
													}
												}
											},
											"additionalProperties": true
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/user/load_balancers/monitors/{identifier}/references": {
			"get": {
				"summary": "List Monitor References",
				"description": "Get the list of resources that reference the provided monitor",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Monitor References response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"description": "List of resources that reference a given monitor",
													"items": {
														"type": "object",
														"properties": {
															"resource_id": {
																"type": "string"
															},
															"resource_name": {
																"type": "string"
															},
															"resource_type": {
																"type": "string"
															},
															"reference_type": {
																"type": "string",
																"enum": [
																	"*",
																	"referral",
																	"referrer"
																]
															}
														}
													},
													"example": [
														{
															"resource_id": "17b5962d775c646f3f9725cbc7a53df4",
															"resource_name": "primary-dc-1",
															"resource_type": "pool",
															"reference_type": "referrer"
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/user/load_balancers/pools": {
			"get": {
				"summary": "List Pools",
				"description": "List configured pools",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Pools response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "17b5962d775c646f3f9725cbc7a53df4"
															},
															"created_on": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"description": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/description"
															},
															"name": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/name"
															},
															"enabled": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/enabled"
															},
															"latitude": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/latitude"
															},
															"longitude": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/longitude"
															},
															"load_shedding": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/load_shedding"
															},
															"minimum_origins": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/minimum_origins"
															},
															"monitor": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/monitor"
															},
															"check_regions": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/check_regions"
															},
															"origins": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/origins"
															},
															"origin_steering": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/origin_steering"
															},
															"notification_email": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/notification_email"
															},
															"notification_filter": {
																"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/notification_filter"
															},
															"disabled_at": {
																"type": "string",
																"description": "This field shows up only if the pool is disabled. This field is set with the time the pool was disabled at.",
																"readOnly": true,
																"format": "date-time"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Pool",
				"description": "Create a new pool",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create Pool response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1user~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"origins",
									"name"
								],
								"properties": {
									"description": {
										"type": "string",
										"description": "A human-readable description of the pool.",
										"example": "Primary data center - Provider XYZ"
									},
									"name": {
										"type": "string",
										"description": "A short name (tag) for the pool. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "primary-dc-1"
									},
									"enabled": {
										"type": "boolean",
										"description": "Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any).",
										"example": false,
										"default": true
									},
									"check_regions": {
										"type": "array",
										"description": "A list of regions from which to run health checks. Null means every Cloudflare datacenter.",
										"default": null,
										"items": {
											"type": "string",
											"description": "WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, SAS: Southern Asia, SEAS: South East Asia, NEAS: North East Asia, ALL_REGIONS: all regions (ENTERPRISE customers only)",
											"enum": [
												"WNAM",
												"ENAM",
												"WEU",
												"EEU",
												"NSAM",
												"SSAM",
												"OC",
												"ME",
												"NAF",
												"SAF",
												"SAS",
												"SEAS",
												"NEAS",
												"ALL_REGIONS"
											]
										},
										"example": [
											"WEU",
											"ENAM"
										],
										"nullable": true
									},
									"latitude": {
										"type": "number",
										"description": "The latitude of datacenter containing the origins used in this pool in decimal degrees. If this is set longitude must also be."
									},
									"longitude": {
										"type": "number",
										"description": "The longitude of datacenter containing the origins used in this pool in decimal degrees. If this is set latitude must also be."
									},
									"load_shedding": {
										"description": "Configure load shedding policies and percentages for the pool.",
										"type": "object",
										"properties": {
											"default_percent": {
												"type": "number",
												"description": "Percent of traffic to shed from the pool, according to the default policy. Applies to new sessions and traffic without session affinity.",
												"default": 0,
												"minimum": 0,
												"maximum": 100
											},
											"default_policy": {
												"type": "string",
												"description": "The default policy to use when load shedding. A random policy randomly sheds a given percent of requests. A hash policy computes a hash over the CF-Connecting-IP address and sheds all requests originating from a percent of IPs.",
												"default": "random",
												"enum": [
													"random",
													"hash"
												]
											},
											"session_percent": {
												"type": "number",
												"description": "Percent of existing sessions to shed from the pool, according to the session policy.",
												"default": 0,
												"minimum": 0,
												"maximum": 100
											},
											"session_policy": {
												"type": "string",
												"description": "Only the hash policy is supported for existing sessions (to avoid exponential decay).",
												"default": "hash",
												"enum": [
													"hash"
												]
											}
										}
									},
									"minimum_origins": {
										"type": "integer",
										"description": "The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we wil failover to the next available pool.",
										"default": 1
									},
									"monitor": {
										"description": "The ID of the Monitor to use for health checking origins within this pool."
									},
									"origins": {
										"type": "array",
										"description": "The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy.",
										"items": {
											"type": "object",
											"properties": {
												"name": {
													"type": "string",
													"description": "A human-identifiable name for the origin.",
													"example": "app-server-1"
												},
												"address": {
													"type": "string",
													"description": "The IP address (IPv4 or IPv6) of the origin, or the publicly addressable hostname. Hostnames entered here should resolve directly to the origin, and not be a hostname proxied by Cloudflare.",
													"example": "0.0.0.0"
												},
												"enabled": {
													"type": "boolean",
													"description": "Whether to enable (the default) this origin within the Pool. Disabled origins will not receive traffic and are excluded from health checks. The origin will only be disabled for the current pool.",
													"example": true,
													"default": true
												},
												"weight": {
													"type": "number",
													"minimum": 0,
													"maximum": 1,
													"description": "The weight of this origin relative to other origins in the Pool. Based on the configured weight the total traffic is distributed among origins within the Pool.",
													"example": 0.6,
													"default": 1,
													"multipleOf": 0.01
												},
												"disabled_at": {
													"type": "string",
													"description": "This field shows up only if the origin is disabled. This field is set with the time the origin was disabled at.",
													"format": "date-time",
													"readOnly": true
												},
												"header": {
													"type": "object",
													"description": "The request header is used to pass additional information with an HTTP request. Currently supported header is 'Host'.",
													"properties": {
														"Host": {
															"type": "array",
															"description": "The 'Host' header allows to override the hostname set in the HTTP request. Current support is 1 'Host' header override per origin.",
															"items": {
																"type": "string",
																"example": "example.com"
															}
														}
													}
												}
											}
										}
									},
									"origin_steering": {
										"description": "Configure origin steering for the pool. Controls how origins are selected for new sessions and traffic without session affinity.",
										"type": "object",
										"properties": {
											"policy": {
												"type": "string",
												"description": "The type of origin steering policy to use, either \"random\" or \"hash\" (based on CF-Connecting-IP).",
												"default": "random",
												"enum": [
													"random",
													"hash"
												]
											}
										}
									},
									"notification_email": {
										"type": "string",
										"description": "The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.",
										"example": "someone@example.com,sometwo@example.com"
									},
									"notification_filter": {
										"type": "object",
										"description": "Filter pool and origin health notifications by resource type or health status. Use null to reset.",
										"properties": {
											"origin": {
												"type": "object",
												"description": "Filter options for a particular resource type (pool or origin). Use null to reset.",
												"properties": {
													"disable": {
														"type": "boolean",
														"description": "If set true, disable notifications for this type of resource (pool or origin).",
														"default": false
													},
													"healthy": {
														"type": "boolean",
														"description": "If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).",
														"default": null,
														"nullable": true
													}
												},
												"nullable": true
											},
											"pool": {
												"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/notification_filter/properties/origin"
											}
										},
										"example": {
											"origin": {
												"disable": true
											},
											"pool": {
												"healthy": false
											}
										},
										"nullable": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/load_balancers/pools/{identifier}": {
			"get": {
				"summary": "Pool Details",
				"description": "Fetch a single configured pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "17b5962d775c646f3f9725cbc7a53df4"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Pool Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"description": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"name": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"enabled": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/enabled"
														},
														"latitude": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/latitude"
														},
														"longitude": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/longitude"
														},
														"load_shedding": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/load_shedding"
														},
														"minimum_origins": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/minimum_origins"
														},
														"monitor": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/monitor"
														},
														"check_regions": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/check_regions"
														},
														"origins": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/origins"
														},
														"origin_steering": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/origin_steering"
														},
														"notification_email": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/notification_email"
														},
														"notification_filter": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/notification_filter"
														},
														"disabled_at": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/disabled_at"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Pool",
				"description": "Modify a configured pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Pool response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"origins",
									"name"
								],
								"properties": {
									"description": {
										"type": "string",
										"description": "A human-readable description of the pool.",
										"example": "Primary data center - Provider XYZ"
									},
									"name": {
										"type": "string",
										"description": "A short name (tag) for the pool. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "primary-dc-1"
									},
									"enabled": {
										"type": "boolean",
										"description": "Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any).",
										"example": false,
										"default": true
									},
									"check_regions": {
										"type": "array",
										"description": "A list of regions from which to run health checks. Null means every Cloudflare datacenter.",
										"default": null,
										"items": {
											"type": "string",
											"description": "WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, SAS: Southern Asia, SEAS: South East Asia, NEAS: North East Asia, ALL_REGIONS: all regions (ENTERPRISE customers only)",
											"enum": [
												"WNAM",
												"ENAM",
												"WEU",
												"EEU",
												"NSAM",
												"SSAM",
												"OC",
												"ME",
												"NAF",
												"SAF",
												"SAS",
												"SEAS",
												"NEAS",
												"ALL_REGIONS"
											]
										},
										"example": [
											"WEU",
											"ENAM"
										],
										"nullable": true
									},
									"latitude": {
										"type": "number",
										"description": "The latitude of datacenter containing the origins used in this pool in decimal degrees. If this is set longitude must also be."
									},
									"longitude": {
										"type": "number",
										"description": "The longitude of datacenter containing the origins used in this pool in decimal degrees. If this is set latitude must also be."
									},
									"load_shedding": {
										"description": "Configure load shedding policies and percentages for the pool.",
										"type": "object",
										"properties": {
											"default_percent": {
												"type": "number",
												"description": "Percent of traffic to shed from the pool, according to the default policy. Applies to new sessions and traffic without session affinity.",
												"default": 0,
												"minimum": 0,
												"maximum": 100
											},
											"default_policy": {
												"type": "string",
												"description": "The default policy to use when load shedding. A random policy randomly sheds a given percent of requests. A hash policy computes a hash over the CF-Connecting-IP address and sheds all requests originating from a percent of IPs.",
												"default": "random",
												"enum": [
													"random",
													"hash"
												]
											},
											"session_percent": {
												"type": "number",
												"description": "Percent of existing sessions to shed from the pool, according to the session policy.",
												"default": 0,
												"minimum": 0,
												"maximum": 100
											},
											"session_policy": {
												"type": "string",
												"description": "Only the hash policy is supported for existing sessions (to avoid exponential decay).",
												"default": "hash",
												"enum": [
													"hash"
												]
											}
										}
									},
									"minimum_origins": {
										"type": "integer",
										"description": "The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we wil failover to the next available pool.",
										"default": 1
									},
									"monitor": {
										"description": "The ID of the Monitor to use for health checking origins within this pool."
									},
									"origins": {
										"type": "array",
										"description": "The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy.",
										"items": {
											"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/origins/items"
										}
									},
									"origin_steering": {
										"description": "Configure origin steering for the pool. Controls how origins are selected for new sessions and traffic without session affinity.",
										"type": "object",
										"properties": {
											"policy": {
												"type": "string",
												"description": "The type of origin steering policy to use, either \"random\" or \"hash\" (based on CF-Connecting-IP).",
												"default": "random",
												"enum": [
													"random",
													"hash"
												]
											}
										}
									},
									"disabled_at": {
										"type": "string",
										"description": "This field shows up only if the pool is disabled. This field is set with the time the pool was disabled at.",
										"readOnly": true,
										"format": "date-time"
									},
									"notification_email": {
										"type": "string",
										"description": "The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.",
										"example": "someone@example.com,sometwo@example.com"
									},
									"notification_filter": {
										"type": "object",
										"description": "Filter pool and origin health notifications by resource type or health status. Use null to reset.",
										"properties": {
											"origin": {
												"type": "object",
												"description": "Filter options for a particular resource type (pool or origin). Use null to reset.",
												"properties": {
													"disable": {
														"type": "boolean",
														"description": "If set true, disable notifications for this type of resource (pool or origin).",
														"default": false
													},
													"healthy": {
														"type": "boolean",
														"description": "If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).",
														"default": null,
														"nullable": true
													}
												},
												"nullable": true
											},
											"pool": {
												"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/notification_filter/properties/origin"
											}
										},
										"example": {
											"origin": {
												"disable": true
											},
											"pool": {
												"healthy": false
											}
										},
										"nullable": true
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch Pool",
				"description": "Apply changes to an existing pool, overwriting the supplied properties.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch Pool response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"description": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
									},
									"name": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/name"
									},
									"enabled": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/enabled"
									},
									"check_regions": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/check_regions"
									},
									"latitude": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/latitude"
									},
									"longitude": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/longitude"
									},
									"load_shedding": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/load_shedding"
									},
									"minimum_origins": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/minimum_origins"
									},
									"monitor": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/monitor"
									},
									"origins": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/origins"
									},
									"origin_steering": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/origin_steering"
									},
									"disabled_at": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/disabled_at"
									},
									"notification_email": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/notification_email"
									},
									"notification_filter": {
										"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/notification_filter"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Pool",
				"description": "Delete a configured pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Pool response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1user~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/user/load_balancers/pools/{identifier}/health": {
			"get": {
				"summary": "Pool Health Details",
				"description": "Fetch latest healthcheck details for a single pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "17b5962d775c646f3f9725cbc7a53df4"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Pool Health Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"description": "A list of regions from which to run health checks. Null means every Cloudflare datacenter.",
													"example": {
														"pool_id": "17b5962d775c646f3f9725cbc7a53df4",
														"pop_health": {
															"Amsterdam, NL": {
																"healthy": true,
																"origins": [
																	{
																		"2001:DB8::5": {
																			"healthy": true,
																			"rtt": "12.1ms",
																			"failure_reason": "No failures",
																			"response_code": 401
																		}
																	}
																]
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/user/load_balancers/pools/{identifier}/preview": {
			"post": {
				"summary": "Preview Pool",
				"description": "Preview pool health using provided monitor details. The returned preview_id can be used in the preview endpoint to retrieve the results.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "17b5962d775c646f3f9725cbc7a53df4"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Preview Pool response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D~1preview/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expected_codes"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
										"enum": [
											"http",
											"https",
											"tcp",
											"udp_icmp",
											"icmp_ping",
											"smtp"
										],
										"example": "https",
										"default": "http"
									},
									"method": {
										"type": "string",
										"description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
										"example": "GET",
										"default": "GET"
									},
									"path": {
										"type": "string",
										"description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "/health",
										"default": "/"
									},
									"header": {
										"type": "object",
										"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": {
											"Host": [
												"example.com"
											],
											"X-App-ID": [
												"abc123"
											]
										}
									},
									"port": {
										"type": "integer",
										"description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
										"default": 0
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"expected_body": {
										"type": "string",
										"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "alive"
									},
									"expected_codes": {
										"type": "string",
										"description": "The expected HTTP response code or code range of the health check. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "2xx",
										"default": "200"
									},
									"follow_redirects": {
										"type": "boolean",
										"description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"allow_insecure": {
										"type": "boolean",
										"description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									}
								}
							}
						}
					}
				}
			}
		},
		"/user/load_balancers/pools/{identifier}/references": {
			"get": {
				"summary": "List Pool References",
				"description": "Get the list of resources that reference the provided pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "17b5962d775c646f3f9725cbc7a53df4"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Pool References response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"description": "List of resources that reference a given pool",
													"items": {
														"type": "object",
														"properties": {
															"resource_id": {
																"type": "string"
															},
															"resource_name": {
																"type": "string"
															},
															"resource_type": {
																"type": "string"
															},
															"reference_type": {
																"type": "string",
																"enum": [
																	"*",
																	"referral",
																	"referrer"
																]
															}
														}
													},
													"example": [
														{
															"resource_id": "699d98642c564d2e855e9661899b7252",
															"resource_name": "www.example.com",
															"resource_type": "load_balancer",
															"reference_type": "referrer"
														},
														{
															"resource_id": "f1aba936b94213e5b8dca0c0dbf1f9cc",
															"resource_name": "Login page monitor",
															"resource_type": "monitor",
															"reference_type": "referral"
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/user/load_balancing_analytics/events": {
			"get": {
				"summary": "List Healthcheck Events",
				"description": "List origin health changes",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Healthcheck Events response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"type": "integer",
																"default": 1
															},
															"timestamp": {
																"type": "string",
																"format": "date-time",
																"example": "2014-01-01T05:20:00.123450+00:00"
															},
															"pool": {
																"type": "object",
																"example": {
																	"id": "74bc6a8b9b0dda3d651707a2928bad0c",
																	"name": "some-pool",
																	"healthy": true,
																	"changed": true,
																	"minimum_origins": 1
																}
															},
															"origins": {
																"type": "array",
																"example": [
																	{
																		"name": "some-origin",
																		"address": "198.51.100.4",
																		"ip": "198.51.100.4",
																		"enabled": true,
																		"healthy": true,
																		"failure_reason": "No failures",
																		"changed": true
																	}
																],
																"items": {}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/load_balancers/regions": {
			"get": {
				"summary": "List Regions",
				"description": "List all region mappings",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Regions response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/load_balancers/regions/{region_code}": {
			"get": {
				"summary": "Get Region",
				"description": "Get a single region mapping",
				"parameters": [
					{
						"name": "region_code",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"description": "A list of Cloudflare regions. WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, SAS: Southern Asia, SEAS: South East Asia, NEAS: North East Asia)",
							"enum": [
								"WNAM",
								"ENAM",
								"WEU",
								"EEU",
								"NSAM",
								"SSAM",
								"OC",
								"ME",
								"NAF",
								"SAF",
								"SAS",
								"SEAS",
								"NEAS"
							],
							"example": "WNAM"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Region response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"description": "A list of countries and subdivisions mapped to a region.",
													"example": {
														"iso_standard": "Country and subdivision codes follow ISO 3166-1 alpha-2 and ISO 3166-2",
														"regions": [
															{
																"region_code": "WNAM",
																"countries": [
																	{
																		"country_code_a2": "CA",
																		"country_name": "Canada",
																		"country_subdivisions": [
																			{
																				"subdivision_code_a2": "AB",
																				"subdivision_name": "Alberta"
																			},
																			{
																				"subdivision_code_a2": "BC",
																				"subdivision_name": "British Columbia"
																			}
																		]
																	},
																	{
																		"country_code_a2": "HT",
																		"country_name": "Haiti"
																	},
																	{
																		"country_code_a2": "MX",
																		"country_name": "Mexico"
																	},
																	{
																		"country_code_a2": "US",
																		"country_name": "United States",
																		"country_subdivisions": [
																			{
																				"subdivision_code_a2": "AZ",
																				"subdivision_name": "Arizona"
																			},
																			{
																				"subdivision_code_a2": "CA",
																				"subdivision_name": "California"
																			},
																			{
																				"subdivision_code_a2": "CO",
																				"subdivision_name": "Colorado"
																			},
																			{
																				"subdivision_code_a2": "HI",
																				"subdivision_name": "Hawaii"
																			},
																			{
																				"subdivision_code_a2": "MN",
																				"subdivision_name": "Minnesota"
																			},
																			{
																				"subdivision_code_a2": "MO",
																				"subdivision_name": "Missouri"
																			},
																			{
																				"subdivision_code_a2": "NV",
																				"subdivision_name": "Nevada"
																			},
																			{
																				"subdivision_code_a2": "OR",
																				"subdivision_name": "Oregon"
																			},
																			{
																				"subdivision_code_a2": "TX",
																				"subdivision_name": "Texas"
																			},
																			{
																				"subdivision_code_a2": "UT",
																				"subdivision_name": "Utah"
																			},
																			{
																				"subdivision_code_a2": "WA",
																				"subdivision_name": "Washington"
																			}
																		]
																	}
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/load_balancers/monitors": {
			"get": {
				"summary": "List Monitors",
				"description": "List configured monitors for an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Monitors response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
															},
															"created_on": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"type": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/type"
															},
															"description": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/description"
															},
															"method": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/method"
															},
															"path": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/path"
															},
															"header": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/header"
															},
															"port": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/port"
															},
															"timeout": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/timeout"
															},
															"retries": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/retries"
															},
															"interval": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/interval"
															},
															"expected_body": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/expected_body"
															},
															"expected_codes": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/expected_codes"
															},
															"follow_redirects": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/follow_redirects"
															},
															"allow_insecure": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/allow_insecure"
															},
															"consecutive_up": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/consecutive_up"
															},
															"consecutive_down": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/consecutive_down"
															},
															"probe_zone": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/post/requestBody/content/application~1json/schema/properties/probe_zone"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Monitor",
				"description": "Create a configured monitor",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expected_codes"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
										"enum": [
											"http",
											"https",
											"tcp",
											"udp_icmp",
											"icmp_ping",
											"smtp"
										],
										"example": "https",
										"default": "http"
									},
									"description": {
										"type": "string",
										"description": "Object description",
										"example": "Login page monitor"
									},
									"method": {
										"type": "string",
										"description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
										"example": "GET",
										"default": "GET"
									},
									"path": {
										"type": "string",
										"description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "/health",
										"default": "/"
									},
									"header": {
										"type": "object",
										"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": {
											"Host": [
												"example.com"
											],
											"X-App-ID": [
												"abc123"
											]
										}
									},
									"port": {
										"type": "integer",
										"description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
										"default": 0
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"interval": {
										"type": "integer",
										"description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.",
										"default": 60
									},
									"expected_body": {
										"type": "string",
										"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "alive"
									},
									"expected_codes": {
										"type": "string",
										"description": "The expected HTTP response codes or code ranges of the health check, comma-separated. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "2xx",
										"default": "200"
									},
									"follow_redirects": {
										"type": "boolean",
										"description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"allow_insecure": {
										"type": "boolean",
										"description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"consecutive_up": {
										"type": "integer",
										"description": "To be marked healthy the monitored origin must pass this healthcheck N consecutive times",
										"default": 0
									},
									"consecutive_down": {
										"type": "integer",
										"description": "To be marked unhealthy the monitored origin must fail this healthcheck N consecutive times",
										"default": 0
									},
									"probe_zone": {
										"type": "string",
										"description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "example.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/load_balancers/monitors/{identifier}": {
			"get": {
				"summary": "Monitor Details",
				"description": "List a single configured monitor for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Monitor Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"type": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/type"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"method": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/method"
														},
														"path": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/path"
														},
														"header": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/header"
														},
														"port": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/port"
														},
														"timeout": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/timeout"
														},
														"retries": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/retries"
														},
														"interval": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/interval"
														},
														"expected_body": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/expected_body"
														},
														"expected_codes": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/expected_codes"
														},
														"follow_redirects": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/follow_redirects"
														},
														"allow_insecure": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/allow_insecure"
														},
														"consecutive_up": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/consecutive_up"
														},
														"consecutive_down": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/consecutive_down"
														},
														"probe_zone": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/probe_zone"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Monitor",
				"description": "Modify a configured monitor",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expected_codes"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
										"enum": [
											"http",
											"https",
											"tcp",
											"udp_icmp",
											"icmp_ping",
											"smtp"
										],
										"example": "https",
										"default": "http"
									},
									"description": {
										"type": "string",
										"description": "Object description",
										"example": "Login page monitor"
									},
									"method": {
										"type": "string",
										"description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
										"example": "GET",
										"default": "GET"
									},
									"path": {
										"type": "string",
										"description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "/health",
										"default": "/"
									},
									"header": {
										"type": "object",
										"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": {
											"Host": [
												"example.com"
											],
											"X-App-ID": [
												"abc123"
											]
										}
									},
									"port": {
										"type": "integer",
										"description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
										"default": 0
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"interval": {
										"type": "integer",
										"description": "The interval between each health check. Shorter intervals may improve failover time, but will increase load on the origins as we check from multiple locations.",
										"default": 60
									},
									"expected_body": {
										"type": "string",
										"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "alive"
									},
									"expected_codes": {
										"type": "string",
										"description": "The expected HTTP response codes or code ranges of the health check, comma-separated. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "2xx",
										"default": "200"
									},
									"follow_redirects": {
										"type": "boolean",
										"description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"allow_insecure": {
										"type": "boolean",
										"description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"consecutive_up": {
										"type": "integer",
										"description": "To be marked healthy the monitored origin must pass this healthcheck N consecutive times",
										"default": 0
									},
									"consecutive_down": {
										"type": "integer",
										"description": "To be marked unhealthy the monitored origin must fail this healthcheck N consecutive times",
										"default": 0
									},
									"probe_zone": {
										"type": "string",
										"description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "example.com"
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch Monitor",
				"description": "Apply changes to an existing monitor, overwriting the supplied properties.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"type": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/type"
									},
									"description": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
									},
									"method": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/method"
									},
									"path": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/path"
									},
									"header": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/header"
									},
									"port": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/port"
									},
									"timeout": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/timeout"
									},
									"retries": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/retries"
									},
									"interval": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/interval"
									},
									"expected_body": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/expected_body"
									},
									"expected_codes": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/expected_codes"
									},
									"follow_redirects": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/follow_redirects"
									},
									"allow_insecure": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/allow_insecure"
									},
									"consecutive_up": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/consecutive_up"
									},
									"consecutive_down": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/consecutive_down"
									},
									"probe_zone": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/probe_zone"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Monitor",
				"description": "Delete a configured monitor",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/load_balancers/monitors/{identifier}/preview": {
			"post": {
				"summary": "Preview Monitor",
				"description": "Preview pools using the specified monitor with provided monitor details. The returned preview_id can be used in the preview endpoint to retrieve the results.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Preview Monitor response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"preview_id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1monitors~1%7Bidentifier%7D~1preview/post/parameters/0/schema"
														},
														"pools": {
															"type": "object",
															"example": {
																"abwlnp5jbqn45ecgxd03erbgtxtqai0d": "WNAM Datacenter",
																"ve8h9lrcip5n5bbga9yqmdws28ay5d0l": "EEU Datacenter"
															},
															"x-patternProperties": {
																"^[a-z0-9]{32}$": {
																	"type": "string"
																}
															},
															"additionalProperties": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expected_codes"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
										"enum": [
											"http",
											"https",
											"tcp",
											"udp_icmp",
											"icmp_ping",
											"smtp"
										],
										"example": "https",
										"default": "http"
									},
									"method": {
										"type": "string",
										"description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
										"example": "GET",
										"default": "GET"
									},
									"path": {
										"type": "string",
										"description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "/health",
										"default": "/"
									},
									"header": {
										"type": "object",
										"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": {
											"Host": [
												"example.com"
											],
											"X-App-ID": [
												"abc123"
											]
										}
									},
									"port": {
										"type": "integer",
										"description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
										"default": 0
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"expected_body": {
										"type": "string",
										"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "alive"
									},
									"expected_codes": {
										"type": "string",
										"description": "The expected HTTP response codes or code ranges of the health check, comma-separated. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "2xx",
										"default": "200"
									},
									"follow_redirects": {
										"type": "boolean",
										"description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"allow_insecure": {
										"type": "boolean",
										"description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"probe_zone": {
										"type": "string",
										"description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "example.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/load_balancers/preview/{preview_id}": {
			"get": {
				"summary": "Preview Result",
				"description": "Get the result of a previous preview operation using the provided preview_id",
				"parameters": [
					{
						"name": "preview_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "p1aba936b94213e5b8dca0c0dbf1f9cc"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Preview Result response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"description": "Resulting health data from a preview operation",
											"example": {
												"abwlnp5jbqn45ecgxd03erbgtxtqai0d": {
													"healthy": true,
													"origins": [
														{
															"originone.example.com.": {
																"healthy": true,
																"rtt": "66ms",
																"failure_reason": "No failures",
																"response_code": 200
															}
														}
													]
												}
											},
											"x-patternProperties": {
												"^[a-z0-9]{32}$": {
													"type": "object",
													"properties": {
														"healthy": {
															"type": "boolean"
														},
														"origins": {
															"type": "array",
															"items": [
																{
																	"type": "object",
																	"description": "The origin ipv4/ipv6 address or domain name mapped to it's health data",
																	"minProperties": 1,
																	"maxProperties": 1,
																	"additionalProperties": {
																		"type": "object",
																		"properties": {
																			"healthy": {
																				"type": "boolean"
																			},
																			"rtt": {
																				"type": "string"
																			},
																			"failure_reason": {
																				"type": "string"
																			},
																			"response_code": {
																				"type": "number"
																			}
																		},
																		"example": {
																			"healthy": true,
																			"rtt": "66ms",
																			"failure_reason": "No failures",
																			"response_code": 200
																		}
																	}
																}
															]
														}
													}
												}
											},
											"additionalProperties": true
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/load_balancers/monitors/{identifier}/references": {
			"get": {
				"summary": "List Monitor References",
				"description": "Get the list of resources that reference the provided monitor",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "f1aba936b94213e5b8dca0c0dbf1f9cc"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Monitor References response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"description": "List of resources that reference a given monitor",
													"items": {
														"type": "object",
														"properties": {
															"resource_id": {
																"type": "string"
															},
															"resource_name": {
																"type": "string"
															},
															"resource_type": {
																"type": "string"
															},
															"reference_type": {
																"type": "string",
																"enum": [
																	"*",
																	"referral",
																	"referrer"
																]
															}
														}
													},
													"example": [
														{
															"resource_id": "17b5962d775c646f3f9725cbc7a53df4",
															"resource_name": "primary-dc-1",
															"resource_type": "pool",
															"reference_type": "referrer"
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/load_balancers/pools": {
			"get": {
				"summary": "List Pools",
				"description": "List configured pools",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Pools response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "17b5962d775c646f3f9725cbc7a53df4"
															},
															"created_on": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"disabled_at": {
																"type": "string",
																"description": "This field shows up only if the pool is disabled. This field is set with the time the pool was disabled at.",
																"readOnly": true,
																"format": "date-time"
															},
															"description": {
																"type": "string",
																"description": "A human-readable description of the pool.",
																"example": "Primary data center - Provider XYZ"
															},
															"name": {
																"type": "string",
																"description": "A short name (tag) for the pool. Only alphanumeric characters, hyphens and underscores are allowed.",
																"example": "primary-dc-1"
															},
															"enabled": {
																"type": "boolean",
																"description": "Whether to enable (the default) this pool. Disabled pools will not receive traffic and are excluded from health checks. Disabling a pool will cause any load balancers using it to failover to the next pool (if any).",
																"example": false,
																"default": true
															},
															"latitude": {
																"type": "number",
																"description": "The latitude of datacenter containing the origins used in this pool in decimal degrees. If this is set longitude must also be."
															},
															"longitude": {
																"type": "number",
																"description": "The longitude of datacenter containing the origins used in this pool in decimal degrees. If this is set latitude must also be."
															},
															"load_shedding": {
																"description": "Configure load shedding policies and percentages for the pool.",
																"type": "object",
																"properties": {
																	"default_percent": {
																		"type": "number",
																		"description": "Percent of traffic to shed from the pool, according to the default policy. Applies to new sessions and traffic without session affinity.",
																		"default": 0,
																		"minimum": 0,
																		"maximum": 100
																	},
																	"default_policy": {
																		"type": "string",
																		"description": "The default policy to use when load shedding. A random policy randomly sheds a given percent of requests. A hash policy computes a hash over the CF-Connecting-IP address and sheds all requests originating from a percent of IPs.",
																		"default": "random",
																		"enum": [
																			"random",
																			"hash"
																		]
																	},
																	"session_percent": {
																		"type": "number",
																		"description": "Percent of existing sessions to shed from the pool, according to the session policy.",
																		"default": 0,
																		"minimum": 0,
																		"maximum": 100
																	},
																	"session_policy": {
																		"type": "string",
																		"description": "Only the hash policy is supported for existing sessions (to avoid exponential decay).",
																		"default": "hash",
																		"enum": [
																			"hash"
																		]
																	}
																}
															},
															"minimum_origins": {
																"type": "integer",
																"description": "The minimum number of origins that must be healthy for this pool to serve traffic. If the number of healthy origins falls below this number, the pool will be marked unhealthy and we wil failover to the next available pool.",
																"default": 1
															},
															"monitor": {
																"description": "The ID of the Monitor to use for health checking origins within this pool."
															},
															"check_regions": {
																"type": "array",
																"description": "A list of regions from which to run health checks. Null means every Cloudflare datacenter.",
																"default": null,
																"items": {
																	"type": "string",
																	"description": "WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, SAS: Southern Asia, SEAS: South East Asia, NEAS: North East Asia, ALL_REGIONS: all regions (ENTERPRISE customers only)",
																	"enum": [
																		"WNAM",
																		"ENAM",
																		"WEU",
																		"EEU",
																		"NSAM",
																		"SSAM",
																		"OC",
																		"ME",
																		"NAF",
																		"SAF",
																		"SAS",
																		"SEAS",
																		"NEAS",
																		"ALL_REGIONS"
																	]
																},
																"example": [
																	"WEU",
																	"ENAM"
																],
																"nullable": true
															},
															"origins": {
																"type": "array",
																"description": "The list of origins within this pool. Traffic directed at this pool is balanced across all currently healthy origins, provided the pool itself is healthy.",
																"items": {
																	"$ref": "#/paths/~1user~1load_balancers~1pools/post/requestBody/content/application~1json/schema/properties/origins/items"
																}
															},
															"origin_steering": {
																"description": "Configure origin steering for the pool. Controls how origins are selected for new sessions and traffic without session affinity.",
																"type": "object",
																"properties": {
																	"policy": {
																		"type": "string",
																		"description": "The type of origin steering policy to use, either \"random\" or \"hash\" (based on CF-Connecting-IP).",
																		"default": "random",
																		"enum": [
																			"random",
																			"hash"
																		]
																	}
																}
															},
															"notification_email": {
																"type": "string",
																"description": "The email address to send health status notifications to. This can be an individual mailbox or a mailing list. Multiple emails can be supplied as a comma delimited list.",
																"example": "someone@example.com,sometwo@example.com"
															},
															"notification_filter": {
																"type": "object",
																"description": "Filter pool and origin health notifications by resource type or health status. Use null to reset.",
																"properties": {
																	"origin": {
																		"type": "object",
																		"description": "Filter options for a particular resource type (pool or origin). Use null to reset.",
																		"properties": {
																			"disable": {
																				"type": "boolean",
																				"description": "If set true, disable notifications for this type of resource (pool or origin).",
																				"default": false
																			},
																			"healthy": {
																				"type": "boolean",
																				"description": "If present, send notifications only for this health status (e.g. false for only DOWN events). Use null to reset (all events).",
																				"default": null,
																				"nullable": true
																			}
																		},
																		"nullable": true
																	},
																	"pool": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_filter/properties/origin"
																	}
																},
																"example": {
																	"origin": {
																		"disable": true
																	},
																	"pool": {
																		"healthy": false
																	}
																},
																"nullable": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Pool",
				"description": "Create a new pool",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Pool response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"origins",
									"name"
								],
								"properties": {
									"description": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/description"
									},
									"name": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/name"
									},
									"enabled": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/enabled"
									},
									"latitude": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/latitude"
									},
									"longitude": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/longitude"
									},
									"load_shedding": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/load_shedding"
									},
									"minimum_origins": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/minimum_origins"
									},
									"monitor": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/monitor"
									},
									"origins": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/origins"
									},
									"origin_steering": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/origin_steering"
									},
									"notification_email": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_email"
									},
									"notification_filter": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_filter"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/load_balancers/pools/{identifier}": {
			"get": {
				"summary": "Pool Details",
				"description": "Fetch a single configured pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Pool Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"disabled_at": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/disabled_at"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/description"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/name"
														},
														"enabled": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/enabled"
														},
														"latitude": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/latitude"
														},
														"longitude": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/longitude"
														},
														"load_shedding": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/load_shedding"
														},
														"minimum_origins": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/minimum_origins"
														},
														"monitor": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/monitor"
														},
														"check_regions": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/check_regions"
														},
														"origins": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/origins"
														},
														"origin_steering": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/origin_steering"
														},
														"notification_email": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_email"
														},
														"notification_filter": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_filter"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Pool",
				"description": "Modify a configured pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Pool response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"origins",
									"name"
								],
								"properties": {
									"description": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/description"
									},
									"name": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/name"
									},
									"enabled": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/enabled"
									},
									"check_regions": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/check_regions"
									},
									"latitude": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/latitude"
									},
									"longitude": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/longitude"
									},
									"load_shedding": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/load_shedding"
									},
									"minimum_origins": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/minimum_origins"
									},
									"monitor": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/monitor"
									},
									"origins": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/origins"
									},
									"origin_steering": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/origin_steering"
									},
									"disabled_at": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/disabled_at"
									},
									"notification_email": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_email"
									},
									"notification_filter": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_filter"
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch Pool",
				"description": "Apply changes to an existing pool, overwriting the supplied properties.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch Pool response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"description": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/description"
									},
									"name": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/name"
									},
									"enabled": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/enabled"
									},
									"check_regions": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/check_regions"
									},
									"latitude": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/latitude"
									},
									"longitude": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/longitude"
									},
									"load_shedding": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/load_shedding"
									},
									"minimum_origins": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/minimum_origins"
									},
									"monitor": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/monitor"
									},
									"origins": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/origins"
									},
									"origin_steering": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/origin_steering"
									},
									"disabled_at": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/disabled_at"
									},
									"notification_email": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_email"
									},
									"notification_filter": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/notification_filter"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Pool",
				"description": "Delete a configured pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Pool response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/load_balancers/pools/{identifier}/health": {
			"get": {
				"summary": "Pool Health Details",
				"description": "Fetch latest healthcheck details for a single pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Pool Health Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"description": "A list of regions from which to run health checks. Null means every Cloudflare datacenter.",
													"example": {
														"pool_id": "17b5962d775c646f3f9725cbc7a53df4",
														"pop_health": {
															"Amsterdam, NL": {
																"healthy": true,
																"origins": [
																	{
																		"2001:DB8::5": {
																			"healthy": true,
																			"rtt": "12.1ms",
																			"failure_reason": "No failures",
																			"response_code": 401
																		}
																	}
																]
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/load_balancers/pools/{identifier}/preview": {
			"post": {
				"summary": "Preview Pool",
				"description": "Preview pool health using provided monitor details. The returned preview_id can be used in the preview endpoint to retrieve the results.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Preview Pool response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1load_balancers~1monitors~1%7Bidentifier%7D~1preview/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"expected_codes"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP','HTTPS', 'TCP', 'ICMP-PING', 'UDP-ICMP', and 'SMTP'.",
										"enum": [
											"http",
											"https",
											"tcp",
											"udp_icmp",
											"icmp_ping",
											"smtp"
										],
										"example": "https",
										"default": "http"
									},
									"method": {
										"type": "string",
										"description": "The method to use for the health check. This defaults to 'GET' for HTTP/HTTPS based checks and 'connection_established' for TCP based health checks.",
										"example": "GET",
										"default": "GET"
									},
									"path": {
										"type": "string",
										"description": "The endpoint path to health check against. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "/health",
										"default": "/"
									},
									"header": {
										"type": "object",
										"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": {
											"Host": [
												"example.com"
											],
											"X-App-ID": [
												"abc123"
											]
										}
									},
									"port": {
										"type": "integer",
										"description": "Port number to connect to for the health check. Required for TCP, UDP, and SMTP checks. HTTP and HTTPS checks should only define the port when using a non-standard port (HTTP: default 80, HTTPS: default 443).",
										"default": 0
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"expected_body": {
										"type": "string",
										"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "alive"
									},
									"expected_codes": {
										"type": "string",
										"description": "The expected HTTP response codes or code ranges of the health check, comma-separated. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "2xx",
										"default": "200"
									},
									"follow_redirects": {
										"type": "boolean",
										"description": "Follow redirects if returned by the origin. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"allow_insecure": {
										"type": "boolean",
										"description": "Do not validate the certificate when monitor use HTTPS. This parameter is currently only valid for HTTP and HTTPS monitors.",
										"example": true,
										"default": false
									},
									"probe_zone": {
										"type": "string",
										"description": "Assign this monitor to emulate the specified zone while probing. This parameter is only valid for HTTP and HTTPS monitors.",
										"example": "example.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/load_balancers/pools/{identifier}/references": {
			"get": {
				"summary": "List Pool References",
				"description": "Get the list of resources that reference the provided pool",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1load_balancers~1pools/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Pool References response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"description": "List of resources that reference a given pool",
													"items": {
														"type": "object",
														"properties": {
															"resource_id": {
																"type": "string"
															},
															"resource_name": {
																"type": "string"
															},
															"resource_type": {
																"type": "string"
															},
															"reference_type": {
																"type": "string",
																"enum": [
																	"*",
																	"referral",
																	"referrer"
																]
															}
														}
													},
													"example": [
														{
															"resource_id": "699d98642c564d2e855e9661899b7252",
															"resource_name": "www.example.com",
															"resource_type": "load_balancer",
															"reference_type": "referrer"
														},
														{
															"resource_id": "f1aba936b94213e5b8dca0c0dbf1f9cc",
															"resource_name": "Login page monitor",
															"resource_type": "monitor",
															"reference_type": "referral"
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/load_balancers/search": {
			"get": {
				"summary": "Search Resources",
				"description": "Search for Load Balancing resources",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Search Resources response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"resources": {
															"type": "array",
															"description": "A list of resources matching the search query.",
															"items": {
																"type": "object",
																"description": "A reference to a load balancer resource.",
																"properties": {
																	"resource_id": {
																		"example": "17b5962d775c646f3f9725cbc7a53df4"
																	},
																	"resource_name": {
																		"type": "string",
																		"description": "The human-identifiable name of the resource.",
																		"example": "primary-dc-1"
																	},
																	"resource_type": {
																		"type": "string",
																		"description": "The type of the resource.",
																		"enum": [
																			"load_balancer",
																			"monitor",
																			"pool"
																		],
																		"example": "pool"
																	},
																	"reference_type": {
																		"type": "string",
																		"description": "When listed as a reference, the type (direction) of the reference.",
																		"enum": [
																			"referral",
																			"referrer"
																		]
																	},
																	"references": {
																		"type": "array",
																		"description": "A list of references to (referrer) or from (referral) this resource.",
																		"example": [
																			{
																				"resource_id": "699d98642c564d2e855e9661899b7252",
																				"resource_name": "www.example.com",
																				"resource_type": "load_balancer",
																				"reference_type": "referrer"
																			},
																			{
																				"resource_id": "f1aba936b94213e5b8dca0c0dbf1f9cc",
																				"resource_name": "Login page monitor",
																				"resource_type": "monitor",
																				"reference_type": "referral"
																			}
																		],
																		"items": {
																			"type": "object",
																			"description": "A reference to a load balancer resource."
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{identifier}/load_balancers": {
			"get": {
				"summary": "List Load Balancers",
				"description": "List configured load balancers",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Load Balancers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/get/parameters/0/schema"
															},
															"created_on": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"description": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/description"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/name"
															},
															"enabled": {
																"type": "boolean",
																"description": "Whether to enable (the default) this load balancer.",
																"example": true,
																"default": true
															},
															"ttl": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/ttl"
															},
															"fallback_pool": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/fallback_pool"
															},
															"default_pools": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/default_pools"
															},
															"region_pools": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/region_pools"
															},
															"country_pools": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/country_pools"
															},
															"pop_pools": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/pop_pools"
															},
															"proxied": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/proxied"
															},
															"steering_policy": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/steering_policy"
															},
															"session_affinity": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/session_affinity"
															},
															"session_affinity_attributes": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/session_affinity_attributes"
															},
															"session_affinity_ttl": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/session_affinity_ttl"
															},
															"random_steering": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/random_steering"
															},
															"rules": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/rules"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Load Balancer",
				"description": "Create a new load balancer",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Load Balancer response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"default_pools",
									"fallback_pool"
								],
								"properties": {
									"description": {
										"type": "string",
										"description": "Object description",
										"example": "Load Balancer for www.example.com"
									},
									"name": {
										"type": "string",
										"description": "The DNS hostname to associate with your Load Balancer. If this hostname already exists as a DNS record in Cloudflare's DNS, the Load Balancer will take precedence and the DNS record will not be used.",
										"example": "www.example.com"
									},
									"ttl": {
										"type": "number",
										"description": "Time to live (TTL) of the DNS entry for the IP address returned by this load balancer. This only applies to gray-clouded (unproxied) load balancers.",
										"example": 30
									},
									"fallback_pool": {
										"description": "The pool ID to use when all other pools are detected as unhealthy."
									},
									"default_pools": {
										"type": "array",
										"items": {
											"type": "string",
											"description": "A pool ID"
										},
										"description": "A list of pool IDs ordered by their failover priority. Pools defined here are used by default, or when region_pools are not configured for a given region.",
										"example": [
											"17b5962d775c646f3f9725cbc7a53df4",
											"9290f38c5d07c2e2f4df57b1f61d4196",
											"00920f38ce07c2e2f4df50b1f61d4194"
										]
									},
									"region_pools": {
										"type": "object",
										"description": "A mapping of region codes to a list of pool IDs (ordered by their failover priority) for the given region. Any regions not explicitly defined will fall back to using default_pools.",
										"example": {
											"WNAM": [
												"de90f38ced07c2e2f4df50b1f61d4194",
												"9290f38c5d07c2e2f4df57b1f61d4196"
											],
											"ENAM": [
												"00920f38ce07c2e2f4df50b1f61d4194"
											]
										}
									},
									"country_pools": {
										"type": "object",
										"description": "A mapping of country codes to a list of pool IDs (ordered by their failover priority) for the given country. Any country not explicitly defined will fall back to using the corresponding region_pool mapping if it exists else to default_pools.",
										"example": {
											"US": [
												"de90f38ced07c2e2f4df50b1f61d4194",
												"00920f38ce07c2e2f4df50b1f61d4194"
											],
											"GB": [
												"abd90f38ced07c2e2f4df50b1f61d4194"
											]
										}
									},
									"pop_pools": {
										"type": "object",
										"description": "(Enterprise only): A mapping of Cloudflare PoP identifiers to a list of pool IDs (ordered by their failover priority) for the PoP (datacenter). Any PoPs not explicitly defined will fall back to using the corresponding country_pool, then region_pool mapping if it exists else to default_pools.",
										"example": {
											"LAX": [
												"de90f38ced07c2e2f4df50b1f61d4194",
												"9290f38c5d07c2e2f4df57b1f61d4196"
											],
											"LHR": [
												"abd90f38ced07c2e2f4df50b1f61d4194",
												"f9138c5d07c2e2f4df57b1f61d4196"
											],
											"SJC": [
												"00920f38ce07c2e2f4df50b1f61d4194"
											]
										}
									},
									"proxied": {
										"type": "boolean",
										"description": "Whether the hostname should be gray clouded (false) or orange clouded (true).",
										"example": true,
										"default": false
									},
									"steering_policy": {
										"type": "string",
										"description": "Steering Policy for this load balancer. \"off\": use default_pools, \"geo\": use region_pools/country_pools/pop_pools, \"random\": select a pool randomly, \"dynamic_latency\": use round trip time to select the closest pool in default_pools (requires pool health checks), \n\"proximity\": use the pools latitude and longitude to select the closest pool using the cloudflare pop location for proxied requests or geoip / edns0-client-subnet for non-proxied, \"\": will map to \"geo\" if you use region_pools/country_pools/pop_pools otherwise \"off\"",
										"enum": [
											false,
											"geo",
											"random",
											"dynamic_latency",
											"proximity",
											"\"\""
										],
										"example": "dynamic_latency",
										"default": "\"\""
									},
									"session_affinity": {
										"type": "string",
										"description": "The session_affinity specifies the type of session affinity the loadbalancer should use unless specified as \"none\" or \"\"(default). The supported types are \"cookie\" and \"ip_cookie\". \"cookie\" - On the first request to a proxied load balancer, a cookie is generated, encoding information of which origin the request will be forwarded to. Subsequent requests, by the same client to the same load balancer, will be sent to the origin server the cookie encodes, for the duration of the cookie and as long as the origin server remains healthy. If the cookie has expired or the origin server is unhealthy then a new origin server is calculated and used. \"ip_cookie\" behaves the same as \"cookie\" except the initial origin selection is stable and based on the client’s ip address.",
										"enum": [
											"none",
											"cookie",
											"ip_cookie",
											"\"\""
										],
										"example": "cookie",
										"default": "\"\""
									},
									"session_affinity_attributes": {
										"type": "object",
										"description": "Configure cookie attributes for session affinity cookie.",
										"properties": {
											"samesite": {
												"type": "string",
												"description": "Configures the SameSite attribute on session affinity cookie. Value \"Auto\" will be translated to \"Lax\" or \"None\" depending if Always Use HTTPS is enabled. Note: when using value \"None\", the secure attribute can not be set to \"Never\".",
												"enum": [
													"Auto",
													"Lax",
													"None",
													"Strict"
												],
												"example": "Auto",
												"default": "Auto"
											},
											"secure": {
												"type": "string",
												"description": "Configures the Secure attribute on session affinity cookie. Value \"Always\" indicates the Secure attribute will be set in the Set-Cookie header, \"Never\" indicates the Secure attribute will not be set, and \"Auto\" will set the Secure attribute depending if Always Use HTTPS is enabled.",
												"enum": [
													"Auto",
													"Always",
													"Never"
												],
												"example": "Auto",
												"default": "Auto"
											},
											"drain_duration": {
												"type": "number",
												"description": "Configures the drain duration in seconds. This field is only used when session affinity is enabled on the load balancer.",
												"example": 100
											},
											"zero_downtime_failover": {
												"type": "string",
												"description": "Configures the zero downtime failover between origins within a pool when session affinity is enabled. Value \"none\" means no failover takes place for sessions pinned to the origin (default). Value \"temporary\" means traffic will be sent to another other healthy origin until the originally pinned origin is available; note that this can potentially result in heavy origin flapping. Value \"sticky\" means the session affinity cookie is updated and subsequent requests are sent to the new origin. This feature is currently incompatible with Argo, Tiered Cache, and Bandwidth Alliance.",
												"enum": [
													"none",
													"temporary",
													"sticky"
												],
												"example": "sticky",
												"default": "none"
											}
										}
									},
									"session_affinity_ttl": {
										"type": "number",
										"description": "Time, in seconds, until this load balancers session affinity cookie expires after being created. This parameter is ignored unless a supported session affinity policy is set. The current default of 23 hours will be used unless session_affinity_ttl is explicitly set. The accepted range of values is between [1800, 604800]. Once the expiry time has been reached, subsequent requests may get sent to a different origin server.",
										"example": 5000
									},
									"random_steering": {
										"type": "object",
										"description": "Configure pool weights for random steering. When steering_policy is 'random', a random pool is selected with probability proportional to these pool weights.",
										"properties": {
											"pool_weights": {
												"type": "object",
												"description": "A mapping of pool IDs to custom weights. The weight is relative to other pools in the load balancer.",
												"example": {
													"de90f38ced07c2e2f4df50b1f61d4194": 0.3,
													"9290f38c5d07c2e2f4df57b1f61d4196": 0.5
												}
											},
											"default_weight": {
												"type": "number",
												"minimum": 0,
												"maximum": 1,
												"description": "The default weight for pools in the load balancer that are not specified in the pool_weights map.",
												"example": 0.2,
												"default": 1,
												"multipleOf": 0.1
											}
										}
									},
									"rules": {
										"type": "array",
										"description": "BETA Field Not General Access: A list of rules for this load balancer to execute.",
										"items": {
											"description": "A rule object containing conditions and overrides for this load balancer to evaluate.",
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"name": {
													"type": "string",
													"maxLength": 200,
													"description": "Name of this rule. Only used for human readability.",
													"example": "route the path /testing to testing datacenter."
												},
												"condition": {
													"type": "string",
													"description": "The condition expressions to evaluate. If the condition evaluates to true the overrides or fixed_response in this rule will be applied. An empty condition is always true. For more details on condition expressions please see https://developers.cloudflare.com/load-balancing/understand-basics/load-balancing-rules/expressions",
													"example": "http.request.uri.path contains \"/testing\""
												},
												"overrides": {
													"type": "object",
													"description": "A collection of overrides to apply to the load balancer when this rule's condition is true. All fields are optional.",
													"properties": {
														"session_affinity": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/session_affinity"
														},
														"session_affinity_ttl": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/session_affinity_ttl"
														},
														"session_affinity_attributes": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/session_affinity_attributes"
														},
														"ttl": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/ttl"
														},
														"steering_policy": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/steering_policy"
														},
														"fallback_pool": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/fallback_pool"
														},
														"default_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/default_pools"
														},
														"pop_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/pop_pools"
														},
														"region_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/region_pools"
														},
														"country_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/country_pools"
														},
														"random_steering": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1load_balancers/post/requestBody/content/application~1json/schema/properties/random_steering"
														}
													}
												},
												"priority": {
													"type": "integer",
													"description": "The order in which rules should be executed in relation to each other. Lower values are executed first. Values do not need to be sequential. If no value is provided for any rule the array order of the rules field will be used to assign a priority.",
													"default": 0
												},
												"disabled": {
													"type": "boolean",
													"description": "Disable this specific rule. It will no longer be evaluated by this load balancer.",
													"default": false
												},
												"terminates": {
													"type": "boolean",
													"description": "If this rule's condition is true, terminates causes rule evaluation to stop after processing this rule.",
													"default": false
												},
												"fixed_response": {
													"type": "object",
													"description": "A collection of fields used to directly respond to the eyeball instead of routing to a pool. If a fixed_response is supplied the rule will be marked as terminates.",
													"properties": {
														"message_body": {
															"type": "string",
															"description": "Text to include as the http body.",
															"maxLength": 1024,
															"example": "Testing Hello"
														},
														"status_code": {
															"type": "integer",
															"description": "The http status code to respond with."
														},
														"content_type": {
															"type": "string",
															"description": "The http 'Content-Type' header to include in the response.",
															"maxLength": 32,
															"example": "application/json"
														},
														"location": {
															"type": "string",
															"description": "The http 'Location' header to include in the response.",
															"maxLength": 2048,
															"example": "www.example.com"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier1}/load_balancers/{identifier}": {
			"get": {
				"summary": "Load Balancer Details",
				"description": "Fetch a single configured load balancer",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "identifier1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Load Balancer Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"description": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"enabled": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/enabled"
														},
														"ttl": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/ttl"
														},
														"fallback_pool": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/fallback_pool"
														},
														"default_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/default_pools"
														},
														"region_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/region_pools"
														},
														"country_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/country_pools"
														},
														"pop_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/pop_pools"
														},
														"proxied": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/proxied"
														},
														"steering_policy": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/steering_policy"
														},
														"session_affinity": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity"
														},
														"session_affinity_attributes": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity_attributes"
														},
														"session_affinity_ttl": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity_ttl"
														},
														"random_steering": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/random_steering"
														},
														"rules": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/rules"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Load Balancer",
				"description": "Update a configured load balancer",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Load Balancer response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"default_pools",
									"fallback_pool"
								],
								"properties": {
									"description": {
										"type": "string",
										"description": "Object description",
										"example": "Load Balancer for www.example.com"
									},
									"name": {
										"type": "string",
										"description": "The DNS hostname to associate with your Load Balancer. If this hostname already exists as a DNS record in Cloudflare's DNS, the Load Balancer will take precedence and the DNS record will not be used.",
										"example": "www.example.com"
									},
									"ttl": {
										"type": "number",
										"description": "Time to live (TTL) of the DNS entry for the IP address returned by this load balancer. This only applies to gray-clouded (unproxied) load balancers.",
										"example": 30
									},
									"fallback_pool": {
										"description": "The pool ID to use when all other pools are detected as unhealthy."
									},
									"default_pools": {
										"type": "array",
										"items": {
											"type": "string",
											"description": "A pool ID"
										},
										"description": "A list of pool IDs ordered by their failover priority. Pools defined here are used by default, or when region_pools are not configured for a given region.",
										"example": [
											"17b5962d775c646f3f9725cbc7a53df4",
											"9290f38c5d07c2e2f4df57b1f61d4196",
											"00920f38ce07c2e2f4df50b1f61d4194"
										]
									},
									"region_pools": {
										"type": "object",
										"description": "A mapping of region codes to a list of pool IDs (ordered by their failover priority) for the given region. Any regions not explicitly defined will fall back to using default_pools.",
										"example": {
											"WNAM": [
												"de90f38ced07c2e2f4df50b1f61d4194",
												"9290f38c5d07c2e2f4df57b1f61d4196"
											],
											"ENAM": [
												"00920f38ce07c2e2f4df50b1f61d4194"
											]
										}
									},
									"country_pools": {
										"type": "object",
										"description": "A mapping of country codes to a list of pool IDs (ordered by their failover priority) for the given country. Any country not explicitly defined will fall back to using the corresponding region_pool mapping if it exists else to default_pools.",
										"example": {
											"US": [
												"de90f38ced07c2e2f4df50b1f61d4194",
												"00920f38ce07c2e2f4df50b1f61d4194"
											],
											"GB": [
												"abd90f38ced07c2e2f4df50b1f61d4194"
											]
										}
									},
									"pop_pools": {
										"type": "object",
										"description": "(Enterprise only): A mapping of Cloudflare PoP identifiers to a list of pool IDs (ordered by their failover priority) for the PoP (datacenter). Any PoPs not explicitly defined will fall back to using the corresponding country_pool, then region_pool mapping if it exists else to default_pools.",
										"example": {
											"LAX": [
												"de90f38ced07c2e2f4df50b1f61d4194",
												"9290f38c5d07c2e2f4df57b1f61d4196"
											],
											"LHR": [
												"abd90f38ced07c2e2f4df50b1f61d4194",
												"f9138c5d07c2e2f4df57b1f61d4196"
											],
											"SJC": [
												"00920f38ce07c2e2f4df50b1f61d4194"
											]
										}
									},
									"proxied": {
										"type": "boolean",
										"description": "Whether the hostname should be gray clouded (false) or orange clouded (true).",
										"example": true,
										"default": false
									},
									"enabled": {
										"type": "boolean",
										"description": "Whether to enable (the default) this load balancer.",
										"example": true,
										"default": true
									},
									"steering_policy": {
										"type": "string",
										"description": "Steering Policy for this load balancer. \"off\": use default_pools, \"geo\": use region_pools/country_pools/pop_pools, \"random\": select a pool randomly, \"dynamic_latency\": use round trip time to select the closest pool in default_pools (requires pool health checks), \n\"proximity\": use the pools latitude and longitude to select the closest pool using the cloudflare pop location for proxied requests or geoip / edns0-client-subnet for non-proxied, \"\": will map to \"geo\" if you use region_pools/country_pools/pop_pools otherwise \"off\"",
										"enum": [
											false,
											"geo",
											"random",
											"dynamic_latency",
											"proximity",
											"\"\""
										],
										"example": "dynamic_latency",
										"default": "\"\""
									},
									"session_affinity": {
										"type": "string",
										"description": "The session_affinity specifies the type of session affinity the loadbalancer should use unless specified as \"none\" or \"\"(default). The supported types are \"cookie\" and \"ip_cookie\". \"cookie\" - On the first request to a proxied load balancer, a cookie is generated, encoding information of which origin the request will be forwarded to. Subsequent requests, by the same client to the same load balancer, will be sent to the origin server the cookie encodes, for the duration of the cookie and as long as the origin server remains healthy. If the cookie has expired or the origin server is unhealthy then a new origin server is calculated and used. \"ip_cookie\" behaves the same as \"cookie\" except the initial origin selection is stable and based on the client’s ip address.",
										"enum": [
											"none",
											"cookie",
											"ip_cookie",
											"\"\""
										],
										"example": "cookie",
										"default": "\"\""
									},
									"session_affinity_attributes": {
										"type": "object",
										"description": "Configure cookie attributes for session affinity cookie.",
										"properties": {
											"samesite": {
												"type": "string",
												"description": "Configures the SameSite attribute on session affinity cookie. Value \"Auto\" will be translated to \"Lax\" or \"None\" depending if Always Use HTTPS is enabled. Note: when using value \"None\", the secure attribute can not be set to \"Never\".",
												"enum": [
													"Auto",
													"Lax",
													"None",
													"Strict"
												],
												"example": "Auto",
												"default": "Auto"
											},
											"secure": {
												"type": "string",
												"description": "Configures the Secure attribute on session affinity cookie. Value \"Always\" indicates the Secure attribute will be set in the Set-Cookie header, \"Never\" indicates the Secure attribute will not be set, and \"Auto\" will set the Secure attribute depending if Always Use HTTPS is enabled.",
												"enum": [
													"Auto",
													"Always",
													"Never"
												],
												"example": "Auto",
												"default": "Auto"
											},
											"drain_duration": {
												"type": "number",
												"description": "Configures the drain duration in seconds. This field is only used when session affinity is enabled on the load balancer.",
												"example": 100
											},
											"zero_downtime_failover": {
												"type": "string",
												"description": "Configures the zero downtime failover between origins within a pool when session affinity is enabled. Value \"none\" means no failover takes place for sessions pinned to the origin (default). Value \"temporary\" means traffic will be sent to another other healthy origin until the originally pinned origin is available; note that this can potentially result in heavy origin flapping. Value \"sticky\" means the session affinity cookie is updated and subsequent requests are sent to the new origin. This feature is currently incompatible with Argo, Tiered Cache, and Bandwidth Alliance.",
												"enum": [
													"none",
													"temporary",
													"sticky"
												],
												"example": "sticky",
												"default": "none"
											}
										}
									},
									"session_affinity_ttl": {
										"type": "number",
										"description": "Time, in seconds, until this load balancers session affinity cookie expires after being created. This parameter is ignored unless a supported session affinity policy is set. The current default of 23 hours will be used unless session_affinity_ttl is explicitly set. The accepted range of values is between [1800, 604800]. Once the expiry time has been reached, subsequent requests may get sent to a different origin server.",
										"example": 5000
									},
									"random_steering": {
										"type": "object",
										"description": "Configure pool weights for random steering. When steering_policy is 'random', a random pool is selected with probability proportional to these pool weights.",
										"properties": {
											"pool_weights": {
												"type": "object",
												"description": "A mapping of pool IDs to custom weights. The weight is relative to other pools in the load balancer.",
												"example": {
													"de90f38ced07c2e2f4df50b1f61d4194": 0.3,
													"9290f38c5d07c2e2f4df57b1f61d4196": 0.5
												}
											},
											"default_weight": {
												"type": "number",
												"minimum": 0,
												"maximum": 1,
												"description": "The default weight for pools in the load balancer that are not specified in the pool_weights map.",
												"example": 0.2,
												"default": 1,
												"multipleOf": 0.1
											}
										}
									},
									"rules": {
										"type": "array",
										"description": "BETA Field Not General Access: A list of rules for this load balancer to execute.",
										"items": {
											"description": "A rule object containing conditions and overrides for this load balancer to evaluate.",
											"type": "object",
											"additionalProperties": false,
											"properties": {
												"name": {
													"type": "string",
													"maxLength": 200,
													"description": "Name of this rule. Only used for human readability.",
													"example": "route the path /testing to testing datacenter."
												},
												"condition": {
													"type": "string",
													"description": "The condition expressions to evaluate. If the condition evaluates to true the overrides or fixed_response in this rule will be applied. An empty condition is always true. For more details on condition expressions please see https://developers.cloudflare.com/load-balancing/understand-basics/load-balancing-rules/expressions",
													"example": "http.request.uri.path contains \"/testing\""
												},
												"overrides": {
													"type": "object",
													"description": "A collection of overrides to apply to the load balancer when this rule's condition is true. All fields are optional.",
													"properties": {
														"session_affinity": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity"
														},
														"session_affinity_ttl": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity_ttl"
														},
														"session_affinity_attributes": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity_attributes"
														},
														"ttl": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/ttl"
														},
														"steering_policy": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/steering_policy"
														},
														"fallback_pool": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/fallback_pool"
														},
														"default_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/default_pools"
														},
														"pop_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/pop_pools"
														},
														"region_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/region_pools"
														},
														"country_pools": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/country_pools"
														},
														"random_steering": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/random_steering"
														}
													}
												},
												"priority": {
													"type": "integer",
													"description": "The order in which rules should be executed in relation to each other. Lower values are executed first. Values do not need to be sequential. If no value is provided for any rule the array order of the rules field will be used to assign a priority.",
													"default": 0
												},
												"disabled": {
													"type": "boolean",
													"description": "Disable this specific rule. It will no longer be evaluated by this load balancer.",
													"default": false
												},
												"terminates": {
													"type": "boolean",
													"description": "If this rule's condition is true, terminates causes rule evaluation to stop after processing this rule.",
													"default": false
												},
												"fixed_response": {
													"type": "object",
													"description": "A collection of fields used to directly respond to the eyeball instead of routing to a pool. If a fixed_response is supplied the rule will be marked as terminates.",
													"properties": {
														"message_body": {
															"type": "string",
															"description": "Text to include as the http body.",
															"maxLength": 1024,
															"example": "Testing Hello"
														},
														"status_code": {
															"type": "integer",
															"description": "The http status code to respond with."
														},
														"content_type": {
															"type": "string",
															"description": "The http 'Content-Type' header to include in the response.",
															"maxLength": 32,
															"example": "application/json"
														},
														"location": {
															"type": "string",
															"description": "The http 'Location' header to include in the response.",
															"maxLength": 2048,
															"example": "www.example.com"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch Load Balancer",
				"description": "Apply changes to an existing load balancer, overwriting the supplied properties.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch Load Balancer response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"description": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
									},
									"name": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/name"
									},
									"ttl": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/ttl"
									},
									"fallback_pool": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/fallback_pool"
									},
									"default_pools": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/default_pools"
									},
									"region_pools": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/region_pools"
									},
									"country_pools": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/country_pools"
									},
									"pop_pools": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/pop_pools"
									},
									"proxied": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/proxied"
									},
									"enabled": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/enabled"
									},
									"steering_policy": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/steering_policy"
									},
									"session_affinity": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity"
									},
									"session_affinity_attributes": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity_attributes"
									},
									"session_affinity_ttl": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/session_affinity_ttl"
									},
									"random_steering": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/random_steering"
									},
									"rules": {
										"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/rules"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Load Balancer",
				"description": "Delete a configured load balancer",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Load Balancer response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier1%7D~1load_balancers~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/addressing/prefixes": {
			"get": {
				"summary": "List Prefixes",
				"description": "List all prefixes owned by the account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Prefixes response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"cidr": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes/post/requestBody/content/application~1json/schema/properties/cidr"
															},
															"account_id": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes/get/parameters/0/schema"
															},
															"description": {
																"type": "string",
																"description": "Description of the prefix",
																"maxLength": 1000,
																"example": "Internal test prefix"
															},
															"approved": {
																"type": "string",
																"description": "Approval state of the prefix (P = pending, V = active)",
																"example": "P"
															},
															"loa_document_id": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes/post/requestBody/content/application~1json/schema/properties/loa_document_id"
															},
															"on_demand_enabled": {
																"type": "boolean",
																"description": "Whether advertisement of the prefix to the Internet may be dynamically enabled or disabled",
																"example": true
															},
															"on_demand_locked": {
																"type": "boolean",
																"description": "Whether advertisement status of the prefix is locked, meaning it cannot be changed",
																"example": false
															},
															"advertised": {
																"type": "boolean",
																"description": "Prefix advertisement status to the Internet. This field is only not 'null' if on demand is enabled",
																"example": true,
																"default": null,
																"nullable": true
															},
															"advertised_modified_at": {
																"type": "string",
																"description": "Last time the advertisement status was changed. This field is only not 'null' if on demand is enabled",
																"format": "date-time",
																"example": "2014-01-01T05:20:00.123450+00:00",
																"nullable": true
															},
															"asn": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes/post/requestBody/content/application~1json/schema/properties/asn"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Add Prefix",
				"description": "Add a prefix under the account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add Prefix response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"cidr",
									"loa_document_id"
								],
								"properties": {
									"cidr": {
										"type": "string",
										"description": "IP Prefix in Classless Inter-Domain Routing format",
										"example": "192.0.2.0/24"
									},
									"loa_document_id": {
										"description": "Identifier for the uploaded LOA document",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "d933b1530bc56c9953cf8ce166da8004",
										"nullable": true
									},
									"asn": {
										"type": "integer",
										"description": "Autonomous System Number (ASN) the prefix will be advertised under",
										"nullable": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/addressing/prefixes/{prefix_identifier}": {
			"get": {
				"summary": "Prefix Details",
				"description": "List a particular prefix owned by the account.",
				"parameters": [
					{
						"name": "prefix_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Prefix Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D/get/parameters/0/schema"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"cidr": {
															"type": "string",
															"description": "IP Prefix in Classless Inter-Domain Routing format",
															"example": "192.0.2.0/24"
														},
														"account_id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D/get/parameters/1/schema"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D/patch/requestBody/content/application~1json/schema/properties/description"
														},
														"approved": {
															"type": "string",
															"description": "Approval state of the prefix (P = pending, V = active)",
															"example": "P"
														},
														"loa_document_id": {
															"description": "Identifier for the uploaded LOA document",
															"type": "string",
															"maxLength": 32,
															"readOnly": true,
															"example": "d933b1530bc56c9953cf8ce166da8004",
															"nullable": true
														},
														"on_demand_enabled": {
															"type": "boolean",
															"description": "Whether advertisement of the prefix to the Internet may be dynamically enabled or disabled",
															"example": true
														},
														"on_demand_locked": {
															"type": "boolean",
															"description": "Whether advertisement status of the prefix is locked, meaning it cannot be changed",
															"example": false
														},
														"advertised": {
															"type": "boolean",
															"description": "Prefix advertisement status to the Internet. This field is only not 'null' if on demand is enabled",
															"example": true,
															"default": null,
															"nullable": true
														},
														"advertised_modified_at": {
															"type": "string",
															"description": "Last time the advertisement status was changed. This field is only not 'null' if on demand is enabled",
															"format": "date-time",
															"example": "2014-01-01T05:20:00.123450+00:00",
															"nullable": true
														},
														"asn": {
															"type": "integer",
															"description": "Autonomous System Number (ASN) the prefix will be advertised under",
															"nullable": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete Prefix",
				"description": "Delete an unapproved prefix owned by the account.",
				"parameters": [
					{
						"name": "prefix_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Prefix response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"patch": {
				"summary": "Update Prefix Description",
				"description": "Modify the description for a prefix owned by the account.",
				"parameters": [
					{
						"name": "prefix_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Prefix Description response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"description"
								],
								"properties": {
									"description": {
										"type": "string",
										"description": "Description of the prefix",
										"maxLength": 1000,
										"example": "Internal test prefix"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/addressing/loa_documents": {
			"post": {
				"summary": "Upload LOA Document",
				"description": "Submit LOA document (pdf format) under the account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Upload LOA Document response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"filename": {
															"type": "string",
															"description": "Name of LOA document",
															"example": "document.pdf"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"required": [
									"loa_document"
								],
								"properties": {
									"loa_document": {
										"type": "string",
										"description": "LOA document to upload",
										"example": "@document.pdf"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/addressing/loa_documents/{loa_document_identifier}/download": {
			"get": {
				"summary": "Download LOA Document",
				"description": "Download specified LOA document under the account.",
				"parameters": [
					{
						"name": "loa_document_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Identifier for the uploaded LOA document",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "d933b1530bc56c9953cf8ce166da8004",
							"nullable": true
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Download LOA Document response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/addressing/prefixes/{prefix_identifier}/bgp/status": {
			"get": {
				"summary": "Get Advertisement Status",
				"description": "List the current advertisement state for a prefix.",
				"parameters": [
					{
						"name": "prefix_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Advertisement Status response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"advertised": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1bgp~1status/patch/requestBody/content/application~1json/schema/properties/advertised"
														},
														"advertised_modified_at": {
															"type": "string",
															"description": "Last time the advertisement status was changed. This field is only not 'null' if on demand is enabled.",
															"format": "date-time",
															"example": "2014-01-01T05:20:00.123450+00:00",
															"nullable": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"patch": {
				"summary": "Update Prefix Dynamic Advertisement Status",
				"description": "Advertise or withdraw BGP route for a prefix.",
				"parameters": [
					{
						"name": "prefix_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1bgp~1status/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1bgp~1status/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Prefix Dynamic Advertisement Status response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1bgp~1status/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"advertised"
								],
								"properties": {
									"advertised": {
										"type": "boolean",
										"description": "Enablement of prefix advertisement to the Internet.",
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/addressing/prefixes/{prefix_identifier}/delegations": {
			"get": {
				"summary": "List Prefix Delegations",
				"description": "List all delegations for a given account IP prefix.",
				"parameters": [
					{
						"name": "prefix_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Prefix Delegations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "Delegation identifier tag",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "d933b1530bc56c9953cf8ce166da8004"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"cidr": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1delegations/post/requestBody/content/application~1json/schema/properties/cidr"
															},
															"delegated_account_id": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1delegations/post/requestBody/content/application~1json/schema/properties/delegated_account_id"
															},
															"parent_prefix_id": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1delegations/get/parameters/0/schema"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Prefix Delegation",
				"description": "Create a new account delegation for a given IP prefix.",
				"parameters": [
					{
						"name": "prefix_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1delegations/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1delegations/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Prefix Delegation response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1delegations/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"cidr",
									"delegated_account_id"
								],
								"properties": {
									"cidr": {
										"type": "string",
										"description": "IP Prefix in Classless Inter-Domain Routing format",
										"example": "192.0.2.0/24"
									},
									"delegated_account_id": {
										"description": "Account identifier for the account to which prefix is being delegated",
										"type": "string",
										"maxLength": 32,
										"readOnly": true,
										"example": "b1946ac92492d2347c6235b4d2611184"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/addressing/prefixes/{prefix_identifier}/delegations/{delegation_identifier}": {
			"delete": {
				"summary": "Delete Prefix Delegation",
				"description": "Delete an account delegation for a given IP prefix.",
				"parameters": [
					{
						"name": "delegation_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Delegation identifier tag",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "d933b1530bc56c9953cf8ce166da8004"
						}
					},
					{
						"name": "prefix_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Prefix Delegation response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1addressing~1prefixes~1%7Bprefix_identifier%7D~1delegations~1%7Bdelegation_identifier%7D/delete/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/railguns": {
			"get": {
				"summary": "List Railguns",
				"description": "List, search, sort and filter your Railguns.",
				"parameters": [],
				"responses": {
					"200": {
						"description": "List Railguns response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "Railgun identifier tag.",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "e928d310693a83094309acf9ead50448"
															},
															"name": {
																"$ref": "#/paths/~1railguns/post/requestBody/content/application~1json/schema/properties/name"
															},
															"status": {
																"description": "Status of the Railgun.",
																"type": "string",
																"enum": [
																	"initializing",
																	"active"
																],
																"readOnly": true,
																"example": "active"
															},
															"enabled": {
																"description": "Flag to determine if the Railgun is accepting connections.",
																"type": "boolean",
																"default": false,
																"example": true
															},
															"zones_connected": {
																"description": "The number of zones using this Railgun.",
																"type": "number",
																"readOnly": true,
																"example": 2
															},
															"build": {
																"description": "The build identifier for the Railgun receiver.",
																"type": "string",
																"readOnly": true,
																"example": "b1234"
															},
															"version": {
																"description": "The version of the Railgun receiver.",
																"type": "string",
																"readOnly": true,
																"example": "2.1"
															},
															"revision": {
																"description": "The revision of the Railgun receiver.",
																"type": "string",
																"readOnly": true,
																"example": "123"
															},
															"activation_key": {
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "e4edc00281cb56ebac22c81be9bac8f3"
															},
															"activated_on": {
																"description": "When the Railgun was activated.",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-02T02:20:00+00:00"
															},
															"created_on": {
																"description": "When the Railgun was created.",
																"readOnly": true,
																"type": "string",
																"format": "date-time",
																"example": "2014-01-01T05:20:00+00:00"
															},
															"modified_on": {
																"description": "When the Railgun was last modified.",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00+00:00"
															},
															"upgrade_info": {
																"description": "Defined when the Railgun version is out of date from the latest release from Cloudflare.",
																"type": "object",
																"properties": {
																	"latest_version": {
																		"description": "Latest version of the Railgun receiver available to install.",
																		"type": "string",
																		"example": "1.0.0"
																	},
																	"download_link": {
																		"description": "An HTTP link to download the latest Railgun binary.",
																		"type": "string",
																		"example": "https://www.cloudflare.com/downloads/railgun"
																	}
																}
															}
														},
														"required": [
															"id",
															"name",
															"status",
															"enabled",
															"zones_connected",
															"build",
															"version",
															"revision",
															"activation_key",
															"activated_on",
															"created_on",
															"modified_on"
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Railgun",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Create Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"description": "Readable identifier of the Railgun.",
										"type": "string",
										"maxLength": 160,
										"example": "My Railgun."
									}
								}
							}
						}
					}
				}
			}
		},
		"/railguns/{identifier}": {
			"get": {
				"summary": "Railgun details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Railgun identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "e928d310693a83094309acf9ead50448"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Railgun details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Enable or disable a Railgun",
				"description": "Enable or disable a Railgun for all zones connected to it.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Enable or disable a Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1railguns~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"enabled"
								],
								"properties": {
									"enabled": {
										"description": "Flag to determine if the Railgun is accepting connections.",
										"type": "boolean",
										"default": false,
										"example": true
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a Railgun",
				"description": "Disable and delete a Railgun. This will immediately disable that Railgun for any connected zones.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1railguns~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/railguns/{identifier}/zones": {
			"get": {
				"summary": "List Railgun zones",
				"description": "List the zones that are currently using this Railgun.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Railgun identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "e928d310693a83094309acf9ead50448"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Railgun zones response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"name",
															"development_mode",
															"owner",
															"account",
															"meta",
															"original_name_servers",
															"original_registrar",
															"original_dnshost",
															"created_on",
															"modified_on",
															"activated_on"
														],
														"properties": {
															"id": {
																"description": "Zone identifier tag",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "023e105f4ecef8ad9ca31a8372d0c353"
															},
															"name": {
																"description": "The domain name",
																"type": "string",
																"pattern": "^([a-zA-Z0-9][\\-a-zA-Z0-9]*\\.)+[\\-a-zA-Z0-9]{2,20}$",
																"maxLength": 253,
																"readOnly": true,
																"example": "example.com"
															},
															"development_mode": {
																"description": "The interval (in seconds) from when development mode expires (positive integer) or last expired (negative integer) for the domain. If development mode has never been enabled, this value is 0.",
																"type": "number",
																"readOnly": true,
																"example": 7200
															},
															"original_name_servers": {
																"description": "Original name servers before moving to Cloudflare\nNotes: Is this only available for full zones?",
																"type": "array",
																"items": {
																	"type": "string",
																	"format": "hostname"
																},
																"readOnly": true,
																"example": [
																	"ns1.originaldnshost.com",
																	"ns2.originaldnshost.com"
																],
																"nullable": true
															},
															"original_registrar": {
																"description": "Registrar for the domain at the time of switching to Cloudflare",
																"type": "string",
																"readOnly": true,
																"example": "GoDaddy",
																"nullable": true
															},
															"original_dnshost": {
																"description": "DNS host at the time of switching to Cloudflare",
																"type": "string",
																"maxLength": 50,
																"readOnly": true,
																"example": "NameCheap",
																"nullable": true
															},
															"created_on": {
																"description": "When the zone was created",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															},
															"modified_on": {
																"description": "When the zone was last modified",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															},
															"activated_on": {
																"description": "The last time proof of ownership was detected and the zone was made active",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-02T00:01:00.123450+00:00",
																"nullable": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/railguns": {
			"get": {
				"summary": "List available Railguns",
				"description": "A list of available Railguns the zone can use.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List available Railguns response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/railguns/{identifier}": {
			"get": {
				"summary": "Railgun details",
				"description": "Lists details about a specific Railgun.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Railgun connection identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "e928d310693a83094309acf9ead50448"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Railgun details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Connect or disconnect a Railgun",
				"description": "Connect or disconnect a Railgun.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Connect or disconnect a Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1railguns~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"connected"
								],
								"properties": {
									"connected": {
										"type": "boolean",
										"description": "A flag indicating whether the given zone is connected to the Railgun.",
										"default": false,
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/railguns/{identifier}/diagnose": {
			"get": {
				"summary": "Test Railgun connection",
				"description": "Tests the Railgun connection to the zone.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Railgun connection identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "e928d310693a83094309acf9ead50448"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1argo~1smart_routing/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Test Railgun connection response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"method": {
															"enum": [
																"GET",
																"POST"
															],
															"description": "HTTP Method used to test the connection.",
															"example": "GET"
														},
														"host_name": {
															"type": "string",
															"description": "The hostname queried.",
															"example": "www.example.com"
														},
														"http_status": {
															"type": "number",
															"description": "The HTTP status response code.",
															"example": 200
														},
														"railgun": {
															"type": "string",
															"description": "Indicates if Railgun is enabled on the queried hostname.",
															"example": true
														},
														"url": {
															"type": "string",
															"description": "Url of the domain you can compare the connection to.",
															"example": "https://www.cloudflare.com"
														},
														"response_status": {
															"type": "string",
															"description": "HTTP Status code.",
															"example": "200 OK"
														},
														"protocol": {
															"type": "string",
															"description": "Protocol used to test the connection.",
															"example": "HTTP/1.1"
														},
														"elapsed_time": {
															"type": "string",
															"description": "Amount of seconds that the test lasted.",
															"example": "0.239013s"
														},
														"body_size": {
															"type": "string",
															"description": "Size of the body in bytes.",
															"example": "63910 bytes"
														},
														"body_hash": {
															"type": "string",
															"description": "Hash version of body.",
															"example": "be27f2429421e12f200cab1da43ba301bdc70e1d"
														},
														"missing_headers": {
															"type": "string",
															"description": "What headers are missing.",
															"example": "No Content-Length or Transfer-Encoding."
														},
														"connection_close": {
															"type": "boolean",
															"description": "Connection closed or open.",
															"default": true,
															"example": false
														},
														"cloudflare": {
															"type": "string",
															"description": "Whether Cloudflare is enabled on the host.",
															"example": true
														},
														"cf-ray": {
															"type": "string",
															"description": "Lists any `cf-ray` present.",
															"example": "1ddd7570575207d9-LAX"
														},
														"cf-wan-error": {
															"type": "string",
															"description": "Lists any `cf-wan-error` present."
														},
														"cf-cache-status": {
															"type": "string",
															"description": "Lists any `cf-cache-status` present."
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#zone_settings:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_identifier}/railguns": {
			"get": {
				"summary": "List Railguns",
				"description": "List, search, sort and filter your Railguns.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Railguns response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "Railgun identifier tag.",
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "e928d310693a83094309acf9ead50448"
															},
															"name": {
																"description": "Readable identifier of the Railgun.",
																"type": "string",
																"maxLength": 160,
																"example": "My Railgun."
															},
															"status": {
																"description": "Status of the Railgun.",
																"type": "string",
																"enum": [
																	"initializing",
																	"active"
																],
																"readOnly": true,
																"example": "active"
															},
															"enabled": {
																"description": "Flag to determine if the Railgun is accepting connections.",
																"type": "boolean",
																"default": false,
																"example": true
															},
															"zones_connected": {
																"description": "The number of zones using this Railgun.",
																"type": "number",
																"readOnly": true,
																"example": 2
															},
															"build": {
																"description": "The build identifier for the Railgun receiver.",
																"type": "string",
																"readOnly": true,
																"example": "b1234"
															},
															"version": {
																"description": "The version of the Railgun receiver.",
																"type": "string",
																"readOnly": true,
																"example": "2.1"
															},
															"revision": {
																"description": "The revision of the Railgun receiver.",
																"type": "string",
																"readOnly": true,
																"example": "123"
															},
															"activation_key": {
																"type": "string",
																"maxLength": 32,
																"readOnly": true,
																"example": "e4edc00281cb56ebac22c81be9bac8f3"
															},
															"activated_on": {
																"description": "When the Railgun was activated.",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-02T02:20:00+00:00"
															},
															"created_on": {
																"description": "When the Railgun was created.",
																"readOnly": true,
																"type": "string",
																"format": "date-time",
																"example": "2014-01-01T05:20:00+00:00"
															},
															"modified_on": {
																"description": "When the Railgun was last modified.",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00+00:00"
															},
															"upgrade_info": {
																"description": "Defined when the Railgun version is out of date from the latest release from Cloudflare.",
																"type": "object",
																"properties": {
																	"latest_version": {
																		"description": "Latest version of the Railgun receiver available to install.",
																		"type": "string",
																		"example": "1.0.0"
																	},
																	"download_link": {
																		"description": "An HTTP link to download the latest Railgun binary.",
																		"type": "string",
																		"example": "https://www.cloudflare.com/downloads/railgun"
																	}
																}
															}
														},
														"required": [
															"id",
															"name",
															"status",
															"enabled",
															"zones_connected",
															"build",
															"version",
															"revision",
															"activation_key",
															"activated_on",
															"created_on",
															"modified_on"
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Railgun",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"description": "Readable identifier of the Railgun.",
										"type": "string",
										"maxLength": 160,
										"example": "My Railgun."
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/railguns/{identifier}": {
			"get": {
				"summary": "Railgun details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Railgun identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "e928d310693a83094309acf9ead50448"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Railgun details response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Railgun",
				"description": "Update a Railgun.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id",
									"name",
									"status",
									"enabled",
									"zones_connected",
									"activation"
								],
								"properties": {
									"id": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
									},
									"name": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns/post/requestBody/content/application~1json/schema/properties/name"
									},
									"status": {
										"description": "Status of the Railgun.",
										"type": "string",
										"enum": [
											"initializing",
											"active"
										],
										"readOnly": true,
										"example": "active"
									},
									"enabled": {
										"description": "Flag to determine if the Railgun is accepting connections.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"zones_connected": {
										"description": "The number of zones using this Railgun.",
										"type": "number",
										"readOnly": true,
										"example": 2
									},
									"created_on": {
										"description": "When the Railgun was created.",
										"readOnly": true,
										"type": "string",
										"format": "date-time",
										"example": "2014-01-01T05:20:00+00:00"
									},
									"modified_on": {
										"description": "When the Railgun was last modified.",
										"type": "string",
										"format": "date-time",
										"readOnly": true,
										"example": "2014-01-01T05:20:00+00:00"
									},
									"activation": {
										"type": "object",
										"readOnly": true,
										"required": [
											"key"
										],
										"properties": {
											"key": {
												"type": "string",
												"maxLength": 32,
												"readOnly": true,
												"example": "e4edc00281cb56ebac22c81be9bac8f3"
											},
											"activated_on": {
												"description": "When the Railgun was activated.",
												"type": "string",
												"format": "date-time",
												"readOnly": true,
												"example": "2014-01-02T02:20:00+00:00"
											},
											"version": {
												"type": "object",
												"required": [
													"number"
												],
												"properties": {
													"number": {
														"description": "The version of the Railgun receiver.",
														"type": "string",
														"readOnly": true,
														"example": "2.1"
													},
													"build": {
														"description": "The build identifier for the Railgun receiver.",
														"type": "string",
														"readOnly": true,
														"example": "b1234"
													},
													"revision": {
														"description": "The revision of the Railgun receiver.",
														"type": "string",
														"readOnly": true,
														"example": "123"
													}
												}
											}
										}
									},
									"upgrade_info": {
										"description": "Defined when the Railgun version is out of date from the latest release from Cloudflare.",
										"type": "object",
										"properties": {
											"latest_version": {
												"description": "Latest version of the Railgun receiver available to install.",
												"type": "string",
												"example": "1.0.0"
											},
											"download_link": {
												"description": "An HTTP link to download the latest Railgun binary.",
												"type": "string",
												"example": "https://www.cloudflare.com/downloads/railgun"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a Railgun",
				"description": "Disable and delete a Railgun. This will immediately disable the Railgun for any connected zones.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"type": "object"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"description": "Railgun identifier tag.",
															"type": "string",
															"maxLength": 32,
															"readOnly": true,
															"example": "e928d310693a83094309acf9ead50448"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/railguns/{railgun_identifier}/connections": {
			"get": {
				"summary": "List Connections",
				"description": "List connections associated with the Railgun.",
				"parameters": [
					{
						"name": "railgun_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Railgun identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "e928d310693a83094309acf9ead50448"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Connections response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"required": [
															"id",
															"zone",
															"enabled"
														],
														"properties": {
															"id": {
																"type": "string",
																"readOnly": true,
																"maxLength": 32,
																"description": "Connection identifier tag.",
																"example": "c4a7362d577a6c3019a474fd6f485821"
															},
															"zone": {
																"type": "object",
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections/post/requestBody/content/application~1json/schema/properties/zone/properties/id"
																	},
																	"name": {
																		"description": "The domain name",
																		"type": "string",
																		"pattern": "^([a-zA-Z0-9][\\-a-zA-Z0-9]*\\.)+[\\-a-zA-Z0-9]{2,20}$",
																		"maxLength": 253,
																		"readOnly": true,
																		"example": "example.com"
																	}
																}
															},
															"enabled": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections/post/requestBody/content/application~1json/schema/properties/enabled"
															},
															"created_on": {
																"type": "string",
																"readOnly": true,
																"format": "date-time",
																"example": "2017-06-14T00:00:00+00:00",
																"description": "When the connection was created."
															},
															"modified_on": {
																"type": "string",
																"readOnly": true,
																"format": "date-time",
																"example": "2017-06-14T05:20:00+00:00",
																"description": "When the connection was last modified."
															}
														},
														"x-cfLinkErrors": {}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create connection",
				"description": "Associates a zone to the Railgun.",
				"parameters": [
					{
						"name": "railgun_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create connection response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"zone"
								],
								"properties": {
									"zone": {
										"properties": {
											"id": {
												"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages/get/parameters/0/schema"
											}
										}
									},
									"enabled": {
										"type": "boolean",
										"description": "A value indicating whether the connection is enabled or not.",
										"default": false,
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/railguns/{railgun_identifier}/connections/{identifier}": {
			"get": {
				"summary": "Connection details",
				"description": "Get a connection by ID.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"readOnly": true,
							"maxLength": 32,
							"description": "Connection identifier tag.",
							"example": "c4a7362d577a6c3019a474fd6f485821"
						}
					},
					{
						"name": "railgun_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Connection details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update connection",
				"description": "Enable or disable a connection.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "railgun_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update connection response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"id",
									"zone",
									"enabled"
								],
								"properties": {
									"id": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/parameters/0/schema"
									},
									"zone": {
										"type": "object",
										"properties": {
											"id": {
												"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1custom_pages/get/parameters/0/schema"
											},
											"name": {
												"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/zone/properties/name"
											}
										}
									},
									"enabled": {
										"type": "boolean",
										"description": "A value indicating whether the connection is enabled or not.",
										"default": false,
										"example": true
									},
									"created_on": {
										"type": "string",
										"readOnly": true,
										"format": "date-time",
										"example": "2017-06-14T00:00:00+00:00",
										"description": "When the connection was created."
									},
									"modified_on": {
										"type": "string",
										"readOnly": true,
										"format": "date-time",
										"example": "2017-06-14T05:20:00+00:00",
										"description": "When the connection was last modified."
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete connection",
				"description": "Disable and remove the connection to a zone.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "railgun_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete connection response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Brailgun_identifier%7D~1connections~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/organizations/{organization_identifier}/railguns": {
			"get": {
				"summary": "List Railguns",
				"description": "List, search, sort and filter your Railguns.",
				"parameters": [
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Railguns response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Railgun",
				"parameters": [
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1railguns/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns/post/requestBody/content/application~1json/schema/properties/name"
									}
								}
							}
						}
					}
				}
			}
		},
		"/organizations/{organization_identifier}/railguns/{identifier}": {
			"get": {
				"summary": "Railgun details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Railgun identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "e928d310693a83094309acf9ead50448"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Railgun details response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Enable or disable a Railgun",
				"description": "Enable or disable a Railgun for all zones connected to it.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Enable or disable a Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1railguns~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"enabled"
								],
								"properties": {
									"enabled": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/enabled"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Railgun",
				"description": "Disable and delete a Railgun. This will immediately disable the Railgun for any connected zones.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1railguns~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Railgun response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1railguns~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/organizations/{organization_identifier}/railguns/{identifier}/zones": {
			"get": {
				"summary": "Get Railgun zones",
				"description": "Lists the zones that are currently using this Railgun.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Railgun identifier tag.",
							"type": "string",
							"maxLength": 32,
							"readOnly": true,
							"example": "e928d310693a83094309acf9ead50448"
						}
					},
					{
						"name": "organization_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1organizations~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Railgun zones response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1railguns~1%7Bidentifier%7D~1zones/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1organizations~1%7Borganization_identifier%7D~1invites/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/x-cfDeprecations"
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_identifier}/custom_pages": {
			"get": {
				"summary": "Get custom pages",
				"description": "Fetches all the custom pages at the account level.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get custom pages response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_identifier}/custom_pages/{identifier}": {
			"get": {
				"summary": "Get a custom page",
				"description": "Fetches the details of a custom page.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"enum": [
								"basic_challenge",
								"managed_challenge",
								"waf_block",
								"country_challenge",
								"ip_block",
								"under_attack",
								"ratelimit_block",
								"500_errors",
								"1000_errors"
							],
							"readOnly": true,
							"description": "The name of the custom page type.",
							"example": "basic_challenge"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a custom page response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a custom page",
				"description": "Updates the configuration of an existing custom page.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1custom_pages~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1custom_pages~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a custom page response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1custom_pages~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"url",
									"state"
								],
								"properties": {
									"url": {
										"type": "string",
										"format": "uri",
										"description": "The URL associated with the custom page.",
										"default": "",
										"example": "http://www.example.com"
									},
									"state": {
										"enum": [
											"default",
											"customized"
										],
										"description": "The custom page state.",
										"example": "default"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/organizations": {
			"get": {
				"summary": "Get your Zero Trust organization",
				"description": "Returns the configuration for your Zero Trust organization.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get your Zero Trust organization response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/name"
														},
														"auth_domain": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/auth_domain"
														},
														"login_design": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/login_design"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create your Zero Trust organization",
				"description": "Sets up a Zero Trust organization for your account.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create your Zero Trust organization response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"auth_domain"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of your Zero Trust organization.",
										"example": "Widget Corps Internal Applications"
									},
									"auth_domain": {
										"type": "string",
										"description": "The unique subdomain assigned to your Zero Trust organization.",
										"example": "test.cloudflareaccess.com"
									},
									"login_design": {
										"properties": {
											"background_color": {
												"type": "string",
												"description": "The background color on your login page.",
												"example": "#c5ed1b"
											},
											"text_color": {
												"type": "string",
												"description": "The text color on your login page.",
												"example": "#c5ed1b"
											},
											"logo_path": {
												"type": "string",
												"description": "The URL of the logo on your login page.",
												"example": "https://example.com/logo.png"
											},
											"header_text": {
												"type": "string",
												"description": "The text at the top of your login page.",
												"example": "This is an example description."
											},
											"footer_text": {
												"type": "string",
												"description": "The text at the bottom of your login page.",
												"example": "This is an example description."
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update your Zero Trust organization",
				"description": "Updates the configuration for your Zero Trust organization.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update your Zero Trust organization response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/name"
									},
									"auth_domain": {
										"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/auth_domain"
									},
									"login_design": {
										"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/login_design"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/organizations/revoke_user": {
			"post": {
				"summary": "Revoke all Access tokens for a user",
				"description": "Revokes a user's access across all applications.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Revoke all Access tokens for a user response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"enum": [
														true,
														false
													],
													"example": true
												},
												"result": {
													"type": "boolean",
													"enum": [
														true,
														false
													],
													"example": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"email"
								],
								"properties": {
									"email": {
										"type": "string",
										"description": "The email of the user to revoke.",
										"example": "test@example.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/identity_providers": {
			"get": {
				"summary": "List Access identity providers",
				"description": "Lists all configured identity providers.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access identity providers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"readOnly": true,
																"type": "string",
																"maxLength": 36,
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/post/requestBody/content/application~1json/schema/properties/name"
															},
															"type": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/post/requestBody/content/application~1json/schema/properties/type"
															},
															"config": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/post/requestBody/content/application~1json/schema/properties/config"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Add an Access identity provider",
				"description": "Adds a new identity provider to Access.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add an Access identity provider response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"config"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the identity provider, shown to users on the login page.",
										"example": "Widget Corps OTP"
									},
									"type": {
										"type": "string",
										"description": "The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).",
										"example": "onetimepin"
									},
									"config": {
										"type": "object",
										"description": "The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).",
										"properties": {}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/identity_providers/{uuid}": {
			"get": {
				"summary": "Get an Access identity provider",
				"description": "Fetches a configured identity provider.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier for the identity provider."
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an Access identity provider response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"type": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/type"
														},
														"config": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/config"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update an Access identity provider",
				"description": "Updates a configured identity provider.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an Access identity provider response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"config"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the identity provider, shown to users on the login page.",
										"example": "Widget Corps OTP"
									},
									"type": {
										"type": "string",
										"description": "The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).",
										"example": "onetimepin"
									},
									"config": {
										"type": "object",
										"description": "The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).",
										"properties": {}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an Access identity provider",
				"description": "Deletes an identity provider from Access.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an Access identity provider response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/groups": {
			"get": {
				"summary": "List Access groups",
				"description": "Lists all Access groups.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access groups response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "The unique identifier for the Access group."
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/name"
															},
															"include": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include"
															},
															"exclude": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/exclude"
															},
															"require": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/require"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create an Access group",
				"description": "Creates a new Access group.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create an Access group response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"include"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Access group.",
										"example": "Allow devs"
									},
									"include": {
										"type": "array",
										"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
										"items": {
											"type": "object",
											"oneOf": [
												{
													"title": "Access Email Rule",
													"description": "Match a specific email.",
													"type": "object",
													"required": [
														"email"
													],
													"properties": {
														"email": {
															"type": "object",
															"required": [
																"email"
															],
															"properties": {
																"email": {
																	"type": "string",
																	"format": "email",
																	"description": "The email of the user.",
																	"example": "test@example.com"
																}
															}
														}
													}
												},
												{
													"title": "Access Domain Rule",
													"description": "Match an entire email domain.",
													"type": "object",
													"required": [
														"email_domain"
													],
													"properties": {
														"email_domain": {
															"type": "object",
															"required": [
																"domain"
															],
															"properties": {
																"domain": {
																	"type": "string",
																	"description": "The email domain to match.",
																	"example": "example.com"
																}
															}
														}
													}
												},
												{
													"title": "Access Everyone Rule",
													"description": "Match everyone.",
													"type": "object",
													"required": [
														"everyone"
													],
													"properties": {
														"everyone": {
															"type": "object",
															"description": "The everyone rule uses an empty object for the configuration. This will allow any user to reach the path of the application without authentication.",
															"example": {}
														}
													}
												},
												{
													"title": "Access IP Rule",
													"description": "Match an IP address block.",
													"type": "object",
													"required": [
														"ip"
													],
													"properties": {
														"ip": {
															"type": "object",
															"required": [
																"ip"
															],
															"properties": {
																"ip": {
																	"type": "string",
																	"description": "An IPv4 or IPv6 CIDR block.",
																	"example": "2400:cb00:21:10a::/64"
																}
															}
														}
													}
												},
												{
													"title": "Access IP List Rule",
													"description": "Match an IP from a list.",
													"type": "object",
													"required": [
														"ip_list"
													],
													"properties": {
														"ip_list": {
															"type": "object",
															"required": [
																"id"
															],
															"properties": {
																"id": {
																	"type": "string",
																	"description": "The ID of a previously created IP List.",
																	"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
																}
															}
														}
													}
												},
												{
													"title": "Certificate Rule",
													"description": "Match any valid certificate.",
													"type": "object",
													"example": {
														"certificate": {}
													},
													"required": [
														"certificate"
													],
													"properties": {
														"certificate": {
															"type": "object",
															"properties": {},
															"example": {}
														}
													}
												},
												{
													"title": "Access Group Rule",
													"description": "Match an Access Group",
													"type": "object",
													"required": [
														"group"
													],
													"properties": {
														"group": {
															"type": "object",
															"required": [
																"id"
															],
															"properties": {
																"id": {
																	"type": "string",
																	"description": "The ID of a previously created Access Group.",
																	"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
																}
															}
														}
													}
												},
												{
													"title": "Azure Group Rule",
													"description": "Match an Azure Group\nRequires an Azure identity provider",
													"type": "object",
													"required": [
														"azureAD"
													],
													"properties": {
														"azureAD": {
															"type": "object",
															"required": [
																"id",
																"connection_id"
															],
															"properties": {
																"id": {
																	"type": "string",
																	"description": "The ID of an Azure group.",
																	"example": "aa0a4aab-672b-4bdb-bc33-a59f1130a11f"
																},
																"connection_id": {
																	"type": "string",
																	"description": "The ID of your Azure identity provider.",
																	"example": "ea85612a-29c8-46c2-bacb-669d65136971"
																}
															}
														}
													}
												},
												{
													"title": "Github Organization Rule",
													"description": "Match a Github Organization\nRequires a Github identity provider",
													"type": "object",
													"required": [
														"github-organization"
													],
													"properties": {
														"github-organization": {
															"type": "object",
															"required": [
																"name",
																"connection_id"
															],
															"properties": {
																"name": {
																	"type": "string",
																	"description": "The name of the organization.",
																	"example": "cloudflare"
																},
																"connection_id": {
																	"type": "string",
																	"description": "The ID of your Github identity provider.",
																	"example": "ea85612a-29c8-46c2-bacb-669d65136971"
																}
															}
														}
													}
												},
												{
													"title": "GSuite Group Rule",
													"description": "Match a GSuite Group\nRequires a GSuite identity provider",
													"type": "object",
													"required": [
														"gsuite"
													],
													"properties": {
														"gsuite": {
															"type": "object",
															"required": [
																"email",
																"connection_id"
															],
															"properties": {
																"email": {
																	"type": "string",
																	"description": "The email of the group.",
																	"example": "devs@cloudflare.com"
																},
																"connection_id": {
																	"type": "string",
																	"description": "The ID of your GSuite identity provider.",
																	"example": "ea85612a-29c8-46c2-bacb-669d65136971"
																}
															}
														}
													}
												},
												{
													"title": "Okta Group Rule",
													"description": "Match an Okta Group\nRequires a Okta identity provider",
													"type": "object",
													"required": [
														"okta"
													],
													"properties": {
														"okta": {
															"type": "object",
															"required": [
																"email",
																"connection_id"
															],
															"properties": {
																"email": {
																	"type": "string",
																	"description": "The email of the group.",
																	"example": "devs@cloudflare.com"
																},
																"connection_id": {
																	"type": "string",
																	"description": "The ID of your ID of your Okta identity provider.",
																	"example": "ea85612a-29c8-46c2-bacb-669d65136971"
																}
															}
														}
													}
												},
												{
													"title": "SAML Group Rule",
													"description": "Match a SAML Group\nRequires a SAML identity provider",
													"type": "object",
													"required": [
														"saml"
													],
													"properties": {
														"saml": {
															"type": "object",
															"required": [
																"attribute_name",
																"attribute_value"
															],
															"properties": {
																"attribute_name": {
																	"type": "string",
																	"description": "The name of the attribute.",
																	"example": "group"
																},
																"attribute_value": {
																	"type": "string",
																	"description": "The value to look for.",
																	"example": "devs@cloudflare.com"
																}
															}
														}
													}
												}
											]
										}
									},
									"exclude": {
										"type": "array",
										"description": "Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"require": {
										"type": "array",
										"description": "Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/groups/{uuid}": {
			"get": {
				"summary": "Get an Access group",
				"description": "Fetches a single Access group.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier for the Access group."
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an Access group response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/0/schema"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"include": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include"
														},
														"exclude": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/exclude"
														},
														"require": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/require"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update an Access group",
				"description": "Updates a configured Access group.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an Access group response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"include"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Access group.",
										"example": "Allow devs"
									},
									"include": {
										"type": "array",
										"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"exclude": {
										"type": "array",
										"description": "Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"require": {
										"type": "array",
										"description": "Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include/items"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an Access group",
				"description": "Deletes an Access group.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an Access group response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/service_tokens": {
			"get": {
				"summary": "List Access Service Tokens",
				"description": "List Access Service Tokens",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access Service Tokens response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens/post/requestBody/content/application~1json/schema/properties/name"
															},
															"client_id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/client_id"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Access Service Token",
				"description": "Create a new Access Service Token. **Note:** This is the only time you can get the client secret. Please save it somewhere secure.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Access Service Token response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens/post/requestBody/content/application~1json/schema/properties/name"
														},
														"client_id": {
															"type": "string",
															"description": "The service token client id you will send in on requests",
															"example": "88bf3b6d86161464f6509f7219099e57.access.example.com"
														},
														"client_secret": {
															"type": "string",
															"description": "The service token client secret you will send in on requests",
															"example": "bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of your Access Service Token.",
										"example": "CI/CD token"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/service_tokens/{uuid}": {
			"put": {
				"summary": "Update Access Service Token",
				"description": "Update a configured Access Service Token",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Access Service Token response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/parameters/0/schema"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"client_id": {
															"type": "string",
															"description": "The service token client id you will send in on requests",
															"example": "88bf3b6d86161464f6509f7219099e57.access.example.com"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of your Access Service Token.",
										"example": "CI/CD token"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Access Service Token",
				"description": "Delete an Access Service Token",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Access Service Token response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/apps/ca": {
			"get": {
				"summary": "List Short-Lived Certificates",
				"description": "List Short-Lived Certificates",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Short-Lived Certificates response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "Short-lived certificate id",
																"type": "string",
																"maxLength": 48,
																"readOnly": true,
																"example": "7eddae4619b50ab1361ba8ae9bd72269a432fea041529ed9"
															},
															"aud": {
																"description": "Audience tag",
																"type": "string",
																"maxLength": 64,
																"readOnly": true,
																"example": "737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe3893"
															},
															"public_key": {
																"description": "Public key for DS record",
																"type": "string",
																"readOnly": true,
																"example": "ecdsa-sha2-nistp256 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx= open-ssh-ca@cloudflareaccess.org"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/access/apps/{uuid}/ca": {
			"get": {
				"summary": "Short-Lived Certificate Details",
				"description": "Fetch a single short-lived certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Short-Lived Certificate Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Short-Lived Certificate",
				"description": "Create a new short-lived certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Short-Lived Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"delete": {
				"summary": "Delete Access Certificate",
				"description": "Delete an Access Certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Access Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"description": "Short-lived certificate id",
															"type": "string",
															"maxLength": 48,
															"readOnly": true,
															"example": "7eddae4619b50ab1361ba8ae9bd72269a432fea041529ed9"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/certificates": {
			"get": {
				"summary": "List Access Certificates",
				"description": "List Access Certificates",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access Certificates response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"expires_on": {
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2014-01-01T05:20:00.123450+00:00"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates/post/requestBody/content/application~1json/schema/properties/name"
															},
															"fingerprint": {
																"type": "string",
																"description": "The MD5 fingerprint of the certificate",
																"example": "MD5 Fingerprint=1E:80:0F:7A:FD:31:55:96:DE:D5:CB:E2:F0:91:F6:91"
															},
															"associated_hostnames": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates/post/requestBody/content/application~1json/schema/properties/associated_hostnames"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Access Certificate",
				"description": "Create a new Access Certificate",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Access Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"certificate"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Certificate. Only used in the UI.",
										"example": "Allow devs"
									},
									"certificate": {
										"type": "string",
										"description": "The Root CA for your certificates",
										"example": "-----BEGIN CERTIFICATE-----\nMIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10\nDrUtmu/B\n-----END CERTIFICATE-----"
									},
									"associated_hostnames": {
										"type": "array",
										"description": "The hostnames that will be prompted for this certificate.",
										"items": {
											"type": "string",
											"description": "Hostname",
											"example": "admin.example.com"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/certificates/{uuid}": {
			"get": {
				"summary": "Access Certificate Details",
				"description": "Fetch a single Access Certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Access Certificate Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/0/schema"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"expires_on": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/expires_on"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"fingerprint": {
															"type": "string",
															"description": "The MD5 fingerprint of the certificate",
															"example": "MD5 Fingerprint=1E:80:0F:7A:FD:31:55:96:DE:D5:CB:E2:F0:91:F6:91"
														},
														"associated_hostnames": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/associated_hostnames"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Access Certificate",
				"description": "Update a configured Access Certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Access Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"associated_hostnames"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Certificate. Only used in the UI.",
										"example": "Allow devs"
									},
									"associated_hostnames": {
										"type": "array",
										"description": "The hostnames that will be prompted for this certificate.",
										"items": {
											"type": "string",
											"description": "Hostname",
											"example": "admin.example.com"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Access Certificate",
				"description": "Delete an Access Certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Access Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/apps": {
			"get": {
				"summary": "List Access applications",
				"description": "Lists all Access applications in an account.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access applications response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"anyOf": [
															{
																"type": "object",
																"title": "Self Hosted Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"type": "object",
																		"title": "Self Hosted Application",
																		"properties": {
																			"type": {
																				"description": "The application type",
																				"type": "string",
																				"example": "self_hosted"
																			},
																			"name": {
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																			},
																			"domain": {
																				"type": "string",
																				"description": "The domain and path that Access will secure.",
																				"example": "test.example.com/admin"
																			},
																			"logo_url": {
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/logo_url"
																			},
																			"app_launcher_visible": {
																				"description": "Displays the application in the App Launcher.",
																				"type": "boolean",
																				"default": true,
																				"example": true
																			},
																			"session_duration": {
																				"description": "The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.",
																				"default": "24h",
																				"type": "string",
																				"example": "24h"
																			},
																			"allowed_idps": {
																				"type": "array",
																				"description": "The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.",
																				"items": {
																					"type": "string",
																					"description": "The identity providers selected for application",
																					"example": "699d98642c564d2e855e9661899b7252"
																				}
																			},
																			"auto_redirect_to_identity": {
																				"description": "When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.",
																				"type": "boolean",
																				"default": false
																			},
																			"enable_binding_cookie": {
																				"description": "Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.",
																				"type": "boolean",
																				"default": false
																			},
																			"custom_deny_message": {
																				"description": "The custom error message shown to a user when they are denied access to the application.",
																				"type": "string"
																			},
																			"custom_deny_url": {
																				"description": "The custom URL a user is redirected to when they are denied access to the application.",
																				"type": "string"
																			},
																			"http_only_cookie_attribute": {
																				"description": "Enables the HttpOnly cookie attribute, which increases security against XSS attacks.",
																				"type": "boolean",
																				"default": true,
																				"example": true
																			},
																			"same_site_cookie_attribute": {
																				"description": "Sets the SameSite cookie setting, which provides increased security against CSRF attacks.",
																				"type": "string",
																				"example": "strict"
																			},
																			"cors_headers": {
																				"type": "object",
																				"properties": {
																					"allowed_methods": {
																						"description": "Allowed HTTP request methods.",
																						"type": "array",
																						"items": {
																							"type": "string",
																							"enum": [
																								"GET",
																								"POST",
																								"HEAD",
																								"PUT",
																								"DELETE",
																								"CONNECT",
																								"OPTIONS",
																								"TRACE",
																								"PATCH"
																							]
																						},
																						"example": [
																							"GET"
																						]
																					},
																					"allowed_origins": {
																						"description": "Allowed origins.",
																						"type": "array",
																						"example": [
																							"https://example.com"
																						],
																						"items": {}
																					},
																					"allowed_headers": {
																						"description": "Allowed HTTP request headers.",
																						"type": "array",
																						"items": {}
																					},
																					"allow_all_methods": {
																						"description": "Allows all HTTP request methods.",
																						"type": "boolean"
																					},
																					"allow_all_origins": {
																						"description": "Allows all origins.",
																						"type": "boolean"
																					},
																					"allow_all_headers": {
																						"description": "Allows all HTTP request headers.",
																						"type": "boolean",
																						"example": true
																					},
																					"allow_credentials": {
																						"description": "When set to `true`, includes credentials (cookies, authorization headers, or TLS client certificates) with requests.",
																						"type": "boolean"
																					},
																					"max_age": {
																						"description": "The maximum number of seconds the results of a preflight request can be cached.",
																						"type": "number",
																						"maximum": 86400,
																						"minimum": -1,
																						"example": -1
																					}
																				}
																			},
																			"skip_interstitial": {
																				"description": "Enables automatic authentication through cloudflared.",
																				"type": "boolean",
																				"example": true
																			},
																			"service_auth_401_redirect": {
																				"description": "Returns a 401 status code when the request is blocked by a Service Auth policy.",
																				"type": "boolean",
																				"example": true
																			}
																		}
																	}
																]
															},
															{
																"type": "object",
																"title": "SaaS Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"type": "object",
																		"title": "SaaS Application",
																		"properties": {
																			"type": {
																				"description": "The application type",
																				"type": "string",
																				"example": "saas"
																			},
																			"name": {
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																			},
																			"logo_url": {
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/logo_url"
																			},
																			"app_launcher_visible": {
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/app_launcher_visible"
																			},
																			"saas_app": {
																				"type": "object",
																				"properties": {
																					"consumer_service_url": {
																						"description": "The service provider's endpoint that is responsible for receiving and parsing a SAML assertion.",
																						"type": "string",
																						"example": "https://example.com"
																					},
																					"sp_entity_id": {
																						"description": "A globally unique name for an identity or service provider.",
																						"type": "string",
																						"example": "example unique name"
																					},
																					"public_key": {
																						"description": "The Access public certificate that will be used to verify your identity.",
																						"type": "string",
																						"example": "example unique name"
																					},
																					"idp_entity_id": {
																						"description": "The unique identifier for your SaaS application.",
																						"type": "string",
																						"example": "https://example.cloudflareaccess.com"
																					},
																					"name_id_format": {
																						"description": "The format of the name identifier sent to the SaaS application.",
																						"type": "string",
																						"enum": [
																							"id",
																							"email"
																						],
																						"example": "id"
																					},
																					"sso_endpoint": {
																						"description": "The endpoint where your SaaS application will send login requests.",
																						"type": "string",
																						"example": "https://example.cloudflareaccess.com/cdn-cgi/access/sso/saml/b3f58a2b414e0b51d45c8c2af26fccca0e27c63763c426fa52f98dcf0b3b3bfd"
																					},
																					"custom_attributes": {
																						"type": "object",
																						"properties": {
																							"name": {
																								"description": "The name of the attribute.",
																								"type": "string",
																								"example": "family_name"
																							},
																							"name_format": {
																								"description": "A globally unique name for an identity or service provider.",
																								"type": "string",
																								"enum": [
																									"urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified",
																									"urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
																									"urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
																								],
																								"example": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
																							},
																							"source": {
																								"type": "object",
																								"properties": {
																									"name": {
																										"description": "The name of the IdP attribute.",
																										"type": "string",
																										"example": "last_name"
																									}
																								}
																							}
																						}
																					},
																					"created_at": {
																						"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																					},
																					"updated_at": {
																						"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																					}
																				}
																			},
																			"allowed_idps": {
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/allowed_idps"
																			},
																			"auto_redirect_to_identity": {
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/auto_redirect_to_identity"
																			}
																		}
																	}
																]
															},
															{
																"type": "object",
																"title": "Browser SSH Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1"
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "ssh"
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "Browser VNC Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1"
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "vnc"
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "App Launcher Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"type": "object",
																				"properties": {
																					"type": {
																						"type": "string",
																						"description": "The application type.",
																						"example": "self_hosted",
																						"default": "self_hosted",
																						"enum": [
																							"self_hosted",
																							"saas",
																							"ssh",
																							"vnc",
																							"file",
																							"warp",
																							"bookmark"
																						]
																					},
																					"name": {
																						"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																					},
																					"domain": {
																						"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/domain"
																					},
																					"session_duration": {
																						"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/session_duration"
																					},
																					"allowed_idps": {
																						"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/allowed_idps"
																					},
																					"auto_redirect_to_identity": {
																						"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/auto_redirect_to_identity"
																					}
																				}
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "app_launcher"
																					},
																					"name": {
																						"default": "App Launcher",
																						"example": "App Launcher",
																						"readOnly": true
																					},
																					"domain": {
																						"example": "authdomain.cloudflareaccess.com",
																						"readOnly": true
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "Device Enrollment Permissions Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/4/allOf/1/allOf/0"
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "warp"
																					},
																					"name": {
																						"default": "Warp Login App",
																						"example": "Warp Login App",
																						"readOnly": true
																					},
																					"domain": {
																						"example": "authdomain.cloudflareaccess.com/warp",
																						"readOnly": true
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "Browser Isolation Permissions Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/4/allOf/1/allOf/0"
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "biso"
																					},
																					"name": {
																						"default": "Clientless Web Isolation",
																						"example": "Clientless Web Isolation",
																						"readOnly": true
																					},
																					"domain": {
																						"example": "authdomain.cloudflareaccess.com/browser",
																						"readOnly": true
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "Bookmark Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1"
																	}
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Add the Bookmark application",
				"description": "Adds the Bookmark application to Access, which allows you to add custom links to the App Launcher portal.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add the Bookmark application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"type": "object",
															"properties": {
																"id": {
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																},
																"created_at": {
																	"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																},
																"updated_at": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																},
																"aud": {
																	"description": "Audience tag",
																	"type": "string",
																	"maxLength": 64,
																	"readOnly": true,
																	"example": "737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe3893"
																}
															}
														},
														{
															"type": "object",
															"title": "Bookmark Application",
															"properties": {
																"type": {
																	"description": "The application type",
																	"type": "string",
																	"example": "bookmark"
																},
																"name": {
																	"type": "string",
																	"description": "The name of the application.",
																	"example": "Admin Site"
																},
																"domain": {
																	"description": "The URL or domain of the bookmark.",
																	"example": "https://mybookmark.com"
																},
																"logo_url": {
																	"description": "The image URL for the logo shown in the App Launcher dashboard.",
																	"type": "string",
																	"example": "https://www.cloudflare.com/img/logo-web-badges/cf-logo-on-white-bg.svg"
																},
																"app_launcher_visible": {
																	"default": true
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"domain"
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/apps/{app_id}": {
			"get": {
				"summary": "Get an Access application",
				"description": "Fetches information about an Access application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an Access application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object",
															"title": "Self Hosted Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"type": "object",
																	"title": "Self Hosted Application",
																	"properties": {
																		"type": {
																			"description": "The application type",
																			"type": "string",
																			"example": "self_hosted"
																		},
																		"name": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																		},
																		"domain": {
																			"type": "string",
																			"description": "The domain and path that Access will secure.",
																			"example": "test.example.com/admin"
																		},
																		"logo_url": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/logo_url"
																		},
																		"app_launcher_visible": {
																			"description": "Displays the application in the App Launcher.",
																			"type": "boolean",
																			"default": true,
																			"example": true
																		},
																		"session_duration": {
																			"description": "The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.",
																			"default": "24h",
																			"type": "string",
																			"example": "24h"
																		},
																		"allowed_idps": {
																			"type": "array",
																			"description": "The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.",
																			"items": {
																				"type": "string",
																				"description": "The identity providers selected for application",
																				"example": "699d98642c564d2e855e9661899b7252"
																			}
																		},
																		"auto_redirect_to_identity": {
																			"description": "When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.",
																			"type": "boolean",
																			"default": false
																		},
																		"enable_binding_cookie": {
																			"description": "Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.",
																			"type": "boolean",
																			"default": false
																		},
																		"custom_deny_message": {
																			"description": "The custom error message shown to a user when they are denied access to the application.",
																			"type": "string"
																		},
																		"custom_deny_url": {
																			"description": "The custom URL a user is redirected to when they are denied access to the application.",
																			"type": "string"
																		},
																		"http_only_cookie_attribute": {
																			"description": "Enables the HttpOnly cookie attribute, which increases security against XSS attacks.",
																			"type": "boolean",
																			"default": true,
																			"example": true
																		},
																		"same_site_cookie_attribute": {
																			"description": "Sets the SameSite cookie setting, which provides increased security against CSRF attacks.",
																			"type": "string",
																			"example": "strict"
																		},
																		"cors_headers": {
																			"type": "object",
																			"properties": {
																				"allowed_methods": {
																					"description": "Allowed HTTP request methods.",
																					"type": "array",
																					"items": {
																						"type": "string",
																						"enum": [
																							"GET",
																							"POST",
																							"HEAD",
																							"PUT",
																							"DELETE",
																							"CONNECT",
																							"OPTIONS",
																							"TRACE",
																							"PATCH"
																						]
																					},
																					"example": [
																						"GET"
																					]
																				},
																				"allowed_origins": {
																					"description": "Allowed origins.",
																					"type": "array",
																					"example": [
																						"https://example.com"
																					],
																					"items": {}
																				},
																				"allowed_headers": {
																					"description": "Allowed HTTP request headers.",
																					"type": "array",
																					"items": {}
																				},
																				"allow_all_methods": {
																					"description": "Allows all HTTP request methods.",
																					"type": "boolean"
																				},
																				"allow_all_origins": {
																					"description": "Allows all origins.",
																					"type": "boolean"
																				},
																				"allow_all_headers": {
																					"description": "Allows all HTTP request headers.",
																					"type": "boolean",
																					"example": true
																				},
																				"allow_credentials": {
																					"description": "When set to `true`, includes credentials (cookies, authorization headers, or TLS client certificates) with requests.",
																					"type": "boolean"
																				},
																				"max_age": {
																					"description": "The maximum number of seconds the results of a preflight request can be cached.",
																					"type": "number",
																					"maximum": 86400,
																					"minimum": -1,
																					"example": -1
																				}
																			}
																		},
																		"skip_interstitial": {
																			"description": "Enables automatic authentication through cloudflared.",
																			"type": "boolean",
																			"example": true
																		},
																		"service_auth_401_redirect": {
																			"description": "Returns a 401 status code when the request is blocked by a Service Auth policy.",
																			"type": "boolean",
																			"example": true
																		}
																	}
																}
															]
														},
														{
															"type": "object",
															"title": "SaaS Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"type": "object",
																	"title": "SaaS Application",
																	"properties": {
																		"type": {
																			"description": "The application type",
																			"type": "string",
																			"example": "saas"
																		},
																		"name": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																		},
																		"logo_url": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/logo_url"
																		},
																		"app_launcher_visible": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/app_launcher_visible"
																		},
																		"saas_app": {
																			"type": "object",
																			"properties": {
																				"consumer_service_url": {
																					"description": "The service provider's endpoint that is responsible for receiving and parsing a SAML assertion.",
																					"type": "string",
																					"example": "https://example.com"
																				},
																				"sp_entity_id": {
																					"description": "A globally unique name for an identity or service provider.",
																					"type": "string",
																					"example": "example unique name"
																				},
																				"public_key": {
																					"description": "The Access public certificate that will be used to verify your identity.",
																					"type": "string",
																					"example": "example unique name"
																				},
																				"idp_entity_id": {
																					"description": "The unique identifier for your SaaS application.",
																					"type": "string",
																					"example": "https://example.cloudflareaccess.com"
																				},
																				"name_id_format": {
																					"description": "The format of the name identifier sent to the SaaS application.",
																					"type": "string",
																					"enum": [
																						"id",
																						"email"
																					],
																					"example": "id"
																				},
																				"sso_endpoint": {
																					"description": "The endpoint where your SaaS application will send login requests.",
																					"type": "string",
																					"example": "https://example.cloudflareaccess.com/cdn-cgi/access/sso/saml/b3f58a2b414e0b51d45c8c2af26fccca0e27c63763c426fa52f98dcf0b3b3bfd"
																				},
																				"custom_attributes": {
																					"type": "object",
																					"properties": {
																						"name": {
																							"description": "The name of the attribute.",
																							"type": "string",
																							"example": "family_name"
																						},
																						"name_format": {
																							"description": "A globally unique name for an identity or service provider.",
																							"type": "string",
																							"enum": [
																								"urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified",
																								"urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
																								"urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
																							],
																							"example": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
																						},
																						"source": {
																							"type": "object",
																							"properties": {
																								"name": {
																									"description": "The name of the IdP attribute.",
																									"type": "string",
																									"example": "last_name"
																								}
																							}
																						}
																					}
																				},
																				"created_at": {
																					"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																				},
																				"updated_at": {
																					"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																				}
																			}
																		},
																		"allowed_idps": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/allowed_idps"
																		},
																		"auto_redirect_to_identity": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/auto_redirect_to_identity"
																		}
																	}
																}
															]
														},
														{
															"type": "object",
															"title": "Browser SSH Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1"
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "ssh"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "Browser VNC Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1"
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "vnc"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "App Launcher Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"type": {
																					"type": "string",
																					"description": "The application type.",
																					"example": "self_hosted",
																					"default": "self_hosted",
																					"enum": [
																						"self_hosted",
																						"saas",
																						"ssh",
																						"vnc",
																						"file",
																						"warp",
																						"bookmark"
																					]
																				},
																				"name": {
																					"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																				},
																				"domain": {
																					"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/domain"
																				},
																				"session_duration": {
																					"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/session_duration"
																				},
																				"allowed_idps": {
																					"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/allowed_idps"
																				},
																				"auto_redirect_to_identity": {
																					"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/auto_redirect_to_identity"
																				}
																			}
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "app_launcher"
																				},
																				"name": {
																					"default": "App Launcher",
																					"example": "App Launcher",
																					"readOnly": true
																				},
																				"domain": {
																					"example": "authdomain.cloudflareaccess.com",
																					"readOnly": true
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "Device Enrollment Permissions Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/4/allOf/1/allOf/0"
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "warp"
																				},
																				"name": {
																					"default": "Warp Login App",
																					"example": "Warp Login App",
																					"readOnly": true
																				},
																				"domain": {
																					"example": "authdomain.cloudflareaccess.com/warp",
																					"readOnly": true
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "Browser Isolation Permissions Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/4/allOf/1/allOf/0"
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "biso"
																				},
																				"name": {
																					"default": "Clientless Web Isolation",
																					"example": "Clientless Web Isolation",
																					"readOnly": true
																				},
																				"domain": {
																					"example": "authdomain.cloudflareaccess.com/browser",
																					"readOnly": true
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "Bookmark Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1"
																}
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update the Bookmark application",
				"description": "Updates the Bookmark application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update the Bookmark application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"type": "object",
															"properties": {
																"id": {
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																},
																"created_at": {
																	"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																},
																"updated_at": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																},
																"aud": {
																	"description": "Audience tag",
																	"type": "string",
																	"maxLength": 64,
																	"readOnly": true,
																	"example": "737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe3893"
																}
															}
														},
														{
															"type": "object",
															"title": "Bookmark Application",
															"properties": {
																"type": {
																	"description": "The application type",
																	"type": "string",
																	"example": "bookmark"
																},
																"name": {
																	"type": "string",
																	"description": "The name of the application.",
																	"example": "Admin Site"
																},
																"domain": {
																	"description": "The URL or domain of the bookmark.",
																	"example": "https://mybookmark.com"
																},
																"logo_url": {
																	"description": "The image URL for the logo shown in the App Launcher dashboard.",
																	"type": "string",
																	"example": "https://www.cloudflare.com/img/logo-web-badges/cf-logo-on-white-bg.svg"
																},
																"app_launcher_visible": {
																	"default": true
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"domain"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an Access application",
				"description": "Deletes an application from Access.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an Access application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/apps/{app_id}/revoke_tokens": {
			"post": {
				"summary": "Revoke service tokens",
				"description": "Revokes all service tokens used by an application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Revoke service tokens response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"enum": [
														true,
														false
													],
													"example": true
												},
												"result": {
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/apps/{app_id}/user_policy_checks": {
			"get": {
				"summary": "Test Access policies",
				"description": "Tests if a specific user has permission to access an application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Test Access policies response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"user_identity": {
															"type": "object",
															"properties": {
																"id": {
																	"type": "string",
																	"example": "1164449231815010287495"
																},
																"version": {
																	"type": "integer"
																},
																"user_uuid": {
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																},
																"name": {
																	"type": "string",
																	"example": "Test User"
																},
																"email": {
																	"type": "string",
																	"example": "testuser@gmail.com"
																},
																"geo": {
																	"type": "object",
																	"properties": {
																		"country": {
																			"type": "string",
																			"example": "US"
																		}
																	}
																},
																"is_warp": {
																	"type": "boolean",
																	"example": false
																},
																"is_gateway": {
																	"type": "boolean",
																	"example": false
																},
																"account_id": {
																	"type": "string",
																	"example": "41ecfbb341f033e52b46742756aabb8b"
																},
																"device_sessions": {
																	"type": "object",
																	"example": {}
																},
																"iat": {
																	"type": "integer"
																}
															}
														},
														"app_state": {
															"type": "object",
															"properties": {
																"aud": {
																	"type": "string",
																	"example": "737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe389"
																},
																"app_uid": {
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																},
																"hostname": {
																	"type": "string",
																	"example": "test.com"
																},
																"name": {
																	"type": "string",
																	"example": "Test App"
																},
																"policies": {
																	"type": "array",
																	"example": [
																		{
																			"decision": "allow",
																			"include": [
																				{
																					"_type": "email",
																					"email": "testuser@gmail.com"
																				}
																			],
																			"exclude": [],
																			"require": [],
																			"precedence": 0,
																			"status": "Success"
																		}
																	],
																	"items": {}
																},
																"status": {
																	"type": "string",
																	"example": "Success"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/access/apps/{uuid}/policies": {
			"get": {
				"summary": "List Access policies",
				"description": "Lists Access policies configured for an application.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "The policy ID.",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access policies response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/get/parameters/0/schema"
															},
															"precedence": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/precedence"
															},
															"decision": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/decision"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/name"
															},
															"include": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/include"
															},
															"exclude": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/exclude"
															},
															"require": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/require"
															},
															"purpose_justification_required": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/purpose_justification_required"
															},
															"purpose_justification_prompt": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/purpose_justification_prompt"
															},
															"approval_required": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/approval_required"
															},
															"approval_groups": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/approval_groups"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create an Access policy",
				"description": "Create a new Access policy for an application.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create an Access policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"decision",
									"include"
								],
								"properties": {
									"precedence": {
										"type": "integer",
										"description": "The order of execution for this policy. Must be unique for each policy."
									},
									"decision": {
										"description": "The action Access will take if a user matches this policy.",
										"type": "string",
										"enum": [
											"allow",
											"deny",
											"non_identity",
											"bypass"
										],
										"example": "allow"
									},
									"name": {
										"type": "string",
										"description": "The name of the Access policy.",
										"example": "Allow devs"
									},
									"include": {
										"type": "array",
										"description": "Rules evaluated with an OR logical operator. To match the policy, a user needs to meet only one of the Include rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"exclude": {
										"type": "array",
										"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"require": {
										"type": "array",
										"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"purpose_justification_required": {
										"description": "Require users to enter a justification when they log in to the application.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"purpose_justification_prompt": {
										"description": "A custom message that will appear on the purpose justification screen.",
										"type": "string",
										"example": "Please enter a justification for entering this protected domain."
									},
									"approval_required": {
										"description": "Requires the user to request access from an administrator at the start of each session.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"approval_groups": {
										"type": "array",
										"description": "Administrators who can approve a temporary authentication request.",
										"items": {
											"type": "object",
											"description": "A group of email addresses that can approve a temporary authentication request.",
											"required": [
												"approvals_needed"
											],
											"properties": {
												"email_list_uuid": {
													"type": "string",
													"description": "The UUID of an re-usable email list."
												},
												"email_addresses": {
													"type": "array",
													"description": "A list of emails that can approve the access request.",
													"example": [
														"test@cloudflare.com",
														"test2@cloudflare.com"
													],
													"items": {}
												},
												"approvals_needed": {
													"description": "The number of approvals needed to obtain access.",
													"type": "number",
													"minimum": 0,
													"example": 1
												}
											}
										},
										"example": [
											{
												"email_addresses": [
													"test1@cloudflare.com",
													"test2@cloudflare.com"
												],
												"approvals_needed": 1
											},
											{
												"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34",
												"approvals_needed": 3
											}
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/apps/{uuid1}/policies/{uuid}": {
			"get": {
				"summary": "Get an Access policy",
				"description": "Fetches a single Access policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "The policy ID.",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "uuid1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an Access policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
														},
														"precedence": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/precedence"
														},
														"decision": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/decision"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"include": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include"
														},
														"exclude": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/exclude"
														},
														"require": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/require"
														},
														"purpose_justification_required": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/purpose_justification_required"
														},
														"purpose_justification_prompt": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/purpose_justification_prompt"
														},
														"approval_required": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/approval_required"
														},
														"approval_groups": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/approval_groups"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update an Access policy",
				"description": "Update a configured Access policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "uuid1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an Access policy response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"decision",
									"include"
								],
								"properties": {
									"precedence": {
										"type": "integer",
										"description": "The order of execution for this policy. Must be unique for each policy."
									},
									"decision": {
										"description": "The action Access will take if a user matches this policy.",
										"type": "string",
										"enum": [
											"allow",
											"deny",
											"non_identity",
											"bypass"
										],
										"example": "allow"
									},
									"name": {
										"type": "string",
										"description": "The name of the Access policy.",
										"example": "Allow devs"
									},
									"include": {
										"type": "array",
										"description": "Rules evaluated with an OR logical operator. To match the policy, a user needs to meet only one of the Include rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"exclude": {
										"type": "array",
										"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"require": {
										"type": "array",
										"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"purpose_justification_required": {
										"description": "Require users to enter a justification when they log in to the application.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"purpose_justification_prompt": {
										"description": "A custom message that will appear on the purpose justification screen.",
										"type": "string",
										"example": "Please enter a justification for entering this protected domain."
									},
									"approval_required": {
										"description": "Requires the user to request access from an administrator at the start of each session.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"approval_groups": {
										"type": "array",
										"description": "Administrators who can approve a temporary authentication request.",
										"items": {
											"type": "object",
											"description": "A group of email addresses that can approve a temporary authentication request.",
											"required": [
												"approvals_needed"
											],
											"properties": {
												"email_list_uuid": {
													"type": "string",
													"description": "The UUID of an re-usable email list."
												},
												"email_addresses": {
													"type": "array",
													"description": "A list of emails that can approve the access request.",
													"example": [
														"test@cloudflare.com",
														"test2@cloudflare.com"
													],
													"items": {}
												},
												"approvals_needed": {
													"description": "The number of approvals needed to obtain access.",
													"type": "number",
													"minimum": 0,
													"example": 1
												}
											}
										},
										"example": [
											{
												"email_addresses": [
													"test1@cloudflare.com",
													"test2@cloudflare.com"
												],
												"approvals_needed": 1
											},
											{
												"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34",
												"approvals_needed": 3
											}
										]
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an Access policy",
				"description": "Delete an Access policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "uuid1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an Access policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/keys": {
			"get": {
				"summary": "Get Access Keys Configuration",
				"description": "Get the Keys Configuration for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Access Keys Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"key_rotation_interval_days": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1keys/put/requestBody/content/application~1json/schema/properties/key_rotation_interval_days"
												},
												"last_key_rotation_at": {
													"type": "string",
													"format": "date-time",
													"example": "2014-01-01T05:20:00.123450+00:00"
												},
												"days_until_next_rotation": {
													"type": "number",
													"readOnly": true,
													"example": 1
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Access Keys Configuration",
				"description": "Update the Keys Configuration for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1keys/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Access Keys Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1keys/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"key_rotation_interval_days"
								],
								"properties": {
									"key_rotation_interval_days": {
										"type": "number",
										"minimum": 21,
										"maximum": 365,
										"example": 30
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/keys/rotate": {
			"post": {
				"summary": "Rotate Access Keys",
				"description": "Perfoms a key rotation for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Rotate Access Keys response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"key_rotation_interval_days": {
													"type": "number",
													"minimum": 21,
													"maximum": 365,
													"example": 30
												},
												"last_key_rotation_at": {
													"type": "string",
													"format": "date-time",
													"example": "2014-01-01T05:20:00.123450+00:00"
												},
												"days_until_next_rotation": {
													"type": "number",
													"readOnly": true,
													"example": 1
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/logs/access_requests": {
			"get": {
				"summary": "Access Requests Audit",
				"description": "Audit log of all authentication attempts. Details include the identity provider or login method and the IP address of the user.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Access Requests Audit response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"user_email": {
																"type": "string",
																"format": "email",
																"example": "michelle@example.com",
																"description": "The email of the user that performed the action."
															},
															"ip_address": {
																"description": "The IP address of the authenticating user.",
																"type": "string",
																"example": "198.41.129.166"
															},
															"app_uid": {
																"example": "df7e2w5f-02b7-4d9d-af26-8d1988fca630",
																"description": "The unique identifier for the protected application."
															},
															"app_domain": {
																"type": "string",
																"description": "The URL of the protected application.",
																"example": "test.example.com/admin"
															},
															"action": {
																"type": "string",
																"description": "The event that occurred, such as a login attempt.",
																"example": "login"
															},
															"connection": {
																"type": "string",
																"description": "The IDP used the authenticate.",
																"example": "saml"
															},
															"allowed": {
																"description": "The result of the authentication event.",
																"type": "boolean",
																"default": false
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"ray_id": {
																"type": "string",
																"maxLength": 16,
																"description": "Ray ID of the request. For more information on what a Ray ID is, please refer to: https://support.cloudflare.com/hc/en-us/articles/200169746-What-is-the-CF-RAY-header-",
																"example": "187d944c61940c77"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/access/seats": {
			"patch": {
				"summary": "Update User Seats",
				"description": "Manage seats for gateway and access accounts",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update User Seats response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"seat_uid": {
																"description": "Seat UUID"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"access_seat": {
																"type": "boolean",
																"description": "user seat is part of access",
																"example": false
															},
															"gateway_seat": {
																"type": "boolean",
																"description": "user seat is part of gateway",
																"example": false
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"required": [
									"seat_uid",
									"gateway_seat",
									"access_seat"
								],
								"items": {
									"type": "object",
									"required": [
										"seat_uid",
										"gateway_seat",
										"access_seat"
									],
									"properties": {
										"seat_uid": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1seats/patch/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/seat_uid"
										},
										"access_seat": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1seats/patch/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/access_seat"
										},
										"gateway_seat": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1seats/patch/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/gateway_seat"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/access/bookmarks": {
			"get": {
				"summary": "List Bookmark Applications",
				"description": "List bookmark applications",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Bookmark Applications response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
															},
															"domain": {
																"type": "string",
																"description": "The domain of the bookmark application.",
																"example": "example.com"
															},
															"name": {
																"type": "string",
																"description": "The name of the bookmark application.",
																"example": "My Website"
															},
															"logo_url": {
																"description": "Defines the image URL for the logo shown in the app launcher dashboard.",
																"type": "string",
																"example": "https://www.cloudflare.com/img/logo-web-badges/cf-logo-on-white-bg.svg"
															},
															"app_launcher_visible": {
																"description": "Defines whether or not the application is displayed in the App Launcher.",
																"type": "boolean",
																"example": true
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/access/bookmarks/{uuid}": {
			"get": {
				"summary": "Bookmark Application Details",
				"description": "Fetch a single bookmark application",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Bookmark Application Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														},
														"domain": {
															"type": "string",
															"description": "The domain of the bookmark application.",
															"example": "example.com"
														},
														"name": {
															"type": "string",
															"description": "The name of the bookmark application.",
															"example": "My Website"
														},
														"logo_url": {
															"description": "Defines the image URL for the logo shown in the app launcher dashboard.",
															"type": "string",
															"example": "https://www.cloudflare.com/img/logo-web-badges/cf-logo-on-white-bg.svg"
														},
														"app_launcher_visible": {
															"description": "Defines whether or not the application is displayed in the App Launcher.",
															"type": "boolean",
															"example": true
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Bookmark Application",
				"description": "Create a new bookmark application",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1bookmarks~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1bookmarks~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Bookmark Application response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1bookmarks~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"put": {
				"summary": "Update Bookmark Application",
				"description": "Update a bookmark application",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1bookmarks~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1bookmarks~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Bookmark Application response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1bookmarks~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"delete": {
				"summary": "Delete Bookmark Application",
				"description": "Delete a bookmark application",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1bookmarks~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1bookmarks~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Bookmark Application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/access/organizations": {
			"get": {
				"summary": "Get your Zero Trust organization",
				"description": "Returns the configuration for your Zero Trust organization.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get your Zero Trust organization response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/name"
														},
														"auth_domain": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/auth_domain"
														},
														"login_design": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/login_design"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create your Zero Trust organization",
				"description": "Sets up a Zero Trust organization for your account.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create your Zero Trust organization response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"auth_domain"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of your Zero Trust organization.",
										"example": "Widget Corps Internal Applications"
									},
									"auth_domain": {
										"type": "string",
										"description": "The unique subdomain assigned to your Zero Trust organization.",
										"example": "test.cloudflareaccess.com"
									},
									"login_design": {
										"properties": {
											"background_color": {
												"type": "string",
												"description": "The background color on your login page.",
												"example": "#c5ed1b"
											},
											"text_color": {
												"type": "string",
												"description": "The text color on your login page.",
												"example": "#c5ed1b"
											},
											"logo_path": {
												"type": "string",
												"description": "The URL of the logo on your login page.",
												"example": "https://example.com/logo.png"
											},
											"header_text": {
												"type": "string",
												"description": "The text at the top of your login page.",
												"example": "This is an example description."
											},
											"footer_text": {
												"type": "string",
												"description": "The text at the bottom of your login page.",
												"example": "This is an example description."
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update your Zero Trust organization",
				"description": "Updates the configuration for your Zero Trust organization.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update your Zero Trust organization response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/name"
									},
									"auth_domain": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/auth_domain"
									},
									"login_design": {
										"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1organizations/post/requestBody/content/application~1json/schema/properties/login_design"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/access/organizations/revoke_user": {
			"post": {
				"summary": "Revoke all Access tokens for a user",
				"description": "Revokes a user's access across all applications.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Revoke all Access tokens for a user response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"enum": [
														true,
														false
													],
													"example": true
												},
												"result": {
													"type": "boolean",
													"enum": [
														true,
														false
													],
													"example": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"email"
								],
								"properties": {
									"email": {
										"type": "string",
										"description": "The email of the user to revoke.",
										"example": "test@example.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/access/identity_providers": {
			"get": {
				"summary": "List Access identity providers",
				"description": "Lists all configured identity providers.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access identity providers response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers/post/requestBody/content/application~1json/schema/properties/name"
															},
															"type": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers/post/requestBody/content/application~1json/schema/properties/type"
															},
															"config": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers/post/requestBody/content/application~1json/schema/properties/config"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Add an Access identity provider",
				"description": "Adds a new identity provider to Access.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add an Access identity provider response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"config"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the identity provider, shown to users on the login page.",
										"example": "Widget Corps OTP"
									},
									"type": {
										"type": "string",
										"description": "The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).",
										"example": "onetimepin"
									},
									"config": {
										"type": "object",
										"description": "The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).",
										"properties": {}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/access/identity_providers/{uuid}": {
			"get": {
				"summary": "Get an Access identity provider",
				"description": "Fetches a configured identity provider.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier for the identity provider."
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an Access identity provider response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"type": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/type"
														},
														"config": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/config"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update an Access identity provider",
				"description": "Updates a configured identity provider.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an Access identity provider response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"config"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the identity provider, shown to users on the login page.",
										"example": "Widget Corps OTP"
									},
									"type": {
										"type": "string",
										"description": "The type of identity provider. To determine the value for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).",
										"example": "onetimepin"
									},
									"config": {
										"type": "object",
										"description": "The configuration parameters for the identity provider. To view the required parameters for a specific provider, refer to our [developer documentation](https://developers.cloudflare.com/cloudflare-one/identity/idp-integration/).",
										"properties": {}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an Access identity provider",
				"description": "Deletes an identity provider from Access.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an Access identity provider response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1identity_providers~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/access/groups": {
			"get": {
				"summary": "List Access groups",
				"description": "Lists all Access groups.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access groups response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "The unique identifier for the Access group."
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/name"
															},
															"include": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include"
															},
															"exclude": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/exclude"
															},
															"require": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/require"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create an Access group",
				"description": "Creates a new Access group.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create an Access group response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"include"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Access group.",
										"example": "Allow devs"
									},
									"include": {
										"type": "array",
										"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"exclude": {
										"type": "array",
										"description": "Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.",
										"items": {
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"require": {
										"type": "array",
										"description": "Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.",
										"items": {
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/access/groups/{uuid}": {
			"get": {
				"summary": "Get an Access group",
				"description": "Fetches a single Access group.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"description": "The unique identifier for the Access group."
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an Access group response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/0/schema"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"include": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include"
														},
														"exclude": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/exclude"
														},
														"require": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/require"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update an Access group",
				"description": "Updates a configured Access group.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an Access group response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"include"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Access group.",
										"example": "Allow devs"
									},
									"include": {
										"type": "array",
										"description": "Rules evaluated with an OR logical operator. A user needs to meet only one of the Include rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"exclude": {
										"type": "array",
										"description": "Rules evaluated with a NOT logical operator. To match a policy, a user cannot meet any of the Exclude rules.",
										"items": {
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"require": {
										"type": "array",
										"description": "Rules evaluated with an AND logical operator. To match a policy, a user must meet all of the Require rules.",
										"items": {
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include/items"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an Access group",
				"description": "Deletes an Access group.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an Access group response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1groups~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/access/service_tokens": {
			"get": {
				"summary": "List Access Service Tokens",
				"description": "List Access Service Tokens",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access Service Tokens response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"id": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens/post/requestBody/content/application~1json/schema/properties/name"
															},
															"client_id": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/client_id"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Access Service Token",
				"description": "Create a new Access Service Token. **Note:** This is the only time you can get the client secret. Please save it somewhere secure.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Access Service Token response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens/post/requestBody/content/application~1json/schema/properties/name"
														},
														"client_id": {
															"type": "string",
															"description": "The service token client id you will send in on requests",
															"example": "88bf3b6d86161464f6509f7219099e57.access.example.com"
														},
														"client_secret": {
															"type": "string",
															"description": "The service token client secret you will send in on requests",
															"example": "bdd31cbc4dec990953e39163fbbb194c93313ca9f0a6e420346af9d326b1d2a5"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of your Access Service Token.",
										"example": "CI/CD token"
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/access/service_tokens/{uuid}": {
			"put": {
				"summary": "Update Access Service Token",
				"description": "Update a configured Access Service Token",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Access Service Token response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/parameters/0/schema"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"client_id": {
															"type": "string",
															"description": "The service token client id you will send in on requests",
															"example": "88bf3b6d86161464f6509f7219099e57.access.example.com"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of your Access Service Token.",
										"example": "CI/CD token"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Access Service Token",
				"description": "Delete an Access Service Token",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Access Service Token response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1service_tokens~1%7Buuid%7D/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/access/apps/ca": {
			"get": {
				"summary": "List Short-Lived Certificates",
				"description": "List Short-Lived Certificates",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Short-Lived Certificates response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "Short-lived certificate id",
																"type": "string",
																"maxLength": 48,
																"readOnly": true,
																"example": "7eddae4619b50ab1361ba8ae9bd72269a432fea041529ed9"
															},
															"aud": {
																"description": "Audience tag",
																"type": "string",
																"maxLength": 64,
																"readOnly": true,
																"example": "737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe3893"
															},
															"public_key": {
																"description": "Public key for DS record",
																"type": "string",
																"readOnly": true,
																"example": "ecdsa-sha2-nistp256 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxx/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx= open-ssh-ca@cloudflareaccess.org"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{identifier}/access/apps/{uuid}/ca": {
			"get": {
				"summary": "Short-Lived Certificate Details",
				"description": "Fetch a single short-lived certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Short-Lived Certificate Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Short-Lived Certificate",
				"description": "Create a new short-lived certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Short-Lived Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"delete": {
				"summary": "Delete Access Certificate",
				"description": "Delete an Access Certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1ca/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Access Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"description": "Short-lived certificate id",
															"type": "string",
															"maxLength": 48,
															"readOnly": true,
															"example": "7eddae4619b50ab1361ba8ae9bd72269a432fea041529ed9"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/access/certificates": {
			"get": {
				"summary": "List Access Certificates",
				"description": "List Access Certificates",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access Certificates response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"expires_on": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/expires_on"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates/post/requestBody/content/application~1json/schema/properties/name"
															},
															"fingerprint": {
																"type": "string",
																"description": "The MD5 fingerprint of the certificate",
																"example": "MD5 Fingerprint=1E:80:0F:7A:FD:31:55:96:DE:D5:CB:E2:F0:91:F6:91"
															},
															"associated_hostnames": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates/post/requestBody/content/application~1json/schema/properties/associated_hostnames"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Access Certificate",
				"description": "Create a new Access Certificate",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Access Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"certificate"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Certificate. Only used in the UI.",
										"example": "Allow devs"
									},
									"certificate": {
										"type": "string",
										"description": "The Root CA for your certificates",
										"example": "-----BEGIN CERTIFICATE-----\nMIIGAjCCA+qgAwIBAgIJAI7kymlF7CWT...N4RI7KKB7nikiuUf8vhULKy5IX10\nDrUtmu/B\n-----END CERTIFICATE-----"
									},
									"associated_hostnames": {
										"type": "array",
										"description": "The hostnames that will be prompted for this certificate.",
										"items": {
											"type": "string",
											"description": "Hostname",
											"example": "admin.example.com"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/access/certificates/{uuid}": {
			"get": {
				"summary": "Access Certificate Details",
				"description": "Fetch a single Access Certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Access Certificate Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/0/schema"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"expires_on": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1certificates/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/expires_on"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"fingerprint": {
															"type": "string",
															"description": "The MD5 fingerprint of the certificate",
															"example": "MD5 Fingerprint=1E:80:0F:7A:FD:31:55:96:DE:D5:CB:E2:F0:91:F6:91"
														},
														"associated_hostnames": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/associated_hostnames"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Access Certificate",
				"description": "Update a configured Access Certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Access Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"associated_hostnames"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Certificate. Only used in the UI.",
										"example": "Allow devs"
									},
									"associated_hostnames": {
										"type": "array",
										"description": "The hostnames that will be prompted for this certificate.",
										"items": {
											"type": "string",
											"description": "Hostname",
											"example": "admin.example.com"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Access Certificate",
				"description": "Delete an Access Certificate",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Access Certificate response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1certificates~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/access/apps": {
			"get": {
				"summary": "List Access Applications",
				"description": "List all Access Applications in a zone.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access Applications response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"anyOf": [
															{
																"type": "object",
																"title": "Self Hosted Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"type": "object",
																		"title": "Self Hosted Application",
																		"properties": {
																			"type": {
																				"description": "The application type",
																				"type": "string",
																				"example": "self_hosted"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																			},
																			"domain": {
																				"type": "string",
																				"description": "The domain and path that Access will secure.",
																				"example": "test.example.com/admin"
																			},
																			"logo_url": {
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/logo_url"
																			},
																			"app_launcher_visible": {
																				"description": "Displays the application in the App Launcher.",
																				"type": "boolean",
																				"default": true,
																				"example": true
																			},
																			"session_duration": {
																				"description": "The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.",
																				"default": "24h",
																				"type": "string",
																				"example": "24h"
																			},
																			"allowed_idps": {
																				"type": "array",
																				"description": "The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.",
																				"items": {
																					"type": "string",
																					"description": "The identity providers selected for application",
																					"example": "699d98642c564d2e855e9661899b7252"
																				}
																			},
																			"auto_redirect_to_identity": {
																				"description": "When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.",
																				"type": "boolean",
																				"default": false
																			},
																			"enable_binding_cookie": {
																				"description": "Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.",
																				"type": "boolean",
																				"default": false
																			},
																			"custom_deny_message": {
																				"description": "The custom error message shown to a user when they are denied access to the application.",
																				"type": "string"
																			},
																			"custom_deny_url": {
																				"description": "The custom URL a user is redirected to when they are denied access to the application.",
																				"type": "string"
																			},
																			"http_only_cookie_attribute": {
																				"description": "Enables the HttpOnly cookie attribute, which increases security against XSS attacks.",
																				"type": "boolean",
																				"default": true,
																				"example": true
																			},
																			"same_site_cookie_attribute": {
																				"description": "Sets the SameSite cookie setting, which provides increased security against CSRF attacks.",
																				"type": "string",
																				"example": "strict"
																			},
																			"cors_headers": {
																				"type": "object",
																				"properties": {
																					"allowed_methods": {
																						"description": "Allowed HTTP request methods.",
																						"type": "array",
																						"items": {
																							"type": "string",
																							"enum": [
																								"GET",
																								"POST",
																								"HEAD",
																								"PUT",
																								"DELETE",
																								"CONNECT",
																								"OPTIONS",
																								"TRACE",
																								"PATCH"
																							]
																						},
																						"example": [
																							"GET"
																						]
																					},
																					"allowed_origins": {
																						"description": "Allowed origins.",
																						"type": "array",
																						"example": [
																							"https://example.com"
																						],
																						"items": {}
																					},
																					"allowed_headers": {
																						"description": "Allowed HTTP request headers.",
																						"type": "array",
																						"items": {}
																					},
																					"allow_all_methods": {
																						"description": "Allows all HTTP request methods.",
																						"type": "boolean"
																					},
																					"allow_all_origins": {
																						"description": "Allows all origins.",
																						"type": "boolean"
																					},
																					"allow_all_headers": {
																						"description": "Allows all HTTP request headers.",
																						"type": "boolean",
																						"example": true
																					},
																					"allow_credentials": {
																						"description": "When set to `true`, includes credentials (cookies, authorization headers, or TLS client certificates) with requests.",
																						"type": "boolean"
																					},
																					"max_age": {
																						"description": "The maximum number of seconds the results of a preflight request can be cached.",
																						"type": "number",
																						"maximum": 86400,
																						"minimum": -1,
																						"example": -1
																					}
																				}
																			},
																			"skip_interstitial": {
																				"description": "Enables automatic authentication through cloudflared.",
																				"type": "boolean",
																				"example": true
																			},
																			"service_auth_401_redirect": {
																				"description": "Returns a 401 status code when the request is blocked by a Service Auth policy.",
																				"type": "boolean",
																				"example": true
																			}
																		}
																	}
																]
															},
															{
																"type": "object",
																"title": "SaaS Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"type": "object",
																		"title": "SaaS Application",
																		"properties": {
																			"type": {
																				"description": "The application type",
																				"type": "string",
																				"example": "saas"
																			},
																			"name": {
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																			},
																			"logo_url": {
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/logo_url"
																			},
																			"app_launcher_visible": {
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/app_launcher_visible"
																			},
																			"saas_app": {
																				"type": "object",
																				"properties": {
																					"consumer_service_url": {
																						"description": "The service provider's endpoint that is responsible for receiving and parsing a SAML assertion.",
																						"type": "string",
																						"example": "https://example.com"
																					},
																					"sp_entity_id": {
																						"description": "A globally unique name for an identity or service provider.",
																						"type": "string",
																						"example": "example unique name"
																					},
																					"public_key": {
																						"description": "The Access public certificate that will be used to verify your identity.",
																						"type": "string",
																						"example": "example unique name"
																					},
																					"idp_entity_id": {
																						"description": "The unique identifier for your SaaS application.",
																						"type": "string",
																						"example": "https://example.cloudflareaccess.com"
																					},
																					"name_id_format": {
																						"description": "The format of the name identifier sent to the SaaS application.",
																						"type": "string",
																						"enum": [
																							"id",
																							"email"
																						],
																						"example": "id"
																					},
																					"sso_endpoint": {
																						"description": "The endpoint where your SaaS application will send login requests.",
																						"type": "string",
																						"example": "https://example.cloudflareaccess.com/cdn-cgi/access/sso/saml/b3f58a2b414e0b51d45c8c2af26fccca0e27c63763c426fa52f98dcf0b3b3bfd"
																					},
																					"custom_attributes": {
																						"type": "object",
																						"properties": {
																							"name": {
																								"description": "The name of the attribute.",
																								"type": "string",
																								"example": "family_name"
																							},
																							"name_format": {
																								"description": "A globally unique name for an identity or service provider.",
																								"type": "string",
																								"enum": [
																									"urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified",
																									"urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
																									"urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
																								],
																								"example": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
																							},
																							"source": {
																								"type": "object",
																								"properties": {
																									"name": {
																										"description": "The name of the IdP attribute.",
																										"type": "string",
																										"example": "last_name"
																									}
																								}
																							}
																						}
																					},
																					"created_at": {
																						"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																					},
																					"updated_at": {
																						"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																					}
																				}
																			},
																			"allowed_idps": {
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/allowed_idps"
																			},
																			"auto_redirect_to_identity": {
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/auto_redirect_to_identity"
																			}
																		}
																	}
																]
															},
															{
																"type": "object",
																"title": "Browser SSH Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1"
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "ssh"
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "Browser VNC Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1"
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "vnc"
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "App Launcher Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"type": "object",
																				"properties": {
																					"type": {
																						"type": "string",
																						"description": "The application type.",
																						"example": "self_hosted",
																						"default": "self_hosted",
																						"enum": [
																							"self_hosted",
																							"saas",
																							"ssh",
																							"vnc",
																							"file",
																							"warp",
																							"bookmark"
																						]
																					},
																					"name": {
																						"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																					},
																					"domain": {
																						"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/domain"
																					},
																					"session_duration": {
																						"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/session_duration"
																					},
																					"allowed_idps": {
																						"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/allowed_idps"
																					},
																					"auto_redirect_to_identity": {
																						"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/0/allOf/1/properties/auto_redirect_to_identity"
																					}
																				}
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "app_launcher"
																					},
																					"name": {
																						"default": "App Launcher",
																						"example": "App Launcher",
																						"readOnly": true
																					},
																					"domain": {
																						"example": "authdomain.cloudflareaccess.com",
																						"readOnly": true
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "Device Enrollment Permissions Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/4/allOf/1/allOf/0"
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "warp"
																					},
																					"name": {
																						"default": "Warp Login App",
																						"example": "Warp Login App",
																						"readOnly": true
																					},
																					"domain": {
																						"example": "authdomain.cloudflareaccess.com/warp",
																						"readOnly": true
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "Browser Isolation Permissions Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"allOf": [
																			{
																				"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/anyOf/4/allOf/1/allOf/0"
																			},
																			{
																				"properties": {
																					"type": {
																						"description": "The application type",
																						"type": "string",
																						"example": "biso"
																					},
																					"name": {
																						"default": "Clientless Web Isolation",
																						"example": "Clientless Web Isolation",
																						"readOnly": true
																					},
																					"domain": {
																						"example": "authdomain.cloudflareaccess.com/browser",
																						"readOnly": true
																					}
																				}
																			}
																		]
																	}
																]
															},
															{
																"type": "object",
																"title": "Bookmark Application",
																"allOf": [
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																	},
																	{
																		"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/post/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1"
																	}
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Add the Bookmark application",
				"description": "Adds the Bookmark application to Access, which allows you to add custom links to the App Launcher portal.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add the Bookmark application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
												},
												{
													"properties": {
														"result": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
														}
													}
												}
											]
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"type": "object",
															"properties": {
																"id": {
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																},
																"created_at": {
																	"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																},
																"updated_at": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																},
																"aud": {
																	"description": "Audience tag",
																	"type": "string",
																	"maxLength": 64,
																	"readOnly": true,
																	"example": "737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe3893"
																}
															}
														},
														{
															"type": "object",
															"title": "Bookmark Application",
															"properties": {
																"type": {
																	"description": "The application type",
																	"type": "string",
																	"example": "bookmark"
																},
																"name": {
																	"type": "string",
																	"description": "The name of the application.",
																	"example": "Admin Site"
																},
																"domain": {
																	"description": "The URL or domain of the bookmark.",
																	"example": "https://mybookmark.com"
																},
																"logo_url": {
																	"description": "The image URL for the logo shown in the App Launcher dashboard.",
																	"type": "string",
																	"example": "https://www.cloudflare.com/img/logo-web-badges/cf-logo-on-white-bg.svg"
																},
																"app_launcher_visible": {
																	"default": true
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"domain"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/access/apps/{app_id}": {
			"get": {
				"summary": "Get an Access application",
				"description": "Fetches information about an Access application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an Access application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"anyOf": [
														{
															"type": "object",
															"title": "Self Hosted Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"type": "object",
																	"title": "Self Hosted Application",
																	"properties": {
																		"type": {
																			"description": "The application type",
																			"type": "string",
																			"example": "self_hosted"
																		},
																		"name": {
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																		},
																		"domain": {
																			"type": "string",
																			"description": "The domain and path that Access will secure.",
																			"example": "test.example.com/admin"
																		},
																		"logo_url": {
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/logo_url"
																		},
																		"app_launcher_visible": {
																			"description": "Displays the application in the App Launcher.",
																			"type": "boolean",
																			"default": true,
																			"example": true
																		},
																		"session_duration": {
																			"description": "The amount of time that tokens issued for this application will be valid. Must be in the format `300ms` or `2h45m`. Valid time units are: ns, us (or µs), ms, s, m, h.",
																			"default": "24h",
																			"type": "string",
																			"example": "24h"
																		},
																		"allowed_idps": {
																			"type": "array",
																			"description": "The identity providers your users can select when connecting to this application. Defaults to all IdPs configured in your account.",
																			"items": {
																				"type": "string",
																				"description": "The identity providers selected for application",
																				"example": "699d98642c564d2e855e9661899b7252"
																			}
																		},
																		"auto_redirect_to_identity": {
																			"description": "When set to `true`, users skip the identity provider selection step during login. You must specify only one identity provider in allowed_idps.",
																			"type": "boolean",
																			"default": false
																		},
																		"enable_binding_cookie": {
																			"description": "Enables the binding cookie, which increases security against compromised authorization tokens and CSRF attacks.",
																			"type": "boolean",
																			"default": false
																		},
																		"custom_deny_message": {
																			"description": "The custom error message shown to a user when they are denied access to the application.",
																			"type": "string"
																		},
																		"custom_deny_url": {
																			"description": "The custom URL a user is redirected to when they are denied access to the application.",
																			"type": "string"
																		},
																		"http_only_cookie_attribute": {
																			"description": "Enables the HttpOnly cookie attribute, which increases security against XSS attacks.",
																			"type": "boolean",
																			"default": true,
																			"example": true
																		},
																		"same_site_cookie_attribute": {
																			"description": "Sets the SameSite cookie setting, which provides increased security against CSRF attacks.",
																			"type": "string",
																			"example": "strict"
																		},
																		"cors_headers": {
																			"type": "object",
																			"properties": {
																				"allowed_methods": {
																					"description": "Allowed HTTP request methods.",
																					"type": "array",
																					"items": {
																						"type": "string",
																						"enum": [
																							"GET",
																							"POST",
																							"HEAD",
																							"PUT",
																							"DELETE",
																							"CONNECT",
																							"OPTIONS",
																							"TRACE",
																							"PATCH"
																						]
																					},
																					"example": [
																						"GET"
																					]
																				},
																				"allowed_origins": {
																					"description": "Allowed origins.",
																					"type": "array",
																					"example": [
																						"https://example.com"
																					],
																					"items": {}
																				},
																				"allowed_headers": {
																					"description": "Allowed HTTP request headers.",
																					"type": "array",
																					"items": {}
																				},
																				"allow_all_methods": {
																					"description": "Allows all HTTP request methods.",
																					"type": "boolean"
																				},
																				"allow_all_origins": {
																					"description": "Allows all origins.",
																					"type": "boolean"
																				},
																				"allow_all_headers": {
																					"description": "Allows all HTTP request headers.",
																					"type": "boolean",
																					"example": true
																				},
																				"allow_credentials": {
																					"description": "When set to `true`, includes credentials (cookies, authorization headers, or TLS client certificates) with requests.",
																					"type": "boolean"
																				},
																				"max_age": {
																					"description": "The maximum number of seconds the results of a preflight request can be cached.",
																					"type": "number",
																					"maximum": 86400,
																					"minimum": -1,
																					"example": -1
																				}
																			}
																		},
																		"skip_interstitial": {
																			"description": "Enables automatic authentication through cloudflared.",
																			"type": "boolean",
																			"example": true
																		},
																		"service_auth_401_redirect": {
																			"description": "Returns a 401 status code when the request is blocked by a Service Auth policy.",
																			"type": "boolean",
																			"example": true
																		}
																	}
																}
															]
														},
														{
															"type": "object",
															"title": "SaaS Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"type": "object",
																	"title": "SaaS Application",
																	"properties": {
																		"type": {
																			"description": "The application type",
																			"type": "string",
																			"example": "saas"
																		},
																		"name": {
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																		},
																		"logo_url": {
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/logo_url"
																		},
																		"app_launcher_visible": {
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/app_launcher_visible"
																		},
																		"saas_app": {
																			"type": "object",
																			"properties": {
																				"consumer_service_url": {
																					"description": "The service provider's endpoint that is responsible for receiving and parsing a SAML assertion.",
																					"type": "string",
																					"example": "https://example.com"
																				},
																				"sp_entity_id": {
																					"description": "A globally unique name for an identity or service provider.",
																					"type": "string",
																					"example": "example unique name"
																				},
																				"public_key": {
																					"description": "The Access public certificate that will be used to verify your identity.",
																					"type": "string",
																					"example": "example unique name"
																				},
																				"idp_entity_id": {
																					"description": "The unique identifier for your SaaS application.",
																					"type": "string",
																					"example": "https://example.cloudflareaccess.com"
																				},
																				"name_id_format": {
																					"description": "The format of the name identifier sent to the SaaS application.",
																					"type": "string",
																					"enum": [
																						"id",
																						"email"
																					],
																					"example": "id"
																				},
																				"sso_endpoint": {
																					"description": "The endpoint where your SaaS application will send login requests.",
																					"type": "string",
																					"example": "https://example.cloudflareaccess.com/cdn-cgi/access/sso/saml/b3f58a2b414e0b51d45c8c2af26fccca0e27c63763c426fa52f98dcf0b3b3bfd"
																				},
																				"custom_attributes": {
																					"type": "object",
																					"properties": {
																						"name": {
																							"description": "The name of the attribute.",
																							"type": "string",
																							"example": "family_name"
																						},
																						"name_format": {
																							"description": "A globally unique name for an identity or service provider.",
																							"type": "string",
																							"enum": [
																								"urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified",
																								"urn:oasis:names:tc:SAML:2.0:attrname-format:basic",
																								"urn:oasis:names:tc:SAML:2.0:attrname-format:uri"
																							],
																							"example": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
																						},
																						"source": {
																							"type": "object",
																							"properties": {
																								"name": {
																									"description": "The name of the IdP attribute.",
																									"type": "string",
																									"example": "last_name"
																								}
																							}
																						}
																					}
																				},
																				"created_at": {
																					"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																				},
																				"updated_at": {
																					"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																				}
																			}
																		},
																		"allowed_idps": {
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/allowed_idps"
																		},
																		"auto_redirect_to_identity": {
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/auto_redirect_to_identity"
																		}
																	}
																}
															]
														},
														{
															"type": "object",
															"title": "Browser SSH Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1"
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "ssh"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "Browser VNC Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1"
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "vnc"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "App Launcher Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"type": {
																					"type": "string",
																					"description": "The application type.",
																					"example": "self_hosted",
																					"default": "self_hosted",
																					"enum": [
																						"self_hosted",
																						"saas",
																						"ssh",
																						"vnc",
																						"file",
																						"warp",
																						"bookmark"
																					]
																				},
																				"name": {
																					"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1/properties/name"
																				},
																				"domain": {
																					"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/domain"
																				},
																				"session_duration": {
																					"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/session_duration"
																				},
																				"allowed_idps": {
																					"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/allowed_idps"
																				},
																				"auto_redirect_to_identity": {
																					"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/allOf/1/properties/auto_redirect_to_identity"
																				}
																			}
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "app_launcher"
																				},
																				"name": {
																					"default": "App Launcher",
																					"example": "App Launcher",
																					"readOnly": true
																				},
																				"domain": {
																					"example": "authdomain.cloudflareaccess.com",
																					"readOnly": true
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "Device Enrollment Permissions Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/4/allOf/1/allOf/0"
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "warp"
																				},
																				"name": {
																					"default": "Warp Login App",
																					"example": "Warp Login App",
																					"readOnly": true
																				},
																				"domain": {
																					"example": "authdomain.cloudflareaccess.com/warp",
																					"readOnly": true
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "Browser Isolation Permissions Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"allOf": [
																		{
																			"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/4/allOf/1/allOf/0"
																		},
																		{
																			"properties": {
																				"type": {
																					"description": "The application type",
																					"type": "string",
																					"example": "biso"
																				},
																				"name": {
																					"default": "Clientless Web Isolation",
																					"example": "Clientless Web Isolation",
																					"readOnly": true
																				},
																				"domain": {
																					"example": "authdomain.cloudflareaccess.com/browser",
																					"readOnly": true
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"type": "object",
															"title": "Bookmark Application",
															"allOf": [
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/0"
																},
																{
																	"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/put/responses/200/content/application~1json/schema/allOf/1/properties/result/allOf/1"
																}
															]
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update the Bookmark application",
				"description": "Updates the Bookmark application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update the Bookmark application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/responses/200/content/application~1json/schema"
										},
										{
											"properties": {
												"result": {
													"allOf": [
														{
															"type": "object",
															"properties": {
																"id": {
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																},
																"created_at": {
																	"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																},
																"updated_at": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																},
																"aud": {
																	"description": "Audience tag",
																	"type": "string",
																	"maxLength": 64,
																	"readOnly": true,
																	"example": "737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe3893"
																}
															}
														},
														{
															"type": "object",
															"title": "Bookmark Application",
															"properties": {
																"type": {
																	"description": "The application type",
																	"type": "string",
																	"example": "bookmark"
																},
																"name": {
																	"type": "string",
																	"description": "The name of the application.",
																	"example": "Admin Site"
																},
																"domain": {
																	"description": "The URL or domain of the bookmark.",
																	"example": "https://mybookmark.com"
																},
																"logo_url": {
																	"description": "The image URL for the logo shown in the App Launcher dashboard.",
																	"type": "string",
																	"example": "https://www.cloudflare.com/img/logo-web-badges/cf-logo-on-white-bg.svg"
																},
																"app_launcher_visible": {
																	"default": true
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"domain"
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an Access application",
				"description": "Deletes an application from Access.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Bapp_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an Access application response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/access/apps/{app_id}/revoke_tokens": {
			"post": {
				"summary": "Revoke service tokens",
				"description": "Revokes all service tokens used by an application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Revoke service tokens response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"enum": [
														true,
														false
													],
													"example": true
												},
												"result": {
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{identifier}/access/apps/{app_id}/user_policy_checks": {
			"get": {
				"summary": "Test Access policies",
				"description": "Tests if a specific user has permission to access an application.",
				"parameters": [
					{
						"name": "app_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Test Access policies response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"user_identity": {
															"type": "object",
															"properties": {
																"id": {
																	"type": "string",
																	"example": "1164449231815010287495"
																},
																"version": {
																	"type": "integer"
																},
																"user_uuid": {
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																},
																"name": {
																	"type": "string",
																	"example": "Test User"
																},
																"email": {
																	"type": "string",
																	"example": "testuser@gmail.com"
																},
																"geo": {
																	"type": "object",
																	"properties": {
																		"country": {
																			"type": "string",
																			"example": "US"
																		}
																	}
																},
																"is_warp": {
																	"type": "boolean",
																	"example": false
																},
																"is_gateway": {
																	"type": "boolean",
																	"example": false
																},
																"account_id": {
																	"type": "string",
																	"example": "41ecfbb341f033e52b46742756aabb8b"
																},
																"device_sessions": {
																	"type": "object",
																	"example": {}
																},
																"iat": {
																	"type": "integer"
																}
															}
														},
														"app_state": {
															"type": "object",
															"properties": {
																"aud": {
																	"type": "string",
																	"example": "737646a56ab1df6ec9bddc7e5ca84eaf3b0768850f3ffb5d74f1534911fe389"
																},
																"app_uid": {
																	"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																},
																"hostname": {
																	"type": "string",
																	"example": "test.com"
																},
																"name": {
																	"type": "string",
																	"example": "Test App"
																},
																"policies": {
																	"type": "array",
																	"example": [
																		{
																			"decision": "allow",
																			"include": [
																				{
																					"_type": "email",
																					"email": "testuser@gmail.com"
																				}
																			],
																			"exclude": [],
																			"require": [],
																			"precedence": 0,
																			"status": "Success"
																		}
																	],
																	"items": {}
																},
																"status": {
																	"type": "string",
																	"example": "Success"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{identifier}/access/apps/{uuid}/policies": {
			"get": {
				"summary": "List Access policies",
				"description": "Lists Access policies configured for an application.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "The policy ID.",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Access policies response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/get/parameters/0/schema"
															},
															"precedence": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/precedence"
															},
															"decision": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/decision"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/name"
															},
															"include": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/include"
															},
															"exclude": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/exclude"
															},
															"require": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/require"
															},
															"purpose_justification_required": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/purpose_justification_required"
															},
															"purpose_justification_prompt": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/purpose_justification_prompt"
															},
															"approval_required": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/approval_required"
															},
															"approval_groups": {
																"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/approval_groups"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create an Access policy",
				"description": "Create a new Access policy for an application.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create an Access policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"decision",
									"include"
								],
								"properties": {
									"precedence": {
										"type": "integer",
										"description": "The order of execution for this policy. Must be unique for each policy."
									},
									"decision": {
										"description": "The action Access will take if a user matches this policy.",
										"type": "string",
										"enum": [
											"allow",
											"deny",
											"non_identity",
											"bypass"
										],
										"example": "allow"
									},
									"name": {
										"type": "string",
										"description": "The name of the Access policy.",
										"example": "Allow devs"
									},
									"include": {
										"type": "array",
										"description": "Rules evaluated with an OR logical operator. To match the policy, a user needs to meet only one of the Include rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"exclude": {
										"type": "array",
										"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
										"items": {
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"require": {
										"type": "array",
										"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
										"items": {
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid%7D~1policies/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"purpose_justification_required": {
										"description": "Require users to enter a justification when they log in to the application.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"purpose_justification_prompt": {
										"description": "A custom message that will appear on the purpose justification screen.",
										"type": "string",
										"example": "Please enter a justification for entering this protected domain."
									},
									"approval_required": {
										"description": "Requires the user to request access from an administrator at the start of each session.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"approval_groups": {
										"type": "array",
										"description": "Administrators who can approve a temporary authentication request.",
										"items": {
											"type": "object",
											"description": "A group of email addresses that can approve a temporary authentication request.",
											"required": [
												"approvals_needed"
											],
											"properties": {
												"email_list_uuid": {
													"type": "string",
													"description": "The UUID of an re-usable email list."
												},
												"email_addresses": {
													"type": "array",
													"description": "A list of emails that can approve the access request.",
													"example": [
														"test@cloudflare.com",
														"test2@cloudflare.com"
													],
													"items": {}
												},
												"approvals_needed": {
													"description": "The number of approvals needed to obtain access.",
													"type": "number",
													"minimum": 0,
													"example": 1
												}
											}
										},
										"example": [
											{
												"email_addresses": [
													"test1@cloudflare.com",
													"test2@cloudflare.com"
												],
												"approvals_needed": 1
											},
											{
												"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34",
												"approvals_needed": 3
											}
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{identifier}/access/apps/{uuid1}/policies/{uuid}": {
			"get": {
				"summary": "Get an Access policy",
				"description": "Fetches a single Access policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "The policy ID.",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "uuid1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get an Access policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
														},
														"precedence": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/precedence"
														},
														"decision": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/decision"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"include": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include"
														},
														"exclude": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/exclude"
														},
														"require": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/require"
														},
														"purpose_justification_required": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/purpose_justification_required"
														},
														"purpose_justification_prompt": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/purpose_justification_prompt"
														},
														"approval_required": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/approval_required"
														},
														"approval_groups": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/approval_groups"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update an Access policy",
				"description": "Update a configured Access policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "uuid1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update an Access policy response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"decision",
									"include"
								],
								"properties": {
									"precedence": {
										"type": "integer",
										"description": "The order of execution for this policy. Must be unique for each policy."
									},
									"decision": {
										"description": "The action Access will take if a user matches this policy.",
										"type": "string",
										"enum": [
											"allow",
											"deny",
											"non_identity",
											"bypass"
										],
										"example": "allow"
									},
									"name": {
										"type": "string",
										"description": "The name of the Access policy.",
										"example": "Allow devs"
									},
									"include": {
										"type": "array",
										"description": "Rules evaluated with an OR logical operator. To match the policy, a user needs to meet only one of the Include rules.",
										"items": {
											"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1groups/post/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"exclude": {
										"type": "array",
										"description": "Rules evaluated with a NOT logical operator. To match the policy, a user cannot meet any of the Exclude rules.",
										"items": {
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"require": {
										"type": "array",
										"description": "Rules evaluated with an AND logical operator. To match the policy, a user must meet all of the Require rules.",
										"items": {
											"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/include/items"
										}
									},
									"purpose_justification_required": {
										"description": "Require users to enter a justification when they log in to the application.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"purpose_justification_prompt": {
										"description": "A custom message that will appear on the purpose justification screen.",
										"type": "string",
										"example": "Please enter a justification for entering this protected domain."
									},
									"approval_required": {
										"description": "Requires the user to request access from an administrator at the start of each session.",
										"type": "boolean",
										"default": false,
										"example": true
									},
									"approval_groups": {
										"type": "array",
										"description": "Administrators who can approve a temporary authentication request.",
										"items": {
											"type": "object",
											"description": "A group of email addresses that can approve a temporary authentication request.",
											"required": [
												"approvals_needed"
											],
											"properties": {
												"email_list_uuid": {
													"type": "string",
													"description": "The UUID of an re-usable email list."
												},
												"email_addresses": {
													"type": "array",
													"description": "A list of emails that can approve the access request.",
													"example": [
														"test@cloudflare.com",
														"test2@cloudflare.com"
													],
													"items": {}
												},
												"approvals_needed": {
													"description": "The number of approvals needed to obtain access.",
													"type": "number",
													"minimum": 0,
													"example": 1
												}
											}
										},
										"example": [
											{
												"email_addresses": [
													"test1@cloudflare.com",
													"test2@cloudflare.com"
												],
												"approvals_needed": 1
											},
											{
												"email_list_uuid": "597147a1-976b-4ef2-9af0-81d5d007fc34",
												"approvals_needed": 3
											}
										]
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete an Access policy",
				"description": "Delete an Access policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "uuid1",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete an Access policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bidentifier%7D~1access~1apps~1%7Buuid1%7D~1policies~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/access/users": {
			"get": {
				"summary": "Get Users",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Users response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result_info": {
													"type": "object",
													"properties": {
														"page": {
															"example": 1
														},
														"per_page": {
															"example": 100
														},
														"count": {
															"example": 1
														},
														"total_count": {
															"example": 1
														}
													}
												}
											}
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"name": {
																"type": "string",
																"format": "email",
																"example": "russell@example.com",
																"description": "The email of the user that performed the action."
															},
															"uid": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"email": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1users/get/responses/200/content/application~1json/schema/allOf/2/properties/result/items/properties/name"
															},
															"org_id": {
																"example": "700d98642c564d2e855e9661899b7252"
															},
															"app_count": {
																"type": "number",
																"example": 2,
																"description": "The email of the user that performed the action."
															},
															"last_successful_login": {
																"description": "The time at which the user last successfully logged in",
																"type": "string",
																"format": "date-time",
																"example": "2020-07-01T05:20:00+00:00"
															},
															"used_warp": {
																"type": "boolean",
																"description": "the user used the warp client",
																"example": false
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"seat_uid": {
																"example": "699d98642c564d2e855e9661899b7252"
															},
															"access_seat": {
																"type": "boolean",
																"description": "user seat is part of access",
																"example": false
															},
															"gateway_seat": {
																"type": "boolean",
																"description": "user seat is part of gateway",
																"example": false
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/access/users/{user_id}/failed_logins": {
			"get": {
				"summary": "Get Failed Logins",
				"parameters": [
					{
						"name": "user_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "700d98642c564d2e855e9661899b7111"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Failed Logins response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"expiration": {
																"type": "integer"
															},
															"metadata": {
																"type": "object",
																"example": {
																	"app_name": "Test App",
																	"aud": "39691c1480a2352a18ece567debc2b32552686cbd38eec0887aa18d5d3f00c04",
																	"datetime": "2022-02-02T21:54:34.914000+00:00",
																	"ray_id": "6d76a8a42ead4133",
																	"user_email": "test@cloudflare.com",
																	"user_uuid": "57171132-e453-4ee8-b2a5-8cbaad333207"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/gateway": {
			"post": {
				"summary": "Create Zero Trust account",
				"description": "Create Zero Trust account with existing cloudflare account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Zero Trust account response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway/post/requestBody/content/application~1json/schema/properties/account_id"
														},
														"gateway_tag": {
															"type": "string",
															"maxLength": 32,
															"description": "Gateway internal id",
															"example": "f174e90afafe4643bbbc4a0ed4fc8415"
														},
														"provider_name": {
															"type": "string",
															"description": "The name of provider. Usually cloudflare.",
															"example": "Cloudflare"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"account_id"
								],
								"properties": {
									"account_id": {
										"type": "string",
										"maxLength": 32,
										"description": "Cloudflare account tag",
										"example": "699d98642c564d2e855e9661899b7252"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Zero Trust account information",
				"description": "Get Zero Trust account information",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway/post/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Zero Trust account information response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/gateway/configuration": {
			"put": {
				"summary": "Update Zero Trust account configuration",
				"description": "Updates the current Zero Trust account configuration",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Zero Trust account configuration response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"allOf": [
														{
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1configuration/put/requestBody/content/application~1json/schema"
														},
														{
															"properties": {
																"created_at": {
																	"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																},
																"updated_at": {
																	"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "account settings",
								"properties": {
									"settings": {
										"type": "object",
										"description": "account settings",
										"properties": {
											"antivirus": {
												"type": "object",
												"description": "Anti virus settings",
												"properties": {
													"enabled_download_phase": {
														"type": "boolean",
														"description": "Set to enable antivirus scan on downloads",
														"example": false
													},
													"enabled_upload_phase": {
														"type": "boolean",
														"description": "Set to enable antivirus scan on uploads",
														"example": false
													},
													"fail_closed": {
														"type": "boolean",
														"description": "Block requests for files that cannot be scanned",
														"example": false
													}
												}
											},
											"tls_decrypt": {
												"type": "object",
												"description": "TLS interception settings",
												"properties": {
													"enabled": {
														"type": "boolean",
														"description": "Enable inspecting encrypted HTTP traffic",
														"example": true
													}
												}
											},
											"activity_log": {
												"type": "object",
												"description": "Activity log settings",
												"properties": {
													"enabled": {
														"type": "boolean",
														"description": "Enable activity logging",
														"example": true
													}
												}
											},
											"block_page": {
												"type": "object",
												"description": "Block page layout settings",
												"properties": {
													"enabled": {
														"type": "boolean",
														"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2",
														"example": true
													},
													"name": {
														"type": "string",
														"description": "Block page title",
														"example": "Cloudflare"
													},
													"footer_text": {
														"type": "string",
														"description": "Block page footer text",
														"example": "--footer--"
													},
													"header_text": {
														"type": "string",
														"description": "Block page header text",
														"example": "--header--"
													},
													"mailto_address": {
														"type": "string",
														"description": "Admin email for users to contact",
														"example": "admin@example.com"
													},
													"mailto_subject": {
														"type": "string",
														"description": "Subject line for emails created from block page",
														"example": "Blocked User Inquiry"
													},
													"logo_path": {
														"type": "string",
														"description": "Full URL to the logo file",
														"example": "https://logos.com/a.png"
													},
													"background_color": {
														"type": "string",
														"description": "Block page background color in #rrggbb format"
													}
												}
											},
											"browser_isolation": {
												"type": "object",
												"description": "Browser isolation settings",
												"properties": {
													"url_browser_isolation_enabled": {
														"type": "boolean",
														"description": "Enable Browser Isolation",
														"example": true
													}
												}
											},
											"fips": {
												"type": "object",
												"description": "FIPS settings",
												"properties": {
													"tls": {
														"type": "boolean",
														"description": "Enable only cipher suites and TLS versions compliant with FIPS 140-2",
														"example": true
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Zero Trust account configuration",
				"description": "Describes current Zero Trust account configuration",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1configuration/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Zero Trust account configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1configuration/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/devices/settings": {
			"put": {
				"summary": "Update device settings for the Zero Trust account",
				"description": "Updates the current device settings for Zero Trust account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update device settings for the Zero Trust account response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1settings/put/requestBody/content/application~1json/schema"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"gateway_proxy_enabled": {
										"type": "boolean",
										"description": "Enable gateway proxy filtering on TCP",
										"example": true
									},
									"gateway_udp_proxy_enabled": {
										"type": "boolean",
										"description": "Enable gateway proxy filtering on UDP",
										"example": true
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get device settings for Zero Trust account",
				"description": "Describes the current device settings Zero Trust account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1settings/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get device settings for Zero Trust account response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1settings/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/gateway/logging": {
			"put": {
				"summary": "Update logging settings for the Zero Trust account",
				"description": "Updates the current logging settings for the Zero Trust accounty",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update logging settings for the Zero Trust account response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1logging/put/requestBody/content/application~1json/schema"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"settings_by_rule_type": {
										"type": "object",
										"description": "Logging settings by rule type",
										"properties": {
											"dns": {
												"type": "object",
												"description": "Logging settings for DNS firewall"
											},
											"l4": {
												"type": "object",
												"description": "Logging settings for Network firewall"
											},
											"http": {
												"type": "object",
												"description": "Logging settings for HTTP/HTTPS firewall"
											}
										}
									},
									"redact_pii": {
										"type": "boolean",
										"description": "Redact personally identifiable information from activity logging (PII fields are: source IP, user email, user ID, device ID, URL, referrer, user agent)",
										"example": true
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get logging settings for the Zero Trust account",
				"description": "Describes the current logging settings for Zero Trust account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1logging/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get logging settings for the Zero Trust account response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1logging/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/gateway/lists": {
			"get": {
				"summary": "List Zero Trust Lists",
				"description": "List Zero Trust Lists for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Zero Trust Lists response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/post/requestBody/content/application~1json/schema/properties/name"
															},
															"description": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/post/requestBody/content/application~1json/schema/properties/description"
															},
															"type": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/post/requestBody/content/application~1json/schema/properties/type"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"count": {
																"type": "number",
																"description": "The number of items in the List.",
																"readOnly": true,
																"example": 20
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Zero Trust List",
				"description": "Create a new Zero Trust List",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Zero Trust List response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"type": "string",
															"maxLength": 36,
															"description": "API Resource UUID tag",
															"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/post/requestBody/content/application~1json/schema/properties/name"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/post/requestBody/content/application~1json/schema/properties/description"
														},
														"type": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/post/requestBody/content/application~1json/schema/properties/type"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"items": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists/post/requestBody/content/application~1json/schema/properties/items"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the List.",
										"example": "Admin Serial Numbers"
									},
									"description": {
										"type": "string",
										"description": "The description of the List",
										"example": "The serial numbers for administrators"
									},
									"type": {
										"type": "string",
										"description": "The type of List.",
										"enum": [
											"SERIAL",
											"URL",
											"DOMAIN",
											"EMAIL",
											"IP"
										],
										"example": "SERIAL"
									},
									"items": {
										"type": "array",
										"description": "The items in the List.",
										"items": {
											"type": "object",
											"properties": {
												"value": {
													"type": "string",
													"description": "The value of the item in a List.",
													"example": "8GE8721REF"
												},
												"created_at": {
													"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/gateway/lists/{uuid}": {
			"get": {
				"summary": "Zero Trust List Details",
				"description": "Fetch a single Zero Trust List",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "API Resource UUID tag",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Zero Trust List Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/parameters/0/schema"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"type": {
															"type": "string",
															"description": "The type of List.",
															"enum": [
																"SERIAL",
																"URL",
																"DOMAIN",
																"EMAIL",
																"IP"
															],
															"example": "SERIAL"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"count": {
															"type": "number",
															"description": "The number of items in the List.",
															"readOnly": true,
															"example": 20
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Zero Trust List",
				"description": "Update a configured Zero Trust List",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Zero Trust List response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the List.",
										"example": "Admin Serial Numbers"
									},
									"description": {
										"type": "string",
										"description": "The description of the List",
										"example": "The serial numbers for administrators"
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch Zero Trust List",
				"description": "Append or remove an item from a configured Zero Trust List",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch Zero Trust List response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"append": {
										"type": "array",
										"description": "The items in the List.",
										"items": {
											"type": "object",
											"properties": {
												"value": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/patch/requestBody/content/application~1json/schema/properties/remove/items"
												},
												"created_at": {
													"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
												}
											}
										}
									},
									"remove": {
										"type": "array",
										"description": "A list of the item values you want to remove.",
										"items": {
											"type": "string",
											"description": "The value of the item in a List.",
											"example": "8GE8721REF"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Zero Trust List",
				"description": "Delete a Zero Trust List",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1lists~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Zero Trust List response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/gateway/lists/{uuid}/items": {
			"get": {
				"summary": "Zero Trust List Items",
				"description": "Fetch all items of a single Zero Trust List",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "API Resource UUID tag",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Zero Trust List Items response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "array",
														"description": "The items in the List.",
														"items": {
															"type": "object",
															"properties": {
																"value": {
																	"type": "string",
																	"description": "The value of the item in a List.",
																	"example": "8GE8721REF"
																},
																"created_at": {
																	"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																}
															}
														}
													}
												}
											}
										},
										{
											"properties": {
												"result_info": {
													"type": "object",
													"properties": {
														"page": {
															"description": "Current page within paginated list of results",
															"type": "number",
															"example": 1
														},
														"per_page": {
															"description": "Number of results per page of results",
															"type": "number",
															"example": 20
														},
														"count": {
															"description": "Total results returned based on your search parameters",
															"type": "number",
															"example": 1
														},
														"total_count": {
															"description": "Total results available without any search parameters",
															"type": "number",
															"example": 2000
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/gateway/locations": {
			"get": {
				"summary": "List Zero Trust Gateway Locations",
				"description": "List Zero Trust Gateway Locations for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Zero Trust Gateway Locations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "ed35569b41ce4d1facfe683550f54086"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations/post/requestBody/content/application~1json/schema/properties/name"
															},
															"ip": {
																"type": "string",
																"description": "IPV6 destination ip assigned to this location. DNS requests sent to this IP will counted as the request under this location. (auto-generated)",
																"example": "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
															},
															"networks": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations/post/requestBody/content/application~1json/schema/properties/networks"
															},
															"doh_subdomain": {
																"type": "string",
																"description": "The DNS Over HTTPS domain to send DNS requests to. (auto-generated)",
																"example": "oli3n9zkz5"
															},
															"client_default": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations/post/requestBody/content/application~1json/schema/properties/client_default"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Zero Trust Gateway Location",
				"description": "Create a new Zero Trust Gateway Location",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Zero Trust Gateway Location response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Location",
										"example": "Austin Office Location"
									},
									"networks": {
										"type": "array",
										"description": "A list of network ranges that requests from this location would originate from",
										"items": {
											"type": "string",
											"description": "The IPv4 address, IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /16",
											"example": "192.0.2.1"
										}
									},
									"client_default": {
										"type": "boolean",
										"description": "Set if the location is the default one",
										"example": "false"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/gateway/locations/{uuid}": {
			"get": {
				"summary": "Zero Trust Gateway Location Details",
				"description": "Fetch a single Zero Trust Gateway Location",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"example": "ed35569b41ce4d1facfe683550f54086"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Zero Trust Gateway Location Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/get/parameters/0/schema"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"ip": {
															"type": "string",
															"description": "IPV6 destination ip assigned to this location. DNS requests sent to this IP will counted as the request under this location. (auto-generated)",
															"example": "2001:0db8:85a3:0000:0000:8a2e:0370:7334"
														},
														"networks": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/networks"
														},
														"doh_subdomain": {
															"type": "string",
															"description": "The DNS Over HTTPS domain to send DNS requests to. (auto-generated)",
															"example": "oli3n9zkz5"
														},
														"client_default": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/client_default"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Zero Trust Gateway Location",
				"description": "Update a configured Zero Trust Gateway Location",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Zero Trust Gateway Location response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Location",
										"example": "Austin Office Location"
									},
									"networks": {
										"type": "array",
										"description": "A list of network ranges that requests from this location would originate from",
										"items": {
											"type": "string",
											"description": "The IPv4 address, IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /16",
											"example": "192.0.2.1"
										}
									},
									"client_default": {
										"type": "boolean",
										"description": "Set if the location is the default one",
										"example": "false"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Zero Trust Gateway Location",
				"description": "Delete a Zero Trust Gateway Location",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1locations~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Zero Trust Gateway Location response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/gateway/rules": {
			"get": {
				"summary": "List Zero Trust Gateway Rules",
				"description": "List Zero Trust Gateway Rules for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Zero Trust Gateway Rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"type": "string",
																"maxLength": 36,
																"description": "API Resource UUID tag",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/name"
															},
															"description": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/description"
															},
															"precedence": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/precedence"
															},
															"enabled": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/enabled"
															},
															"action": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/action"
															},
															"filters": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/filters"
															},
															"traffic": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/traffic"
															},
															"identity": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/identity"
															},
															"device_posture": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/device_posture"
															},
															"rule_settings": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/post/requestBody/content/application~1json/schema/properties/rule_settings"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"deleted_at": {
																"description": "Date of deletion, if any",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": null,
																"nullable": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Zero Trust Gateway Rule",
				"description": "Create a new Zero Trust Gateway Rule",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Zero Trust Gateway Rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"action"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Rule.",
										"example": "block bad websites"
									},
									"description": {
										"type": "string",
										"description": "The description of the Rule",
										"example": "Block the bad websites based on host name"
									},
									"action": {
										"type": "string",
										"description": "The action to preform when the associated traffic, identity, and device posture expressions are either absent or evaluate to 'true'",
										"enum": [
											true,
											false,
											"allow",
											"block",
											"scan",
											"noscan",
											"safesearch",
											"ytrestricted",
											"isolate",
											"noisolate",
											"override",
											"l4_override"
										],
										"example": "allow"
									},
									"filters": {
										"type": "array",
										"description": "The protocol or layer to evaluate the traffic, identity, and device posture expressions",
										"items": {
											"type": "string",
											"enum": [
												"http",
												"dns",
												"l4"
											],
											"example": "http",
											"description": "The protocol or layer to use"
										}
									},
									"enabled": {
										"type": "boolean",
										"description": "Set if the rule is enabled",
										"example": true
									},
									"precedence": {
										"type": "integer",
										"description": "Precedence sets the ordering of the rules. Lower values indicate higher precedence. At each processing phase, applicable rules are evaluated in ascending order of this value."
									},
									"traffic": {
										"type": "string",
										"description": "The wirefilter expression to be used for traffic matching",
										"example": "http.request.host == \"example.com\""
									},
									"identity": {
										"type": "string",
										"description": "The wirefilter expression to be used for identity matching",
										"example": "any(identity.groups.name[*] in {\"finance\"})"
									},
									"device_posture": {
										"type": "string",
										"description": "The wirefilter expression to be used for device posture check matching",
										"example": "any(device_posture.checks.passed[*] in {\"1308749e-fcfb-4ebc-b051-fe022b632644\"})"
									},
									"rule_settings": {
										"type": "object",
										"properties": {
											"block_page_enabled": {
												"type": "boolean",
												"description": "Enable the custom block page",
												"example": true
											},
											"block_reason": {
												"type": "string",
												"description": "The text describing why this block occurred that will be displayed on the custom block page (if enabled)",
												"example": "This website is a security risk"
											},
											"override_host": {
												"type": "string",
												"description": "Override matching DNS queries with this",
												"example": "example.com"
											},
											"override_ips": {
												"type": "array",
												"description": "Override matching DNS queries with this",
												"items": {
													"type": "string",
													"example": "1.1.1.1",
													"description": "IPv4 or IPv6 address"
												}
											},
											"l4override": {
												"type": "object",
												"description": "Send matching traffic to the supplied destination IP address and port.",
												"properties": {
													"ip": {
														"type": "string",
														"example": "1.1.1.1",
														"description": "IPv4 or IPv6 address"
													},
													"port": {
														"type": "integer",
														"example": 80,
														"description": "A port number to use for TCP/UDP overrides"
													}
												}
											},
											"add_headers": {
												"type": "object",
												"description": "Add custom headers to allowed requests, in the form of key-value pairs. Keys are header names, pointing to an array with its header value(s).",
												"example": {
													"X-Custom-Header-Name": [
														"somecustomvalue"
													],
													"My-Next-Header": [
														"foo",
														"bar"
													]
												}
											},
											"ip_categories": {
												"type": "boolean",
												"description": "Include IPs in DNS resolver category blocks. By default categories only block on domain names.",
												"example": true
											},
											"biso_admin_controls": {
												"type": "object",
												"description": "Configure how browser isolation behaves",
												"properties": {
													"dp": {
														"type": "boolean",
														"example": false,
														"description": "Disable printing"
													},
													"dcp": {
														"type": "boolean",
														"example": false,
														"description": "Disable copy-paste"
													},
													"dd": {
														"type": "boolean",
														"example": false,
														"description": "Disable download"
													},
													"du": {
														"type": "boolean",
														"example": false,
														"description": "Disable upload"
													},
													"dk": {
														"type": "boolean",
														"example": false,
														"description": "Disable keyboard usage"
													}
												}
											},
											"check_session": {
												"type": "object",
												"description": "Configure how session check behaves",
												"properties": {
													"enforce": {
														"type": "boolean",
														"example": true,
														"description": "Enable session enforcement for this fule"
													},
													"duration": {
														"type": "string",
														"example": "300s",
														"description": "Configure how fresh the session needs to be to be considered valid"
													}
												}
											},
											"insecure_disable_dnssec_validation": {
												"type": "boolean",
												"example": false,
												"description": "INSECURE - disable DNSSEC validation (for allow actions)"
											}
										},
										"description": "Additional settings that modify the rule's action"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/gateway/rules/{uuid}": {
			"get": {
				"summary": "Zero Trust Gateway Rule Details",
				"description": "Fetch a single Zero Trust Gateway Rule",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "API Resource UUID tag",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Zero Trust Gateway Rule Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/get/parameters/0/schema"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"precedence": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/precedence"
														},
														"enabled": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/enabled"
														},
														"action": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/action"
														},
														"filters": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/filters"
														},
														"traffic": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/traffic"
														},
														"identity": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/identity"
														},
														"device_posture": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/device_posture"
														},
														"rule_settings": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/rule_settings"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"deleted_at": {
															"description": "Date of deletion, if any",
															"type": "string",
															"format": "date-time",
															"readOnly": true,
															"example": null,
															"nullable": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Zero Trust Gateway Rule",
				"description": "Update a configured Zero Trust Gateway Rule",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Zero Trust Gateway Rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"action"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Rule.",
										"example": "block bad websites"
									},
									"description": {
										"type": "string",
										"description": "The description of the Rule",
										"example": "Block the bad websites based on host name"
									},
									"action": {
										"type": "string",
										"description": "The action to preform when the associated traffic, identity, and device posture expressions are either absent or evaluate to 'true'",
										"enum": [
											true,
											false,
											"allow",
											"block",
											"scan",
											"noscan",
											"safesearch",
											"ytrestricted",
											"isolate",
											"noisolate",
											"override",
											"l4_override"
										],
										"example": "allow"
									},
									"filters": {
										"type": "array",
										"description": "The protocol or layer to evaluate the traffic, identity, and device posture expressions",
										"items": {
											"type": "string",
											"enum": [
												"http",
												"dns",
												"l4"
											],
											"example": "http",
											"description": "The protocol or layer to use"
										}
									},
									"enabled": {
										"type": "boolean",
										"description": "Set if the rule is enabled",
										"example": true
									},
									"precedence": {
										"type": "integer",
										"description": "Precedence sets the ordering of the rules. Lower values indicate higher precedence. At each processing phase, applicable rules are evaluated in ascending order of this value."
									},
									"traffic": {
										"type": "string",
										"description": "The wirefilter expression to be used for traffic matching",
										"example": "http.request.host == \"example.com\""
									},
									"identity": {
										"type": "string",
										"description": "The wirefilter expression to be used for identity matching",
										"example": "any(identity.groups.name[*] in {\"finance\"})"
									},
									"device_posture": {
										"type": "string",
										"description": "The wirefilter expression to be used for device posture check matching",
										"example": "any(device_posture.checks.passed[*] in {\"1308749e-fcfb-4ebc-b051-fe022b632644\"})"
									},
									"rule_settings": {
										"type": "object",
										"properties": {
											"block_page_enabled": {
												"type": "boolean",
												"description": "Enable the custom block page",
												"example": true
											},
											"block_reason": {
												"type": "string",
												"description": "The text describing why this block occurred that will be displayed on the custom block page (if enabled)",
												"example": "This website is a security risk"
											},
											"override_host": {
												"type": "string",
												"description": "Override matching DNS queries with this",
												"example": "example.com"
											},
											"override_ips": {
												"type": "array",
												"description": "Override matching DNS queries with this",
												"items": {
													"type": "string",
													"example": "1.1.1.1",
													"description": "IPv4 or IPv6 address"
												}
											},
											"l4override": {
												"type": "object",
												"description": "Send matching traffic to the supplied destination IP address and port.",
												"properties": {
													"ip": {
														"type": "string",
														"example": "1.1.1.1",
														"description": "IPv4 or IPv6 address"
													},
													"port": {
														"type": "integer",
														"example": 80,
														"description": "A port number to use for TCP/UDP overrides"
													}
												}
											},
											"add_headers": {
												"type": "object",
												"description": "Add custom headers to allowed requests, in the form of key-value pairs. Keys are header names, pointing to an array with its header value(s).",
												"example": {
													"X-Custom-Header-Name": [
														"somecustomvalue"
													],
													"My-Next-Header": [
														"foo",
														"bar"
													]
												}
											},
											"ip_categories": {
												"type": "boolean",
												"description": "Include IPs in DNS resolver category blocks. By default categories only block on domain names.",
												"example": true
											},
											"biso_admin_controls": {
												"type": "object",
												"description": "Configure how browser isolation behaves",
												"properties": {
													"dp": {
														"type": "boolean",
														"example": false,
														"description": "Disable printing"
													},
													"dcp": {
														"type": "boolean",
														"example": false,
														"description": "Disable copy-paste"
													},
													"dd": {
														"type": "boolean",
														"example": false,
														"description": "Disable download"
													},
													"du": {
														"type": "boolean",
														"example": false,
														"description": "Disable upload"
													},
													"dk": {
														"type": "boolean",
														"example": false,
														"description": "Disable keyboard usage"
													}
												}
											},
											"check_session": {
												"type": "object",
												"description": "Configure how session check behaves",
												"properties": {
													"enforce": {
														"type": "boolean",
														"example": true,
														"description": "Enable session enforcement for this fule"
													},
													"duration": {
														"type": "string",
														"example": "300s",
														"description": "Configure how fresh the session needs to be to be considered valid"
													}
												}
											},
											"insecure_disable_dnssec_validation": {
												"type": "boolean",
												"example": false,
												"description": "INSECURE - disable DNSSEC validation (for allow actions)"
											}
										},
										"description": "Additional settings that modify the rule's action"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Zero Trust Gateway Rule",
				"description": "Delete a Zero Trust Gateway Rule",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1rules~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Zero Trust Gateway Rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/gateway/app_types": {
			"get": {
				"summary": "List Application and Application Type mappings",
				"description": "List all Application and Application Type mappings",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Application and Application Type mappings response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"oneOf": [
															{
																"type": "object",
																"properties": {
																	"id": {
																		"type": "integer",
																		"description": "The identifier for this application. There is only one application per id."
																	},
																	"name": {
																		"type": "string",
																		"description": "The name of the application or application type.",
																		"example": "Facebook"
																	},
																	"created_at": {
																		"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																	},
																	"application_type_id": {
																		"type": "integer",
																		"description": "The identifier for the type of this application. There can be many applications with the same type. This refers to the `id` of an Application Type that has been returned."
																	}
																}
															},
															{
																"type": "object",
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1app_types/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/properties/application_type_id"
																	},
																	"name": {
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1app_types/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/oneOf/0/properties/name"
																	},
																	"created_at": {
																		"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
																	},
																	"description": {
																		"type": "string",
																		"description": "A short summary of applications with this type.",
																		"example": "Applications used to communicate or collaborate in a business setting."
																	}
																}
															}
														],
														"readOnly": true
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_id}/gateway/categories": {
			"get": {
				"summary": "List Categories",
				"description": "List all Categories",
				"parameters": [
					{
						"name": "account_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Categories response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"name": {
																"type": "string",
																"description": "The name of the category.",
																"example": "Education"
															},
															"id": {
																"type": "integer",
																"description": "The identifier for this category. There is only one category per id."
															},
															"description": {
																"type": "string",
																"description": "A short summary of domains in the category.",
																"example": "Sites related to educational content that are not included in other categories like Science, Technology or Educational institutions."
															},
															"class": {
																"type": "string",
																"enum": [
																	"free",
																	"premium",
																	"blocked",
																	"removalPending",
																	"noBlock"
																],
																"description": "Which account types are allowed to create policies based on this categories. `blocked` categories are blocked unconditionally for all accounts. `removalPending` categories can be removed from policies but not added. `noBlock` categories cannot be blocked.",
																"example": "premium"
															},
															"beta": {
																"type": "boolean",
																"description": "Whether the category is in beta and subject to change.",
																"example": false
															},
															"subcategories": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"name": {
																			"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1gateway~1categories/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/name"
																		},
																		"id": {
																			"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1gateway~1categories/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																		},
																		"description": {
																			"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1gateway~1categories/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/description"
																		},
																		"class": {
																			"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1gateway~1categories/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/class"
																		},
																		"beta": {
																			"$ref": "#/paths/~1accounts~1%7Baccount_id%7D~1gateway~1categories/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/beta"
																		}
																	}
																},
																"description": "All subcategories for this category."
															}
														},
														"readOnly": true
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/gateway/proxy_endpoints/{uuid}": {
			"get": {
				"summary": "Proxy Endpoint Details",
				"description": "List Zero Trust Gateway Proxy Endpoints for an account",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"example": "ed35569b41ce4d1facfe683550f54086"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Proxy Endpoint Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/get/parameters/0/schema"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/patch/requestBody/content/application~1json/schema/properties/name"
														},
														"ips": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/patch/requestBody/content/application~1json/schema/properties/ips"
														},
														"subdomain": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/patch/requestBody/content/application~1json/schema/properties/subdomain"
														},
														"created_at": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"updated_at": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"patch": {
				"summary": "Update Proxy Endpoint",
				"description": "Update a new Zero Trust Gateway Proxy Endpoint",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Proxy Endpoint response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Proxy Endpoint",
										"example": "Devops team"
									},
									"ips": {
										"type": "array",
										"description": "A list of CIDRs to restrict ingress connections",
										"items": {
											"type": "string",
											"description": "The IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /109. IPv4 CIDRs are limited to a maximum of /25",
											"example": "192.0.2.1/32"
										}
									},
									"subdomain": {
										"type": "string",
										"description": "The subdomain to be used as the destination in the proxy client.",
										"example": "oli3n9zkz5.proxy.cloudflare-gateway.com"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Proxy Endpoint",
				"description": "Delete a Zero Trust Gateway Proxy Endpoint",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Proxy Endpoint response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/gateway/proxy_endpoints": {
			"get": {
				"summary": "List Proxy Endpoints",
				"description": "Fetch a single Zero Trust Gateway Proxy Endpoint",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Proxy Endpoints response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "ed35569b41ce4d1facfe683550f54086"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints/post/requestBody/content/application~1json/schema/properties/name"
															},
															"ips": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints/post/requestBody/content/application~1json/schema/properties/ips"
															},
															"subdomain": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints/post/requestBody/content/application~1json/schema/properties/subdomain"
															},
															"created_at": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"updated_at": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Proxy Endpoint",
				"description": "Create a new Zero Trust Gateway Proxy Endpoint",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Proxy Endpoint response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1gateway~1proxy_endpoints/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"ips"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the Proxy Endpoint",
										"example": "Devops team"
									},
									"ips": {
										"type": "array",
										"description": "A list of CIDRs to restrict ingress connections",
										"items": {
											"type": "string",
											"description": "The IPv4 CIDR or IPv6 CIDR. IPv6 CIDRs are limited to a maximum of /109. IPv4 CIDRs are limited to a maximum of /25",
											"example": "192.0.2.1/32"
										}
									},
									"subdomain": {
										"type": "string",
										"description": "The subdomain to be used as the destination in the proxy client.",
										"example": "oli3n9zkz5.proxy.cloudflare-gateway.com"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/devices/posture": {
			"get": {
				"summary": "List Device Posture Rules",
				"description": "List Device Posture Rules for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Device Posture Rules response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/input/properties/id"
															},
															"type": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/type"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/name"
															},
															"description": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/description"
															},
															"schedule": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/schedule"
															},
															"match": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/match"
															},
															"input": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/input"
															},
															"expiration": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/expiration"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Device Posture Rule",
				"description": "Create a new Device Posture Rule",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Device Posture Rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The type of Device Posture Rule.",
										"enum": [
											"file",
											"application",
											"serial_number",
											"tanium",
											"gateway",
											"warp"
										],
										"example": "file"
									},
									"name": {
										"type": "string",
										"description": "The name of the Device Posture Rule.",
										"example": "Admin Serial Numbers"
									},
									"description": {
										"type": "string",
										"description": "The description of the Device Posture Rule",
										"example": "The rule for admin serial numbers"
									},
									"schedule": {
										"type": "string",
										"description": "Tells the client when to run the device posture check.",
										"example": "1h"
									},
									"match": {
										"type": "array",
										"description": "The conditions that the client must match to run the rule.",
										"items": {
											"type": "object",
											"properties": {
												"platform": {
													"type": "string",
													"enum": [
														"windows",
														"mac",
														"linux",
														"android",
														"ios"
													],
													"example": "windows"
												}
											}
										}
									},
									"input": {
										"type": "object",
										"description": "The value to be checked against.",
										"properties": {
											"id": {
												"type": "string",
												"maxLength": 36,
												"description": "API uuid tag",
												"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
											}
										}
									},
									"expiration": {
										"type": "string",
										"description": "Expire posture results after the specified amount of time.",
										"example": "1h"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/devices/posture/{uuid}": {
			"get": {
				"summary": "Device Posture Rules Details",
				"description": "Fetch a single Device Posture Rule",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "API uuid tag",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Device Posture Rules Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/get/parameters/0/schema"
														},
														"type": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/type"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"schedule": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/schedule"
														},
														"match": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/match"
														},
														"input": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/input"
														},
														"expiration": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/expiration"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update Device Posture Rule",
				"description": "Update a Device Posture Rule",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Device Posture Rule response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The type of Device Posture Rule.",
										"enum": [
											"file",
											"application",
											"serial_number",
											"tanium",
											"gateway",
											"warp"
										],
										"example": "file"
									},
									"name": {
										"type": "string",
										"description": "The name of the Device Posture Rule.",
										"example": "Admin Serial Numbers"
									},
									"description": {
										"type": "string",
										"description": "The description of the Device Posture Rule",
										"example": "The rule for admin serial numbers"
									},
									"schedule": {
										"type": "string",
										"description": "Tells the client when to run the device posture check.",
										"example": "1h"
									},
									"match": {
										"type": "array",
										"description": "The conditions that the client must match to run the rule.",
										"items": {
											"type": "object",
											"properties": {
												"platform": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/match/items/properties/platform"
												}
											}
										}
									},
									"input": {
										"type": "object",
										"description": "The value to be checked against.",
										"properties": {
											"id": {
												"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/get/parameters/0/schema"
											}
										}
									},
									"expiration": {
										"type": "string",
										"description": "Expire posture results after the specified amount of time.",
										"example": "1h"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Device Posture Rule",
				"description": "Delete a Device Posture Rule",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Device Posture Rule response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/devices": {
			"get": {
				"summary": "List Devices",
				"description": "List Enrolled Devices",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Devices response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"type": "string",
																"maxLength": 36,
																"description": "Device ID",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
															},
															"user": {
																"type": "object",
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																	},
																	"name": {
																		"type": "string",
																		"example": "John Appleseed",
																		"description": "The enrolled device user's name."
																	},
																	"email": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/allOf/1/properties/scope/properties/email"
																	}
																}
															},
															"key": {
																"type": "string",
																"example": "yek0SUYoOQ10vMGsIYAevozXUQpQtNFJFfFGqER/BGc=",
																"description": "The device's public key."
															},
															"device_type": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture/post/requestBody/content/application~1json/schema/properties/match/items/properties/platform"
															},
															"name": {
																"type": "string",
																"example": "My mobile device",
																"description": "The device name"
															},
															"model": {
																"type": "string",
																"example": "MyPhone(pro-X)",
																"description": "The device model name"
															},
															"manufacturer": {
																"type": "string",
																"example": "My phone corp",
																"description": "The device manufacturer name"
															},
															"deleted": {
																"type": "boolean",
																"example": true,
																"description": "True if the device was deleted"
															},
															"version": {
																"type": "string",
																"example": "1.0.0",
																"description": "The WARP client version."
															},
															"serial_number": {
																"type": "string",
																"example": "EXAMPLEHMD6R",
																"description": "The device serial number"
															},
															"os_version": {
																"type": "string",
																"description": "The operating system version",
																"example": "10.0.0"
															},
															"mac_address": {
																"type": "string",
																"example": "00-00-5E-00-53-00",
																"description": "The device mac address"
															},
															"ip": {
																"type": "string",
																"example": "1.1.1.1",
																"description": "IPv4 or IPv6 address"
															},
															"created": {
																"type": "string",
																"format": "date-time",
																"example": "2017-06-14T00:00:00+00:00",
																"description": "When the device was created"
															},
															"updated": {
																"type": "string",
																"format": "date-time",
																"example": "2017-06-14T00:00:00+00:00",
																"description": "When the device was updated"
															},
															"last_seen": {
																"type": "string",
																"format": "date-time",
																"example": "2017-06-14T00:00:00+00:00",
																"description": "When the device last connected to Cloudflare services."
															},
															"revoked_at": {
																"type": "string",
																"format": "date-time",
																"example": "2017-06-14T00:00:00+00:00",
																"description": "When the device was revoked."
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/devices/{uuid}": {
			"get": {
				"summary": "Device Details",
				"description": "Fetch a single Device",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "Device ID",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Device Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/devices/revoke": {
			"post": {
				"summary": "Revoke Devices",
				"description": "Revoke a list of devices",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Revoke Devices response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"maxLength": 200,
								"description": "A list of device ids to revoke",
								"items": {
									"type": "string",
									"maxLength": 36,
									"description": "Device ID",
									"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/devices/unrevoke": {
			"post": {
				"summary": "Unrevoke Devices",
				"description": "Unrevoke a list of devices",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Unrevoke Devices response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"maxLength": 200,
								"description": "A list of device ids to unrevoke",
								"items": {
									"type": "string",
									"maxLength": 36,
									"description": "Device ID",
									"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/devices/{uuid}/override_codes": {
			"get": {
				"summary": "List Admin Override code for device",
				"description": "Fetch one-time use admin override code for a device. This relies on the Admin Override setting being enabled in your device configuration.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "Device ID",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Admin Override code for device response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"disable_for_time": {
															"type": "object",
															"properties": {
																"1": {
																	"example": "9106681",
																	"description": "Override code that is valid for 1 hour."
																},
																"3": {
																	"example": "5356247",
																	"description": "Override code that is valid for 3 hours."
																},
																"6": {
																	"example": "9478972",
																	"description": "Override code that is valid for 6 hours."
																},
																"12": {
																	"example": "3424359",
																	"description": "Override code that is valid for 12 hour2."
																},
																"24": {
																	"example": "2887634",
																	"description": "Override code that is valid for 24 hour.2"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/devices/policy/fallback_domains": {
			"put": {
				"summary": "Set Local Domain Fallback List",
				"description": "Set the list of domains resolved locally by WARP clients",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Set Local Domain Fallback List response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1fallback_domains/put/requestBody/content/application~1json/schema/items"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"required": [
										"suffix"
									],
									"properties": {
										"suffix": {
											"type": "string",
											"example": "example.com",
											"description": "The domain suffix to match when resolving locally."
										},
										"description": {
											"type": "string",
											"maxLength": 100,
											"example": "Domain bypass for local development",
											"description": "A description of the fallback domain, displayed in the client UI"
										},
										"dns_server": {
											"type": "array",
											"description": "A list of IP addresses to handle domain resolution.",
											"items": {}
										}
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Local Domain Fallback List",
				"description": "Get the list of domains resolved locally by WARP clients",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1fallback_domains/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Local Domain Fallback List response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1fallback_domains/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/devices/policy/exclude": {
			"put": {
				"summary": "Set Split Tunnel Exclude List",
				"description": "Set the list of routes excluded from the WARP client's tunnel",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Set Split Tunnel Exclude List response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1exclude/put/requestBody/content/application~1json/schema/items"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"address": {
											"type": "string",
											"example": "192.0.2.0/24",
											"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present."
										},
										"description": {
											"type": "string",
											"maxLength": 100,
											"example": "Exclude testing domains from the tunnel",
											"description": "A description of the split tunnel item, displayed in the client UI."
										},
										"host": {
											"type": "string",
											"example": "*.example.com",
											"description": "The domain name to exclude from the tunnel. If host is present, address must not be present."
										}
									},
									"required": [
										"address",
										"description"
									]
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Split Tunnel Exclude List",
				"description": "Get the list of routes excluded from the WARP client's tunnel",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1exclude/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Split Tunnel Exclude List response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1exclude/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/devices/policy/include": {
			"put": {
				"summary": "Set Split Tunnel Include List",
				"description": "Set the list of routes included in the WARP client's tunnel",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Set Split Tunnel Include List response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1include/put/requestBody/content/application~1json/schema/items"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"address": {
											"type": "string",
											"example": "192.0.2.0/24",
											"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present."
										},
										"description": {
											"type": "string",
											"maxLength": 100,
											"example": "Include testing domains from the tunnel",
											"description": "A description of the split tunnel item, displayed in the client UI"
										},
										"host": {
											"type": "string",
											"example": "*.example.com",
											"description": "The domain name to include in the tunnel. If host is present, address must not be present."
										}
									},
									"required": [
										"address",
										"description"
									]
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Split Tunnel Include List",
				"description": "Get the list of routes included in the WARP client's tunnel",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1include/put/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Split Tunnel Include List response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1policy~1include/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/devices/posture/integration": {
			"get": {
				"summary": "List Device Posture Integrations",
				"description": "List Device Posture Integrations for an account",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Device Posture Integrations response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"type": "string",
																"maxLength": 36,
																"description": "API uuid tag",
																"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
															},
															"type": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration/post/requestBody/content/application~1json/schema/properties/type"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration/post/requestBody/content/application~1json/schema/properties/name"
															},
															"interval": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration/post/requestBody/content/application~1json/schema/properties/interval"
															},
															"config": {
																"type": "object",
																"description": "The configuration object containing third party integration information",
																"oneOf": [
																	{
																		"description": "The Workspace One Config Response",
																		"type": "object",
																		"properties": {
																			"api_url": {
																				"description": "The Workspace One API URL provided in the Workspace One Admin Dashboard",
																				"type": "string",
																				"example": "https://as123.awmdm.com/API"
																			},
																			"auth_url": {
																				"description": "The Workspace One Authorization URL depending on your region",
																				"type": "string",
																				"example": "https://na.uemauth.vmwservices.com/connect/token"
																			},
																			"client_id": {
																				"description": "The Workspace One client ID provided in the Workspace One Admin Dashboard",
																				"type": "string",
																				"example": "example client id"
																			}
																		},
																		"required": [
																			"api_url",
																			"auth_url",
																			"client_id"
																		]
																	}
																],
																"example": {
																	"api_url": "https://as123.awmdm.com/API",
																	"auth_url": "https://na.uemauth.vmwservices.com/connect/token",
																	"client_id": "example client id"
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Device Posture Integration",
				"description": "Create a new Device Posture Integration",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Device Posture Integration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"type",
									"interval",
									"config"
								],
								"properties": {
									"type": {
										"type": "string",
										"description": "The type of Device Posture Integration.",
										"enum": [
											"workspace_one",
											"crowdstrike_s2s",
											"uptycs",
											"intune"
										],
										"example": "workspace_one"
									},
									"name": {
										"type": "string",
										"description": "The name of the Device Posture Integration.",
										"example": "My Workspace One Integration"
									},
									"interval": {
										"type": "string",
										"description": "The interval between each posture check with the third party API. Use \"m\" for minutes (e.g. \"5m\") and \"h\" for hours (e.g. \"12h\")",
										"example": "10m"
									},
									"config": {
										"type": "object",
										"description": "The configuration object containing third party integration information",
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"api_url": {
														"description": "The Workspace One API URL provided in the Workspace One Admin Dashboard",
														"type": "string",
														"example": "https://as123.awmdm.com/API"
													},
													"auth_url": {
														"description": "The Workspace One Authorization URL depending on your region",
														"type": "string",
														"example": "https://na.uemauth.vmwservices.com/connect/token"
													},
													"client_id": {
														"description": "The Workspace One client ID provided in the Workspace One Admin Dashboard",
														"type": "string",
														"example": "example client id"
													},
													"client_secret": {
														"type": "string",
														"description": "The Workspace One client secret provided in the Workspace One Admin Dashboard",
														"example": "example client secret"
													}
												},
												"required": [
													"api_url",
													"auth_url",
													"client_id",
													"client_secret"
												]
											},
											{
												"type": "object",
												"properties": {
													"api_url": {
														"description": "The Crowdstrike API URL",
														"type": "string",
														"example": "https://api.us-2.crowdstrike.com"
													},
													"customer_id": {
														"description": "The Crowdstrike customer ID",
														"type": "string",
														"example": "example customer id"
													},
													"client_id": {
														"description": "The Crowdstrike client ID",
														"type": "string",
														"example": "example client id"
													},
													"client_secret": {
														"type": "string",
														"description": "The Crowdstrike client secret",
														"example": "example client secret"
													}
												},
												"required": [
													"api_url",
													"customer_id",
													"client_id",
													"client_secret"
												]
											},
											{
												"type": "object",
												"properties": {
													"client_key": {
														"description": "The Uptycs client secret",
														"type": "string",
														"example": "example client key"
													},
													"customer_id": {
														"description": "The Uptycs customer ID",
														"type": "string",
														"example": "example customer id"
													},
													"client_secret": {
														"type": "string",
														"description": "The Uptycs client secret",
														"example": "example client secret"
													}
												},
												"required": [
													"client_key",
													"customer_id",
													"client_secret"
												]
											},
											{
												"type": "object",
												"properties": {
													"customer_id": {
														"description": "The Intune customer ID",
														"type": "string",
														"example": "example customer id"
													},
													"client_id": {
														"description": "The Intune client ID",
														"type": "string",
														"example": "example client id"
													},
													"client_secret": {
														"type": "string",
														"description": "The Intune client secret",
														"example": "example client secret"
													}
												},
												"required": [
													"customer_id",
													"client_id",
													"client_secret"
												]
											}
										],
										"example": {
											"api_url": "https://as123.awmdm.com/API",
											"auth_url": "https://na.uemauth.vmwservices.com/connect/token",
											"client_id": "example client id",
											"client_secret": "example client secret"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/devices/posture/integration/{uuid}": {
			"get": {
				"summary": "Device Posture Integration Details",
				"description": "Fetch a single Device Posture Integration",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"maxLength": 36,
							"description": "API uuid tag",
							"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Device Posture Integration Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/get/parameters/0/schema"
														},
														"type": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/patch/requestBody/content/application~1json/schema/properties/type"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/patch/requestBody/content/application~1json/schema/properties/name"
														},
														"interval": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/patch/requestBody/content/application~1json/schema/properties/interval"
														},
														"config": {
															"type": "object",
															"description": "The configuration object containing third party integration information",
															"oneOf": [
																{
																	"description": "The Workspace One Config Response",
																	"type": "object",
																	"properties": {
																		"api_url": {
																			"description": "The Workspace One API URL provided in the Workspace One Admin Dashboard",
																			"type": "string",
																			"example": "https://as123.awmdm.com/API"
																		},
																		"auth_url": {
																			"description": "The Workspace One Authorization URL depending on your region",
																			"type": "string",
																			"example": "https://na.uemauth.vmwservices.com/connect/token"
																		},
																		"client_id": {
																			"description": "The Workspace One client ID provided in the Workspace One Admin Dashboard",
																			"type": "string",
																			"example": "example client id"
																		}
																	},
																	"required": [
																		"api_url",
																		"auth_url",
																		"client_id"
																	]
																}
															],
															"example": {
																"api_url": "https://as123.awmdm.com/API",
																"auth_url": "https://na.uemauth.vmwservices.com/connect/token",
																"client_id": "example client id"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"patch": {
				"summary": "Update Device Posture Integration",
				"description": "Update a Device Posture Integration",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Device Posture Integration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"type": {
										"type": "string",
										"description": "The type of Device Posture Integration.",
										"enum": [
											"workspace_one",
											"crowdstrike_s2s",
											"uptycs",
											"intune"
										],
										"example": "workspace_one"
									},
									"name": {
										"type": "string",
										"description": "The name of the Device Posture Integration.",
										"example": "My Workspace One Integration"
									},
									"interval": {
										"type": "string",
										"description": "The interval between each posture check with the third party API. Use \"m\" for minutes (e.g. \"5m\") and \"h\" for hours (e.g. \"12h\")",
										"example": "10m"
									},
									"config": {
										"type": "object",
										"description": "The configuration object containing third party integration information",
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"api_url": {
														"description": "The Workspace One API URL provided in the Workspace One Admin Dashboard",
														"type": "string",
														"example": "https://as123.awmdm.com/API"
													},
													"auth_url": {
														"description": "The Workspace One Authorization URL depending on your region",
														"type": "string",
														"example": "https://na.uemauth.vmwservices.com/connect/token"
													},
													"client_id": {
														"description": "The Workspace One client ID provided in the Workspace One Admin Dashboard",
														"type": "string",
														"example": "example client id"
													},
													"client_secret": {
														"type": "string",
														"description": "The Workspace One client secret provided in the Workspace One Admin Dashboard",
														"example": "example client secret"
													}
												},
												"required": [
													"api_url",
													"auth_url",
													"client_id",
													"client_secret"
												]
											},
											{
												"type": "object",
												"properties": {
													"api_url": {
														"description": "The Crowdstrike API URL",
														"type": "string",
														"example": "https://api.us-2.crowdstrike.com"
													},
													"customer_id": {
														"description": "The Crowdstrike customer ID",
														"type": "string",
														"example": "example customer id"
													},
													"client_id": {
														"description": "The Crowdstrike client ID",
														"type": "string",
														"example": "example client id"
													},
													"client_secret": {
														"type": "string",
														"description": "The Crowdstrike client secret",
														"example": "example client secret"
													}
												},
												"required": [
													"api_url",
													"customer_id",
													"client_id",
													"client_secret"
												]
											},
											{
												"type": "object",
												"properties": {
													"client_key": {
														"description": "The Uptycs client secret",
														"type": "string",
														"example": "example client key"
													},
													"customer_id": {
														"description": "The Uptycs customer ID",
														"type": "string",
														"example": "example customer id"
													},
													"client_secret": {
														"type": "string",
														"description": "The Uptycs client secret",
														"example": "example client secret"
													}
												},
												"required": [
													"client_key",
													"customer_id",
													"client_secret"
												]
											},
											{
												"type": "object",
												"properties": {
													"customer_id": {
														"description": "The Intune customer ID",
														"type": "string",
														"example": "example customer id"
													},
													"client_id": {
														"description": "The Intune client ID",
														"type": "string",
														"example": "example client id"
													},
													"client_secret": {
														"type": "string",
														"description": "The Intune client secret",
														"example": "example client secret"
													}
												},
												"required": [
													"customer_id",
													"client_id",
													"client_secret"
												]
											}
										],
										"example": {
											"api_url": "https://as123.awmdm.com/API",
											"auth_url": "https://na.uemauth.vmwservices.com/connect/token",
											"client_id": "example client id",
											"client_secret": "example client secret"
										}
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Device Posture Integration",
				"description": "Delete a Device Posture Integration",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1devices~1posture~1integration~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Device Posture Integration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/healthchecks": {
			"get": {
				"summary": "List Health Checks",
				"description": "List configured health checks",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Health Checks response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "699d98642c564d2e855e9661899b7252"
															},
															"created_on": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/name"
															},
															"description": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/description"
															},
															"suspended": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/suspended"
															},
															"check_regions": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/check_regions"
															},
															"type": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/type"
															},
															"consecutive_successes": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/consecutive_successes"
															},
															"consecutive_fails": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/consecutive_fails"
															},
															"http_config": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/http_config"
															},
															"tcp_config": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/tcp_config"
															},
															"timeout": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/timeout"
															},
															"retries": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/retries"
															},
															"interval": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/interval"
															},
															"address": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/post/requestBody/content/application~1json/schema/properties/address"
															},
															"status": {
																"type": "string",
																"description": "The current status of the origin server according to the health check.",
																"enum": [
																	"unknown",
																	"healthy",
																	"unhealthy",
																	"suspended"
																],
																"readOnly": true,
																"example": "healthy"
															},
															"failure_reason": {
																"type": "string",
																"description": "The current failure reason if status is unhealthy.",
																"readOnly": true,
																"example": ""
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Health Check",
				"description": "Create a new health check",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Health Check response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "server-1"
									},
									"description": {
										"type": "string",
										"description": "A human-readable description of the health check.",
										"example": "Health check for www.example.com"
									},
									"suspended": {
										"type": "boolean",
										"description": "If suspended, no health checks are sent to the origin.",
										"default": false
									},
									"check_regions": {
										"type": "array",
										"description": "A list of regions from which to run health checks. Null means Cloudflare will pick a default region.",
										"items": {
											"type": "string",
											"description": "WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, IN: India, SEAS: South East Asia, NEAS: North East Asia, ALL_REGIONS: all regions (BUSINESS and ENTERPRISE customers only)",
											"enum": [
												"WNAM",
												"ENAM",
												"WEU",
												"EEU",
												"NSAM",
												"SSAM",
												"OC",
												"ME",
												"NAF",
												"SAF",
												"IN",
												"SEAS",
												"NEAS",
												"ALL_REGIONS"
											]
										},
										"example": [
											"WEU",
											"ENAM"
										],
										"nullable": true
									},
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP', 'HTTPS' and 'TCP'.",
										"example": "HTTPS",
										"default": "HTTP"
									},
									"consecutive_successes": {
										"type": "integer",
										"description": "The number of consecutive successes required from a health check before changing the health to healthy",
										"default": 1
									},
									"consecutive_fails": {
										"type": "integer",
										"description": "The number of consecutive fails required from a health check before changing the health to unhealthy",
										"default": 1
									},
									"http_config": {
										"type": "object",
										"description": "Parameters specific to an HTTP or HTTPS health check",
										"properties": {
											"method": {
												"type": "string",
												"description": "The HTTP method to use for the health check.",
												"enum": [
													"GET",
													"HEAD"
												],
												"default": "GET"
											},
											"port": {
												"type": "integer",
												"description": "Port number to connect to for the health check. Defaults to 80 if type is HTTP or 443 if type is HTTPS.",
												"default": 80
											},
											"path": {
												"type": "string",
												"description": "The endpoint path to health check against.",
												"example": "/health",
												"default": "/"
											},
											"expected_codes": {
												"type": "array",
												"description": "The expected HTTP response codes (e.g. \"200\") or code ranges (e.g. \"2xx\" for all codes starting with 2) of the health check.",
												"items": {
													"type": "string"
												},
												"example": [
													"2xx",
													"302"
												],
												"default": "200",
												"nullable": true
											},
											"expected_body": {
												"type": "string",
												"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.",
												"example": "success"
											},
											"follow_redirects": {
												"type": "boolean",
												"description": "Follow redirects if the origin returns a 3xx status code.",
												"default": false
											},
											"allow_insecure": {
												"type": "boolean",
												"description": "Do not validate the certificate when the health check uses HTTPS.",
												"default": false
											},
											"header": {
												"type": "object",
												"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden.",
												"example": {
													"Host": [
														"example.com"
													],
													"X-App-ID": [
														"abc123"
													]
												},
												"nullable": true
											}
										},
										"nullable": true
									},
									"tcp_config": {
										"type": "object",
										"description": "Parameters specific to TCP health check",
										"properties": {
											"method": {
												"type": "string",
												"description": "The TCP connection method to use for the health check.",
												"enum": [
													"connection_established"
												],
												"default": "connection_established"
											},
											"port": {
												"type": "integer",
												"description": "Port number to connect to for the health check. Defaults to 80.",
												"default": 80
											}
										},
										"nullable": true
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed.",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"interval": {
										"type": "integer",
										"description": "The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations.",
										"default": 60
									},
									"address": {
										"type": "string",
										"description": "The hostname or IP address of the origin server to run health checks on.",
										"example": "www.example.com"
									}
								},
								"required": [
									"name",
									"address"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/healthchecks/{identifier}": {
			"get": {
				"summary": "Health Check Details",
				"description": "Fetch a single configured health check",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Health Check Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"description": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"suspended": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/suspended"
														},
														"check_regions": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/check_regions"
														},
														"type": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/type"
														},
														"consecutive_successes": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/consecutive_successes"
														},
														"consecutive_fails": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/consecutive_fails"
														},
														"http_config": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/http_config"
														},
														"tcp_config": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/tcp_config"
														},
														"timeout": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/timeout"
														},
														"retries": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/retries"
														},
														"interval": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/interval"
														},
														"address": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema/properties/address"
														},
														"status": {
															"type": "string",
															"description": "The current status of the origin server according to the health check.",
															"enum": [
																"unknown",
																"healthy",
																"unhealthy",
																"suspended"
															],
															"readOnly": true,
															"example": "healthy"
														},
														"failure_reason": {
															"type": "string",
															"description": "The current failure reason if status is unhealthy.",
															"readOnly": true,
															"example": ""
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Health Check",
				"description": "Update a configured health check",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Health Check response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "server-1"
									},
									"description": {
										"type": "string",
										"description": "A human-readable description of the health check.",
										"example": "Health check for www.example.com"
									},
									"suspended": {
										"type": "boolean",
										"description": "If suspended, no health checks are sent to the origin.",
										"default": false
									},
									"check_regions": {
										"type": "array",
										"description": "A list of regions from which to run health checks. Null means Cloudflare will pick a default region.",
										"items": {
											"type": "string",
											"description": "WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, IN: India, SEAS: South East Asia, NEAS: North East Asia, ALL_REGIONS: all regions (BUSINESS and ENTERPRISE customers only)",
											"enum": [
												"WNAM",
												"ENAM",
												"WEU",
												"EEU",
												"NSAM",
												"SSAM",
												"OC",
												"ME",
												"NAF",
												"SAF",
												"IN",
												"SEAS",
												"NEAS",
												"ALL_REGIONS"
											]
										},
										"example": [
											"WEU",
											"ENAM"
										],
										"nullable": true
									},
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP', 'HTTPS' and 'TCP'.",
										"example": "HTTPS",
										"default": "HTTP"
									},
									"consecutive_successes": {
										"type": "integer",
										"description": "The number of consecutive successes required from a health check before changing the health to healthy",
										"default": 1
									},
									"consecutive_fails": {
										"type": "integer",
										"description": "The number of consecutive fails required from a health check before changing the health to unhealthy",
										"default": 1
									},
									"http_config": {
										"type": "object",
										"description": "Parameters specific to an HTTP or HTTPS health check",
										"properties": {
											"method": {
												"type": "string",
												"description": "The HTTP method to use for the health check.",
												"enum": [
													"GET",
													"HEAD"
												],
												"default": "GET"
											},
											"port": {
												"type": "integer",
												"description": "Port number to connect to for the health check. Defaults to 80 if type is HTTP or 443 if type is HTTPS.",
												"default": 80
											},
											"path": {
												"type": "string",
												"description": "The endpoint path to health check against.",
												"example": "/health",
												"default": "/"
											},
											"expected_codes": {
												"type": "array",
												"description": "The expected HTTP response codes (e.g. \"200\") or code ranges (e.g. \"2xx\" for all codes starting with 2) of the health check.",
												"items": {
													"type": "string"
												},
												"example": [
													"2xx",
													"302"
												],
												"default": "200",
												"nullable": true
											},
											"expected_body": {
												"type": "string",
												"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.",
												"example": "success"
											},
											"follow_redirects": {
												"type": "boolean",
												"description": "Follow redirects if the origin returns a 3xx status code.",
												"default": false
											},
											"allow_insecure": {
												"type": "boolean",
												"description": "Do not validate the certificate when the health check uses HTTPS.",
												"default": false
											},
											"header": {
												"type": "object",
												"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden.",
												"example": {
													"Host": [
														"example.com"
													],
													"X-App-ID": [
														"abc123"
													]
												},
												"nullable": true
											}
										},
										"nullable": true
									},
									"tcp_config": {
										"type": "object",
										"description": "Parameters specific to TCP health check",
										"properties": {
											"method": {
												"type": "string",
												"description": "The TCP connection method to use for the health check.",
												"enum": [
													"connection_established"
												],
												"default": "connection_established"
											},
											"port": {
												"type": "integer",
												"description": "Port number to connect to for the health check. Defaults to 80.",
												"default": 80
											}
										},
										"nullable": true
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed.",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"interval": {
										"type": "integer",
										"description": "The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations.",
										"default": 60
									},
									"address": {
										"type": "string",
										"description": "The hostname or IP address of the origin server to run health checks on.",
										"example": "www.example.com"
									}
								},
								"required": [
									"name",
									"address"
								]
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch Health Check",
				"description": "Patch a configured health check",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch Health Check response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/put/requestBody/content/application~1json/schema"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Health Check",
				"description": "Delete a health check",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Health Check response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/healthchecks/preview": {
			"post": {
				"summary": "Create Preview Health Check",
				"description": "Create a new preview health check",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Preview Health Check response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"example": "699d98642c564d2e855e9661899b7252"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/name"
														},
														"description": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/description"
														},
														"suspended": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/suspended"
														},
														"check_regions": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/check_regions"
														},
														"type": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/type"
														},
														"consecutive_successes": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/consecutive_successes"
														},
														"consecutive_fails": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/consecutive_fails"
														},
														"http_config": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/http_config"
														},
														"tcp_config": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/tcp_config"
														},
														"timeout": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/timeout"
														},
														"retries": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/retries"
														},
														"interval": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/interval"
														},
														"address": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview/post/requestBody/content/application~1json/schema/properties/address"
														},
														"status": {
															"type": "string",
															"description": "The current status of the origin server according to the health check.",
															"enum": [
																"unknown",
																"healthy",
																"unhealthy",
																"suspended"
															],
															"readOnly": true,
															"example": "healthy"
														},
														"failure_reason": {
															"type": "string",
															"description": "The current failure reason if status is unhealthy.",
															"readOnly": true,
															"example": ""
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "server-1"
									},
									"description": {
										"type": "string",
										"description": "A human-readable description of the health check.",
										"example": "Health check for www.example.com"
									},
									"suspended": {
										"type": "boolean",
										"description": "If suspended, no health checks are sent to the origin.",
										"default": false
									},
									"check_regions": {
										"type": "array",
										"description": "A list of regions from which to run health checks. Null means Cloudflare will pick a default region.",
										"items": {
											"type": "string",
											"description": "WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, IN: India, SEAS: South East Asia, NEAS: North East Asia, ALL_REGIONS: all regions (BUSINESS and ENTERPRISE customers only)",
											"enum": [
												"WNAM",
												"ENAM",
												"WEU",
												"EEU",
												"NSAM",
												"SSAM",
												"OC",
												"ME",
												"NAF",
												"SAF",
												"IN",
												"SEAS",
												"NEAS",
												"ALL_REGIONS"
											]
										},
										"example": [
											"WEU",
											"ENAM"
										],
										"nullable": true
									},
									"type": {
										"type": "string",
										"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP', 'HTTPS' and 'TCP'.",
										"example": "HTTPS",
										"default": "HTTP"
									},
									"consecutive_successes": {
										"type": "integer",
										"description": "The number of consecutive successes required from a health check before changing the health to healthy",
										"default": 1
									},
									"consecutive_fails": {
										"type": "integer",
										"description": "The number of consecutive fails required from a health check before changing the health to unhealthy",
										"default": 1
									},
									"http_config": {
										"type": "object",
										"description": "Parameters specific to an HTTP or HTTPS health check",
										"properties": {
											"method": {
												"type": "string",
												"description": "The HTTP method to use for the health check.",
												"enum": [
													"GET",
													"HEAD"
												],
												"default": "GET"
											},
											"port": {
												"type": "integer",
												"description": "Port number to connect to for the health check. Defaults to 80 if type is HTTP or 443 if type is HTTPS.",
												"default": 80
											},
											"path": {
												"type": "string",
												"description": "The endpoint path to health check against.",
												"example": "/health",
												"default": "/"
											},
											"expected_codes": {
												"type": "array",
												"description": "The expected HTTP response codes (e.g. \"200\") or code ranges (e.g. \"2xx\" for all codes starting with 2) of the health check.",
												"items": {
													"type": "string"
												},
												"example": [
													"2xx",
													"302"
												],
												"default": "200",
												"nullable": true
											},
											"expected_body": {
												"type": "string",
												"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.",
												"example": "success"
											},
											"follow_redirects": {
												"type": "boolean",
												"description": "Follow redirects if the origin returns a 3xx status code.",
												"default": false
											},
											"allow_insecure": {
												"type": "boolean",
												"description": "Do not validate the certificate when the health check uses HTTPS.",
												"default": false
											},
											"header": {
												"type": "object",
												"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden.",
												"example": {
													"Host": [
														"example.com"
													],
													"X-App-ID": [
														"abc123"
													]
												},
												"nullable": true
											}
										},
										"nullable": true
									},
									"tcp_config": {
										"type": "object",
										"description": "Parameters specific to TCP health check",
										"properties": {
											"method": {
												"type": "string",
												"description": "The TCP connection method to use for the health check.",
												"enum": [
													"connection_established"
												],
												"default": "connection_established"
											},
											"port": {
												"type": "integer",
												"description": "Port number to connect to for the health check. Defaults to 80.",
												"default": 80
											}
										},
										"nullable": true
									},
									"timeout": {
										"type": "integer",
										"description": "The timeout (in seconds) before marking the health check as failed.",
										"default": 5
									},
									"retries": {
										"type": "integer",
										"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
										"default": 2
									},
									"interval": {
										"type": "integer",
										"description": "The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations.",
										"default": 60
									},
									"address": {
										"type": "string",
										"description": "The hostname or IP address of the origin server to run health checks on.",
										"example": "www.example.com"
									}
								},
								"required": [
									"name",
									"address"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/healthchecks/preview/{identifier}": {
			"get": {
				"summary": "Health Check Preview Details",
				"description": "Fetch a single configured health check preview",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Health Check Preview Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"type": "string",
															"description": "A short name to identify the health check. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "server-1"
														},
														"description": {
															"type": "string",
															"description": "A human-readable description of the health check.",
															"example": "Health check for www.example.com"
														},
														"suspended": {
															"type": "boolean",
															"description": "If suspended, no health checks are sent to the origin.",
															"default": false
														},
														"check_regions": {
															"type": "array",
															"description": "A list of regions from which to run health checks. Null means Cloudflare will pick a default region.",
															"items": {
																"type": "string",
																"description": "WNAM: Western North America, ENAM: Eastern North America, WEU: Western Europe, EEU: Eastern Europe, NSAM: Northern South America, SSAM: Southern South America, OC: Oceania, ME: Middle East, NAF: North Africa, SAF: South Africa, IN: India, SEAS: South East Asia, NEAS: North East Asia, ALL_REGIONS: all regions (BUSINESS and ENTERPRISE customers only)",
																"enum": [
																	"WNAM",
																	"ENAM",
																	"WEU",
																	"EEU",
																	"NSAM",
																	"SSAM",
																	"OC",
																	"ME",
																	"NAF",
																	"SAF",
																	"IN",
																	"SEAS",
																	"NEAS",
																	"ALL_REGIONS"
																]
															},
															"example": [
																"WEU",
																"ENAM"
															],
															"nullable": true
														},
														"type": {
															"type": "string",
															"description": "The protocol to use for the health check. Currently supported protocols are 'HTTP', 'HTTPS' and 'TCP'.",
															"example": "HTTPS",
															"default": "HTTP"
														},
														"consecutive_successes": {
															"type": "integer",
															"description": "The number of consecutive successes required from a health check before changing the health to healthy",
															"default": 1
														},
														"consecutive_fails": {
															"type": "integer",
															"description": "The number of consecutive fails required from a health check before changing the health to unhealthy",
															"default": 1
														},
														"http_config": {
															"type": "object",
															"description": "Parameters specific to an HTTP or HTTPS health check",
															"properties": {
																"method": {
																	"type": "string",
																	"description": "The HTTP method to use for the health check.",
																	"enum": [
																		"GET",
																		"HEAD"
																	],
																	"default": "GET"
																},
																"port": {
																	"type": "integer",
																	"description": "Port number to connect to for the health check. Defaults to 80 if type is HTTP or 443 if type is HTTPS.",
																	"default": 80
																},
																"path": {
																	"type": "string",
																	"description": "The endpoint path to health check against.",
																	"example": "/health",
																	"default": "/"
																},
																"expected_codes": {
																	"type": "array",
																	"description": "The expected HTTP response codes (e.g. \"200\") or code ranges (e.g. \"2xx\" for all codes starting with 2) of the health check.",
																	"items": {
																		"type": "string"
																	},
																	"example": [
																		"2xx",
																		"302"
																	],
																	"default": "200",
																	"nullable": true
																},
																"expected_body": {
																	"type": "string",
																	"description": "A case-insensitive sub-string to look for in the response body. If this string is not found, the origin will be marked as unhealthy.",
																	"example": "success"
																},
																"follow_redirects": {
																	"type": "boolean",
																	"description": "Follow redirects if the origin returns a 3xx status code.",
																	"default": false
																},
																"allow_insecure": {
																	"type": "boolean",
																	"description": "Do not validate the certificate when the health check uses HTTPS.",
																	"default": false
																},
																"header": {
																	"type": "object",
																	"description": "The HTTP request headers to send in the health check. It is recommended you set a Host header by default. The User-Agent header cannot be overridden.",
																	"example": {
																		"Host": [
																			"example.com"
																		],
																		"X-App-ID": [
																			"abc123"
																		]
																	},
																	"nullable": true
																}
															},
															"nullable": true
														},
														"tcp_config": {
															"type": "object",
															"description": "Parameters specific to TCP health check",
															"properties": {
																"method": {
																	"type": "string",
																	"description": "The TCP connection method to use for the health check.",
																	"enum": [
																		"connection_established"
																	],
																	"default": "connection_established"
																},
																"port": {
																	"type": "integer",
																	"description": "Port number to connect to for the health check. Defaults to 80.",
																	"default": 80
																}
															},
															"nullable": true
														},
														"timeout": {
															"type": "integer",
															"description": "The timeout (in seconds) before marking the health check as failed.",
															"default": 5
														},
														"retries": {
															"type": "integer",
															"description": "The number of retries to attempt in case of a timeout before marking the origin as unhealthy. Retries are attempted immediately.",
															"default": 2
														},
														"interval": {
															"type": "integer",
															"description": "The interval between each health check. Shorter intervals may give quicker notifications if the origin status changes, but will increase load on the origin as we check from multiple locations.",
															"default": 60
														},
														"address": {
															"type": "string",
															"description": "The hostname or IP address of the origin server to run health checks on.",
															"example": "www.example.com"
														},
														"status": {
															"type": "string",
															"description": "The current status of the origin server according to the health check.",
															"enum": [
																"unknown",
																"healthy",
																"unhealthy",
																"suspended"
															],
															"readOnly": true,
															"example": "healthy"
														},
														"failure_reason": {
															"type": "string",
															"description": "The current failure reason if status is unhealthy.",
															"readOnly": true,
															"example": ""
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"delete": {
				"summary": "Delete Preview Health Check",
				"description": "Delete a health check",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Preview Health Check response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1healthchecks~1preview~1%7Bidentifier%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/diagnostics/traceroute": {
			"post": {
				"summary": "Traceroute",
				"description": "Run traceroutes from Cloudflare colos.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Traceroute response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"target": {
																"type": "string",
																"description": "The target hostname, IPv6, or IPv6 address",
																"example": "1.1.1.1"
															},
															"colos": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"error": {
																			"type": "string",
																			"description": "Errors resulting from collecting traceroute from colo to target",
																			"enum": [
																				"",
																				"Could not gather traceroute data: Code 1",
																				"Could not gather traceroute data: Code 2",
																				"Could not gather traceroute data: Code 3",
																				"Could not gather traceroute data: Code 4"
																			],
																			"example": ""
																		},
																		"colo": {
																			"type": "object",
																			"properties": {
																				"name": {
																					"type": "string",
																					"description": "Source colo name",
																					"example": "den01"
																				},
																				"city": {
																					"type": "string",
																					"description": "Source colo city",
																					"example": "Denver, CO, US"
																				}
																			}
																		},
																		"traceroute_time_ms": {
																			"type": "integer",
																			"description": "Total time of traceroute in ms"
																		},
																		"target_summary": {
																			"type": "object",
																			"description": "Aggregated statistics from all hops about the target",
																			"example": {
																				"asn": "",
																				"ip": "1.1.1.1",
																				"name": "1.1.1.1",
																				"packet_count": 3,
																				"mean_latency_ms": 0.021,
																				"std_dev_latency_ms": 0.011269427669584647,
																				"min_latency_ms": 0.014,
																				"max_latency_ms": 0.034
																			}
																		},
																		"hops": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"properties": {
																					"packets_ttl": {
																						"type": "integer",
																						"description": "The time to live (TTL)"
																					},
																					"packets_sent": {
																						"type": "integer",
																						"description": "Number of packets sent with specified TTL"
																					},
																					"packets_lost": {
																						"type": "integer",
																						"description": "Number of packets where no response was received"
																					},
																					"nodes": {
																						"type": "array",
																						"description": "An array of node objects",
																						"items": {
																							"type": "object",
																							"properties": {
																								"labels": {
																									"type": "array",
																									"description": "Field appears if there is an additional annotation printed when the probe returns. Field also appears when running a GRE+ICMP traceroute to denote which traceroute a node comes from.",
																									"items": {
																										"type": "string"
																									}
																								},
																								"asn": {
																									"type": "string",
																									"description": "AS number associated with the node object"
																								},
																								"ip": {
																									"type": "string",
																									"description": "IP address of the node"
																								},
																								"name": {
																									"type": "string",
																									"description": "Host name of the address, this may be the same as the IP address"
																								},
																								"packet_count": {
																									"type": "integer",
																									"description": "Number of packets with a response from this node"
																								},
																								"mean_rtt_ms": {
																									"type": "number",
																									"description": "Mean RTT in ms"
																								},
																								"std_dev_rtt_ms": {
																									"type": "number",
																									"description": "Standard deviation of the RTTs in ms"
																								},
																								"min_rtt_ms": {
																									"type": "number",
																									"description": "Minimum RTT in ms"
																								},
																								"max_rtt_ms": {
																									"type": "number",
																									"description": "Maximum RTT in ms"
																								}
																							},
																							"example": {
																								"asn": "AS13335",
																								"ip": "1.1.1.1",
																								"name": "one.one.one.one",
																								"packet_count": 3,
																								"mean_latency_ms": 0.021,
																								"std_dev_latency_ms": 0.011269427669584647,
																								"min_latency_ms": 0.014,
																								"max_latency_ms": 0.034
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"targets"
								],
								"properties": {
									"targets": {
										"type": "array",
										"items": {
											"description": "Hosts as a hostname or IPv4/IPv6 address represented by strings",
											"type": "string",
											"example": "203.0.113.1"
										},
										"maxLength": 10,
										"example": [
											"203.0.113.1",
											"cloudflare.com"
										]
									},
									"colos": {
										"type": "array",
										"description": "If no source colo names specified, all colos will be used. China colos are unavailable for traceroutes",
										"items": {
											"description": "Source colo name",
											"type": "string"
										},
										"example": [
											"den",
											"sin"
										]
									},
									"options": {
										"properties": {
											"packets_per_ttl": {
												"description": "Number of packets sent at each TTL",
												"type": "integer",
												"default": 3,
												"minimum": 0,
												"maximum": 10
											},
											"packet_type": {
												"description": "Type of packet sent",
												"type": "string",
												"default": "icmp",
												"enum": [
													"icmp",
													"tcp",
													"udp",
													"gre",
													"gre+icmp"
												],
												"example": "icmp"
											},
											"max_ttl": {
												"description": "Max TTL",
												"type": "integer",
												"default": 15,
												"minimum": 0,
												"maximum": 64
											},
											"wait_time": {
												"description": "Set the time (in seconds) to wait for a response to a probe",
												"type": "integer",
												"default": 1,
												"minimum": 1,
												"maximum": 5
											},
											"port": {
												"description": "For UDP and TCP, specifies the destination port. For ICMP, specifies the initial ICMP sequence value. Default value 0 will choose the best value to use for each protocol",
												"type": "integer",
												"default": 0,
												"minimum": 0,
												"maximum": 65535
											}
										},
										"example": {
											"packet_type": "icmp",
											"max_ttl": 15
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/waiting_rooms": {
			"get": {
				"summary": "List waiting rooms",
				"description": "Lists waiting rooms.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List waiting rooms response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "699d98642c564d2e855e9661899b7252"
															},
															"created_on": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/name"
															},
															"description": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/description"
															},
															"suspended": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/suspended"
															},
															"host": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/host"
															},
															"path": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/path"
															},
															"queue_all": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/queue_all"
															},
															"new_users_per_minute": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/new_users_per_minute"
															},
															"total_active_users": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/total_active_users"
															},
															"session_duration": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/session_duration"
															},
															"disable_session_renewal": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/disable_session_renewal"
															},
															"json_response_enabled": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/json_response_enabled"
															},
															"queueing_method": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/queueing_method"
															},
															"cookie_attributes": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/cookie_attributes"
															},
															"custom_page_html": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/custom_page_html"
															},
															"default_template_language": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/post/requestBody/content/application~1json/schema/properties/default_template_language"
															},
															"next_event_prequeue_start_time": {
																"type": "string",
																"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
																"example": "2021-09-28T15:00:00+00:00",
																"default": null,
																"nullable": true
															},
															"next_event_start_time": {
																"type": "string",
																"description": "An ISO 8601 timestamp that marks when the next event will start.",
																"example": "2021-09-28T15:00:00+00:00",
																"default": null,
																"nullable": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create waiting room",
				"description": "Creates a new waiting room.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create waiting room response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "production_webinar"
									},
									"description": {
										"type": "string",
										"description": "A note that you can use to add more details about the waiting room.",
										"example": "Production - DO NOT MODIFY",
										"default": ""
									},
									"suspended": {
										"type": "boolean",
										"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
										"default": false
									},
									"host": {
										"type": "string",
										"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
										"example": "shop.example.com"
									},
									"path": {
										"type": "string",
										"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
										"example": "/shop/checkout",
										"default": "/"
									},
									"queue_all": {
										"type": "boolean",
										"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
										"example": true,
										"default": false
									},
									"new_users_per_minute": {
										"type": "integer",
										"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
										"minimum": 200,
										"maximum": 2147483647
									},
									"total_active_users": {
										"type": "integer",
										"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
										"minimum": 200,
										"maximum": 2147483647
									},
									"session_duration": {
										"type": "integer",
										"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
										"minimum": 1,
										"maximum": 30,
										"default": 5
									},
									"disable_session_renewal": {
										"type": "boolean",
										"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
										"example": false,
										"default": false
									},
									"json_response_enabled": {
										"type": "boolean",
										"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}",
										"default": false,
										"example": false
									},
									"queueing_method": {
										"type": "string",
										"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
										"enum": [
											"fifo",
											"random",
											"passthrough",
											"reject"
										],
										"example": "fifo",
										"default": "fifo"
									},
									"cookie_attributes": {
										"type": "object",
										"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
										"properties": {
											"samesite": {
												"type": "string",
												"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
												"enum": [
													"auto",
													"lax",
													"none",
													"strict"
												],
												"example": "auto",
												"default": "auto"
											},
											"secure": {
												"type": "string",
												"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
												"enum": [
													"auto",
													"always",
													"never"
												],
												"example": "auto",
												"default": "auto"
											}
										}
									},
									"custom_page_html": {
										"type": "string",
										"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**. \n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use: \n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`). \n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`). \n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
										"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
										"default": ""
									},
									"default_template_language": {
										"type": "string",
										"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
										"enum": [
											"en-US",
											"es-ES",
											"de-DE",
											"fr-FR",
											"it-IT",
											"ja-JP",
											"ko-KR",
											"pt-BR",
											"zh-CN",
											"zh-TW",
											"nl-NL",
											"pl-PL",
											"id-ID",
											"tr-TR",
											"ar-EG"
										],
										"example": "es-ES",
										"default": "en-US"
									}
								},
								"required": [
									"name",
									"host",
									"new_users_per_minute",
									"total_active_users"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/waiting_rooms/{waiting_room_id}": {
			"get": {
				"summary": "Waiting room details",
				"description": "Fetches a single configured waiting room.",
				"parameters": [
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Waiting room details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"description": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"suspended": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/suspended"
														},
														"host": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/host"
														},
														"path": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/path"
														},
														"queue_all": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/queue_all"
														},
														"new_users_per_minute": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/new_users_per_minute"
														},
														"total_active_users": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/total_active_users"
														},
														"session_duration": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/session_duration"
														},
														"disable_session_renewal": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/disable_session_renewal"
														},
														"json_response_enabled": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/json_response_enabled"
														},
														"queueing_method": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/queueing_method"
														},
														"cookie_attributes": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/cookie_attributes"
														},
														"custom_page_html": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/custom_page_html"
														},
														"default_template_language": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema/properties/default_template_language"
														},
														"next_event_prequeue_start_time": {
															"type": "string",
															"description": "An ISO 8601 timestamp that marks when the next event will begin queueing.",
															"example": "2021-09-28T15:00:00+00:00",
															"default": null,
															"nullable": true
														},
														"next_event_start_time": {
															"type": "string",
															"description": "An ISO 8601 timestamp that marks when the next event will start.",
															"example": "2021-09-28T15:00:00+00:00",
															"default": null,
															"nullable": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update waiting room",
				"description": "Updates a configured waiting room.",
				"parameters": [
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update waiting room response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "A unique name to identify the waiting room. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "production_webinar"
									},
									"description": {
										"type": "string",
										"description": "A note that you can use to add more details about the waiting room.",
										"example": "Production - DO NOT MODIFY",
										"default": ""
									},
									"suspended": {
										"type": "boolean",
										"description": "Suspends or allows traffic going to the waiting room. If set to `true`, the traffic will not go to the waiting room.",
										"default": false
									},
									"host": {
										"type": "string",
										"description": "The host name to which the waiting room will be applied (no wildcards). Please do not include the scheme (http:// or https://). The host and path combination must be unique.",
										"example": "shop.example.com"
									},
									"path": {
										"type": "string",
										"description": "Sets the path within the host to enable the waiting room on. The waiting room will be enabled for all subpaths as well. If there are two waiting rooms on the same subpath, the waiting room for the most specific path will be chosen. Wildcards and query parameters are not supported.",
										"example": "/shop/checkout",
										"default": "/"
									},
									"queue_all": {
										"type": "boolean",
										"description": "If queue_all is `true`, all the traffic that is coming to a route will be sent to the waiting room. No new traffic can get to the route once this field is set and estimated time will become unavailable.",
										"example": true,
										"default": false
									},
									"new_users_per_minute": {
										"type": "integer",
										"description": "Sets the number of new users that will be let into the route every minute. This value is used as baseline for the number of users that are let in per minute. So it is possible that there is a little more or little less traffic coming to the route based on the traffic patterns at that time around the world.",
										"minimum": 200,
										"maximum": 2147483647
									},
									"total_active_users": {
										"type": "integer",
										"description": "Sets the total number of active user sessions on the route at a point in time. A route is a combination of host and path on which a waiting room is available. This value is used as a baseline for the total number of active user sessions on the route. It is possible to have a situation where there are more or less active users sessions on the route based on the traffic patterns at that time around the world.",
										"minimum": 200,
										"maximum": 2147483647
									},
									"session_duration": {
										"type": "integer",
										"description": "Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the route. If a user is not seen by Cloudflare again in that time period, they will be treated as a new user that visits the route.",
										"minimum": 1,
										"maximum": 30,
										"default": 5
									},
									"disable_session_renewal": {
										"type": "boolean",
										"description": "Only available for the Waiting Room Advanced subscription. Disables automatic renewal of session cookies. If `true`, an accepted user will have session_duration minutes to browse the site. After that, they will have to go through the waiting room again. If `false`, a user's session cookie will be automatically renewed on every request.",
										"example": false,
										"default": false
									},
									"json_response_enabled": {
										"type": "boolean",
										"description": "Only available for the Waiting Room Advanced subscription. If `true`, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object with information on the user's status in the waiting room as opposed to the configured static HTML page. This JSON response object has one property `cfWaitingRoom` which is an object containing the following fields:\n1. `inWaitingRoom`: Boolean indicating if the user is in the waiting room (always **true**).\n2. `waitTimeKnown`: Boolean indicating if the current estimated wait times are accurate. If **false**, they are not available.\n3. `waitTime`: Valid only when `waitTimeKnown` is **true**. Integer indicating the current estimated time in minutes the user will wait in the waiting room. When `queueingMethod` is **random**, this is set to `waitTime50Percentile`.\n4. `waitTime25Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 25% of users that gain entry the fastest (25th percentile).\n5. `waitTime50Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 50% of users that gain entry the fastest (50th percentile). In other words, half of the queued users are expected to let into the origin website before `waitTime50Percentile` and half are expected to be let in after it.\n6. `waitTime75Percentile`: Valid only when `queueingMethod` is **random** and `waitTimeKnown` is **true**. Integer indicating the current estimated maximum wait time for the 75% of users that gain entry the fastest (75th percentile).\n7. `waitTimeFormatted`: String displaying the `waitTime` formatted in English for users. If `waitTimeKnown` is **false**, `waitTimeFormatted` will display **unavailable**.\n8. `queueIsFull`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n9. `queueAll`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website.\n10. `lastUpdated`: String displaying the timestamp as an ISO 8601 string of the user's last attempt to leave the waiting room and be let into the origin website. The user is able to make another attempt after `refreshIntervalSeconds` past this time. If the user makes a request too soon, it will be ignored and `lastUpdated` will not change.\n11. `refreshIntervalSeconds`: Integer indicating the number of seconds after `lastUpdated` until the user is able to make another attempt to leave the waiting room and be let into the origin website. When the `queueingMethod` is `reject`, there is no specified refresh time — it will always be **zero**.\n12. `queueingMethod`: The queueing method currently used by the waiting room. It is either **fifo**, **random**, **passthrough**, or **reject**.\n13. `isFIFOQueue`: Boolean indicating if the waiting room uses a FIFO (First-In-First-Out) queue.\n14. `isRandomQueue`: Boolean indicating if the waiting room uses a Random queue where users gain access randomly.\n15. `isPassthroughQueue`: Boolean indicating if the waiting room uses a passthrough queue. Keep in mind that when passthrough is enabled, this JSON response will only exist when `queueAll` is **true** or `isEventPrequeueing` is **true** because in all other cases requests will go directly to the origin.\n16. `isRejectQueue`: Boolean indicating if the waiting room uses a reject queue.\n17. `isEventActive`: Boolean indicating if an event is currently occurring. Events are able to change a waiting room's behavior during a specified period of time. For additional information, look at the event properties `prequeue_start_time`, `event_start_time`, and `event_end_time` in the documentation for creating waiting room events. Events are considered active between these start and end times, as well as during the prequeueing period if it exists.\n18. `isEventPrequeueing`: Valid only when `isEventActive` is **true**. Boolean indicating if an event is currently prequeueing users before it starts.\n19. `timeUntilEventStart`: Valid only when `isEventPrequeueing` is **true**. Integer indicating the number of minutes until the event starts.\n20. `timeUntilEventStartFormatted`: String displaying the `timeUntilEventStart` formatted in English for users. If `isEventPrequeueing` is **false**, `timeUntilEventStartFormatted` will display **unavailable**.\n21. `timeUntilEventEnd`: Valid only when `isEventActive` is **true**. Integer indicating the number of minutes until the event ends.\n22. `timeUntilEventEndFormatted`: String displaying the `timeUntilEventEnd` formatted in English for users. If `isEventActive` is **false**, `timeUntilEventEndFormatted` will display **unavailable**.\n23. `shuffleAtEventStart`: Valid only when `isEventActive` is **true**. Boolean indicating if the users in the prequeue are shuffled randomly when the event starts.\n\nAn example cURL to a waiting room could be:\n\n\tcurl -X GET \"https://example.com/waitingroom\" \\\n\t\t-H \"Accept: application/json\"\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **fifo** and no event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 0,\n\t\t\t\"waitTime50Percentile\": 0,\n\t\t\t\"waitTime75Percentile\": 0,\n\t\t\t\"waitTimeFormatted\": \"10 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"fifo\",\n\t\t\t\"isFIFOQueue\": true,\n\t\t\t\"isRandomQueue\": false,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": false,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 0,\n\t\t\t\"timeUntilEventEndFormatted\": \"unavailable\",\n\t\t\t\"shuffleAtEventStart\": false\n\t\t}\n\t}\n\nIf `json_response_enabled` is **true** and the request hits the waiting room, an example JSON response when `queueingMethod` is **random** and an event is active could be:\n\n\t{\n\t\t\"cfWaitingRoom\": {\n\t\t\t\"inWaitingRoom\": true,\n\t\t\t\"waitTimeKnown\": true,\n\t\t\t\"waitTime\": 10,\n\t\t\t\"waitTime25Percentile\": 5,\n\t\t\t\"waitTime50Percentile\": 10,\n\t\t\t\"waitTime75Percentile\": 15,\n\t\t\t\"waitTimeFormatted\": \"5 minutes to 15 minutes\",\n\t\t\t\"queueIsFull\": false,\n\t\t\t\"queueAll\": false,\n\t\t\t\"lastUpdated\": \"2020-08-03T23:46:00.000Z\",\n\t\t\t\"refreshIntervalSeconds\": 20,\n\t\t\t\"queueingMethod\": \"random\",\n\t\t\t\"isFIFOQueue\": false,\n\t\t\t\"isRandomQueue\": true,\n\t\t\t\"isPassthroughQueue\": false,\n\t\t\t\"isRejectQueue\": false,\n\t\t\t\"isEventActive\": true,\n\t\t\t\"isEventPrequeueing\": false,\n\t\t\t\"timeUntilEventStart\": 0,\n\t\t\t\"timeUntilEventStartFormatted\": \"unavailable\",\n\t\t\t\"timeUntilEventEnd\": 15,\n\t\t\t\"timeUntilEventEndFormatted\": \"15 minutes\",\n\t\t\t\"shuffleAtEventStart\": true\n\t\t}\n\t}",
										"default": false,
										"example": false
									},
									"queueing_method": {
										"type": "string",
										"description": "Sets the queueing method used by the waiting room. Changing this parameter from the **default** queueing method is only available for the Waiting Room Advanced subscription. Regardless of the queueing method, if `queue_all` is enabled or an event is prequeueing, users in the waiting room will not be accepted to the origin. These users will always see a waiting room page that refreshes automatically. The valid queueing methods are:\n1. `fifo` **(default)**: First-In-First-Out queue where customers gain access in the order they arrived.\n2. `random`: Random queue where customers gain access randomly, regardless of arrival time.\n3. `passthrough`: Users will pass directly through the waiting room and into the origin website. As a result, any configured limits will not be respected while this is enabled. This method can be used as an alternative to disabling a waiting room (with `suspended`) so that analytics are still reported. This can be used if you wish to allow all traffic normally, but want to restrict traffic during a waiting room event, or vice versa.\n4. `reject`: Users will be immediately rejected from the waiting room. As a result, no users will reach the origin website while this is enabled. This can be used if you wish to reject all traffic while performing maintenance, block traffic during a specified period of time (an event), or block traffic while events are not occurring. Consider a waiting room used for vaccine distribution that only allows traffic during sign-up events, and otherwise blocks all traffic. For this case, the waiting room uses `reject`, and its events override this with `fifo`, `random`, or `passthrough`. When this queueing method is enabled and neither `queueAll` is enabled nor an event is prequeueing, the waiting room page **will not refresh automatically**.",
										"enum": [
											"fifo",
											"random",
											"passthrough",
											"reject"
										],
										"example": "fifo",
										"default": "fifo"
									},
									"cookie_attributes": {
										"type": "object",
										"description": "Configures cookie attributes for the waiting room cookie. This encrypted cookie stores a user's status in the waiting room, such as queue position.",
										"properties": {
											"samesite": {
												"type": "string",
												"description": "Configures the SameSite attribute on the waiting room cookie. Value `auto` will be translated to `lax` or `none` depending if **Always Use HTTPS** is enabled. Note that when using value `none`, the secure attribute cannot be set to `never`.",
												"enum": [
													"auto",
													"lax",
													"none",
													"strict"
												],
												"example": "auto",
												"default": "auto"
											},
											"secure": {
												"type": "string",
												"description": "Configures the Secure attribute on the waiting room cookie. Value `always` indicates that the Secure attribute will be set in the Set-Cookie header, `never` indicates that the Secure attribute will not be set, and `auto` will set the Secure attribute depending if **Always Use HTTPS** is enabled.",
												"enum": [
													"auto",
													"always",
													"never"
												],
												"example": "auto",
												"default": "auto"
											}
										}
									},
									"custom_page_html": {
										"type": "string",
										"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**. \n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use: \n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`). \n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`). \n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
										"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
										"default": ""
									},
									"default_template_language": {
										"type": "string",
										"description": "The language of the default page template. If no default_template_language is provided, then `en-US` (English) will be used.",
										"enum": [
											"en-US",
											"es-ES",
											"de-DE",
											"fr-FR",
											"it-IT",
											"ja-JP",
											"ko-KR",
											"pt-BR",
											"zh-CN",
											"zh-TW",
											"nl-NL",
											"pl-PL",
											"id-ID",
											"tr-TR",
											"ar-EG"
										],
										"example": "es-ES",
										"default": "en-US"
									}
								},
								"required": [
									"name",
									"host",
									"new_users_per_minute",
									"total_active_users"
								]
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch waiting room",
				"description": "Patches a configured waiting room.",
				"parameters": [
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch waiting room response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/put/requestBody/content/application~1json/schema"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete waiting room",
				"description": "Deletes a waiting room.",
				"parameters": [
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete waiting room response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/events": {
			"get": {
				"summary": "List events",
				"description": "Lists events for a waiting room.",
				"parameters": [
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List events response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"example": "25756b2dfe6e378a06b033b670413757"
															},
															"created_on": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/name"
															},
															"description": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/description"
															},
															"suspended": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/suspended"
															},
															"prequeue_start_time": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/prequeue_start_time"
															},
															"event_start_time": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/event_start_time"
															},
															"event_end_time": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/event_end_time"
															},
															"shuffle_at_event_start": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/shuffle_at_event_start"
															},
															"new_users_per_minute": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/new_users_per_minute"
															},
															"total_active_users": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/total_active_users"
															},
															"session_duration": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/session_duration"
															},
															"disable_session_renewal": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/disable_session_renewal"
															},
															"queueing_method": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/queueing_method"
															},
															"custom_page_html": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/post/requestBody/content/application~1json/schema/properties/custom_page_html"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create event",
				"description": "Only available for the Waiting Room Advanced subscription. Creates an event for a waiting room. An event takes place during a specified period of time, temporarily changing the behavior of a waiting room. While the event is active, some of the properties in the event's configuration may either override or inherit from the waiting room's configuration. Note that events cannot overlap with each other, so only one event can be active at a time.",
				"parameters": [
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create event response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "production_webinar_event"
									},
									"description": {
										"type": "string",
										"description": "A note that you can use to add more details about the event.",
										"example": "Production event - DO NOT MODIFY",
										"default": ""
									},
									"suspended": {
										"type": "boolean",
										"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
										"default": false
									},
									"prequeue_start_time": {
										"type": "string",
										"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
										"example": "2021-09-28T15:00:00+00:00",
										"default": null,
										"nullable": true
									},
									"event_start_time": {
										"type": "string",
										"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
										"example": "2021-09-28T15:30:00+00:00"
									},
									"event_end_time": {
										"type": "string",
										"description": "An ISO 8601 timestamp that marks the end of the event.",
										"example": "2021-09-28T17:00:00+00:00"
									},
									"shuffle_at_event_start": {
										"type": "boolean",
										"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
										"default": false
									},
									"new_users_per_minute": {
										"type": "integer",
										"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
										"minimum": 200,
										"maximum": 2147483647,
										"default": null,
										"nullable": true
									},
									"total_active_users": {
										"type": "integer",
										"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
										"minimum": 200,
										"maximum": 2147483647,
										"default": null,
										"nullable": true
									},
									"session_duration": {
										"type": "integer",
										"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
										"minimum": 1,
										"maximum": 30,
										"example": null,
										"default": null,
										"nullable": true
									},
									"disable_session_renewal": {
										"type": "boolean",
										"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
										"example": null,
										"default": null,
										"nullable": true
									},
									"queueing_method": {
										"type": "string",
										"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
										"example": "random",
										"default": null,
										"nullable": true
									},
									"custom_page_html": {
										"type": "string",
										"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
										"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
										"default": null,
										"nullable": true
									}
								},
								"required": [
									"name",
									"event_start_time",
									"event_end_time"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/events/{event_id}": {
			"get": {
				"summary": "Event details",
				"description": "Fetches a single configured event for a waiting room.",
				"parameters": [
					{
						"name": "event_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "25756b2dfe6e378a06b033b670413757"
						}
					},
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Event details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"description": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/description"
														},
														"suspended": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/suspended"
														},
														"prequeue_start_time": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/prequeue_start_time"
														},
														"event_start_time": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/event_start_time"
														},
														"event_end_time": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/event_end_time"
														},
														"shuffle_at_event_start": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/shuffle_at_event_start"
														},
														"new_users_per_minute": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/new_users_per_minute"
														},
														"total_active_users": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/total_active_users"
														},
														"session_duration": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/session_duration"
														},
														"disable_session_renewal": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/disable_session_renewal"
														},
														"queueing_method": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/queueing_method"
														},
														"custom_page_html": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema/properties/custom_page_html"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update event",
				"description": "Updates a configured event for a waiting room.",
				"parameters": [
					{
						"name": "event_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update event response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
										"example": "production_webinar_event"
									},
									"description": {
										"type": "string",
										"description": "A note that you can use to add more details about the event.",
										"example": "Production event - DO NOT MODIFY",
										"default": ""
									},
									"suspended": {
										"type": "boolean",
										"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
										"default": false
									},
									"prequeue_start_time": {
										"type": "string",
										"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
										"example": "2021-09-28T15:00:00+00:00",
										"default": null,
										"nullable": true
									},
									"event_start_time": {
										"type": "string",
										"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
										"example": "2021-09-28T15:30:00+00:00"
									},
									"event_end_time": {
										"type": "string",
										"description": "An ISO 8601 timestamp that marks the end of the event.",
										"example": "2021-09-28T17:00:00+00:00"
									},
									"shuffle_at_event_start": {
										"type": "boolean",
										"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
										"default": false
									},
									"new_users_per_minute": {
										"type": "integer",
										"description": "If set, the event will override the waiting room's `new_users_per_minute` property while it is active. If null, the event will inherit it. This can only be set if the event's `total_active_users` property is also set.",
										"minimum": 200,
										"maximum": 2147483647,
										"default": null,
										"nullable": true
									},
									"total_active_users": {
										"type": "integer",
										"description": "If set, the event will override the waiting room's `total_active_users` property while it is active. If null, the event will inherit it. This can only be set if the event's `new_users_per_minute` property is also set.",
										"minimum": 200,
										"maximum": 2147483647,
										"default": null,
										"nullable": true
									},
									"session_duration": {
										"type": "integer",
										"description": "If set, the event will override the waiting room's `session_duration` property while it is active. If null, the event will inherit it.",
										"minimum": 1,
										"maximum": 30,
										"example": null,
										"default": null,
										"nullable": true
									},
									"disable_session_renewal": {
										"type": "boolean",
										"description": "If set, the event will override the waiting room's `disable_session_renewal` property while it is active. If null, the event will inherit it.",
										"example": null,
										"default": null,
										"nullable": true
									},
									"queueing_method": {
										"type": "string",
										"description": "If set, the event will override the waiting room's `queueing_method` property while it is active. If null, the event will inherit it.",
										"example": "random",
										"default": null,
										"nullable": true
									},
									"custom_page_html": {
										"type": "string",
										"description": "If set, the event will override the waiting room's `custom_page_html` property while it is active. If null, the event will inherit it.",
										"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}",
										"default": null,
										"nullable": true
									}
								},
								"required": [
									"name",
									"event_start_time",
									"event_end_time"
								]
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Patch event",
				"description": "Patches a configured event for a waiting room.",
				"parameters": [
					{
						"name": "event_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Patch event response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/put/requestBody/content/application~1json/schema"
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete event",
				"description": "Deletes an event for a waiting room.",
				"parameters": [
					{
						"name": "event_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/1/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/2/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete event response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/events/{event_id}/details": {
			"get": {
				"summary": "Preview active event details",
				"description": "Previews an event's configuration as if it was active. Inherited fields from the waiting room will be displayed with their current values.",
				"parameters": [
					{
						"name": "event_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "25756b2dfe6e378a06b033b670413757"
						}
					},
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Preview active event details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1waiting_rooms~1%7Bwaiting_room_id%7D~1events~1%7Bevent_id%7D~1details/get/parameters/0/schema"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														},
														"name": {
															"type": "string",
															"description": "A unique name to identify the event. Only alphanumeric characters, hyphens and underscores are allowed.",
															"example": "production_webinar_event"
														},
														"description": {
															"type": "string",
															"description": "A note that you can use to add more details about the event.",
															"example": "Production event - DO NOT MODIFY",
															"default": ""
														},
														"suspended": {
															"type": "boolean",
															"description": "Suspends or allows an event. If set to `true`, the event is ignored and traffic will be handled based on the waiting room configuration.",
															"default": false
														},
														"prequeue_start_time": {
															"type": "string",
															"description": "An ISO 8601 timestamp that marks when to begin queueing all users before the event starts. The prequeue must start at least five minutes before `event_start_time`.",
															"example": "2021-09-28T15:00:00+00:00",
															"default": null,
															"nullable": true
														},
														"event_start_time": {
															"type": "string",
															"description": "An ISO 8601 timestamp that marks the start of the event. At this time, queued users will be processed with the event's configuration. The start time must be at least one minute before `event_end_time`.",
															"example": "2021-09-28T15:30:00+00:00"
														},
														"event_end_time": {
															"type": "string",
															"description": "An ISO 8601 timestamp that marks the end of the event.",
															"example": "2021-09-28T17:00:00+00:00"
														},
														"shuffle_at_event_start": {
															"type": "boolean",
															"description": "If enabled, users in the prequeue will be shuffled randomly at the `event_start_time`. Requires that `prequeue_start_time` is not null. This is useful for situations when many users will join the event prequeue at the same time and you want to shuffle them to ensure fairness. Naturally, it makes the most sense to enable this feature when the `queueing_method` during the event respects ordering such as **fifo**, or else the shuffling may be unnecessary.",
															"default": false
														},
														"new_users_per_minute": {
															"type": "integer"
														},
														"total_active_users": {
															"type": "integer"
														},
														"session_duration": {
															"type": "integer"
														},
														"disable_session_renewal": {
															"type": "boolean",
															"example": false
														},
														"queueing_method": {
															"type": "string",
															"example": "random"
														},
														"custom_page_html": {
															"type": "string",
															"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Event is prequeueing / Queue all enabled {{/waitTimeKnown}}"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/waiting_rooms/{waiting_room_id}/status": {
			"get": {
				"summary": "Get waiting room status",
				"description": "Fetches the status of a configured waiting room. Response fields include:\n1. `status`: String indicating the status of the waiting room. The possible status are:\n\t- **not_queueing** indicates that the configured thresholds have not been met and all users are going through to the origin.\n\t- **queueing** indicates that the thresholds have been met and some users are held in the waiting room.\n\t- **event_prequeueing** indicates that an event is active and is currently prequeueing users before it starts.\n2. `event_id`: String of the current event's `id` if an event is active, otherwise an empty string.\n3. `estimated_queued_users`: Integer of the estimated number of users currently waiting in the queue.\n4. `estimated_total_active_users`: Integer of the estimated number of users currently active on the origin.\n5. `max_estimated_time_minutes`: Integer of the maximum estimated time currently presented to the users.",
				"parameters": [
					{
						"name": "waiting_room_id",
						"in": "path",
						"required": true,
						"schema": {
							"example": "699d98642c564d2e855e9661899b7252"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get waiting room status response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"status": {
															"type": "string",
															"enum": [
																"event_prequeueing",
																"not_queueing",
																"queueing"
															],
															"example": "queueing"
														},
														"event_id": {
															"type": "string",
															"example": "25756b2dfe6e378a06b033b670413757"
														},
														"estimated_queued_users": {
															"type": "integer"
														},
														"estimated_total_active_users": {
															"type": "integer"
														},
														"max_estimated_time_minutes": {
															"type": "integer"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/zones/{zone_identifier}/waiting_rooms/preview": {
			"post": {
				"summary": "Create a custom waiting room page preview",
				"description": "Creates a waiting room page preview. Upload a custom waiting room page for preview. You will receive a preview URL in the form `http://waitingrooms.dev/preview/<uuid>`. You can use the following query parameters to change the state of the preview:\n1. `force_queue`: Boolean indicating if all users will be queued in the waiting room and no one will be let into the origin website (also known as queueAll).\n2. `queue_is_full`: Boolean indicating if the waiting room's queue is currently full and not accepting new users at the moment.\n3. `queueing_method`: The queueing method currently used by the waiting room.\n\t- **fifo** indicates a FIFO queue.\n\t- **random** indicates a Random queue.\n\t- **passthrough** indicates a Passthrough queue. Keep in mind that the waiting room page will only be displayed if `force_queue=true` or `event=prequeueing` — for other cases the request will pass through to the origin. For our preview, this will be a fake origin website returning \"Welcome\". \n\t- **reject** indicates a Reject queue.\n4. `event`: Used to preview a waiting room event.\n\t- **none** indicates no event is occurring.\n\t- **prequeueing** indicates that an event is prequeueing (between `prequeue_start_time` and `event_start_time`).\n\t- **started** indicates that an event has started (between `event_start_time` and `event_end_time`).\n5. `shuffle_at_event_start`: Boolean indicating if the event will shuffle users in the prequeue when it starts. This can only be set to **true** if an event is active (`event` is not **none**).\n\nFor example, you can make a request to `http://waitingrooms.dev/preview/<uuid>?force_queue=false&queue_is_full=false&queueing_method=random&event=started&shuffle_at_event_start=true`\n6. `waitTime`: Non-zero, positive integer indicating the estimated wait time in minutes. The default value is 10 minutes.\n\nFor example, you can make a request to `http://waitingrooms.dev/preview/<uuid>?waitTime=50` to configure the estimated wait time as 50 minutes.",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a custom waiting room page preview response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"preview_url": {
															"type": "string",
															"description": "URL where the custom waiting room page can temporarily be previewed.",
															"example": "http://waitingrooms.dev/preview/35af8c12-6d68-4608-babb-b53435a5ddfb"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"custom_html": {
										"type": "string",
										"description": "Only available for the Waiting Room Advanced subscription. This is a template html file that will be rendered at the edge. If no custom_page_html is provided, the default waiting room will be used. The template is based on mustache ( https://mustache.github.io/ ). There are several variables that are evaluated by the Cloudflare edge:\n1. {{`waitTimeKnown`}} Acts like a boolean value that indicates the behavior to take when wait time is not available, for instance when queue_all is **true**. \n2. {{`waitTimeFormatted`}} Estimated wait time for the user. For example, five minutes. Alternatively, you can use: \n3. {{`waitTime`}} Number of minutes of estimated wait for a user.\n4. {{`waitTimeHours`}} Number of hours of estimated wait for a user (`Math.floor(waitTime/60)`). \n5. {{`waitTimeHourMinutes`}} Number of minutes above the `waitTimeHours` value (`waitTime%60`). \n6. {{`queueIsFull`}} Changes to **true** when no more people can be added to the queue.\n\nTo view the full list of variables, look at the `cfWaitingRoom` object described under the `json_response_enabled` property in other Waiting Room API calls.",
										"example": "{{#waitTimeKnown}} {{waitTime}} mins {{/waitTimeKnown}} {{^waitTimeKnown}} Queue all enabled {{/waitTimeKnown}}",
										"default": ""
									}
								},
								"required": [
									"custom_html"
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/registrar/domains": {
			"post": {
				"summary": "List domains",
				"description": "List domains handled by Registrar.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List domains response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"items": {
														"type": "object",
														"allOf": [
															{
																"type": "object",
																"properties": {
																	"id": {
																		"description": "Domain identifier.",
																		"example": "ea95132c15732412d22c1476fa83f27a",
																		"maxLength": 32,
																		"readOnly": true,
																		"type": "string"
																	},
																	"available": {
																		"description": "Shows if a domain is available for transferring into Cloudflare Registrar.",
																		"example": false,
																		"type": "boolean"
																	},
																	"supported_tld": {
																		"description": "Whether a particular TLD is currently supported by Cloudflare Registrar. Refer to [TLD Policies](https://www.cloudflare.com/tld-policies/) for a list of supported TLDs.",
																		"example": true,
																		"type": "boolean"
																	},
																	"can_register": {
																		"description": "Indicates if the domain can be registered as a new domain.",
																		"example": false,
																		"type": "boolean"
																	},
																	"transfer_in": {
																		"description": "Statuses for domain transfers into Cloudflare Registrar.",
																		"properties": {
																			"unlock_domain": {
																				"description": "Domain is unlocked at the foreign registrar."
																			},
																			"disable_privacy": {
																				"description": "Privacy guards are disabled at the foreign registrar."
																			},
																			"enter_auth_code": {
																				"description": "Auth code has been entered and verified.",
																				"example": "needed"
																			},
																			"approve_transfer": {
																				"description": "Shows transfer status with the registry.",
																				"example": "unknown"
																			},
																			"accept_foa": {
																				"description": "Form of authorization has been accepted by the registrant.",
																				"example": "needed"
																			},
																			"can_cancel_transfer": {
																				"description": "Indicates if cancellation is still possible.",
																				"example": true,
																				"type": "boolean"
																			}
																		}
																	},
																	"current_registrar": {
																		"description": "Shows name of current registrar.",
																		"example": "Cloudflare",
																		"type": "string"
																	},
																	"expires_at": {
																		"description": "Shows when domain name registration expires.",
																		"example": "2019-08-28T23:59:59+00:00",
																		"format": "date-time",
																		"type": "string"
																	},
																	"registry_statuses": {
																		"description": "A comma-separated list of registry status codes. A full list of status codes can be found at [EPP Status Codes](https://www.icann.org/resources/pages/epp-status-codes-2014-06-16-en).",
																		"example": "ok,serverTransferProhibited",
																		"type": "string"
																	},
																	"locked": {
																		"description": "Shows whether a registrar lock is in place for a domain.",
																		"example": false,
																		"type": "boolean"
																	},
																	"created_at": {
																		"description": "Shows time of creation.",
																		"example": "2018-08-28T17:26:26+00:00",
																		"format": "date-time",
																		"type": "string"
																	},
																	"updated_at": {
																		"description": "Last updated.",
																		"example": "2018-08-28T17:26:26+00:00",
																		"format": "date-time",
																		"type": "string"
																	},
																	"registrant_contact": {
																		"description": "Shows contact information for domain registrant.",
																		"allOf": [
																			{
																				"type": "object",
																				"allOf": [
																					{
																						"type": "object",
																						"required": [
																							"first_name",
																							"last_name",
																							"address",
																							"city",
																							"state",
																							"zip",
																							"country",
																							"phone",
																							"organization"
																						],
																						"properties": {
																							"id": {
																								"description": "Contact Identifier",
																								"example": "ea95132c15732412d22c1476fa83f27a",
																								"maxLength": 32,
																								"readOnly": true,
																								"type": "string"
																							},
																							"first_name": {
																								"$ref": "#/paths/~1user/patch/requestBody/content/application~1json/schema/properties/first_name"
																							},
																							"last_name": {
																								"$ref": "#/paths/~1user/patch/requestBody/content/application~1json/schema/properties/last_name"
																							},
																							"organization": {
																								"description": "Name of organization",
																								"example": "Cloudflare, Inc.",
																								"type": "string"
																							},
																							"address": {
																								"description": "Address",
																								"example": "123 Sesame St.",
																								"type": "string"
																							},
																							"address2": {
																								"description": "Optional address line for unit, floor, suite, etc.",
																								"example": "Suite 430",
																								"type": "string"
																							},
																							"city": {
																								"description": "City",
																								"example": "Austin",
																								"type": "string"
																							},
																							"state": {
																								"description": "State",
																								"example": "TX",
																								"type": "string"
																							},
																							"zip": {
																								"$ref": "#/paths/~1user/patch/requestBody/content/application~1json/schema/properties/zipcode"
																							},
																							"country": {
																								"$ref": "#/paths/~1user/patch/requestBody/content/application~1json/schema/properties/country"
																							},
																							"phone": {
																								"$ref": "#/paths/~1user/patch/requestBody/content/application~1json/schema/properties/telephone"
																							},
																							"email": {
																								"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1firewall~1access_rules~1rules~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/allOf/1/properties/scope/properties/email"
																							},
																							"fax": {
																								"description": "Contact fax number",
																								"type": "string",
																								"example": "123-867-5309"
																							}
																						}
																					}
																				],
																				"x-cfLinkErrors": {
																					"10000": "Internal Server Error",
																					"10001": "Authentication Failure"
																				}
																			}
																		]
																	}
																}
															}
														],
														"x-cfLinkErrors": {
															"10000": "Internal server error.",
															"10001": "Authentication failure."
														}
													},
													"type": "array"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id"
								],
								"properties": {
									"id": {
										"description": "List of domain names.",
										"type": "array",
										"items": {
											"type": "string"
										},
										"example": [
											"cloudflare.com",
											"cloudflare.net"
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/registrar/domains/{domain_name}": {
			"get": {
				"summary": "Get domain",
				"description": "Show individual domain.",
				"parameters": [
					{
						"name": "domain_name",
						"in": "path",
						"required": true,
						"schema": {
							"description": "Domain name.",
							"example": "cloudflare.com",
							"type": "string"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get domain response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update domain",
				"description": "Update individual domain.",
				"parameters": [
					{
						"name": "domain_name",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1registrar~1domains~1%7Bdomain_name%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1registrar~1domains~1%7Bdomain_name%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update domain response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1registrar~1domains~1%7Bdomain_name%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"type": "object",
										"properties": {
											"name_servers": {
												"description": "List of name servers.",
												"type": "array",
												"items": {
													"type": "string"
												},
												"example": [
													"preston.ns.cloudflare.com",
													"oli.ns.cloudflare.com"
												]
											},
											"privacy": {
												"description": "Privacy option controls redacting WHOIS information.",
												"example": true,
												"type": "boolean"
											},
											"locked": {
												"description": "Shows whether a registrar lock is in place for a domain.",
												"example": false,
												"type": "boolean"
											},
											"auto_renew": {
												"description": "Auto-renew controls whether subscription is automatically renewed upon domain expiration.",
												"example": true,
												"type": "boolean"
											}
										}
									}
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/tunnels": {
			"get": {
				"summary": "List Argo Tunnels",
				"description": "List, search and filter an account's Argo Tunnels",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Argo Tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "UUID of the tunnel",
																"readOnly": true,
																"type": "string",
																"maxLength": 36,
																"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
																"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
																"minLength": 36
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1tunnels/post/requestBody/content/application~1json/schema/properties/name"
															},
															"created_at": {
																"description": "Timestamps when the tunnel was created, formatted in RFC 3339"
															},
															"deleted_at": {
																"description": "If present, indicates tunnel was deleted at the given date (formatted in RFC 3339). If absent, tunnel has not been deleted",
																"type": "string",
																"format": "date-time",
																"example": "2009-11-10T23:00:00+00:00",
																"nullable": true
															},
															"connections": {
																"description": "Connections between cloudflared and the Cloudflare edge that are serving this tunnel",
																"type": "array",
																"items": {
																	"properties": {
																		"colo_name": {
																			"description": "Short ID for the colo this connection is connected to",
																			"type": "string",
																			"example": "DFW"
																		},
																		"uuid": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																		},
																		"is_pending_reconnect": {
																			"description": "Cloudflare continues to track connections for several minutes after they disconnect. This is an optimization to improve latency and reliability of reconnecting. If this field is true, the connection has disconnected but is still being tracked for these optimized reconnects. If false, the connection is still actively serving",
																			"type": "boolean",
																			"example": false
																		}
																	}
																}
															}
														},
														"required": [
															"id",
															"name",
															"created_at",
															"connections"
														],
														"x-cfDeprecations": {
															"argo_tunnel_deprecation": {
																"id": "argo_tunnel_deprecation",
																"description": "This endpoint and its related APIs are deprecated in favor of the Cloudflare Tunnels equivalent APIs.",
																"eol": "2024-02-04",
																"display": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"id": "argo_tunnel_deprecation",
					"description": "This endpoint and its related APIs are deprecated in favor of the Cloudflare Tunnels equivalent APIs.",
					"eol": "2024-02-04",
					"display": true
				}
			},
			"post": {
				"summary": "Create Argo Tunnel",
				"description": "Create an Argo Tunnel in an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1tunnels/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Argo Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1tunnels/get/x-cfDeprecation"
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"name",
									"tunnel_secret"
								],
								"properties": {
									"name": {
										"description": "A user-friendly name chosen when the tunnel is created. Cannot be empty",
										"type": "string",
										"example": "blog"
									},
									"tunnel_secret": {
										"type": "string",
										"description": "32 or more bytes, encoded as a base64 string. The Create Argo Tunnel endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password",
										"example": "AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg="
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/tunnels/{tunnel_id}": {
			"get": {
				"summary": "Get Argo Tunnel",
				"description": "Get the details of an Argo Tunnel from an account",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "UUID of the tunnel",
							"readOnly": true,
							"type": "string",
							"maxLength": 36,
							"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
							"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
							"minLength": 36
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Argo Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"id": "argo_tunnel_deprecation",
					"description": "This endpoint and its related APIs are deprecated in favor of the Cloudflare Tunnels equivalent APIs.",
					"eol": "2024-02-04",
					"display": true
				}
			},
			"delete": {
				"summary": "Delete Argo Tunnel",
				"description": "Delete an Argo Tunnel from an account",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1tunnels~1%7Btunnel_id%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1tunnels~1%7Btunnel_id%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Argo Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1tunnels~1%7Btunnel_id%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1tunnels~1%7Btunnel_id%7D/get/x-cfDeprecation"
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/tunnels/{tunnel_id}/connections": {
			"delete": {
				"summary": "Clean Up Argo Tunnel Connections",
				"description": "Remove stale connection resources from an Argo Tunnel",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "UUID of the tunnel",
							"readOnly": true,
							"type": "string",
							"maxLength": 36,
							"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
							"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
							"minLength": 36
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Clean Up Argo Tunnel Connections response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"deprecated": true,
				"x-cfDeprecation": {
					"id": "argo_tunnel_deprecation",
					"description": "This endpoint and its related APIs are deprecated in favor of the Cloudflare Tunnels equivalent APIs.",
					"eol": "2024-02-04",
					"display": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/cfd_tunnel": {
			"get": {
				"summary": "List Cloudflare Tunnels",
				"description": "List, search and filter an account's Cloudflare Tunnels",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Cloudflare Tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"description": "Indicates the cloudflared enabled features for this Cloudflare Tunnel connection",
														"type": "object",
														"properties": {
															"id": {
																"description": "UUID of the tunnel",
																"readOnly": true,
																"type": "string",
																"maxLength": 36,
																"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
																"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
																"minLength": 36
															},
															"account_tag": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel/get/parameters/0/schema"
															},
															"created_at": {
																"type": "string",
																"format": "date-time",
																"example": "2021-01-25T18:22:34.317854+00:00",
																"description": "Timestamps when the resource was created, formatted in RFC 3339"
															},
															"deleted_at": {
																"description": "If present, indicates tunnel was deleted at the given date (formatted in RFC 3339). If absent, tunnel has not been deleted",
																"type": "string",
																"format": "date-time",
																"example": "2009-11-10T23:00:00+00:00",
																"nullable": true
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel/post/requestBody/content/application~1json/schema/properties/name"
															},
															"connections": {
																"description": "Connections between cloudflared and the Cloudflare edge that are serving this tunnel",
																"type": "array",
																"items": {
																	"properties": {
																		"colo_name": {
																			"description": "Short ID for the colo this connection is connected to",
																			"type": "string",
																			"example": "DFW"
																		},
																		"id": {
																			"description": "UUID of the tunnel's connection",
																			"readOnly": true,
																			"type": "string",
																			"maxLength": 36,
																			"example": "1bedc50d-42b3-473c-b108-ff3d10c0d925",
																			"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
																			"minLength": 36
																		},
																		"is_pending_reconnect": {
																			"description": "Cloudflare continues to track connections for several minutes after they disconnect. This is an optimization to improve latency and reliability of reconnecting. If this field is true, the connection has disconnected but is still being tracked for these optimized reconnects. If false, the connection is still actively serving",
																			"type": "boolean",
																			"example": false
																		},
																		"client_id": {
																			"description": "UUID of the cloudflared instance"
																		},
																		"client_version": {
																			"description": "Indicates the cloudflared version used to establish this Cloudflare Tunnel connection",
																			"type": "string",
																			"example": "2022.7.1"
																		},
																		"opened_at": {
																			"type": "string",
																			"format": "date-time",
																			"example": "2021-01-25T18:22:34.317854+00:00",
																			"description": "Timestamp when the connection was established, formatted in RFC 3339"
																		},
																		"origin_ip": {
																			"description": "The publicly perceived IP of the host running the cloudflared instance",
																			"type": "string",
																			"example": "85.12.78.6"
																		}
																	}
																}
															},
															"conns_active_at": {
																"description": "If present, indicates the timestamp since the tunnel had at least 1 connection active (formatted in RFC 3339). If absent, tunnel is inactive",
																"type": "string",
																"format": "date-time",
																"example": "2009-11-10T23:00:00+00:00",
																"nullable": true
															},
															"conns_inactive_at": {
																"description": "If present, indicates since when the tunnel is without any connection established to the edge (formatted in RFC 3339). If absent, tunnel is active",
																"type": "string",
																"format": "date-time",
																"example": "2009-11-10T23:00:00+00:00",
																"nullable": true
															},
															"status": {
																"description": "The status of the tunnel. Could be \"active\", \"inactive\" or \"degraded\" (Active but not all connectors have 4 connections to the edge)",
																"type": "string",
																"example": "active"
															},
															"remote_config": {
																"description": "If the Cloudflare Tunnel's configuration is configured remotely (true) or locally on the origin machine (false)",
																"type": "boolean",
																"example": true
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Cloudflare Tunnel",
				"description": "Create a Cloudflare Tunnel in an account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Cloudflare Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"name",
									"tunnel_secret"
								],
								"properties": {
									"name": {
										"description": "A user-friendly name chosen when the tunnel is created. Cannot be empty",
										"type": "string",
										"example": "blog"
									},
									"tunnel_secret": {
										"type": "string",
										"description": "A secret encoded as a base64 string. The Create Cloudflare Tunnel endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password",
										"example": "AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg="
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/cfd_tunnel/{tunnel_id}": {
			"patch": {
				"summary": "Update Cloudflare Tunnel",
				"description": "Updates a Cloudflare Tunnel in an account",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "UUID of the tunnel",
							"readOnly": true,
							"type": "string",
							"maxLength": 36,
							"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
							"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
							"minLength": 36
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Cloudflare Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"description": "Indicates the cloudflared enabled features for this Cloudflare Tunnel connection",
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/parameters/0/schema"
														},
														"account_tag": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/parameters/1/schema"
														},
														"created_at": {
															"type": "string",
															"format": "date-time",
															"example": "2021-01-25T18:22:34.317854+00:00",
															"description": "Timestamps when the resource was created, formatted in RFC 3339"
														},
														"deleted_at": {
															"description": "If present, indicates tunnel was deleted at the given date (formatted in RFC 3339). If absent, tunnel has not been deleted",
															"type": "string",
															"format": "date-time",
															"example": "2009-11-10T23:00:00+00:00",
															"nullable": true
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/requestBody/content/application~1json/schema/properties/name"
														},
														"connections": {
															"description": "Connections between cloudflared and the Cloudflare edge that are serving this tunnel",
															"type": "array",
															"items": {
																"properties": {
																	"colo_name": {
																		"description": "Short ID for the colo this connection is connected to",
																		"type": "string",
																		"example": "DFW"
																	},
																	"id": {
																		"description": "UUID of the tunnel's connection",
																		"readOnly": true,
																		"type": "string",
																		"maxLength": 36,
																		"example": "1bedc50d-42b3-473c-b108-ff3d10c0d925",
																		"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
																		"minLength": 36
																	},
																	"is_pending_reconnect": {
																		"description": "Cloudflare continues to track connections for several minutes after they disconnect. This is an optimization to improve latency and reliability of reconnecting. If this field is true, the connection has disconnected but is still being tracked for these optimized reconnects. If false, the connection is still actively serving",
																		"type": "boolean",
																		"example": false
																	},
																	"client_id": {
																		"description": "UUID of the cloudflared instance"
																	},
																	"client_version": {
																		"description": "Indicates the cloudflared version used to establish this Cloudflare Tunnel connection",
																		"type": "string",
																		"example": "2022.7.1"
																	},
																	"opened_at": {
																		"type": "string",
																		"format": "date-time",
																		"example": "2021-01-25T18:22:34.317854+00:00",
																		"description": "Timestamp when the connection was established, formatted in RFC 3339"
																	},
																	"origin_ip": {
																		"description": "The publicly perceived IP of the host running the cloudflared instance",
																		"type": "string",
																		"example": "85.12.78.6"
																	}
																}
															}
														},
														"conns_active_at": {
															"description": "If present, indicates the timestamp since the tunnel had at least 1 connection active (formatted in RFC 3339). If absent, tunnel is inactive",
															"type": "string",
															"format": "date-time",
															"example": "2009-11-10T23:00:00+00:00",
															"nullable": true
														},
														"conns_inactive_at": {
															"description": "If present, indicates since when the tunnel is without any connection established to the edge (formatted in RFC 3339). If absent, tunnel is active",
															"type": "string",
															"format": "date-time",
															"example": "2009-11-10T23:00:00+00:00",
															"nullable": true
														},
														"status": {
															"description": "The status of the tunnel. Could be \"active\", \"inactive\" or \"degraded\" (Active but not all connectors have 4 connections to the edge)",
															"type": "string",
															"example": "active"
														},
														"remote_config": {
															"description": "If the Cloudflare Tunnel's configuration is configured remotely (true) or locally on the origin machine (false)",
															"type": "boolean",
															"example": true
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"description": "A user-friendly name chosen when the tunnel is created. Cannot be empty",
										"type": "string",
										"example": "blog"
									},
									"tunnel_secret": {
										"type": "string",
										"description": "A secret encoded as a base64 string. The endpoint sets this as the tunnel's password. Anyone wishing to run the tunnel needs this password",
										"example": "AQIDBAUGBwgBAgMEBQYHCAECAwQFBgcIAQIDBAUGBwg="
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Cloudflare Tunnel",
				"description": "Get the details of a Cloudflare Tunnel from an account",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Cloudflare Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Delete Cloudflare Tunnel",
				"description": "Delete a Cloudflare Tunnel from an account",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Cloudflare Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D/patch/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/cfd_tunnel/{tunnel_id}/connections": {
			"get": {
				"summary": "List Cloudflare Tunnel Connections",
				"description": "List all of the connection resources for a Cloudflare Tunnel",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "UUID of the tunnel",
							"readOnly": true,
							"type": "string",
							"maxLength": 36,
							"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
							"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
							"minLength": 36
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Cloudflare Tunnel Connections response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"description": "Indicates the cloudflared enabled features for this Cloudflare Tunnel connection",
														"type": "object",
														"properties": {
															"id": {
																"description": "UUID of the tunnel's connection",
																"readOnly": true,
																"type": "string",
																"maxLength": 36,
																"example": "1bedc50d-42b3-473c-b108-ff3d10c0d925",
																"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
																"minLength": 36
															},
															"features": {
																"description": "Contents of a Cloudflare Tunnel",
																"type": "array",
																"items": {
																	"type": "string",
																	"example": "ha-origin"
																}
															},
															"version": {
																"description": "Indicates the cloudflared version used to establish this Cloudflare Tunnel connection",
																"type": "string",
																"example": "2022.7.1"
															},
															"arch": {
																"description": "Indicates the cloudflared OS architecture used to establish this Cloudflare Tunnel connection",
																"type": "string",
																"example": "linux_amd64"
															},
															"conns": {
																"description": "Connections between cloudflared and the Cloudflare edge that are serving this tunnel",
																"type": "array",
																"items": {
																	"properties": {
																		"colo_name": {
																			"description": "Short ID for the colo this connection is connected to",
																			"type": "string",
																			"example": "DFW"
																		},
																		"id": {
																			"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D~1connections/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
																		},
																		"is_pending_reconnect": {
																			"description": "Cloudflare continues to track connections for several minutes after they disconnect. This is an optimization to improve latency and reliability of reconnecting. If this field is true, the connection has disconnected but is still being tracked for these optimized reconnects. If false, the connection is still actively serving",
																			"type": "boolean",
																			"example": false
																		},
																		"client_id": {
																			"description": "UUID of the cloudflared instance"
																		},
																		"client_version": {
																			"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D~1connections/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/version"
																		},
																		"opened_at": {
																			"type": "string",
																			"format": "date-time",
																			"example": "2021-01-25T18:22:34.317854+00:00",
																			"description": "Timestamp when the connection was established, formatted in RFC 3339"
																		},
																		"origin_ip": {
																			"description": "The publicly perceived IP of the host running the cloudflared instance",
																			"type": "string",
																			"example": "85.12.78.6"
																		}
																	}
																}
															},
															"run_at": {
																"description": "Indicates when the tunnel connection was started (formatted in RFC 3339)",
																"type": "string",
																"format": "date-time",
																"example": "2009-11-10T23:00:00+00:00"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"delete": {
				"summary": "Clean Up Cloudflare Tunnel Connections",
				"description": "Remove stale connection resources from a Cloudflare Tunnel",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D~1connections/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D~1connections/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Clean Up Cloudflare Tunnel Connections response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1audit_logs/get/responses/200/content/application~1json/schema/oneOf/1"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/cfd_tunnel/{tunnel_id}/token": {
			"get": {
				"summary": "Get Cloudflare Tunnel Token",
				"description": "Gets the Tunnel for a previously created Cloudflare Tunnel",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "UUID of the tunnel",
							"readOnly": true,
							"type": "string",
							"maxLength": 36,
							"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
							"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
							"minLength": 36
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Cloudflare Tunnel Token response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "string"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/cfd_tunnel/{tunnel_id}/configurations": {
			"put": {
				"summary": "Put Configuration",
				"description": "Add or update a configuration for a cloudflared tunnel",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "UUID of the tunnel",
							"readOnly": true,
							"type": "string",
							"maxLength": 36,
							"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
							"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
							"minLength": 36
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Put Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"config": {
										"description": "This is a json that conforms to the same syntax rules as the config.yaml"
									}
								}
							}
						}
					}
				}
			},
			"get": {
				"summary": "Get Configuration",
				"description": "Get the configuration of a specific Cloudflare Tunnel",
				"parameters": [
					{
						"name": "tunnel_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D~1configurations/put/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D~1configurations/put/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Configuration response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1cfd_tunnel~1%7Btunnel_id%7D~1configurations/put/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/teamnet/routes": {
			"get": {
				"summary": "List Tunnel Routes",
				"description": "List, search and filter an account's tunnel routes",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Tunnel Routes response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"network": {
																"description": "CIDR notation of the IPv4 or IPv6 range of the network the route connects to"
															},
															"tunnel_id": {
																"description": "UUID of the Tunnel the route belongs to"
															},
															"tunnel_name": {
																"description": "User-friendly name of the Tunnel the route belongs to"
															},
															"comment": {
																"description": "Optional remark describing the route. Empty if none",
																"type": "string",
																"example": "Example comment for this route"
															},
															"created_at": {
																"description": "Timestamps when the route was created, formatted in RFC 3339"
															},
															"deleted_at": {
																"description": "If present, indicates route was deleted at the given date (formatted in RFC 3339). If absent, route has not been deleted",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2021-01-25T18:22:34.317854+00:00",
																"nullable": true
															},
															"virtual_network_id": {
																"description": "UUID of the virtual network this route belongs to"
															}
														},
														"required": [
															"network",
															"tunnel_id",
															"comment",
															"created_at"
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/teamnet/routes/ip/{ip}": {
			"get": {
				"summary": "Get Tunnel Route by IP",
				"description": "Find the Tunnel Route that encompasses the given IP",
				"parameters": [
					{
						"name": "ip",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "10.1.0.137"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Tunnel Route by IP response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/teamnet/routes/network/{ip_network}": {
			"post": {
				"summary": "Create Route",
				"description": "Add a new route to the account's routing table for the given tunnel",
				"parameters": [
					{
						"name": "ip_network",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "ff01::/32"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Route response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"tunnel_id"
								],
								"properties": {
									"tunnel_id": {
										"description": "UUID of the tunnel for which this route is being added"
									},
									"comment": {
										"description": "Optional remark describing the route. Empty if none",
										"type": "string",
										"example": "Example comment for this route"
									},
									"virtual_network_id": {
										"description": "optional UUID of the virtual network for which this route is being added; uses the default virtual network of the account if none is provided"
									}
								}
							}
						}
					}
				}
			},
			"patch": {
				"summary": "Update Route",
				"description": "Update an existing route in the account's routing table for the given tunnel",
				"parameters": [
					{
						"name": "ip_network",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1routes~1network~1%7Bip_network%7D/post/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1routes~1network~1%7Bip_network%7D/post/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Route response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1routes~1network~1%7Bip_network%7D/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"tunnel_id": {
										"description": "UUID of the tunnel this route should belong to"
									},
									"comment": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1routes~1network~1%7Bip_network%7D/post/requestBody/content/application~1json/schema/properties/comment"
									},
									"network": {
										"description": "New CIDR of this route"
									},
									"virtual_network_id": {
										"description": "UUID of the virtual network to which this route belongs to"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Route",
				"description": "Delete an existing route from the account's routing table",
				"parameters": [
					{
						"name": "ip_network",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1routes~1network~1%7Bip_network%7D/post/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1routes~1network~1%7Bip_network%7D/post/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Route response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1routes~1network~1%7Bip_network%7D/post/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/teamnet/virtual_networks": {
			"get": {
				"summary": "List Virtual Networks",
				"description": "List, search and filter an account's virtual networks",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Virtual Networks response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"description": "UUID of the virtual network",
																"readOnly": true,
																"type": "string",
																"maxLength": 36,
																"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
																"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
																"minLength": 36
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1virtual_networks/post/requestBody/content/application~1json/schema/properties/name"
															},
															"is_default_network": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1virtual_networks/post/requestBody/content/application~1json/schema/properties/is_default"
															},
															"comment": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1virtual_networks/post/requestBody/content/application~1json/schema/properties/comment"
															},
															"created_at": {
																"description": "Timestamp of when the virtual network was created, formatted in RFC 3339"
															},
															"deleted_at": {
																"description": "If present, indicates that the virtual network was deleted at the given date (formatted in RFC 3339). If absent, the virtual network has not been deleted",
																"type": "string",
																"format": "date-time",
																"readOnly": true,
																"example": "2021-01-25T18:22:34.317854+00:00",
																"nullable": true
															}
														},
														"required": [
															"id",
															"name",
															"is_default_network",
															"comment",
															"created_at"
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create Virtual Network",
				"description": "Add a new virtual network to the account",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1virtual_networks/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Virtual Network response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"name"
								],
								"properties": {
									"name": {
										"description": "A user-friendly name chosen when the virtual network is created. Cannot be empty",
										"type": "string",
										"example": "us-east-1-vpc"
									},
									"comment": {
										"description": "Optional remark describing the virtual network. Empty if none",
										"type": "string",
										"example": "Staging VPC for data science"
									},
									"is_default": {
										"description": "Whether this virtual network is the default one for the account. This means IP Routes belong to this virtual network and Teams Clients in the account route through this virtual network, unless specified otherwise for each case.",
										"type": "boolean",
										"example": true
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/teamnet/virtual_networks/{vnet_id}": {
			"patch": {
				"summary": "Update Virtual Network",
				"description": "Update an existing virtual network in the account",
				"parameters": [
					{
						"name": "vnet_id",
						"in": "path",
						"required": true,
						"schema": {
							"description": "UUID of the virtual network",
							"readOnly": true,
							"type": "string",
							"maxLength": 36,
							"example": "f70ff985-a4ef-4643-bbbc-4a0ed4fc8415",
							"pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
							"minLength": 36
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Virtual Network response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"type": "object",
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"description": "A user-friendly name chosen when the virtual network is created. Cannot be empty",
										"type": "string",
										"example": "us-east-1-vpc"
									},
									"comment": {
										"description": "Optional remark describing the virtual network. Empty if none",
										"type": "string",
										"example": "Staging VPC for data science"
									},
									"is_default_network": {
										"description": "Whether this virtual network is the default one for the account. This means IP Routes belong to this virtual network and Teams Clients in the account route through this virtual network, unless specified otherwise for each case.",
										"type": "boolean",
										"example": true
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Virtual Network",
				"description": "Delete an existing virtual network from the account",
				"parameters": [
					{
						"name": "vnet_id",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1virtual_networks~1%7Bvnet_id%7D/patch/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1virtual_networks~1%7Bvnet_id%7D/patch/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Virtual Network response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1teamnet~1virtual_networks~1%7Bvnet_id%7D/patch/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/routes": {
			"get": {
				"summary": "List Routes",
				"description": "List all Magic static routes",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Routes response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"routes": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"prefix",
																	"nexthop",
																	"priority"
																],
																"properties": {
																	"id": {
																		"type": "string",
																		"readOnly": true,
																		"maxLength": 32,
																		"description": "Route identifier tag",
																		"example": "c4a7362d577a6c3019a474fd6f485821"
																	},
																	"created_on": {
																		"type": "string",
																		"readOnly": true,
																		"format": "date-time",
																		"example": "2017-06-14T00:00:00+00:00",
																		"description": "When the route was created"
																	},
																	"modified_on": {
																		"type": "string",
																		"readOnly": true,
																		"format": "date-time",
																		"example": "2017-06-14T05:20:00+00:00",
																		"description": "When the route was last modified"
																	},
																	"prefix": {
																		"type": "string",
																		"description": "IP Prefix in Classless Inter-Domain Routing format",
																		"example": "192.0.2.0/24"
																	},
																	"nexthop": {
																		"type": "string",
																		"description": "The next-hop IP Address for the static route",
																		"example": "203.0.113.1"
																	},
																	"priority": {
																		"type": "integer",
																		"description": "Priority of the static route"
																	},
																	"description": {
																		"type": "string",
																		"description": "An optional human provided description of the static route",
																		"example": "New route for new prefix 203.0.113.1"
																	},
																	"weight": {
																		"type": "integer",
																		"description": "Optional weight of the ECMP scope - if provided"
																	},
																	"scope": {
																		"type": "object",
																		"description": "Used only for ECMP routes",
																		"properties": {
																			"colo_regions": {
																				"type": "array",
																				"description": "List of colo regions for the ECMP scope",
																				"items": {
																					"type": "string",
																					"description": "Scope colo region",
																					"example": "APAC"
																				}
																			},
																			"colo_names": {
																				"type": "array",
																				"description": "List of colo names for the ECMP scope",
																				"items": {
																					"type": "string",
																					"description": "Scope colo name",
																					"example": "den01"
																				}
																			}
																		}
																	}
																},
																"x-cfLinkErrors": {}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Routes",
				"description": "Creates a new Magic static route. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Routes response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"prefix",
									"nexthop",
									"priority"
								]
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Many Routes",
				"description": "Update multiple Magic static routes. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes. Only fields for a route that need to be changed need be provided.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Many Routes response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"type": "boolean",
															"example": true
														},
														"modified_routes": {
															"type": "array",
															"items": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/routes/items"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"routes"
								],
								"properties": {
									"routes": {
										"type": "array",
										"items": {
											"allOf": [
												{
													"required": [
														"id"
													],
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
														}
													}
												},
												{
													"type": "object",
													"required": [
														"prefix",
														"nexthop",
														"priority"
													],
													"properties": {
														"prefix": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/routes/items/properties/prefix"
														},
														"nexthop": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/routes/items/properties/nexthop"
														},
														"priority": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/routes/items/properties/priority"
														},
														"description": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/routes/items/properties/description"
														},
														"weight": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/routes/items/properties/weight"
														},
														"scope": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/routes/items/properties/scope"
														}
													}
												}
											]
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/routes/{route_identifier}": {
			"get": {
				"summary": "Route Details",
				"description": "Get a specific Magic static route",
				"parameters": [
					{
						"name": "route_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Route Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"route": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:read"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update Route",
				"description": "Update a specific Magic static route. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "route_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes~1%7Broute_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes~1%7Broute_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Route response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"type": "boolean",
															"example": true
														},
														"modified_route": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"type": "object",
										"required": [
											"prefix",
											"nexthop",
											"priority"
										],
										"properties": {
											"prefix": {
												"type": "string",
												"description": "IP Prefix in Classless Inter-Domain Routing format",
												"example": "192.0.2.0/24"
											},
											"nexthop": {
												"type": "string",
												"description": "The next-hop IP Address for the static route",
												"example": "203.0.113.1"
											},
											"priority": {
												"type": "integer",
												"description": "Priority of the static route"
											},
											"description": {
												"type": "string",
												"description": "An optional human provided description of the static route",
												"example": "New route for new prefix 203.0.113.1"
											},
											"weight": {
												"type": "integer",
												"description": "Optional weight of the ECMP scope - if provided"
											},
											"scope": {
												"type": "object",
												"description": "Used only for ECMP routes",
												"properties": {
													"colo_regions": {
														"type": "array",
														"description": "List of colo regions for the ECMP scope",
														"items": {
															"type": "string",
															"description": "Scope colo region",
															"example": "APAC"
														}
													},
													"colo_names": {
														"type": "array",
														"description": "List of colo names for the ECMP scope",
														"items": {
															"type": "string",
															"description": "Scope colo name",
															"example": "den01"
														}
													}
												}
											}
										}
									}
								]
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Route",
				"description": "Disable and remove a specific Magic static route",
				"parameters": [
					{
						"name": "route_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes~1%7Broute_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1routes~1%7Broute_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Route response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"deleted": {
															"type": "boolean",
															"example": true
														},
														"deleted_route": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPermissionsRequired": {
					"enum": [
						"#organization:edit"
					]
				},
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/gre_tunnels": {
			"get": {
				"summary": "List GRE tunnels",
				"description": "List GRE tunnels associated with an account's Magic setup",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List GRE tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gre_tunnels": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"name",
																	"customer_gre_endpoint",
																	"cloudflare_gre_endpoint",
																	"interface_address"
																],
																"properties": {
																	"id": {
																		"type": "string",
																		"readOnly": true,
																		"maxLength": 32,
																		"description": "Tunnel identifier tag",
																		"example": "c4a7362d577a6c3019a474fd6f485821"
																	},
																	"created_on": {
																		"type": "string",
																		"readOnly": true,
																		"format": "date-time",
																		"example": "2017-06-14T00:00:00+00:00",
																		"description": "When the tunnel was created"
																	},
																	"modified_on": {
																		"type": "string",
																		"readOnly": true,
																		"format": "date-time",
																		"example": "2017-06-14T05:20:00+00:00",
																		"description": "When the tunnel was last modified"
																	},
																	"name": {
																		"type": "string",
																		"description": "Should be a valid Linux interface name, i.e., has no spaces, special characters, is 15 or less characters, and doesn't share a name with other GRE tunnels",
																		"example": "GRE_1"
																	},
																	"customer_gre_endpoint": {
																		"type": "string",
																		"description": "The IP address assigned to the customer side of the GRE tunnel",
																		"example": "203.0.113.1"
																	},
																	"cloudflare_gre_endpoint": {
																		"type": "string",
																		"description": "The IP address assigned to the Cloudflare side of the GRE tunnel",
																		"example": "203.0.113.1"
																	},
																	"interface_address": {
																		"type": "string",
																		"description": "A 31-bit prefix (/31 in CIDR notation) supporting 2 hosts, one for each side of the tunnel. Select the subnet from the following private IP space: 10.0.0.0–10.255.255.255, 172.16.0.0–172.31.255.255, 192.168.0.0–192.168.255.255.",
																		"example": "192.0.2.0/31"
																	},
																	"description": {
																		"type": "string",
																		"description": "An optional description of the GRE tunnel",
																		"example": "Tunnel for ISP X"
																	},
																	"ttl": {
																		"type": "integer",
																		"description": "Time To Live (TTL) in number of hops of the GRE tunnel. Minimum value 64",
																		"default": 64
																	},
																	"mtu": {
																		"type": "integer",
																		"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. Maximum value 1476 and minimum value 576",
																		"default": 1476
																	},
																	"health_check": {
																		"type": "object",
																		"properties": {
																			"enabled": {
																				"description": "Flag to run healthchecks for this tunnel (defaults to true)",
																				"type": "boolean",
																				"example": true,
																				"default": true
																			},
																			"target": {
																				"type": "string",
																				"description": "Address to run healthchecks against (defaults to customer_gre_endpoint address)",
																				"example": "203.0.113.1"
																			},
																			"type": {
																				"type": "string",
																				"description": "Type of healthcheck to run (reply or request). Defaults to reply.",
																				"example": "request",
																				"default": "reply",
																				"enum": [
																					"reply",
																					"request"
																				]
																			}
																		}
																	}
																},
																"x-cfLinkErrors": {}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create GRE tunnels",
				"description": "Creates new GRE tunnels associated with an account's Magic setup. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create GRE tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"customer_gre_endpoint",
									"cloudflare_gre_endpoint",
									"interface_address"
								]
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Many GRE tunnels",
				"description": "Update many GRE tunnels for an account's Magic setup. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Many GRE tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"type": "boolean",
															"example": true
														},
														"modified_gre_tunnels": {
															"type": "array",
															"items": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id"
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/gre_tunnels/{tunnel_identifier}": {
			"get": {
				"summary": "GRE Tunnel Details",
				"description": "Get a specific GRE tunnel for an account's Magic setup",
				"parameters": [
					{
						"name": "tunnel_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "GRE Tunnel Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"gre_tunnel": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update GRE Tunnel",
				"description": "Update a specific GRE tunnel for an account's Magic setup. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "tunnel_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels~1%7Btunnel_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels~1%7Btunnel_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update GRE Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"type": "boolean",
															"example": true
														},
														"modified_gre_tunnel": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"type": "object",
										"required": [
											"name",
											"customer_gre_endpoint",
											"cloudflare_gre_endpoint",
											"interface_address"
										],
										"properties": {
											"name": {
												"type": "string",
												"description": "Should be a valid Linux interface name, i.e., has no spaces, special characters, is 15 or less characters, and doesn't share a name with other GRE tunnels",
												"example": "GRE_1"
											},
											"customer_gre_endpoint": {
												"type": "string",
												"description": "The IP address assigned to the customer side of the GRE tunnel",
												"example": "203.0.113.1"
											},
											"cloudflare_gre_endpoint": {
												"type": "string",
												"description": "The IP address assigned to the Cloudflare side of the GRE tunnel",
												"example": "203.0.113.1"
											},
											"interface_address": {
												"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items/properties/interface_address"
											},
											"description": {
												"type": "string",
												"description": "An optional description of the GRE tunnel",
												"example": "Tunnel for ISP X"
											},
											"ttl": {
												"type": "integer",
												"description": "Time To Live (TTL) in number of hops of the GRE tunnel. Minimum value 64",
												"default": 64
											},
											"mtu": {
												"type": "integer",
												"description": "Maximum Transmission Unit (MTU) in bytes for the GRE tunnel. Maximum value 1476 and minimum value 576",
												"default": 1476
											},
											"health_check": {
												"type": "object",
												"properties": {
													"enabled": {
														"description": "Flag to run healthchecks for this tunnel (defaults to true)",
														"type": "boolean",
														"example": true,
														"default": true
													},
													"target": {
														"type": "string",
														"description": "Address to run healthchecks against (defaults to customer_gre_endpoint address)",
														"example": "203.0.113.1"
													},
													"type": {
														"type": "string",
														"description": "Type of healthcheck to run (reply or request). Defaults to reply.",
														"example": "request",
														"default": "reply",
														"enum": [
															"reply",
															"request"
														]
													}
												}
											}
										}
									}
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/gre_tunnels/{tunnel_identifier}?validate_only={validate_only}": {
			"delete": {
				"summary": "Delete GRE Tunnel",
				"description": "Disable and remove a specific static GRE Tunnel for an account's Magic setup. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "validate_only",
						"in": "path",
						"required": true,
						"schema": {
							"type": "boolean",
							"description": "If provided API will only validate change without persisting them.",
							"default": true
						}
					},
					{
						"name": "tunnel_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete GRE Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"deleted": {
															"type": "boolean",
															"example": true
														},
														"deleted_gre_tunnel": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/ipsec_tunnels": {
			"get": {
				"summary": "List IPsec tunnels",
				"description": "List IPsec tunnels associated with an account's Magic setup",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List IPsec tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"ipsec_tunnels": {
															"type": "array",
															"items": {
																"type": "object",
																"required": [
																	"name",
																	"cloudflare_endpoint",
																	"interface_address"
																],
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items/properties/id"
																	},
																	"created_on": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items/properties/created_on"
																	},
																	"modified_on": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items/properties/modified_on"
																	},
																	"name": {
																		"type": "string",
																		"description": "Name for the IPsec tunnel. It cannot share a name with other tunnels",
																		"example": "IPsec_1"
																	},
																	"customer_endpoint": {
																		"type": "string",
																		"description": "The IP address assigned to the customer side of the IPsec tunnel",
																		"example": "203.0.113.1"
																	},
																	"cloudflare_endpoint": {
																		"type": "string",
																		"description": "The IP address assigned to the Cloudflare side of the IPsec tunnel",
																		"example": "203.0.113.1"
																	},
																	"interface_address": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items/properties/interface_address"
																	},
																	"description": {
																		"type": "string",
																		"description": "An optional description of the IPsec tunnel",
																		"example": "Tunnel for ISP X"
																	},
																	"psk_metadata": {
																		"type": "object",
																		"description": "Metadata about the PSK such as when it was generated.",
																		"properties": {
																			"last_generated_on": {
																				"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items/properties/modified_on"
																			}
																		}
																	},
																	"tunnel_health_check": {
																		"type": "object",
																		"properties": {
																			"enabled": {
																				"description": "Flag to run healthchecks for this tunnel (defaults to true)",
																				"type": "boolean",
																				"example": true,
																				"default": true
																			},
																			"target": {
																				"type": "string",
																				"description": "Address to run healthchecks against (defaults to customer_gre_endpoint address)",
																				"example": "203.0.113.1"
																			},
																			"type": {
																				"type": "string",
																				"description": "Type of healthcheck to run (reply or request). Defaults to reply.",
																				"example": "request",
																				"default": "reply",
																				"enum": [
																					"reply",
																					"request"
																				]
																			}
																		}
																	},
																	"allow_null_cipher": {
																		"type": "boolean",
																		"description": "When true, this tunnel can use a null-cipher (ENCR_NULL) in the ESP tunnel (Phase 2)",
																		"example": true
																	}
																},
																"x-cfLinkErrors": {}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create IPsec tunnels",
				"description": "Creates new IPsec tunnels associated with an account's Magic setup. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1ipsec_tunnels/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create IPsec tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1ipsec_tunnels/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"customer_ipsec_endpoint",
									"cloudflare_ipsec_endpoint",
									"interface_address"
								]
							}
						}
					}
				}
			},
			"put": {
				"summary": "Update Many IPsec tunnels",
				"description": "Update many IPsec tunnels for an account's Magic setup. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1ipsec_tunnels/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update Many IPsec tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"type": "boolean",
															"example": true
														},
														"modified_ipsec_tunnels": {
															"type": "array",
															"items": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1ipsec_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/ipsec_tunnels/items"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"id"
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/ipsec_tunnels/{tunnel_identifier}": {
			"get": {
				"summary": "IPsec Tunnel Details",
				"description": "Get a specific IPsec tunnel for an account's Magic setup",
				"parameters": [
					{
						"name": "tunnel_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "IPsec Tunnel Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"ipsec_tunnel": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update IPsec Tunnel",
				"description": "Update a specific IPsec tunnel for an account's Magic setup. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "tunnel_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1ipsec_tunnels~1%7Btunnel_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1ipsec_tunnels~1%7Btunnel_identifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update IPsec Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"modified": {
															"type": "boolean",
															"example": true
														},
														"modified_ipsec_tunnel": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"type": "object",
										"required": [
											"name",
											"cloudflare_endpoint",
											"interface_address"
										],
										"properties": {
											"name": {
												"type": "string",
												"description": "Name for the IPsec tunnel. It cannot share a name with other tunnels",
												"example": "IPsec_1"
											},
											"customer_endpoint": {
												"type": "string",
												"description": "The IP address assigned to the customer side of the IPsec tunnel",
												"example": "203.0.113.1"
											},
											"cloudflare_endpoint": {
												"type": "string",
												"description": "The IP address assigned to the Cloudflare side of the IPsec tunnel",
												"example": "203.0.113.1"
											},
											"interface_address": {
												"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items/properties/interface_address"
											},
											"description": {
												"type": "string",
												"description": "An optional description of the IPsec tunnel",
												"example": "Tunnel for ISP X"
											},
											"psk": {
												"type": "string",
												"description": "A randomly generated or provided string for use in the IPsec tunnel",
												"example": "O3bwKSjnaoCxDoUxjcq4Rk8ZKkezQUiy"
											}
										}
									}
								]
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/ipsec_tunnels/{tunnel_identifier}/psk_generate?validate_only={validate_only}": {
			"post": {
				"summary": "Generate Pre Shared Key (PSK) for IPsec tunnels",
				"description": "Generates a Pre Shared Key for a particular IPsec tunnel that is used in the IKE session. Use `?validate_only=true` as an optional query parameter to run validation only without actually generating PSK. Please note that the PSK generated is immediately persisted to Cloudflare's Edge and not stored in a fashion that is retrievable later. As such the PSK should be noted down in a safe place.",
				"parameters": [
					{
						"name": "validate_only",
						"in": "path",
						"required": true,
						"schema": {
							"type": "boolean",
							"description": "If provided API will only validate change without persisting them.",
							"default": true
						}
					},
					{
						"name": "tunnel_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Generate Pre Shared Key (PSK) for IPsec tunnels response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"psk_metadata": {
															"type": "object",
															"description": "Metadata about the PSK such as when it was generated.",
															"properties": {
																"last_generated_on": {
																	"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1gre_tunnels/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/gre_tunnels/items/properties/modified_on"
																}
															}
														},
														"psk": {
															"type": "string",
															"description": "A randomly generated or provided string for use in the IPsec tunnel",
															"example": "O3bwKSjnaoCxDoUxjcq4Rk8ZKkezQUiy"
														},
														"ipsec_tunnel_id": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1magic~1ipsec_tunnels~1%7Btunnel_identifier%7D~1psk_generate%3Fvalidate_only%3D%7Bvalidate_only%7D/post/parameters/1/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/magic/ipsec_tunnels/{tunnel_identifier}?validate_only={validate_only}": {
			"delete": {
				"summary": "Delete IPsec Tunnel",
				"description": "Disable and remove a specific static IPsec Tunnel for an account's Magic setup. Use `?validate_only=true` as an optional query parameter to run validation only without persisting changes",
				"parameters": [
					{
						"name": "validate_only",
						"in": "path",
						"required": true,
						"schema": {
							"type": "boolean",
							"description": "If provided API will only validate change without persisting them.",
							"default": true
						}
					},
					{
						"name": "tunnel_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1subscriptions/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete IPsec Tunnel response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"deleted": {
															"type": "boolean",
															"example": true
														},
														"deleted_ipsec_tunnel": {
															"type": "object"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/pcaps": {
			"get": {
				"summary": "List PCAP requests",
				"description": "List all PCAP requests for an account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List PCAP requests response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"anyOf": [
															{
																"type": "object",
																"properties": {
																	"id": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/id"
																	},
																	"submitted": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/submitted"
																	},
																	"filter_v1": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/filter_v1"
																	},
																	"time_limit": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/time_limit"
																	},
																	"status": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/status"
																	},
																	"type": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/type"
																	},
																	"system": {
																		"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/system"
																	}
																}
															},
															{
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema"
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Full PCAP request",
				"description": "Create new PCAP request for account.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Full PCAP request response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string",
											"description": "The ID of the PCAP",
											"example": "66802ca5668e47a2b82c2e6746e45037",
											"minLength": 32,
											"maxLength": 32
										},
										"submitted": {
											"type": "string",
											"description": "The RFC 3339 timestamp the item was created.",
											"example": "2020-01-01T08:00:00+00:00"
										},
										"filter_v1": {
											"type": "object",
											"description": "PCAP filter. Leave fields blank or empty to specify any.",
											"properties": {
												"destination_address": {
													"type": "string",
													"description": "Destination IP address to filter on.",
													"example": "1.2.3.4"
												},
												"source_address": {
													"type": "string",
													"description": "Source IP address to filter on.",
													"example": "1.2.3.4"
												},
												"source_port": {
													"type": "number",
													"description": "Source port to filter on.",
													"example": 123
												},
												"destination_port": {
													"type": "number",
													"description": "Destination port to filter on.",
													"example": 80
												},
												"protocol": {
													"type": "number",
													"description": "Protocol number to filter on.",
													"example": 6
												}
											}
										},
										"time_limit": {
											"type": "number",
											"example": 300,
											"description": "Duration of PCAP in number of seconds.",
											"minimum": 1,
											"maximum": 300
										},
										"status": {
											"type": "string",
											"description": "The status of the pcap request.",
											"example": "success",
											"enum": [
												"unknown",
												"success",
												"pending",
												"running",
												"conversion_pending",
												"conversion_running",
												"complete",
												"failed"
											]
										},
										"error_message": {
											"type": "string",
											"description": "A textual description of the error when gathering a Packet Capture. Full PCAP type only",
											"example": "No packets matched the filter in the time limit given. Please modify the filter or try again."
										},
										"type": {
											"type": "string",
											"description": "The type of pcap to collect. Simple will captured sampled packets, while full will capture entire payloads and non-sampled packets.",
											"example": "simple",
											"enum": [
												"simple",
												"full"
											]
										},
										"system": {
											"type": "string",
											"description": "The system used to collect pcaps.",
											"example": "magic-transit",
											"enum": [
												"magic-transit"
											]
										},
										"byte_limit": {
											"type": "number",
											"description": "Maximum number of bytes to capture. Optional. Full PCAP type only.",
											"minimum": 1,
											"maximum": 1000000000,
											"example": 500000
										},
										"colo_name": {
											"type": "string",
											"description": "Colo name to capture from. Full PCAP type only.",
											"example": "ord02"
										},
										"destination_conf": {
											"type": "string",
											"description": "Full URI of bucket. Full PCAP type only.",
											"example": "s3://pcaps-bucket?region=us-east-1"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": [
									"time_limit",
									"type",
									"system",
									"colo_name",
									"destination_conf"
								],
								"properties": {
									"filter_v1": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/filter_v1"
									},
									"time_limit": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/time_limit"
									},
									"packet_limit": {
										"type": "number",
										"example": 10000,
										"description": "Limit of number of packets contained in a PCAP.",
										"minimum": 1,
										"maximum": 10000
									},
									"type": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/type"
									},
									"system": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/system"
									},
									"byte_limit": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/byte_limit"
									},
									"colo_name": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/colo_name"
									},
									"destination_conf": {
										"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps/post/responses/200/content/application~1json/schema/properties/destination_conf"
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{account_identifier}/pcaps/{identifier}": {
			"get": {
				"summary": "Get PCAP request",
				"description": "Get information for a PCAP request by id.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "69cd1e104af3e6ed3cb344f263fd0d5a"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get PCAP request response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object",
															"properties": {
																"id": {
																	"type": "string",
																	"description": "The ID of the PCAP",
																	"example": "66802ca5668e47a2b82c2e6746e45037",
																	"minLength": 32,
																	"maxLength": 32
																},
																"submitted": {
																	"type": "string",
																	"description": "The RFC 3339 timestamp the item was created.",
																	"example": "2020-01-01T08:00:00+00:00"
																},
																"filter_v1": {
																	"type": "object",
																	"description": "PCAP filter. Leave fields blank or empty to specify any.",
																	"properties": {
																		"destination_address": {
																			"type": "string",
																			"description": "Destination IP address to filter on.",
																			"example": "1.2.3.4"
																		},
																		"source_address": {
																			"type": "string",
																			"description": "Source IP address to filter on.",
																			"example": "1.2.3.4"
																		},
																		"source_port": {
																			"type": "number",
																			"description": "Source port to filter on.",
																			"example": 123
																		},
																		"destination_port": {
																			"type": "number",
																			"description": "Destination port to filter on.",
																			"example": 80
																		},
																		"protocol": {
																			"type": "number",
																			"description": "Protocol number to filter on.",
																			"example": 6
																		}
																	}
																},
																"time_limit": {
																	"type": "number",
																	"example": 300,
																	"description": "Duration of PCAP in number of seconds.",
																	"minimum": 1,
																	"maximum": 300
																},
																"status": {
																	"type": "string",
																	"description": "The status of the pcap request.",
																	"example": "success",
																	"enum": [
																		"unknown",
																		"success",
																		"pending",
																		"running",
																		"conversion_pending",
																		"conversion_running",
																		"complete",
																		"failed"
																	]
																},
																"type": {
																	"type": "string",
																	"description": "The type of pcap to collect. Simple will captured sampled packets, while full will capture entire payloads and non-sampled packets.",
																	"example": "simple",
																	"enum": [
																		"simple",
																		"full"
																	]
																},
																"system": {
																	"type": "string",
																	"description": "The system used to collect pcaps.",
																	"example": "magic-transit",
																	"enum": [
																		"magic-transit"
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"id": {
																	"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/properties/id"
																},
																"submitted": {
																	"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/properties/submitted"
																},
																"filter_v1": {
																	"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/properties/filter_v1"
																},
																"time_limit": {
																	"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/properties/time_limit"
																},
																"status": {
																	"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/properties/status"
																},
																"error_message": {
																	"type": "string",
																	"description": "A textual description of the error when gathering a Packet Capture. Full PCAP type only",
																	"example": "No packets matched the filter in the time limit given. Please modify the filter or try again."
																},
																"type": {
																	"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/properties/type"
																},
																"system": {
																	"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema/allOf/1/properties/result/anyOf/0/properties/system"
																},
																"byte_limit": {
																	"type": "number",
																	"description": "Maximum number of bytes to capture. Optional. Full PCAP type only.",
																	"minimum": 1,
																	"maximum": 1000000000,
																	"example": 500000
																},
																"colo_name": {
																	"type": "string",
																	"description": "Colo name to capture from. Full PCAP type only.",
																	"example": "ord02"
																},
																"destination_conf": {
																	"type": "string",
																	"description": "Full URI of bucket. Full PCAP type only.",
																	"example": "s3://pcaps-bucket?region=us-east-1"
																}
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_identifier}/pcaps/{identifier}/download": {
			"get": {
				"summary": "Download Simple PCAP",
				"description": "Download PCAP information into a file. Response is a binary PCAP file.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "69cd1e104af3e6ed3cb344f263fd0d5a"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Download Simple PCAP response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			}
		},
		"/accounts/{account_identifier}/pcaps/ownership": {
			"get": {
				"summary": "List PCAPs Bucket Ownership",
				"description": "List all buckets configured for use with PCAPs API.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List PCAPs Bucket Ownership response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"type": "string",
																"description": "The ID of the Bucket associated with PCAPs API",
																"example": "9883874ecac311ec8475433579a6bf5f",
																"minLength": 32,
																"maxLength": 32
															},
															"submitted": {
																"type": "string",
																"description": "The RFC 3339 timestamp the bucket was added to PCAPs API.",
																"example": "2020-01-01T08:00:00+00:00"
															},
															"validated": {
																"type": "string",
																"description": "The RFC 3339 timestamp when the bucket was validated.",
																"example": "2020-01-01T08:00:00+00:00"
															},
															"destination_conf": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1ownership/post/responses/200/content/application~1json/schema/properties/destination_conf"
															},
															"filename": {
																"type": "string",
																"description": "Ownership challenge filename as stored in bucket",
																"example": "ownership-challenge-9883874ecac311ec8475433579a6bf5f.txt"
															}
														}
													},
													"nullable": true
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Add Bucket For Use with PCAPs",
				"description": "Add AWS or GCP bucket for use with PCAPs API.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1pcaps~1ownership/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Add Bucket For Use with PCAPs response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"destination_conf": {
											"type": "string",
											"description": "Full URI of bucket. Full PCAP type only.",
											"example": "s3://pcaps-bucket?region=us-east-1"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/pcaps/ownership/validate": {
			"post": {
				"summary": "Validate Bucket For Use with PCAPs",
				"description": "Validate bucket that has been added to PCAPs API.",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Validate Bucket For Use with PCAPs response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"destination_conf": {
											"type": "string",
											"description": "Full URI of bucket. Full PCAP type only.",
											"example": "s3://pcaps-bucket?region=us-east-1"
										},
										"ownership_challenge": {
											"type": "string",
											"description": "Ownership challenge filename as stored in bucket",
											"example": "ownership-challenge-9883874ecac311ec8475433579a6bf5f.txt"
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/pcaps/ownership/{ownership_identifier}": {
			"delete": {
				"summary": "Delete Bucket for Use with PCAPs",
				"description": "Delete bucket that has been added to PCAPs API.",
				"parameters": [
					{
						"name": "ownership_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "b2df3c4fcfc84ea49a28df6d55ce16cb"
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"example": "01a7362d577a6c3019a474fd6f485823"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Bucket for Use with PCAPs response",
						"content": {
							"application/json": {}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": false,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{account_identifier}/intel/domain": {
			"get": {
				"summary": "Get Domain Details",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Domain Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"domain": {
															"type": "string",
															"example": "cloudflare.com"
														},
														"resolves_to_refs": {
															"description": "Specifies a list of references to one or more IP addresses or domain names that the domain name currently resolves to",
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"id": {
																		"description": "STIX 2.1 identifier: https://docs.oasis-open.org/cti/stix/v2.1/cs02/stix-v2.1-cs02.html#_64yvzeku5a5c",
																		"type": "string",
																		"example": "ipv4-addr--baa568ec-6efe-5902-be55-0663833db537"
																	},
																	"value": {
																		"description": "IP address or domain name",
																		"type": "string",
																		"example": "192.0.2.0"
																	}
																}
															}
														},
														"popularity_rank": {
															"description": "Global Cloudflare 100k ranking for the last 30 days, if available for the hostname. The top ranked domain is 1, the lowest ranked domain is 100,000",
															"type": "integer"
														},
														"risk_score": {
															"description": "Hostname risk score, which is a value between 0 (lowest risk) to 1 (highest risk)",
															"type": "number"
														},
														"application": {
															"description": "Application that the hostname belongs to",
															"type": "object",
															"properties": {
																"id": {
																	"type": "integer"
																},
																"name": {
																	"type": "string",
																	"example": "CLOUDFLARE"
																}
															}
														},
														"risk_types": {
															"example": []
														},
														"content_categories": {
															"description": "Current content categories",
															"example": [
																{
																	"id": 155,
																	"super_category_id": 26,
																	"name": "Technology"
																}
															]
														},
														"additional_information": {
															"description": "Additional information related to the host name",
															"type": "object",
															"properties": {
																"suspected_malware_family": {
																	"description": "Suspected DGA malware family",
																	"type": "string",
																	"example": ""
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/domain/bulk": {
			"get": {
				"summary": "Get Multiple Domain Details",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Multiple Domain Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"properties": {
															"domain": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1domain/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/domain"
															},
															"popularity_rank": {
																"description": "Global Cloudflare 100k ranking for the last 30 days, if available for the hostname. The top ranked domain is 1, the lowest ranked domain is 100,000",
																"type": "integer"
															},
															"risk_score": {
																"description": "Hostname risk score, which is a value between 0 (lowest risk) to 1 (highest risk)",
																"type": "number"
															},
															"application": {
																"description": "Application that the hostname belongs to",
																"type": "object",
																"properties": {
																	"id": {
																		"type": "integer"
																	},
																	"name": {
																		"type": "string",
																		"example": "CLOUDFLARE"
																	}
																}
															},
															"risk_types": {
																"example": []
															},
															"content_categories": {
																"description": "Current content categories",
																"example": [
																	{
																		"id": 155,
																		"super_category_id": 26,
																		"name": "Technology"
																	}
																]
															},
															"additional_information": {
																"description": "Additional information related to the host name",
																"type": "object",
																"properties": {
																	"suspected_malware_family": {
																		"description": "Suspected DGA malware family",
																		"type": "string",
																		"example": ""
																	}
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/domain-history": {
			"get": {
				"summary": "Get Domain History",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Domain History response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"properties": {
															"domain": {
																"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1domain/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/domain"
															},
															"categorizations": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"categories": {
																			"example": [
																				{
																					"id": 155,
																					"name": "Technology"
																				}
																			]
																		},
																		"start": {
																			"type": "string",
																			"format": "date",
																			"example": "2021-04-01"
																		},
																		"end": {
																			"type": "string",
																			"format": "date",
																			"example": "2021-04-30"
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/whois": {
			"get": {
				"summary": "Get WHOIS Record",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get WHOIS Record response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"domain": {
															"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1domain/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/domain"
														},
														"created_date": {
															"type": "string",
															"format": "date",
															"example": "2009-02-17"
														},
														"updated_date": {
															"type": "string",
															"format": "date",
															"example": "2017-05-24"
														},
														"registrant": {
															"type": "string",
															"example": "DATA REDACTED"
														},
														"registrant_org": {
															"type": "string",
															"example": "DATA REDACTED"
														},
														"registrant_country": {
															"type": "string",
															"example": "United States"
														},
														"registrant_email": {
															"type": "string",
															"example": "https://domaincontact.cloudflareregistrar.com/cloudflare.com"
														},
														"registrar": {
															"type": "string",
															"example": "Cloudflare, Inc."
														},
														"nameservers": {
															"type": "array",
															"items": {
																"type": "string"
															},
															"example": [
																"ns3.cloudflare.com",
																"ns4.cloudflare.com",
																"ns5.cloudflare.com",
																"ns6.cloudflare.com",
																"ns7.cloudflare.com"
															]
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/ip": {
			"get": {
				"summary": "Get IP Overview",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get IP Overview response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"properties": {
															"ip": {
																"anyOf": [
																	{
																		"type": "string",
																		"format": "ipv4",
																		"example": "192.0.2.0"
																	},
																	{
																		"type": "string",
																		"format": "ipv6",
																		"example": "2001:0DB8::"
																	}
																]
															},
															"belongs_to_ref": {
																"description": "Specifies a reference to the autonomous systems (AS) that the IP address belongs to",
																"type": "object",
																"properties": {
																	"id": {
																		"example": "autonomous-system--2fa28d71-3549-5a38-af05-770b79ad6ea8"
																	},
																	"value": {
																		"type": "string"
																	},
																	"type": {
																		"type": "string",
																		"enum": [
																			"hosting_provider",
																			"isp",
																			"organization"
																		],
																		"example": "hosting_provider",
																		"description": "Infrastructure type of this ASN"
																	},
																	"country": {
																		"type": "string",
																		"example": "US"
																	},
																	"description": {
																		"type": "string",
																		"example": "CLOUDFLARENET"
																	}
																}
															},
															"risk_types": {
																"example": [
																	{
																		"id": 131,
																		"super_category_id": 21,
																		"name": "Phishing"
																	}
																]
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/ip-list": {
			"get": {
				"summary": "Get IP Lists",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get IP Lists response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"properties": {
															"id": {
																"type": "integer"
															},
															"name": {
																"type": "string",
																"example": "Malware"
															},
															"description": {
																"type": "string"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/dns": {
			"get": {
				"summary": "Get Passive DNS by IP",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Passive DNS by IP response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"reverse_records": {
															"description": "Reverse DNS look-ups observed during the time period",
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"first_seen": {
																		"description": "First seen date of the DNS record during the time period",
																		"type": "string",
																		"format": "date",
																		"example": "2021-04-01"
																	},
																	"last_seen": {
																		"description": "Last seen date of the DNS record during the time period",
																		"type": "string",
																		"format": "date",
																		"example": "2021-04-30"
																	},
																	"hostname": {
																		"description": "Hostname that the IP was observed resolving to"
																	}
																}
															}
														},
														"count": {
															"description": "Total results returned based on your search parameters",
															"type": "number",
															"example": 1
														},
														"page": {
															"description": "Current page within paginated list of results",
															"type": "number",
															"example": 1
														},
														"per_page": {
															"description": "Number of results per page of results",
															"type": "number",
															"example": 20
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel-phishing/predict": {
			"get": {
				"summary": "Scan suspicious url",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Scan suspicious url response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"url": {
															"description": "URL that was scanned",
															"type": "string",
															"example": "https://www.cloudflare.com"
														},
														"phishing": {
															"description": "Whether the URL has been classified as phishing",
															"type": "boolean",
															"example": false
														},
														"verified": {
															"description": "Whether the URL has been hand verified",
															"type": "boolean",
															"example": false
														},
														"score": {
															"description": "Score reported from the classifer for the given URL",
															"type": "number",
															"example": 0.99
														},
														"classifier": {
															"description": "Type of classifier that labelled this URL",
															"type": "string",
															"example": "MACHINE_LEARNING_v2"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/asn/{asn}": {
			"get": {
				"summary": "Get ASN Overview",
				"parameters": [
					{
						"name": "asn",
						"in": "path",
						"required": true,
						"schema": {
							"properties": {
								"asn": {
									"type": "integer"
								},
								"description": {
									"type": "string",
									"example": "CLOUDFLARENET"
								},
								"country": {
									"type": "string",
									"example": "US"
								},
								"type": {
									"type": "string",
									"enum": [
										"hosting_provider",
										"isp",
										"organization"
									],
									"example": "hosting_provider",
									"description": "Infrastructure type of this ASN"
								},
								"domain_count": {
									"type": "integer"
								},
								"top_domains": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"example": [
										"example.com"
									]
								}
							}
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get ASN Overview response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1asn~1%7Basn%7D/get/parameters/0/schema"
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/asn/{asn}/subnets": {
			"get": {
				"summary": "Get ASN Subnets",
				"parameters": [
					{
						"name": "asn",
						"in": "path",
						"required": true,
						"schema": {
							"properties": {
								"asn": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1asn~1%7Basn%7D~1subnets/get/responses/200/content/application~1json/schema/properties/asn"
								},
								"description": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1asn~1%7Basn%7D/get/parameters/0/schema/properties/description"
								},
								"country": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1asn~1%7Basn%7D/get/parameters/0/schema/properties/country"
								},
								"type": {
									"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1asn~1%7Basn%7D/get/parameters/0/schema/properties/type"
								},
								"domain_count": {
									"type": "integer"
								},
								"top_domains": {
									"type": "array",
									"items": {
										"type": "string"
									},
									"example": [
										"example.com"
									]
								}
							}
						}
					},
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get ASN Subnets response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"asn": {
											"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1intel~1asn~1%7Basn%7D/get/parameters/0/schema/properties/asn"
										},
										"ip_count_total": {
											"type": "integer"
										},
										"subnets": {
											"type": "array",
											"items": {
												"type": "string"
											},
											"example": [
												"192.0.2.0/24",
												"2001:DB8::/32"
											]
										},
										"count": {
											"description": "Total results returned based on your search parameters",
											"type": "number",
											"example": 1
										},
										"page": {
											"description": "Current page within paginated list of results",
											"type": "number",
											"example": 1
										},
										"per_page": {
											"description": "Number of results per page of results",
											"type": "number",
											"example": 20
										}
									}
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{account_identifier}/intel/miscategorization": {
			"post": {
				"summary": "Create Miscategorization",
				"parameters": [
					{
						"name": "account_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Baccount_identifier%7D~1audit_logs/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Miscategorization response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"indicator_type": {
										"enum": [
											"domain",
											"ipv4",
											"ipv6",
											"url"
										],
										"example": "domain"
									},
									"ip": {
										"description": "Provide only if indicator_type is `ipv4` or `ipv6`"
									},
									"url": {
										"type": "string",
										"description": "Provide only if indicator_type is `domain` or `url`. Example if indicator_type is `domain`: `example.com`. Example if indicator_type is `url`: `https://example.com/news/`"
									},
									"content_adds": {
										"description": "Content category IDs to add",
										"example": [
											82
										]
									},
									"content_removes": {
										"description": "Content category IDs to remove",
										"example": [
											155
										]
									},
									"security_adds": {
										"description": "Security category IDs to add",
										"example": [
											117,
											131
										]
									},
									"security_removes": {
										"description": "Security category IDs to remove",
										"example": [
											83
										]
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/alerting/v3/available_alerts": {
			"get": {
				"summary": "Get Alert Types",
				"description": "Gets a list of all alert types for which an account is eligible.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get Alert Types response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"additionalProperties": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"display_name": {
																	"description": "Alert type name",
																	"type": "string",
																	"example": "Origin Error Rate Alert"
																},
																"type": {
																	"description": "Use this value when creating and updating a notification policy.",
																	"type": "string",
																	"example": "http_alert_origin_error"
																},
																"description": {
																	"description": "Describes the alert type",
																	"type": "string",
																	"example": "High levels of 5xx HTTP errors at your origin"
																},
																"filter_options": {
																	"description": "Format of additional configuration options (filters) for the alert type. Data type of filters during policy creation: Array of strings.",
																	"type": "array",
																	"example": [
																		{
																			"Key": "zones",
																			"ComparisonOperator": "==",
																			"Optional": false
																		},
																		{
																			"Key": "slo",
																			"ComparisonOperator": ">=",
																			"Optional": true
																		}
																	],
																	"items": {}
																}
															}
														}
													},
													"example": {
														"Origin Monitoring": [
															{
																"display_name": "Origin Error Rate Alert",
																"type": "http_alert_origin_error",
																"description": "High levels of 5xx HTTP errors at your origin",
																"filter_options": [
																	{
																		"Key": "zones",
																		"ComparisonOperator": "==",
																		"Optional": false
																	},
																	{
																		"Key": "slo",
																		"ComparisonOperator": ">=",
																		"Optional": true
																	}
																]
															}
														]
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/alerting/v3/destinations/eligible": {
			"get": {
				"summary": "Get delivery mechanism eligibility",
				"description": "Get a list of all delivery mechanism types for which an account is eligible.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get delivery mechanism eligibility response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"additionalProperties": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"eligible": {
																	"type": "boolean",
																	"description": "Determines whether or not the account is eligible for the delivery mechanism.",
																	"example": true
																},
																"ready": {
																	"type": "boolean",
																	"description": "Beta flag. Users can create a policy with a mechanism that is not ready, but we cannot guarantee successful delivery of notifications.",
																	"example": true
																},
																"type": {
																	"type": "string",
																	"description": "Determines type of delivery mechanism.",
																	"enum": [
																		"email",
																		"pagerduty",
																		"webhook"
																	],
																	"example": "email"
																}
															}
														}
													},
													"example": {
														"email": {
															"eligible": true,
															"ready": true,
															"type": "email"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/accounts/{identifier}/alerting/v3/destinations/pagerduty": {
			"get": {
				"summary": "List PagerDuty services",
				"description": "Get a list of all configured PagerDuty services",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List PagerDuty services response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
															},
															"name": {
																"type": "string",
																"description": "The name of the pagerduty service",
																"example": "My PagerDuty Service"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": false,
					"business": true,
					"enterprise": true
				}
			}
		},
		"/accounts/{identifier}/alerting/v3/policies": {
			"get": {
				"summary": "List Notification policies",
				"description": "Get a list of all Notification policies.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Notification policies response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/post/requestBody/content/application~1json/schema/properties/name"
															},
															"description": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/post/requestBody/content/application~1json/schema/properties/description"
															},
															"enabled": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/post/requestBody/content/application~1json/schema/properties/enabled"
															},
															"alert_type": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/post/requestBody/content/application~1json/schema/properties/alert_type"
															},
															"mechanisms": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/post/requestBody/content/application~1json/schema/properties/mechanisms"
															},
															"filters": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/post/requestBody/content/application~1json/schema/properties/filters"
															},
															"created": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"post": {
				"summary": "Create a Notification policy",
				"description": "Creates a new Notification policy.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a Notification policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"alert_type",
									"enabled",
									"mechanisms"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "Name of the policy.",
										"example": "SSL Notification Event Policy"
									},
									"description": {
										"type": "string",
										"description": "Optional description for the Notification policy.",
										"example": "Something describing the policy."
									},
									"enabled": {
										"type": "boolean",
										"description": "Whether or not the Notification policy is enabled.",
										"default": true,
										"example": true
									},
									"alert_type": {
										"type": "string",
										"description": "Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.",
										"example": "universal_ssl_event_type"
									},
									"mechanisms": {
										"type": "object",
										"description": "List of IDs that will be used when dispatching a notification. IDs for email type will be the email address.",
										"additionalProperties": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
													}
												}
											}
										},
										"example": {
											"email": [
												{
													"id": "test@example.com"
												}
											],
											"pagerduty": [
												{
													"id": "e8133a15-00a4-4d69-aec1-32f70c51f6e5"
												}
											],
											"webhooks": [
												{
													"id": "14cc1190-5d2b-4b98-a696-c424cb2ad05f"
												}
											]
										}
									},
									"filters": {
										"type": "object",
										"additionalProperties": {
											"type": "array",
											"description": "Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details.",
											"items": {}
										},
										"example": {
											"slo": [
												"99.9"
											]
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/alerting/v3/policies/{uuid}": {
			"get": {
				"summary": "Get a Notification policy",
				"description": "Get details for a single policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a Notification policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies~1%7Buuid%7D/get/parameters/0/schema"
														},
														"name": {
															"type": "string",
															"description": "Name of the policy.",
															"example": "SSL Notification Event Policy"
														},
														"description": {
															"type": "string",
															"description": "Optional description for the Notification policy.",
															"example": "Something describing the policy."
														},
														"enabled": {
															"type": "boolean",
															"description": "Whether or not the Notification policy is enabled.",
															"default": true,
															"example": true
														},
														"alert_type": {
															"type": "string",
															"description": "Refers to which event will trigger a Notification dispatch. You can use the endpoint to get available alert types which then will give you a list of possible values.",
															"example": "universal_ssl_event_type"
														},
														"mechanisms": {
															"type": "object",
															"description": "List of IDs that will be used when dispatching a notification. IDs for email type will be the email address.",
															"additionalProperties": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"id": {
																			"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies~1%7Buuid%7D/get/parameters/0/schema"
																		}
																	}
																}
															},
															"example": {
																"email": [
																	{
																		"id": "test@example.com"
																	}
																],
																"pagerduty": [
																	{
																		"id": "e8133a15-00a4-4d69-aec1-32f70c51f6e5"
																	}
																],
																"webhooks": [
																	{
																		"id": "14cc1190-5d2b-4b98-a696-c424cb2ad05f"
																	}
																]
															}
														},
														"filters": {
															"type": "object",
															"additionalProperties": {
																"type": "array",
																"description": "Optional filters that allow you to be alerted only on a subset of events for that alert type based on some criteria. This is only available for select alert types. See alert type documentation for more details.",
																"items": {}
															},
															"example": {
																"slo": [
																	"99.9"
																]
															}
														},
														"created": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			},
			"put": {
				"summary": "Update a Notification policy",
				"description": "Update a Notification policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a Notification policy response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			},
			"delete": {
				"summary": "Delete a Notification policy",
				"description": "Delete a Notification policy.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1policies~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a Notification policy response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/alerting/v3/destinations/webhooks": {
			"get": {
				"summary": "List webhooks",
				"description": "Gets a list of all configured webhook destinations.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List webhooks response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks/post/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/id"
															},
															"name": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks/post/requestBody/content/application~1json/schema/properties/name"
															},
															"url": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks/post/requestBody/content/application~1json/schema/properties/url"
															},
															"secret": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks/post/requestBody/content/application~1json/schema/properties/secret"
															},
															"type": {
																"type": "string",
																"description": "Type of webhook endpoint.",
																"enum": [
																	"slack",
																	"generic",
																	"gchat"
																],
																"example": "slack"
															},
															"created_at": {
																"description": "Timestamp of when the webhook destination was created.",
																"type": "string",
																"readOnly": true,
																"format": "date-time",
																"example": "2020-10-26T18:25:04.532316+00:00"
															},
															"last_success": {
																"description": "Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.",
																"type": "string",
																"readOnly": true,
																"format": "date-time",
																"example": "2020-10-26T18:25:04.532316+00:00"
															},
															"last_failure": {
																"description": "Timestamp of the last time an attempt to dispatch a notification to this webhook failed.",
																"type": "string",
																"readOnly": true,
																"format": "date-time",
																"example": "2020-10-26T18:25:04.532316+00:00"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create a webhook",
				"description": "Creates a new webhook destination.",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create a webhook response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"url"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the webhook destination. This will be included in the request body when you receive a webhook notification.",
										"example": "Slack Webhook"
									},
									"url": {
										"type": "string",
										"description": "The POST endpoint to call when dispatching a notification.",
										"example": "https://hooks.slack.com/services/Ds3fdBFbV/456464Gdd"
									},
									"secret": {
										"type": "string",
										"description": "Optional secret that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body."
									}
								}
							}
						}
					}
				}
			}
		},
		"/accounts/{identifier}/alerting/v3/destinations/webhooks/{uuid}": {
			"get": {
				"summary": "Get a webhook",
				"description": "Get details for a single webhooks destination.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Get a webhook response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/get/parameters/0/schema"
														},
														"name": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/name"
														},
														"url": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/url"
														},
														"secret": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/put/requestBody/content/application~1json/schema/properties/secret"
														},
														"type": {
															"type": "string",
															"description": "Type of webhook endpoint.",
															"enum": [
																"slack",
																"generic",
																"gchat"
															],
															"example": "slack"
														},
														"created_at": {
															"description": "Timestamp of when the webhook destination was created.",
															"type": "string",
															"readOnly": true,
															"format": "date-time",
															"example": "2020-10-26T18:25:04.532316+00:00"
														},
														"last_success": {
															"description": "Timestamp of the last time Cloudflare was able to successfully dispatch a notification using this webhook.",
															"type": "string",
															"readOnly": true,
															"format": "date-time",
															"example": "2020-10-26T18:25:04.532316+00:00"
														},
														"last_failure": {
															"description": "Timestamp of the last time an attempt to dispatch a notification to this webhook failed.",
															"type": "string",
															"readOnly": true,
															"format": "date-time",
															"example": "2020-10-26T18:25:04.532316+00:00"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"put": {
				"summary": "Update a webhook",
				"description": "Update a webhook destination.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Update a webhook response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/get/parameters/0/schema"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"required": [
									"name",
									"url"
								],
								"properties": {
									"name": {
										"type": "string",
										"description": "The name of the webhook destination. This will be included in the request body when you receive a webhook notification.",
										"example": "Slack Webhook"
									},
									"url": {
										"type": "string",
										"description": "The POST endpoint to call when dispatching a notification.",
										"example": "https://hooks.slack.com/services/Ds3fdBFbV/456464Gdd"
									},
									"secret": {
										"type": "string",
										"description": "Optional secret that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body."
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete a webhook",
				"description": "Delete a configured webhook destination.",
				"parameters": [
					{
						"name": "uuid",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1alerting~1v3~1destinations~1webhooks~1%7Buuid%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete a webhook response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": false,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		},
		"/accounts/{identifier}/alerting/v3/history": {
			"get": {
				"summary": "List History",
				"description": "Gets a list of history records for notifications sent to an account. The records are displayed for last `x` number of days based on the zone plan (free = 30, pro = 30, biz = 30, ent = 90).",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List History response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1accounts~1%7Bidentifier%7D~1access~1identity_providers/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/id"
															},
															"name": {
																"type": "string",
																"description": "Name of the policy.",
																"example": "SSL Notification Event Policy"
															},
															"description": {
																"type": "string",
																"description": "Description of the notification policy (if present).",
																"example": "Universal Certificate validation status, issuance, renewal, and expiration notices"
															},
															"alert_body": {
																"type": "string",
																"description": "Message body included in the notification sent.",
																"example": "SSL certificate has expired"
															},
															"alert_type": {
																"type": "string",
																"description": "Type of notification that has been dispatched.",
																"example": "universal_ssl_event_type"
															},
															"mechanism": {
																"type": "string",
																"description": "The mechanism to which the notification has been dispatched.",
																"example": "test@example.com"
															},
															"mechanism_type": {
																"type": "string",
																"description": "The type of mechanism to which the notification has been dispatched. This can be email/pagerduty/webhook based on the mechanism configured.",
																"example": "email",
																"enum": [
																	"email",
																	"pagerduty",
																	"webhook"
																]
															},
															"sent": {
																"type": "string",
																"description": "Timestamp of when the notification was dispatched in ISO 8601 format.",
																"format": "date-time",
																"example": "2021-10-08T17:52:17.571336+00:00"
															}
														}
													},
													"example": [
														{
															"id": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
															"name": "SSL Notification Event Policy",
															"description": "Universal Certificate validation status, issuance, renewal, and expiration notices",
															"alert_body": "SSL certificate has expired",
															"alert_type": "universal_ssl_event_type",
															"mechanism": "test@example.com",
															"mechanism_type": "email",
															"sent": "2021-10-08T17:52:17.571336+00:00"
														}
													]
												},
												"result_info": {
													"type": "object",
													"example": {
														"page": 1,
														"per_page": 20,
														"count": 1
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				]
			}
		},
		"/zones/{zone_identifier}/web3/hostnames": {
			"get": {
				"summary": "List Web3 Hostnames",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "List Web3 Hostnames response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user~1tokens~1permission_groups/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"id": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
															},
															"name": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames/post/requestBody/content/application~1json/schema/properties/name"
															},
															"description": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames/post/requestBody/content/application~1json/schema/properties/description"
															},
															"status": {
																"type": "string",
																"readOnly": true,
																"description": "Status of the hostname's activation.",
																"enum": [
																	"active",
																	"pending",
																	"deleting",
																	"error"
																],
																"example": "active"
															},
															"target": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames/post/requestBody/content/application~1json/schema/properties/target"
															},
															"dnslink": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames/post/requestBody/content/application~1json/schema/properties/dnslink"
															},
															"created_on": {
																"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
															},
															"modified_on": {
																"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
															}
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"post": {
				"summary": "Create Web3 Hostname",
				"parameters": [
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Create Web3 Hostname response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items"
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"readOnly": true,
										"maxLength": 255,
										"description": "The hostname that will point to the target gateway via CNAME.",
										"example": "gateway.example.com"
									},
									"description": {
										"type": "string",
										"maxLength": 500,
										"description": "An optional description of the hostname.",
										"example": "This is my IPFS gateway."
									},
									"target": {
										"type": "string",
										"description": "Target gateway of the hostname.",
										"enum": [
											"ethereum",
											"ipfs"
										],
										"example": "ipfs"
									},
									"dnslink": {
										"type": "string",
										"description": "DNSLink value used if the target is ipfs.",
										"example": "/ipns/onboarding.ipfs.cloudflare.com"
									}
								},
								"required": [
									"name",
									"target"
								]
							}
						}
					}
				}
			}
		},
		"/zones/{zone_identifier}/web3/hostnames/{identifier}": {
			"get": {
				"summary": "Web3 Hostname Details",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1available_plans~1%7Bplan_identifier%7D/get/parameters/0/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Web3 Hostname Details response",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/paths/~1user/get/responses/200/content/application~1json/schema/allOf/0"
										},
										{
											"properties": {
												"result": {
													"type": "object",
													"properties": {
														"id": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames~1%7Bidentifier%7D/get/parameters/0/schema"
														},
														"name": {
															"type": "string",
															"readOnly": true,
															"maxLength": 255,
															"description": "The hostname that will point to the target gateway via CNAME.",
															"example": "gateway.example.com"
														},
														"description": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/description"
														},
														"status": {
															"type": "string",
															"readOnly": true,
															"description": "Status of the hostname's activation.",
															"enum": [
																"active",
																"pending",
																"deleting",
																"error"
															],
															"example": "active"
														},
														"target": {
															"type": "string",
															"description": "Target gateway of the hostname.",
															"enum": [
																"ethereum",
																"ipfs"
															],
															"example": "ipfs"
														},
														"dnslink": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames~1%7Bidentifier%7D/patch/requestBody/content/application~1json/schema/properties/dnslink"
														},
														"created_on": {
															"$ref": "#/paths/~1user~1load_balancers~1monitors/get/responses/200/content/application~1json/schema/allOf/1/properties/result/items/properties/created_on"
														},
														"modified_on": {
															"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1ssl~1recommendation/get/responses/200/content/application~1json/schema/allOf/1/properties/result/properties/modified_on"
														}
													}
												}
											}
										}
									]
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				}
			},
			"patch": {
				"summary": "Edit Web3 Hostname",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Edit Web3 Hostname response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames~1%7Bidentifier%7D/get/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"description": {
										"type": "string",
										"maxLength": 500,
										"description": "An optional description of the hostname.",
										"example": "This is my IPFS gateway."
									},
									"dnslink": {
										"type": "string",
										"description": "DNSLink value used if the target is ipfs.",
										"example": "/ipns/onboarding.ipfs.cloudflare.com"
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete Web3 Hostname",
				"parameters": [
					{
						"name": "identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames~1%7Bidentifier%7D/get/parameters/0/schema"
						}
					},
					{
						"name": "zone_identifier",
						"in": "path",
						"required": true,
						"schema": {
							"$ref": "#/paths/~1zones~1%7Bzone_identifier%7D~1web3~1hostnames~1%7Bidentifier%7D/get/parameters/1/schema"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Delete Web3 Hostname response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/paths/~1user~1tokens~1%7Bidentifier%7D/delete/responses/200/content/application~1json/schema"
								}
							}
						}
					}
				},
				"security": [
					{
						"api_key": [],
						"api_email": []
					}
				],
				"x-cfPlanAvailability": {
					"free": true,
					"pro": true,
					"business": true,
					"enterprise": true
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {}
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"api_token": {
				"type": "http",
				"scheme": "bearer"
			},
			"api_key": {
				"type": "apiKey",
				"name": "X-Auth-Key",
				"in": "header"
			},
			"api_email": {
				"type": "apiKey",
				"name": "X-Auth-Email",
				"in": "header"
			},
			"user_service_key": {
				"type": "apiKey",
				"name": "X-Auth-User-Service-Key",
				"in": "header"
			},
			"railgun": {
				"type": "apiKey",
				"name": "X-Auth-Rtkn",
				"in": "header"
			}
		}
	}
}