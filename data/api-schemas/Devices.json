{
	"DELETE /accounts/{identifier}/devices/policy/{uuid}": {
		"description": "Delete a device settings policy. Returns the remaining policies for the account.",
		"operationId": "devices-delete-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices": {
		"description": "List Enrolled Devices.",
		"operationId": "devices-list-devices",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/devices-lzhA2BKS"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Devices response."
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/devices-lzhA2BKS"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Devices response failure."
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Devices",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/{uuid}": {
		"description": "Fetch a single Device.",
		"operationId": "devices-device-details",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-single-HwAwbZQx"
								},
								{
									"properties": {
										"result": {
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Device Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-single-HwAwbZQx"
										},
										{
											"properties": {
												"result": {
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Device Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Device Details",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/{uuid}/override_codes": {
		"description": "Fetch one-time use admin override code for a device. This relies on the Admin Override setting being enabled in your device configuration.",
		"operationId": "devices-list-admin-override-code-for-device",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"disable_for_time": {
													"$ref": "#/components/schemas/disable_for_time"
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Admin Override code for device response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"disable_for_time": {
															"$ref": "#/components/schemas/disable_for_time"
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Admin Override code for device response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Admin Override code for device",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policies": {
		"description": "Lists the device settings policies for an account.",
		"operationId": "devices-list-device-settings-policies",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Device Settings Policies response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Device Settings Policies response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Device Settings Policies",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy": {
		"description": "Get the default device settings policy for an account.",
		"operationId": "devices-get-default-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"$ref": "#/components/schemas/default_device_settings_policy-JeEasFNr"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Default Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/components/schemas/default_device_settings_policy-JeEasFNr"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Default Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Default Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/{uuid}": {
		"description": "Get the device settings policy by ID.",
		"operationId": "devices-get-device-settings-policy-by-id",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Device Settings Policy by ID response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Device Settings Policy by ID response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Device Settings Policy by ID",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/{uuid}/exclude": {
		"description": "Get the list of routes excluded from the WARP client's tunnel for one specific device settings policy.",
		"operationId": "devices-get-split-tunnel-exclude-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/split_tunnel"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Exclude List for a Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/split_tunnel"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Exclude List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Split Tunnel Exclude List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/{uuid}/fallback_domains": {
		"description": "Get the list of domains to bypass Gateway for DNS resolution and instead use the specified server.",
		"operationId": "devices-get-local-domain-fallback-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/fallback_domain"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Local Domain Fallback List for a Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/fallback_domain"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Local Domain Fallback List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Local Domain Fallback List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/{uuid}/include": {
		"description": "Get the list of routes included in the WARP client's tunnel for one specific device settings policy.",
		"operationId": "devices-get-split-tunnel-include-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/split_tunnel_include"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Include List for a Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/split_tunnel_include"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Include List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Split Tunnel Include List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/exclude": {
		"description": "Get the list of routes excluded from the WARP client's tunnel.",
		"operationId": "devices-get-split-tunnel-exclude-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/split_tunnel"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Exclude List response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/split_tunnel"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Exclude List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Split Tunnel Exclude List",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/fallback_domains": {
		"description": "Get the list of domains to bypass Gateway for DNS resolution and instead use the specified server.",
		"operationId": "devices-get-local-domain-fallback-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/fallback_domain"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Local Domain Fallback List response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/fallback_domain"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Local Domain Fallback List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Local Domain Fallback List",
		"tags": [
			"Devices"
		]
	},
	"GET /accounts/{identifier}/devices/policy/include": {
		"description": "Get the list of routes included in the WARP client's tunnel.",
		"operationId": "devices-get-split-tunnel-include-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/split_tunnel_include"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Include List response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/split_tunnel_include"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get Split Tunnel Include List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Get Split Tunnel Include List",
		"tags": [
			"Devices"
		]
	},
	"PATCH /accounts/{identifier}/devices/policy": {
		"description": "Update the default device settings policy for an account.",
		"operationId": "devices-update-default-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in minutes to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"disable_auto_fallback": {
								"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
								"example": true,
								"type": "boolean"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string"
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number"
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"$ref": "#/components/schemas/default_device_settings_policy-JeEasFNr"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Default Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/components/schemas/default_device_settings_policy-JeEasFNr"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Default Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Default Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"PATCH /accounts/{identifier}/devices/policy/{uuid}": {
		"description": "Update a device settings policy.",
		"operationId": "devices-update-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in minutes to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"description": {
								"description": "A description of the policy.",
								"example": "Policy for test teams.",
								"maxLength": 500,
								"type": "string"
							},
							"disable_auto_fallback": {
								"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
								"example": true,
								"type": "boolean"
							},
							"enabled": {
								"description": "Whether the policy will be applied to matching devices.",
								"example": true,
								"type": "boolean"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"match": {
								"description": "The wirefilter expression to match devices.",
								"example": "user.identity == \"test@cloudflare.com\"",
								"maxLength": 500,
								"type": "string"
							},
							"name": {
								"description": "The name of the device settings policy.",
								"example": "Allow Developers",
								"maxLength": 100,
								"type": "string"
							},
							"precedence": {
								"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
								"example": 100,
								"type": "number"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string"
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number"
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							}
						}
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"POST /accounts/{identifier}/devices/policy": {
		"description": "Create a device settings policy to be applied to certain devices matching the criteria.",
		"operationId": "devices-create-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"allow_mode_switch": {
								"description": "Whether to allow the user to switch WARP between modes.",
								"example": true,
								"type": "boolean"
							},
							"allow_updates": {
								"description": "Whether to receive update notifications when a new version of the client is available.",
								"example": true,
								"type": "boolean"
							},
							"allowed_to_leave": {
								"description": "Whether to allow devices to leave the organization.",
								"example": true,
								"type": "boolean"
							},
							"auto_connect": {
								"description": "The amount of time in minutes to reconnect after having been disabled.",
								"example": 0,
								"type": "number"
							},
							"captive_portal": {
								"description": "Turn on the captive portal after the specified amount of time.",
								"example": 180,
								"type": "number"
							},
							"description": {
								"description": "A description of the policy.",
								"example": "Policy for test teams.",
								"maxLength": 500,
								"type": "string"
							},
							"disable_auto_fallback": {
								"description": "If the dns_server field of a fallback domain is not present, the client will fall back to a best guess of the default/system DNS resolvers, unless this policy option is set.",
								"example": true,
								"type": "boolean"
							},
							"enabled": {
								"description": "Whether the policy will be applied to matching devices.",
								"example": true,
								"type": "boolean"
							},
							"exclude_office_ips": {
								"description": "Whether to add Microsoft IPs to split tunnel exclusions.",
								"example": true,
								"type": "boolean"
							},
							"match": {
								"description": "The wirefilter expression to match devices.",
								"example": "user.identity == \"test@cloudflare.com\"",
								"maxLength": 500,
								"type": "string"
							},
							"name": {
								"description": "The name of the device settings policy.",
								"example": "Allow Developers",
								"maxLength": 100,
								"type": "string"
							},
							"precedence": {
								"description": "The precedence of the policy. Lower values indicate higher precedence. Policies will be evaluated in ascending order of this field.",
								"example": 100,
								"type": "number"
							},
							"service_mode_v2": {
								"properties": {
									"mode": {
										"description": "The mode to run the WARP client under.",
										"example": "proxy",
										"type": "string"
									},
									"port": {
										"description": "The port number when used with proxy mode.",
										"example": 3000,
										"type": "number"
									}
								},
								"type": "object"
							},
							"support_url": {
								"description": "The URL to launch when the Send Feedback button is clicked.",
								"example": "https://1.1.1.1/help",
								"type": "string"
							},
							"switch_locked": {
								"description": "Whether to allow the user to turn off the WARP switch and disconnect the client.",
								"example": true,
								"type": "boolean"
							}
						},
						"required": [
							"name",
							"precedence",
							"match"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"$ref": "#/components/schemas/device_settings_policy-uz4qPy1N"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"POST /accounts/{identifier}/devices/revoke": {
		"description": "Revoke a list of devices.",
		"operationId": "devices-revoke-devices",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "A list of device ids to revoke.",
						"items": {
							"$ref": "#/components/schemas/schemas-uuid-tt9rNp9C"
						},
						"maxLength": 200,
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-common"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											],
											"nullable": true
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Revoke Devices response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Revoke Devices response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Revoke Devices",
		"tags": [
			"Devices"
		]
	},
	"POST /accounts/{identifier}/devices/unrevoke": {
		"description": "Unrevoke a list of devices.",
		"operationId": "devices-unrevoke-devices",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"description": "A list of device ids to unrevoke.",
						"items": {
							"$ref": "#/components/schemas/schemas-uuid-tt9rNp9C"
						},
						"maxLength": 200,
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-common"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											],
											"nullable": true
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Unrevoke Devices response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Unrevoke Devices response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Unrevoke Devices",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/{uuid}/exclude": {
		"description": "Set the list of routes excluded from the WARP client's tunnel for one specific device settings policy.",
		"operationId": "devices-set-split-tunnel-exclude-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"address": {
									"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
									"example": "192.0.2.0/24",
									"type": "string"
								},
								"description": {
									"description": "A description of the split tunnel item, displayed in the client UI.",
									"example": "Exclude testing domains from the tunnel",
									"maxLength": 100,
									"type": "string"
								},
								"host": {
									"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
									"example": "*.example.com",
									"type": "string"
								}
							},
							"required": [
								"address",
								"description"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/split_tunnel"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Exclude List for a Device Settings Policy response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/split_tunnel"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Exclude List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Split Tunnel Exclude List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/{uuid}/fallback_domains": {
		"description": "Set the list of domains to bypass Gateway for DNS resolution and instead use the specified server.",
		"operationId": "devices-set-local-domain-fallback-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"description": {
									"description": "A description of the fallback domain, displayed in the client UI.",
									"example": "Domain bypass for local development",
									"maxLength": 100,
									"type": "string"
								},
								"dns_server": {
									"description": "A list of IP addresses to handle domain resolution.",
									"items": {},
									"type": "array"
								},
								"suffix": {
									"description": "The domain suffix to match when resolving locally.",
									"example": "example.com",
									"type": "string"
								}
							},
							"required": [
								"suffix"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/fallback_domain"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Local Domain Fallback List for a Device Settings Policy response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/fallback_domain"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Local Domain Fallback List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Local Domain Fallback List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/{uuid}/include": {
		"description": "Set the list of routes included in the WARP client's tunnel for one specific device settings policy.",
		"operationId": "devices-set-split-tunnel-include-list-for-a-device-settings-policy",
		"parameters": [
			{
				"in": "path",
				"name": "uuid",
				"required": true,
				"schema": {
					"description": "Device ID.",
					"example": "f174e90a-fafe-4643-bbbc-4a0ed4fc8415",
					"maxLength": 36,
					"type": "string"
				}
			},
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"address": {
									"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
									"example": "192.0.2.0/24",
									"type": "string"
								},
								"description": {
									"description": "A description of the split tunnel item, displayed in the client UI.",
									"example": "Include testing domains from the tunnel",
									"maxLength": 100,
									"type": "string"
								},
								"host": {
									"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
									"example": "*.example.com",
									"type": "string"
								}
							},
							"required": [
								"address",
								"description"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/split_tunnel_include"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Include List for a Device Settings Policy response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/split_tunnel_include"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Include List for a Device Settings Policy response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Split Tunnel Include List for a Device Settings Policy",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/exclude": {
		"description": "Set the list of routes excluded from the WARP client's tunnel.",
		"operationId": "devices-set-split-tunnel-exclude-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"address": {
									"description": "The address in CIDR format to exclude from the tunnel. If address is present, host must not be present.",
									"example": "192.0.2.0/24",
									"type": "string"
								},
								"description": {
									"description": "A description of the split tunnel item, displayed in the client UI.",
									"example": "Exclude testing domains from the tunnel",
									"maxLength": 100,
									"type": "string"
								},
								"host": {
									"description": "The domain name to exclude from the tunnel. If host is present, address must not be present.",
									"example": "*.example.com",
									"type": "string"
								}
							},
							"required": [
								"address",
								"description"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/split_tunnel"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Exclude List response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/split_tunnel"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Exclude List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Split Tunnel Exclude List",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/fallback_domains": {
		"description": "Set the list of domains to bypass Gateway for DNS resolution and instead use the specified server.",
		"operationId": "devices-set-local-domain-fallback-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"description": {
									"description": "A description of the fallback domain, displayed in the client UI.",
									"example": "Domain bypass for local development",
									"maxLength": 100,
									"type": "string"
								},
								"dns_server": {
									"description": "A list of IP addresses to handle domain resolution.",
									"items": {},
									"type": "array"
								},
								"suffix": {
									"description": "The domain suffix to match when resolving locally.",
									"example": "example.com",
									"type": "string"
								}
							},
							"required": [
								"suffix"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/fallback_domain"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Local Domain Fallback List response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/fallback_domain"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Local Domain Fallback List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Local Domain Fallback List",
		"tags": [
			"Devices"
		]
	},
	"PUT /accounts/{identifier}/devices/policy/include": {
		"description": "Set the list of routes included in the WARP client's tunnel.",
		"operationId": "devices-set-split-tunnel-include-list",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "699d98642c564d2e855e9661899b7252"
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"items": {
							"properties": {
								"address": {
									"description": "The address in CIDR format to include in the tunnel. If address is present, host must not be present.",
									"example": "192.0.2.0/24",
									"type": "string"
								},
								"description": {
									"description": "A description of the split tunnel item, displayed in the client UI.",
									"example": "Include testing domains from the tunnel",
									"maxLength": 100,
									"type": "string"
								},
								"host": {
									"description": "The domain name to include in the tunnel. If host is present, address must not be present.",
									"example": "*.example.com",
									"type": "string"
								}
							},
							"required": [
								"address",
								"description"
							],
							"type": "object"
						},
						"type": "array"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-collection"
								},
								{
									"properties": {
										"result": {
											"items": {
												"$ref": "#/components/schemas/split_tunnel_include"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Include List response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-collection"
										},
										{
											"properties": {
												"result": {
													"items": {
														"$ref": "#/components/schemas/split_tunnel_include"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Set Split Tunnel Include List response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Set Split Tunnel Include List",
		"tags": [
			"Devices"
		]
	}
}