{
	"GET /zones/{zone}/spectrum/analytics/events/bytime": {
		"description": "Retrieves a list of aggregate metrics grouped by time interval.",
		"operationId": "spectrum-analytics-(-by-time)-get-analytics-by-time",
		"parameters": [
			{
				"in": "path",
				"name": "zone",
				"required": true,
				"schema": {
					"description": "Identifier",
					"example": "023e105f4ecef8ad9ca31a8372d0c353",
					"maxLength": 32,
					"readOnly": true,
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "dimensions",
				"schema": {
					"description": "Can be used to break down the data by given attributes. Options are: \n\nDimension                 | Name                            | Example\n--------------------------|---------------------------------|--------------------------\nevent                     | Connection Event                | connect, progress, disconnect, originError, clientFiltered\nappID                     | Application ID                  | 40d67c87c6cd4b889a4fd57805225e85\ncoloName                  | Colo Name                       | SFO\nipVersion                 | IP version used by the client   | 4, 6.",
					"example": [
						"event",
						"appID"
					],
					"items": {
						"enum": [
							"event",
							"appID",
							"coloName",
							"ipVersion"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "sort",
				"schema": {
					"description": "The sort order for the result set; sort fields must be included in `metrics` or `dimensions`.",
					"example": [
						"+count",
						"-bytesIngress"
					],
					"items": {},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "until",
				"schema": {
					"description": "End of time interval to query, defaults to current time. Timestamp must be in RFC3339 format and uses UTC unless otherwise specified.",
					"example": "2014-01-02T03:20:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "metrics",
				"schema": {
					"description": "One or more metrics to compute. Options are: \n\nMetric                    | Name                                | Example                  | Unit\n--------------------------|-------------------------------------|--------------------------|--------------------------\ncount                     | Count of total events               | 1000                     | Count\nbytesIngress              | Sum of ingress bytes                | 1000                     | Sum\nbytesEgress               | Sum of egress bytes                 | 1000                     | Sum\ndurationAvg               | Average connection duration         | 1.0                      | Time in milliseconds\ndurationMedian            | Median connection duration          | 1.0                      | Time in milliseconds\nduration90th              | 90th percentile connection duration | 1.0                      | Time in milliseconds\nduration99th              | 99th percentile connection duration | 1.0                      | Time in milliseconds.",
					"example": [
						"count",
						"bytesIngress"
					],
					"items": {
						"enum": [
							"count",
							"bytesIngress",
							"bytesEgress",
							"durationAvg",
							"durationMedian",
							"duration90th",
							"duration99th"
						],
						"type": "string"
					},
					"type": "array"
				}
			},
			{
				"in": "query",
				"name": "filters",
				"schema": {
					"description": "Used to filter rows by one or more dimensions. Filters can be combined using OR and AND boolean logic. AND takes precedence over OR in all the expressions. The OR operator is defined using a comma (,) or OR keyword surrounded by whitespace. The AND operator is defined using a semicolon (;) or AND keyword surrounded by whitespace. Note that the semicolon is a reserved character in URLs (rfc1738) and needs to be percent-encoded as %3B. Comparison options are: \n\nOperator                  | Name                            | URL Encoded\n--------------------------|---------------------------------|--------------------------\n==                        | Equals                          | %3D%3D\n!=                        | Does not equals                 | !%3D\n>                        | Greater Than                    | %3E\n<                         | Less Than                       | %3C\n>=                       | Greater than or equal to        | %3E%3D\n<=                        | Less than or equal to           | %3C%3D     .",
					"example": "event==disconnect%20AND%20coloName!=SFO",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "since",
				"schema": {
					"description": "Start of time interval to query, defaults to `until` - 6 hours. Timestamp must be in RFC3339 format and uses UTC unless otherwise specified.",
					"example": "2014-01-02T02:20:00Z",
					"format": "date-time",
					"type": "string"
				}
			},
			{
				"in": "query",
				"name": "time_delta",
				"schema": {
					"description": "Used to select time series resolution.",
					"enum": [
						"year",
						"quarter",
						"month",
						"week",
						"day",
						"hour",
						"dekaminute",
						"minute"
					],
					"example": "minute",
					"type": "string"
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/api-response-common"
								},
								{
									"properties": {
										"result": {
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											],
											"nullable": true
										}
									}
								}
							],
							"type": "object"
						}
					}
				},
				"description": "Get analytics by time response"
			},
			"4xx": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													],
													"nullable": true
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"$ref": "#/components/schemas/messages"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Get analytics by time response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			},
			{
				"api_token": []
			}
		],
		"summary": "Get analytics by time",
		"tags": [
			"Spectrum Analytics (By Time)"
		]
	}
}