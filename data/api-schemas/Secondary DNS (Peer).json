{
	"DELETE /accounts/{account_identifier}/secondary_dns/peers/{identifier}": {
		"description": "Delete Peer.",
		"operationId": "secondary-dns-(-peer)-delete-peer",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "23ff594956f20c2a721606e94745a8aa",
					"readOnly": true
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "01a7362d577a6c3019a474fd6f485823",
					"readOnly": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"example": "23ff594956f20c2a721606e94745a8aa",
													"readOnly": true
												}
											},
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Delete Peer response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"example": "23ff594956f20c2a721606e94745a8aa",
															"readOnly": true
														}
													},
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Delete Peer response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Delete Peer",
		"tags": [
			"Secondary DNS (Peer)"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#dns_records:edit",
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/secondary_dns/peers": {
		"description": "List Peers.",
		"operationId": "secondary-dns-(-peer)-list-peers",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "01a7362d577a6c3019a474fd6f485823",
					"readOnly": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"items": {},
													"nullable": true,
													"type": "array"
												},
												"result_info": {
													"$ref": "#/components/schemas/result_info"
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"items": {
												"properties": {
													"id": {
														"$ref": "#/components/schemas/components-schemas-identifier-r4R20sW5"
													},
													"ip": {
														"$ref": "#/components/schemas/ip-1M6Gi0Ed"
													},
													"ixfr_enable": {
														"$ref": "#/components/schemas/ixfr_enable"
													},
													"name": {
														"$ref": "#/components/schemas/components-schemas-name-J2TY2FTK"
													},
													"port": {
														"$ref": "#/components/schemas/port-lBRFsrcy"
													},
													"tsig_id": {
														"$ref": "#/components/schemas/tsig_id"
													}
												},
												"required": [
													"id",
													"name"
												],
												"type": "object"
											},
											"type": "array"
										}
									}
								}
							]
						}
					}
				},
				"description": "List Peers response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"items": {},
															"nullable": true,
															"type": "array"
														},
														"result_info": {
															"$ref": "#/components/schemas/result_info"
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"items": {
														"properties": {
															"id": {
																"$ref": "#/components/schemas/components-schemas-identifier-r4R20sW5"
															},
															"ip": {
																"$ref": "#/components/schemas/ip-1M6Gi0Ed"
															},
															"ixfr_enable": {
																"$ref": "#/components/schemas/ixfr_enable"
															},
															"name": {
																"$ref": "#/components/schemas/components-schemas-name-J2TY2FTK"
															},
															"port": {
																"$ref": "#/components/schemas/port-lBRFsrcy"
															},
															"tsig_id": {
																"$ref": "#/components/schemas/tsig_id"
															}
														},
														"required": [
															"id",
															"name"
														],
														"type": "object"
													},
													"type": "array"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "List Peers response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "List Peers",
		"tags": [
			"Secondary DNS (Peer)"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#dns_records:read",
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"GET /accounts/{account_identifier}/secondary_dns/peers/{identifier}": {
		"description": "Get Peer.",
		"operationId": "secondary-dns-(-peer)-peer-details",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "23ff594956f20c2a721606e94745a8aa",
					"readOnly": true
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "01a7362d577a6c3019a474fd6f485823",
					"readOnly": true
				}
			}
		],
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/components/schemas/components-schemas-identifier-r4R20sW5"
												},
												"ip": {
													"$ref": "#/components/schemas/ip-1M6Gi0Ed"
												},
												"ixfr_enable": {
													"$ref": "#/components/schemas/ixfr_enable"
												},
												"name": {
													"$ref": "#/components/schemas/components-schemas-name-J2TY2FTK"
												},
												"port": {
													"$ref": "#/components/schemas/port-lBRFsrcy"
												},
												"tsig_id": {
													"$ref": "#/components/schemas/tsig_id"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Peer Details response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/components/schemas/components-schemas-identifier-r4R20sW5"
														},
														"ip": {
															"$ref": "#/components/schemas/ip-1M6Gi0Ed"
														},
														"ixfr_enable": {
															"$ref": "#/components/schemas/ixfr_enable"
														},
														"name": {
															"$ref": "#/components/schemas/components-schemas-name-J2TY2FTK"
														},
														"port": {
															"$ref": "#/components/schemas/port-lBRFsrcy"
														},
														"tsig_id": {
															"$ref": "#/components/schemas/tsig_id"
														}
													},
													"required": [
														"id",
														"name"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Peer Details response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Peer Details",
		"tags": [
			"Secondary DNS (Peer)"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#dns_records:read",
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"POST /accounts/{account_identifier}/secondary_dns/peers": {
		"description": "Create Peer.",
		"operationId": "secondary-dns-(-peer)-create-peer",
		"parameters": [
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "01a7362d577a6c3019a474fd6f485823",
					"readOnly": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"required": [
							"name"
						]
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/components/schemas/components-schemas-identifier-r4R20sW5"
												},
												"ip": {
													"$ref": "#/components/schemas/ip-1M6Gi0Ed"
												},
												"ixfr_enable": {
													"$ref": "#/components/schemas/ixfr_enable"
												},
												"name": {
													"$ref": "#/components/schemas/components-schemas-name-J2TY2FTK"
												},
												"port": {
													"$ref": "#/components/schemas/port-lBRFsrcy"
												},
												"tsig_id": {
													"$ref": "#/components/schemas/tsig_id"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Create Peer response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/components/schemas/components-schemas-identifier-r4R20sW5"
														},
														"ip": {
															"$ref": "#/components/schemas/ip-1M6Gi0Ed"
														},
														"ixfr_enable": {
															"$ref": "#/components/schemas/ixfr_enable"
														},
														"name": {
															"$ref": "#/components/schemas/components-schemas-name-J2TY2FTK"
														},
														"port": {
															"$ref": "#/components/schemas/port-lBRFsrcy"
														},
														"tsig_id": {
															"$ref": "#/components/schemas/tsig_id"
														}
													},
													"required": [
														"id",
														"name"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Create Peer response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Create Peer",
		"tags": [
			"Secondary DNS (Peer)"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#dns_records:edit",
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	},
	"PUT /accounts/{account_identifier}/secondary_dns/peers/{identifier}": {
		"description": "Modify Peer.",
		"operationId": "secondary-dns-(-peer)-update-peer",
		"parameters": [
			{
				"in": "path",
				"name": "identifier",
				"required": true,
				"schema": {
					"example": "23ff594956f20c2a721606e94745a8aa",
					"readOnly": true
				}
			},
			{
				"in": "path",
				"name": "account_identifier",
				"required": true,
				"schema": {
					"example": "01a7362d577a6c3019a474fd6f485823",
					"readOnly": true
				}
			}
		],
		"requestBody": {
			"content": {
				"application/json": {
					"schema": {
						"properties": {
							"id": {
								"example": "23ff594956f20c2a721606e94745a8aa",
								"readOnly": true
							},
							"ip": {
								"description": "IPv4/IPv6 address of primary or secondary nameserver, depending on what zone this peer is linked to. For primary zones this IP defines the IP of the secondary nameserver Cloudflare will NOTIFY upon zone changes. For secondary zones this IP defines the IP of the primary nameserver Cloudflare will send AXFR/IXFR requests to.",
								"example": "192.0.2.53",
								"type": "string"
							},
							"ixfr_enable": {
								"description": "Enable IXFR transfer protocol, default is AXFR. Only applicable to secondary zones.",
								"example": false,
								"type": "boolean"
							},
							"name": {
								"description": "The name of the peer.",
								"example": "my-peer-1",
								"type": "string"
							},
							"port": {
								"description": "DNS port of primary or secondary nameserver, depending on what zone this peer is linked to.",
								"example": 53,
								"type": "number"
							},
							"tsig_id": {
								"description": "TSIG authentication will be used for zone transfer if configured.",
								"example": "69cd1e104af3e6ed3cb344f263fd0d5a",
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						],
						"type": "object"
					}
				}
			},
			"required": true
		},
		"responses": {
			"200": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"$ref": "#/components/schemas/api-response-common"
										},
										{
											"properties": {
												"result": {
													"anyOf": [
														{
															"type": "object"
														},
														{
															"type": "string"
														}
													]
												}
											}
										}
									],
									"type": "object"
								},
								{
									"properties": {
										"result": {
											"properties": {
												"id": {
													"$ref": "#/components/schemas/components-schemas-identifier-r4R20sW5"
												},
												"ip": {
													"$ref": "#/components/schemas/ip-1M6Gi0Ed"
												},
												"ixfr_enable": {
													"$ref": "#/components/schemas/ixfr_enable"
												},
												"name": {
													"$ref": "#/components/schemas/components-schemas-name-J2TY2FTK"
												},
												"port": {
													"$ref": "#/components/schemas/port-lBRFsrcy"
												},
												"tsig_id": {
													"$ref": "#/components/schemas/tsig_id"
												}
											},
											"required": [
												"id",
												"name"
											],
											"type": "object"
										}
									}
								}
							]
						}
					}
				},
				"description": "Update Peer response"
			},
			"4XX": {
				"content": {
					"application/json": {
						"schema": {
							"allOf": [
								{
									"allOf": [
										{
											"allOf": [
												{
													"$ref": "#/components/schemas/api-response-common"
												},
												{
													"properties": {
														"result": {
															"anyOf": [
																{
																	"type": "object"
																},
																{
																	"type": "string"
																}
															]
														}
													}
												}
											],
											"type": "object"
										},
										{
											"properties": {
												"result": {
													"properties": {
														"id": {
															"$ref": "#/components/schemas/components-schemas-identifier-r4R20sW5"
														},
														"ip": {
															"$ref": "#/components/schemas/ip-1M6Gi0Ed"
														},
														"ixfr_enable": {
															"$ref": "#/components/schemas/ixfr_enable"
														},
														"name": {
															"$ref": "#/components/schemas/components-schemas-name-J2TY2FTK"
														},
														"port": {
															"$ref": "#/components/schemas/port-lBRFsrcy"
														},
														"tsig_id": {
															"$ref": "#/components/schemas/tsig_id"
														}
													},
													"required": [
														"id",
														"name"
													],
													"type": "object"
												}
											}
										}
									]
								},
								{
									"properties": {
										"errors": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": [
												{
													"code": 7003,
													"message": "No route for the URI"
												}
											],
											"minLength": 1
										},
										"messages": {
											"allOf": [
												{
													"example": [],
													"items": {
														"properties": {
															"code": {
																"minimum": 1000,
																"type": "integer"
															},
															"message": {
																"type": "string"
															}
														},
														"required": [
															"code",
															"message"
														],
														"type": "object",
														"uniqueItems": true
													},
													"type": "array"
												}
											],
											"example": []
										},
										"result": {
											"enum": [
												null
											],
											"nullable": true,
											"type": "object"
										},
										"success": {
											"description": "Whether the API call was successful",
											"enum": [
												false
											],
											"example": false,
											"type": "boolean"
										}
									},
									"required": [
										"success",
										"errors",
										"messages",
										"result"
									],
									"type": "object"
								}
							]
						}
					}
				},
				"description": "Update Peer response failure"
			}
		},
		"security": [
			{
				"api_email": [],
				"api_key": []
			}
		],
		"summary": "Update Peer",
		"tags": [
			"Secondary DNS (Peer)"
		],
		"x-cfPermissionsRequired": {
			"enum": [
				"#dns_records:edit",
				"#organization:read"
			]
		},
		"x-cfPlanAvailability": {
			"business": false,
			"enterprise": true,
			"free": false,
			"pro": false
		}
	}
}